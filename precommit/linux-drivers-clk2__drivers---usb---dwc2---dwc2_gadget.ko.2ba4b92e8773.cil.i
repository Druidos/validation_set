/* Generated by CIL v. 1.5.1 */
/* print_CIL_Input is false */

#line 7 ".tmp_gadget.c"
struct device;
#line 19 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef signed char __s8;
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;
#line 26 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;
#line 16 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/asm-generic/int-ll64.h"
typedef unsigned char u8;
#line 18 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/asm-generic/int-ll64.h"
typedef short s16;
#line 19 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/asm-generic/int-ll64.h"
typedef unsigned short u16;
#line 21 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/asm-generic/int-ll64.h"
typedef int s32;
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/asm-generic/int-ll64.h"
typedef unsigned int u32;
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/asm-generic/int-ll64.h"
typedef long long s64;
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;
#line 14 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;
#line 15 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;
#line 48 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;
#line 49 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;
#line 71 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;
#line 72 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;
#line 87 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;
#line 88 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;
#line 89 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;
#line 90 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;
#line 91 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/linux/types.h"
typedef __u16 __le16;
#line 34 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/linux/types.h"
typedef __u32 __le32;
#line 12 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/types.h"
typedef __u32 __kernel_dev_t;
#line 15 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/types.h"
typedef __kernel_dev_t dev_t;
#line 18 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/types.h"
typedef unsigned short umode_t;
#line 21 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/types.h"
typedef __kernel_pid_t pid_t;
#line 26 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;
#line 29 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/types.h"
typedef _Bool bool;
#line 31 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/types.h"
typedef __kernel_uid32_t uid_t;
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/types.h"
typedef __kernel_gid32_t gid_t;
#line 45 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/types.h"
typedef __kernel_loff_t loff_t;
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/types.h"
typedef __kernel_size_t size_t;
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;
#line 69 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/types.h"
typedef __kernel_time_t time_t;
#line 102 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/types.h"
typedef __s32 int32_t;
#line 108 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/types.h"
typedef __u32 uint32_t;
#line 133 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/types.h"
typedef unsigned long sector_t;
#line 134 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/types.h"
typedef unsigned long blkcnt_t;
#line 147 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/types.h"
typedef u64 dma_addr_t;
#line 158 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/types.h"
typedef unsigned int gfp_t;
#line 159 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/types.h"
typedef unsigned int fmode_t;
#line 160 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/types.h"
typedef unsigned int oom_flags_t;
#line 163 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/types.h"
typedef u64 phys_addr_t;
#line 168 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/types.h"
typedef phys_addr_t resource_size_t;
#line 178 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};
#line 178 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;
#line 183 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};
#line 183 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;
#line 184 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};
#line 189
struct hlist_node;
#line 189 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};
#line 193 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};
#line 204 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head * ) ;
};
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/linux/ldv/slab.h"
struct clk;
#line 103 "/home/debian/klever-inst/klever-addons/CIF/bin/aspectator-bin/bin/../lib64/gcc/x86_64-unknown-linux-gnu/4.6.0/include/stdarg.h"
struct kernel_symbol {
   unsigned long value ;
   char const   *name ;
};
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/export.h"
struct module;
#line 65 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/ptrace.h"
struct __anonstruct____missing_field_name_9 {
   unsigned int a ;
   unsigned int b ;
};
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/ptrace.h"
struct __anonstruct____missing_field_name_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int base1 : 8 ;
   unsigned int type : 4 ;
   unsigned int s : 1 ;
   unsigned int dpl : 2 ;
   unsigned int p : 1 ;
   unsigned int limit : 4 ;
   unsigned int avl : 1 ;
   unsigned int l : 1 ;
   unsigned int d : 1 ;
   unsigned int g : 1 ;
   unsigned int base2 : 8 ;
};
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/ptrace.h"
union __anonunion____missing_field_name_8 {
   struct __anonstruct____missing_field_name_9 __annonCompField4 ;
   struct __anonstruct____missing_field_name_10 __annonCompField5 ;
};
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion____missing_field_name_8 __annonCompField6 ;
};
#line 12 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;
#line 15 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;
#line 16 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;
#line 18 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};
#line 18 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};
#line 242 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;
#line 244 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};
#line 244 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;
#line 332
struct page;
#line 332 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;
#line 340
struct file;
#line 353
struct seq_file;
#line 390
struct thread_struct;
#line 392
struct mm_struct;
#line 393
struct task_struct;
#line 394
struct cpumask;
#line 395 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/pgtable_types.h"
struct paravirt_callee_save {
   void *func ;
};
#line 196 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/paravirt_types.h"
struct pv_irq_ops {
   struct paravirt_callee_save save_fl ;
   struct paravirt_callee_save restore_fl ;
   struct paravirt_callee_save irq_disable ;
   struct paravirt_callee_save irq_enable ;
   void (*safe_halt)(void) ;
   void (*halt)(void) ;
   void (*adjust_exception_frame)(void) ;
};
#line 327
struct arch_spinlock;
#line 18 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/spinlock_types.h"
typedef u16 __ticket_t;
#line 19 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/spinlock_types.h"
typedef u32 __ticketpair_t;
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/spinlock_types.h"
struct __raw_tickets {
   __ticket_t head ;
   __ticket_t tail ;
};
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/spinlock_types.h"
union __anonunion____missing_field_name_15 {
   __ticketpair_t head_tail ;
   struct __raw_tickets tickets ;
};
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/spinlock_types.h"
struct arch_spinlock {
   union __anonunion____missing_field_name_15 __annonCompField7 ;
};
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/spinlock_types.h"
typedef struct arch_spinlock arch_spinlock_t;
#line 34 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/spinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};
#line 14 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;
#line 142 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/init.h"
typedef void (*ctor_fn_t)(void);
#line 219 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/printk.h"
struct _ddebug {
   char const   *modname ;
   char const   *function ;
   char const   *filename ;
   char const   *format ;
   unsigned int lineno : 18 ;
   unsigned int flags : 8 ;
};
#line 400
struct file_operations;
#line 412
struct completion;
#line 235 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/kernel.h"
struct atomic_notifier_head;
#line 416
struct pid;
#line 17 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/current.h"
struct lockdep_map;
#line 127 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};
#line 79 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/vm86.h"
union __anonunion____missing_field_name_16 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};
#line 79 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion____missing_field_name_16 __annonCompField8 ;
};
#line 306 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/bitmap.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};
#line 102 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/bug.h"
struct cpumask {
   unsigned long bits[128U] ;
};
#line 14 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;
#line 671 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;
#line 162 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/processor.h"
struct seq_operations;
#line 294 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/processor.h"
struct i387_fsave_struct {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};
#line 312 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/processor.h"
struct __anonstruct____missing_field_name_21 {
   u64 rip ;
   u64 rdp ;
};
#line 312 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/processor.h"
struct __anonstruct____missing_field_name_22 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};
#line 312 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/processor.h"
union __anonunion____missing_field_name_20 {
   struct __anonstruct____missing_field_name_21 __annonCompField12 ;
   struct __anonstruct____missing_field_name_22 __annonCompField13 ;
};
#line 312 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/processor.h"
union __anonunion____missing_field_name_23 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};
#line 312 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/processor.h"
struct i387_fxsave_struct {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion____missing_field_name_20 __annonCompField14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion____missing_field_name_23 __annonCompField15 ;
};
#line 346 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/processor.h"
struct i387_soft_struct {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};
#line 367 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/processor.h"
struct ymmh_struct {
   u32 ymmh_space[64U] ;
};
#line 372 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/processor.h"
struct lwp_struct {
   u8 reserved[128U] ;
};
#line 377 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/processor.h"
struct bndregs_struct {
   u64 bndregs[8U] ;
};
#line 381 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/processor.h"
struct bndcsr_struct {
   u64 cfg_reg_u ;
   u64 status_reg ;
};
#line 386 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/processor.h"
struct xsave_hdr_struct {
   u64 xstate_bv ;
   u64 reserved1[2U] ;
   u64 reserved2[5U] ;
};
#line 392 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/processor.h"
struct xsave_struct {
   struct i387_fxsave_struct i387 ;
   struct xsave_hdr_struct xsave_hdr ;
   struct ymmh_struct ymmh ;
   struct lwp_struct lwp ;
   struct bndregs_struct bndregs ;
   struct bndcsr_struct bndcsr ;
};
#line 401 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/processor.h"
union thread_xstate {
   struct i387_fsave_struct fsave ;
   struct i387_fxsave_struct fxsave ;
   struct i387_soft_struct soft ;
   struct xsave_struct xsave ;
};
#line 409 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/processor.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned int has_fpu ;
   union thread_xstate *state ;
};
#line 465
struct kmem_cache;
#line 466
struct perf_event;
#line 467 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned long usersp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   struct fpu fpu ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   unsigned char fpu_counter ;
};
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;
#line 55 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};
#line 26 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};
#line 53 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const   *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};
#line 144 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const   *name ;
   int cpu ;
   unsigned long ip ;
};
#line 205 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int class_idx : 13 ;
   unsigned int irq_context : 2 ;
   unsigned int trylock : 1 ;
   unsigned int read : 2 ;
   unsigned int check : 1 ;
   unsigned int hardirqs_off : 1 ;
   unsigned int references : 12 ;
};
#line 530 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/spinlock_types.h"
struct __anonstruct____missing_field_name_27 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/spinlock_types.h"
union __anonunion____missing_field_name_26 {
   struct raw_spinlock rlock ;
   struct __anonstruct____missing_field_name_27 __annonCompField17 ;
};
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion____missing_field_name_26 __annonCompField18 ;
};
#line 76 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_28 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_28 rwlock_t;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/rwlock_types.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};
#line 26 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   char const   *name ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 68 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};
#line 178
struct timespec;
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/jump_label.h"
struct jump_entry;
#line 36 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;
#line 37 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};
#line 412 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/spinlock.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};
#line 51 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;
#line 34 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};
#line 39 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;
#line 920 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/wait.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};
#line 244 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/rcupdate.h"
struct notifier_block;
#line 1085 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/rcupdate.h"
union __anonunion____missing_field_name_34 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};
#line 1085 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/rcupdate.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion____missing_field_name_34 __annonCompField20 ;
};
#line 41 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};
#line 124 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};
#line 153 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};
#line 185 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/idr.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};
#line 40 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};
#line 87
struct dentry;
#line 88
struct iattr;
#line 89
struct vm_area_struct;
#line 90
struct super_block;
#line 91
struct file_system_type;
#line 92
struct kernfs_open_node;
#line 93
struct kernfs_iattrs;
#line 116
struct kernfs_root;
#line 116 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/rbtree.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};
#line 85 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/kernfs.h"
struct kernfs_node;
#line 85 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};
#line 89
struct kernfs_ops;
#line 89 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops  const  *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};
#line 96 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/kernfs.h"
union __anonunion____missing_field_name_35 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};
#line 96 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const   *name ;
   struct rb_node rb ;
   void const   *ns ;
   unsigned int hash ;
   union __anonunion____missing_field_name_35 __annonCompField21 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};
#line 138 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root * , int * , char * ) ;
   int (*show_options)(struct seq_file * , struct kernfs_root * ) ;
   int (*mkdir)(struct kernfs_node * , char const   * , umode_t  ) ;
   int (*rmdir)(struct kernfs_node * ) ;
   int (*rename)(struct kernfs_node * , struct kernfs_node * , char const   * ) ;
};
#line 155 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};
#line 171
struct vm_operations_struct;
#line 171 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct  const  *vm_ops ;
};
#line 187 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file * , void * ) ;
   void *(*seq_start)(struct seq_file * , loff_t * ) ;
   void *(*seq_next)(struct seq_file * , void * , loff_t * ) ;
   void (*seq_stop)(struct seq_file * , void * ) ;
   ssize_t (*read)(struct kernfs_open_file * , char * , size_t  , loff_t  ) ;
   size_t atomic_write_len ;
   ssize_t (*write)(struct kernfs_open_file * , char * , size_t  , loff_t  ) ;
   int (*mmap)(struct kernfs_open_file * , struct vm_area_struct * ) ;
   struct lock_class_key lockdep_key ;
};
#line 464
struct sock;
#line 465
struct kobject;
#line 466
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
} ;
#line 472 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const   *(*netlink_ns)(struct sock * ) ;
   void const   *(*initial_ns)(void) ;
   void (*drop_ns)(void * ) ;
};
#line 135 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/uapi/asm/stat.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};
#line 83 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/highuid.h"
struct user_namespace;
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/uidgid.h"
struct __anonstruct_kuid_t_36 {
   uid_t val ;
};
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_36 kuid_t;
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/uidgid.h"
struct __anonstruct_kgid_t_37 {
   gid_t val ;
};
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_37 kgid_t;
#line 127 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/uidgid.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};
#line 36 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/stat.h"
struct bin_attribute;
#line 37 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/stat.h"
struct attribute {
   char const   *name ;
   umode_t mode ;
   bool ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};
#line 37 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/sysfs.h"
struct attribute_group {
   char const   *name ;
   umode_t (*is_visible)(struct kobject * , struct attribute * , int  ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};
#line 67 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file * , struct kobject * , struct bin_attribute * , char * ,
                   loff_t  , size_t  ) ;
   ssize_t (*write)(struct file * , struct kobject * , struct bin_attribute * , char * ,
                    loff_t  , size_t  ) ;
   int (*mmap)(struct file * , struct kobject * , struct bin_attribute * , struct vm_area_struct * ) ;
};
#line 131 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject * , struct attribute * , char * ) ;
   ssize_t (*store)(struct kobject * , struct attribute * , char const   * , size_t  ) ;
};
#line 470 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};
#line 323 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/ktime.h"
typedef union ktime ktime_t;
#line 412
struct tvec_base;
#line 413 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/ktime.h"
struct timer_list {
   struct list_head entry ;
   unsigned long expires ;
   struct tvec_base *base ;
   void (*function)(unsigned long  ) ;
   unsigned long data ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};
#line 254 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/timer.h"
struct hrtimer;
#line 255
enum hrtimer_restart;
#line 266
struct workqueue_struct;
#line 267
struct work_struct;
#line 53 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct * ) ;
   struct lockdep_map lockdep_map ;
};
#line 106 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};
#line 52 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/kobject.h"
struct kset;
#line 52
struct kobj_type;
#line 52 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/kobject.h"
struct kobject {
   char const   *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int state_initialized : 1 ;
   unsigned int state_in_sysfs : 1 ;
   unsigned int state_add_uevent_sent : 1 ;
   unsigned int state_remove_uevent_sent : 1 ;
   unsigned int uevent_suppress : 1 ;
};
#line 114 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject * ) ;
   struct sysfs_ops  const  *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations  const  *(*child_ns_type)(struct kobject * ) ;
   void const   *(*namespace)(struct kobject * ) ;
};
#line 122 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};
#line 130 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const  filter)(struct kset * , struct kobject * ) ;
   char const   *(* const  name)(struct kset * , struct kobject * ) ;
   int (* const  uevent)(struct kset * , struct kobject * , struct kobj_uevent_env * ) ;
};
#line 147 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops  const  *uevent_ops ;
};
#line 91 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/kdev_t.h"
struct inode;
#line 92 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/kdev_t.h"
struct cdev {
   struct kobject kobj ;
   struct module *owner ;
   struct file_operations  const  *ops ;
   struct list_head list ;
   dev_t dev ;
   unsigned int count ;
};
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/cdev.h"
struct backing_dev_info;
#line 69 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/miscdevice.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const   *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};
#line 246 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/ioport.h"
struct klist_node;
#line 37 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};
#line 98 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_38 {
   unsigned long bits[16U] ;
};
#line 98 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_38 nodemask_t;
#line 522
struct path;
#line 523 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/nodemask.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations  const  *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};
#line 35 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file * , loff_t * ) ;
   void (*stop)(struct seq_file * , void * ) ;
   void *(*next)(struct seq_file * , void * , loff_t * ) ;
   int (*show)(struct seq_file * , void * ) ;
};
#line 196
struct pinctrl;
#line 197
struct pinctrl_state;
#line 194 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/pm.h"
struct pm_message {
   int event ;
};
#line 64 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/pm.h"
typedef struct pm_message pm_message_t;
#line 65 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device * ) ;
   void (*complete)(struct device * ) ;
   int (*suspend)(struct device * ) ;
   int (*resume)(struct device * ) ;
   int (*freeze)(struct device * ) ;
   int (*thaw)(struct device * ) ;
   int (*poweroff)(struct device * ) ;
   int (*restore)(struct device * ) ;
   int (*suspend_late)(struct device * ) ;
   int (*resume_early)(struct device * ) ;
   int (*freeze_late)(struct device * ) ;
   int (*thaw_early)(struct device * ) ;
   int (*poweroff_late)(struct device * ) ;
   int (*restore_early)(struct device * ) ;
   int (*suspend_noirq)(struct device * ) ;
   int (*resume_noirq)(struct device * ) ;
   int (*freeze_noirq)(struct device * ) ;
   int (*thaw_noirq)(struct device * ) ;
   int (*poweroff_noirq)(struct device * ) ;
   int (*restore_noirq)(struct device * ) ;
   int (*runtime_suspend)(struct device * ) ;
   int (*runtime_resume)(struct device * ) ;
   int (*runtime_idle)(struct device * ) ;
};
#line 320
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
} ;
#line 327
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
} ;
#line 335
struct wakeup_source;
#line 546 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};
#line 553
struct dev_pm_qos;
#line 553 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int can_wakeup : 1 ;
   unsigned int async_suspend : 1 ;
   bool is_prepared : 1 ;
   bool is_suspended : 1 ;
   bool is_noirq_suspended : 1 ;
   bool is_late_suspended : 1 ;
   bool ignore_children : 1 ;
   bool early_init : 1 ;
   bool direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool wakeup_path : 1 ;
   bool syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int disable_depth : 3 ;
   unsigned int idle_notification : 1 ;
   unsigned int request_pending : 1 ;
   unsigned int deferred_resume : 1 ;
   unsigned int run_wake : 1 ;
   unsigned int runtime_auto : 1 ;
   unsigned int no_callbacks : 1 ;
   unsigned int irq_safe : 1 ;
   unsigned int use_autosuspend : 1 ;
   unsigned int timer_autosuspends : 1 ;
   unsigned int memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device * , s32  ) ;
   struct dev_pm_qos *qos ;
};
#line 614 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
};
#line 814 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/mmzone.h"
struct rw_semaphore;
#line 815 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/mmzone.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};
#line 51 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block * , unsigned long  , void * ) ;
   struct notifier_block *next ;
   int priority ;
};
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/notifier.h"
struct atomic_notifier_head {
   spinlock_t lock ;
   struct notifier_block *head ;
};
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_103 {
   void *ldt ;
   int size ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
};
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_103 mm_context_t;
#line 1291 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/mmzone.h"
struct llist_node;
#line 64 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};
#line 420 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/gfp.h"
struct dma_map_ops;
#line 420 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/gfp.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/device.h"
struct pdev_archdata {

};
#line 14
struct device_private;
#line 15
struct device_driver;
#line 16
struct driver_private;
#line 17
struct class;
#line 18
struct subsys_private;
#line 19
struct bus_type;
#line 20
struct device_node;
#line 21
struct iommu_ops;
#line 22
struct iommu_group;
#line 60 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/device.h"
struct device_attribute;
#line 60 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/device.h"
struct bus_type {
   char const   *name ;
   char const   *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group  const  **bus_groups ;
   struct attribute_group  const  **dev_groups ;
   struct attribute_group  const  **drv_groups ;
   int (*match)(struct device * , struct device_driver * ) ;
   int (*uevent)(struct device * , struct kobj_uevent_env * ) ;
   int (*probe)(struct device * ) ;
   int (*remove)(struct device * ) ;
   void (*shutdown)(struct device * ) ;
   int (*online)(struct device * ) ;
   int (*offline)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
   struct iommu_ops *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};
#line 138
struct device_type;
#line 195
struct of_device_id;
#line 195
struct acpi_device_id;
#line 195 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/device.h"
struct device_driver {
   char const   *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const   *mod_name ;
   bool suppress_bind_attrs ;
   struct of_device_id  const  *of_match_table ;
   struct acpi_device_id  const  *acpi_match_table ;
   int (*probe)(struct device * ) ;
   int (*remove)(struct device * ) ;
   void (*shutdown)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct attribute_group  const  **groups ;
   struct dev_pm_ops  const  *pm ;
   struct driver_private *p ;
};
#line 321
struct class_attribute;
#line 321 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/device.h"
struct class {
   char const   *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group  const  **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device * , struct kobj_uevent_env * ) ;
   char *(*devnode)(struct device * , umode_t * ) ;
   void (*class_release)(struct class * ) ;
   void (*dev_release)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct kobj_ns_type_operations  const  *ns_type ;
   void const   *(*namespace)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
   struct subsys_private *p ;
};
#line 414 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class * , struct class_attribute * , char * ) ;
   ssize_t (*store)(struct class * , struct class_attribute * , char const   * , size_t  ) ;
};
#line 482 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/device.h"
struct device_type {
   char const   *name ;
   struct attribute_group  const  **groups ;
   int (*uevent)(struct device * , struct kobj_uevent_env * ) ;
   char *(*devnode)(struct device * , umode_t * , kuid_t * , kgid_t * ) ;
   void (*release)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
};
#line 510 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device * , struct device_attribute * , char * ) ;
   ssize_t (*store)(struct device * , struct device_attribute * , char const   * ,
                    size_t  ) ;
};
#line 640 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};
#line 649
struct acpi_device;
#line 650 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/device.h"
struct acpi_dev_node {
   struct acpi_device *companion ;
};
#line 656
struct dma_coherent_mem;
#line 656
struct cma;
#line 656 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const   *init_name ;
   struct device_type  const  *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct acpi_dev_node acpi_node ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group  const  **groups ;
   void (*release)(struct device * ) ;
   struct iommu_group *iommu_group ;
   bool offline_disabled : 1 ;
   bool offline : 1 ;
};
#line 803 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/device.h"
struct wakeup_source {
   char const   *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool active : 1 ;
   bool autosleep_enabled : 1 ;
};
#line 13 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;
#line 186 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
};
#line 219 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const   *data ;
};
#line 479 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/mod_devicetable.h"
struct platform_device_id {
   char name[20U] ;
   kernel_ulong_t driver_data ;
};
#line 628
struct mfd_cell;
#line 629 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/mod_devicetable.h"
struct platform_device {
   char const   *name ;
   int id ;
   bool id_auto ;
   struct device dev ;
   u32 num_resources ;
   struct resource *resource ;
   struct platform_device_id  const  *id_entry ;
   struct mfd_cell *mfd_cell ;
   struct pdev_archdata archdata ;
};
#line 172 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/platform_device.h"
struct platform_driver {
   int (*probe)(struct platform_device * ) ;
   int (*remove)(struct platform_device * ) ;
   void (*shutdown)(struct platform_device * ) ;
   int (*suspend)(struct platform_device * , pm_message_t  ) ;
   int (*resume)(struct platform_device * ) ;
   struct device_driver driver ;
   struct platform_device_id  const  *id_table ;
   bool prevent_deferred_probe ;
};
#line 93 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/bit_spinlock.h"
struct hlist_bl_node;
#line 93 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/bit_spinlock.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};
#line 36 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};
#line 114 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/rculist_bl.h"
struct __anonstruct____missing_field_name_134 {
   spinlock_t lock ;
   unsigned int count ;
};
#line 114 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/rculist_bl.h"
union __anonunion____missing_field_name_133 {
   struct __anonstruct____missing_field_name_134 __annonCompField32 ;
};
#line 114 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion____missing_field_name_133 __annonCompField33 ;
};
#line 49 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/lockref.h"
struct nameidata;
#line 50
struct vfsmount;
#line 51 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/lockref.h"
struct __anonstruct____missing_field_name_136 {
   u32 hash ;
   u32 len ;
};
#line 51 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/lockref.h"
union __anonunion____missing_field_name_135 {
   struct __anonstruct____missing_field_name_136 __annonCompField34 ;
   u64 hash_len ;
};
#line 51 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/lockref.h"
struct qstr {
   union __anonunion____missing_field_name_135 __annonCompField35 ;
   unsigned char const   *name ;
};
#line 90 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/dcache.h"
struct dentry_operations;
#line 90 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/dcache.h"
union __anonunion_d_u_137 {
   struct list_head d_child ;
   struct callback_head d_rcu ;
};
#line 90 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations  const  *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   union __anonunion_d_u_137 d_u ;
   struct list_head d_subdirs ;
   struct hlist_node d_alias ;
};
#line 142 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry * , unsigned int  ) ;
   int (*d_weak_revalidate)(struct dentry * , unsigned int  ) ;
   int (*d_hash)(struct dentry  const  * , struct qstr * ) ;
   int (*d_compare)(struct dentry  const  * , struct dentry  const  * , unsigned int  ,
                    char const   * , struct qstr  const  * ) ;
   int (*d_delete)(struct dentry  const  * ) ;
   void (*d_release)(struct dentry * ) ;
   void (*d_prune)(struct dentry * ) ;
   void (*d_iput)(struct dentry * , struct inode * ) ;
   char *(*d_dname)(struct dentry * , char * , int  ) ;
   struct vfsmount *(*d_automount)(struct path * ) ;
   int (*d_manage)(struct dentry * , bool  ) ;
};
#line 477 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/path.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_head list ;
   long nr_items ;
};
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   nodemask_t active_nodes ;
};
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/radix-tree.h"
struct __anonstruct____missing_field_name_139 {
   struct radix_tree_node *parent ;
   void *private_data ;
};
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/radix-tree.h"
union __anonunion____missing_field_name_138 {
   struct __anonstruct____missing_field_name_139 __annonCompField36 ;
   struct callback_head callback_head ;
};
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion____missing_field_name_138 __annonCompField37 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};
#line 105 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};
#line 428
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
} ;
#line 435
struct pid_namespace;
#line 435 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/radix-tree.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};
#line 56 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};
#line 68 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;
#line 45 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};
#line 38 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/linux/fiemap.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   nodemask_t nodes_to_scan ;
   int nid ;
};
#line 26 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker * , struct shrink_control * ) ;
   unsigned long (*scan_objects)(struct shrinker * , struct shrink_control * ) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};
#line 70
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
} ;
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/percpu-rwsem.h"
struct block_device;
#line 31
struct io_context;
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/linux/fs.h"
struct export_operations;
#line 61
struct iovec;
#line 62
struct kiocb;
#line 63
struct pipe_inode_info;
#line 64
struct poll_table_struct;
#line 65
struct kstatfs;
#line 66
struct cred;
#line 67
struct swap_info_struct;
#line 68
struct iov_iter;
#line 69 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};
#line 253 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/fs.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};
#line 176 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/percpu_counter.h"
struct fs_disk_quota {
   __s8 d_version ;
   __s8 d_flags ;
   __u16 d_fieldmask ;
   __u32 d_id ;
   __u64 d_blk_hardlimit ;
   __u64 d_blk_softlimit ;
   __u64 d_ino_hardlimit ;
   __u64 d_ino_softlimit ;
   __u64 d_bcount ;
   __u64 d_icount ;
   __s32 d_itimer ;
   __s32 d_btimer ;
   __u16 d_iwarns ;
   __u16 d_bwarns ;
   __s32 d_padding2 ;
   __u64 d_rtb_hardlimit ;
   __u64 d_rtb_softlimit ;
   __u64 d_rtbcount ;
   __s32 d_rtbtimer ;
   __u16 d_rtbwarns ;
   __s16 d_padding3 ;
   char d_padding4[8U] ;
};
#line 76 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/linux/dqblk_xfs.h"
struct fs_qfilestat {
   __u64 qfs_ino ;
   __u64 qfs_nblks ;
   __u32 qfs_nextents ;
};
#line 151 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/linux/dqblk_xfs.h"
typedef struct fs_qfilestat fs_qfilestat_t;
#line 152 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/linux/dqblk_xfs.h"
struct fs_quota_stat {
   __s8 qs_version ;
   __u16 qs_flags ;
   __s8 qs_pad ;
   fs_qfilestat_t qs_uquota ;
   fs_qfilestat_t qs_gquota ;
   __u32 qs_incoredqs ;
   __s32 qs_btimelimit ;
   __s32 qs_itimelimit ;
   __s32 qs_rtbtimelimit ;
   __u16 qs_bwarnlimit ;
   __u16 qs_iwarnlimit ;
};
#line 166 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/linux/dqblk_xfs.h"
struct fs_qfilestatv {
   __u64 qfs_ino ;
   __u64 qfs_nblks ;
   __u32 qfs_nextents ;
   __u32 qfs_pad ;
};
#line 196 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/linux/dqblk_xfs.h"
struct fs_quota_statv {
   __s8 qs_version ;
   __u8 qs_pad1 ;
   __u16 qs_flags ;
   __u32 qs_incoredqs ;
   struct fs_qfilestatv qs_uquota ;
   struct fs_qfilestatv qs_gquota ;
   struct fs_qfilestatv qs_pquota ;
   __s32 qs_btimelimit ;
   __s32 qs_itimelimit ;
   __s32 qs_rtbtimelimit ;
   __u16 qs_bwarnlimit ;
   __u16 qs_iwarnlimit ;
   __u64 qs_pad2[8U] ;
};
#line 212
struct dquot;
#line 19 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/projid.h"
struct __anonstruct_kprojid_t_141 {
   projid_t val ;
};
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_141 kprojid_t;
#line 119 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/linux/quota.h"
struct if_dqinfo {
   __u64 dqi_bgrace ;
   __u64 dqi_igrace ;
   __u32 dqi_flags ;
   __u32 dqi_valid ;
};
#line 152
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
} ;
#line 60 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/quota.h"
typedef long long qsize_t;
#line 61 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/quota.h"
union __anonunion____missing_field_name_142 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};
#line 61 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/quota.h"
struct kqid {
   union __anonunion____missing_field_name_142 __annonCompField38 ;
   enum quota_type type ;
};
#line 178 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};
#line 200
struct quota_format_type;
#line 201 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_maxblimit ;
   qsize_t dqi_maxilimit ;
   void *dqi_priv ;
};
#line 264 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};
#line 291 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block * , int  ) ;
   int (*read_file_info)(struct super_block * , int  ) ;
   int (*write_file_info)(struct super_block * , int  ) ;
   int (*free_file_info)(struct super_block * , int  ) ;
   int (*read_dqblk)(struct dquot * ) ;
   int (*commit_dqblk)(struct dquot * ) ;
   int (*release_dqblk)(struct dquot * ) ;
};
#line 302 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot * ) ;
   struct dquot *(*alloc_dquot)(struct super_block * , int  ) ;
   void (*destroy_dquot)(struct dquot * ) ;
   int (*acquire_dquot)(struct dquot * ) ;
   int (*release_dquot)(struct dquot * ) ;
   int (*mark_dirty)(struct dquot * ) ;
   int (*write_info)(struct super_block * , int  ) ;
   qsize_t *(*get_reserved_space)(struct inode * ) ;
};
#line 316 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block * , int  , int  , struct path * ) ;
   int (*quota_on_meta)(struct super_block * , int  , int  ) ;
   int (*quota_off)(struct super_block * , int  ) ;
   int (*quota_sync)(struct super_block * , int  ) ;
   int (*get_info)(struct super_block * , int  , struct if_dqinfo * ) ;
   int (*set_info)(struct super_block * , int  , struct if_dqinfo * ) ;
   int (*get_dqblk)(struct super_block * , struct kqid  , struct fs_disk_quota * ) ;
   int (*set_dqblk)(struct super_block * , struct kqid  , struct fs_disk_quota * ) ;
   int (*get_xstate)(struct super_block * , struct fs_quota_stat * ) ;
   int (*set_xstate)(struct super_block * , unsigned int  , int  ) ;
   int (*get_xstatev)(struct super_block * , struct fs_quota_statv * ) ;
   int (*rm_xquota)(struct super_block * , unsigned int  ) ;
};
#line 334 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops  const  *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};
#line 380 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct rw_semaphore dqptr_sem ;
   struct inode *files[2U] ;
   struct mem_dqinfo info[2U] ;
   struct quota_format_ops  const  *ops[2U] ;
};
#line 411
struct address_space;
#line 412
struct writeback_control;
#line 323 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page * , struct writeback_control * ) ;
   int (*readpage)(struct file * , struct page * ) ;
   int (*writepages)(struct address_space * , struct writeback_control * ) ;
   int (*set_page_dirty)(struct page * ) ;
   int (*readpages)(struct file * , struct address_space * , struct list_head * ,
                    unsigned int  ) ;
   int (*write_begin)(struct file * , struct address_space * , loff_t  , unsigned int  ,
                      unsigned int  , struct page ** , void ** ) ;
   int (*write_end)(struct file * , struct address_space * , loff_t  , unsigned int  ,
                    unsigned int  , struct page * , void * ) ;
   sector_t (*bmap)(struct address_space * , sector_t  ) ;
   void (*invalidatepage)(struct page * , unsigned int  , unsigned int  ) ;
   int (*releasepage)(struct page * , gfp_t  ) ;
   void (*freepage)(struct page * ) ;
   ssize_t (*direct_IO)(int  , struct kiocb * , struct iov_iter * , loff_t  ) ;
   int (*get_xip_mem)(struct address_space * , unsigned long  , int  , void ** , unsigned long * ) ;
   int (*migratepage)(struct address_space * , struct page * , struct page * , enum migrate_mode  ) ;
   int (*launder_page)(struct page * ) ;
   int (*is_partially_uptodate)(struct page * , unsigned long  , unsigned long  ) ;
   void (*is_dirty_writeback)(struct page * , bool * , bool * ) ;
   int (*error_remove_page)(struct address_space * , struct page * ) ;
   int (*swap_activate)(struct swap_info_struct * , struct file * , sector_t * ) ;
   void (*swap_deactivate)(struct file * ) ;
};
#line 382 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   unsigned int i_mmap_writable ;
   struct rb_root i_mmap ;
   struct list_head i_mmap_nonlinear ;
   struct mutex i_mmap_mutex ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations  const  *a_ops ;
   unsigned long flags ;
   struct backing_dev_info *backing_dev_info ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};
#line 405
struct request_queue;
#line 406
struct hd_struct;
#line 406
struct gendisk;
#line 406 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};
#line 478
struct posix_acl;
#line 479
struct inode_operations;
#line 479 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/fs.h"
union __anonunion____missing_field_name_145 {
   unsigned int const   i_nlink ;
   unsigned int __i_nlink ;
};
#line 479 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/fs.h"
union __anonunion____missing_field_name_146 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};
#line 479
struct file_lock;
#line 479 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/fs.h"
union __anonunion____missing_field_name_147 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
};
#line 479 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations  const  *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion____missing_field_name_145 __annonCompField39 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion____missing_field_name_146 __annonCompField40 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations  const  *i_fop ;
   struct file_lock *i_flock ;
   struct address_space i_data ;
   struct dquot *i_dquot[2U] ;
   struct list_head i_devices ;
   union __anonunion____missing_field_name_147 __annonCompField41 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};
#line 715 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};
#line 723 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};
#line 746 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/fs.h"
union __anonunion_f_u_148 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};
#line 746 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/fs.h"
struct file {
   union __anonunion_f_u_148 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations  const  *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred  const  *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};
#line 836
struct files_struct;
#line 836 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/fs.h"
typedef struct files_struct *fl_owner_t;
#line 837 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock * , struct file_lock * ) ;
   void (*fl_release_private)(struct file_lock * ) ;
};
#line 842 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock * , struct file_lock * ) ;
   unsigned long (*lm_owner_key)(struct file_lock * ) ;
   void (*lm_notify)(struct file_lock * ) ;
   int (*lm_grant)(struct file_lock * , struct file_lock * , int  ) ;
   void (*lm_break)(struct file_lock * ) ;
   int (*lm_change)(struct file_lock ** , int  ) ;
};
#line 860
struct nlm_lockowner;
#line 861 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};
#line 14 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;
#line 15 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};
#line 19
struct fasync_struct;
#line 19 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_150 {
   struct list_head link ;
   int state ;
};
#line 19 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_149 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_150 afs ;
};
#line 19 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations  const  *fl_ops ;
   struct lock_manager_operations  const  *fl_lmops ;
   union __anonunion_fl_u_149 fl_u ;
};
#line 963 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};
#line 1157 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};
#line 1173
struct super_operations;
#line 1173
struct xattr_handler;
#line 1173
struct mtd_info;
#line 1173 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations  const  *s_op ;
   struct dquot_operations  const  *dq_op ;
   struct quotactl_ops  const  *s_qcop ;
   struct export_operations  const  *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler  const  **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations  const  *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
};
#line 1403 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};
#line 1441 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/fs.h"
struct dir_context {
   int (*actor)(void * , char const   * , int  , loff_t  , u64  , unsigned int  ) ;
   loff_t pos ;
};
#line 1446 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file * , loff_t  , int  ) ;
   ssize_t (*read)(struct file * , char * , size_t  , loff_t * ) ;
   ssize_t (*write)(struct file * , char const   * , size_t  , loff_t * ) ;
   ssize_t (*aio_read)(struct kiocb * , struct iovec  const  * , unsigned long  ,
                       loff_t  ) ;
   ssize_t (*aio_write)(struct kiocb * , struct iovec  const  * , unsigned long  ,
                        loff_t  ) ;
   ssize_t (*read_iter)(struct kiocb * , struct iov_iter * ) ;
   ssize_t (*write_iter)(struct kiocb * , struct iov_iter * ) ;
   int (*iterate)(struct file * , struct dir_context * ) ;
   unsigned int (*poll)(struct file * , struct poll_table_struct * ) ;
   long (*unlocked_ioctl)(struct file * , unsigned int  , unsigned long  ) ;
   long (*compat_ioctl)(struct file * , unsigned int  , unsigned long  ) ;
   int (*mmap)(struct file * , struct vm_area_struct * ) ;
   int (*open)(struct inode * , struct file * ) ;
   int (*flush)(struct file * , fl_owner_t  ) ;
   int (*release)(struct inode * , struct file * ) ;
   int (*fsync)(struct file * , loff_t  , loff_t  , int  ) ;
   int (*aio_fsync)(struct kiocb * , int  ) ;
   int (*fasync)(int  , struct file * , int  ) ;
   int (*lock)(struct file * , int  , struct file_lock * ) ;
   ssize_t (*sendpage)(struct file * , struct page * , int  , size_t  , loff_t * ,
                       int  ) ;
   unsigned long (*get_unmapped_area)(struct file * , unsigned long  , unsigned long  ,
                                      unsigned long  , unsigned long  ) ;
   int (*check_flags)(int  ) ;
   int (*flock)(struct file * , int  , struct file_lock * ) ;
   ssize_t (*splice_write)(struct pipe_inode_info * , struct file * , loff_t * , size_t  ,
                           unsigned int  ) ;
   ssize_t (*splice_read)(struct file * , loff_t * , struct pipe_inode_info * , size_t  ,
                          unsigned int  ) ;
   int (*setlease)(struct file * , long  , struct file_lock ** ) ;
   long (*fallocate)(struct file * , int  , loff_t  , loff_t  ) ;
   int (*show_fdinfo)(struct seq_file * , struct file * ) ;
};
#line 1488 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode * , struct dentry * , unsigned int  ) ;
   void *(*follow_link)(struct dentry * , struct nameidata * ) ;
   int (*permission)(struct inode * , int  ) ;
   struct posix_acl *(*get_acl)(struct inode * , int  ) ;
   int (*readlink)(struct dentry * , char * , int  ) ;
   void (*put_link)(struct dentry * , struct nameidata * , void * ) ;
   int (*create)(struct inode * , struct dentry * , umode_t  , bool  ) ;
   int (*link)(struct dentry * , struct inode * , struct dentry * ) ;
   int (*unlink)(struct inode * , struct dentry * ) ;
   int (*symlink)(struct inode * , struct dentry * , char const   * ) ;
   int (*mkdir)(struct inode * , struct dentry * , umode_t  ) ;
   int (*rmdir)(struct inode * , struct dentry * ) ;
   int (*mknod)(struct inode * , struct dentry * , umode_t  , dev_t  ) ;
   int (*rename)(struct inode * , struct dentry * , struct inode * , struct dentry * ) ;
   int (*rename2)(struct inode * , struct dentry * , struct inode * , struct dentry * ,
                  unsigned int  ) ;
   int (*setattr)(struct dentry * , struct iattr * ) ;
   int (*getattr)(struct vfsmount * , struct dentry * , struct kstat * ) ;
   int (*setxattr)(struct dentry * , char const   * , void const   * , size_t  , int  ) ;
   ssize_t (*getxattr)(struct dentry * , char const   * , void * , size_t  ) ;
   ssize_t (*listxattr)(struct dentry * , char * , size_t  ) ;
   int (*removexattr)(struct dentry * , char const   * ) ;
   int (*fiemap)(struct inode * , struct fiemap_extent_info * , u64  , u64  ) ;
   int (*update_time)(struct inode * , struct timespec * , int  ) ;
   int (*atomic_open)(struct inode * , struct dentry * , struct file * , unsigned int  ,
                      umode_t  , int * ) ;
   int (*tmpfile)(struct inode * , struct dentry * , umode_t  ) ;
   int (*set_acl)(struct inode * , struct posix_acl * , int  ) ;
};
#line 1535 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block * ) ;
   void (*destroy_inode)(struct inode * ) ;
   void (*dirty_inode)(struct inode * , int  ) ;
   int (*write_inode)(struct inode * , struct writeback_control * ) ;
   int (*drop_inode)(struct inode * ) ;
   void (*evict_inode)(struct inode * ) ;
   void (*put_super)(struct super_block * ) ;
   int (*sync_fs)(struct super_block * , int  ) ;
   int (*freeze_fs)(struct super_block * ) ;
   int (*unfreeze_fs)(struct super_block * ) ;
   int (*statfs)(struct dentry * , struct kstatfs * ) ;
   int (*remount_fs)(struct super_block * , int * , char * ) ;
   void (*umount_begin)(struct super_block * ) ;
   int (*show_options)(struct seq_file * , struct dentry * ) ;
   int (*show_devname)(struct seq_file * , struct dentry * ) ;
   int (*show_path)(struct seq_file * , struct dentry * ) ;
   int (*show_stats)(struct seq_file * , struct dentry * ) ;
   ssize_t (*quota_read)(struct super_block * , int  , char * , size_t  , loff_t  ) ;
   ssize_t (*quota_write)(struct super_block * , int  , char const   * , size_t  ,
                          loff_t  ) ;
   int (*bdev_try_to_free_page)(struct super_block * , struct page * , gfp_t  ) ;
   long (*nr_cached_objects)(struct super_block * , int  ) ;
   long (*free_cached_objects)(struct super_block * , long  , int  ) ;
};
#line 1749 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/fs.h"
struct file_system_type {
   char const   *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type * , int  , char const   * , void * ) ;
   void (*kill_sb)(struct super_block * ) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};
#line 66
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
} ;
#line 73 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/uprobes.h"
struct __anonstruct____missing_field_name_156 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};
#line 73 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/uprobes.h"
struct __anonstruct____missing_field_name_157 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};
#line 73 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/uprobes.h"
union __anonunion____missing_field_name_155 {
   struct __anonstruct____missing_field_name_156 __annonCompField44 ;
   struct __anonstruct____missing_field_name_157 __annonCompField45 ;
};
#line 73
struct uprobe;
#line 73
struct return_instance;
#line 73 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion____missing_field_name_155 __annonCompField46 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};
#line 94 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/uprobes.h"
struct xol_area;
#line 95 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};
#line 133 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_158 {
   struct address_space *mapping ;
   void *s_mem ;
};
#line 133 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_160 {
   unsigned long index ;
   void *freelist ;
   bool pfmemalloc ;
};
#line 133 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/uprobes.h"
struct __anonstruct____missing_field_name_164 {
   unsigned int inuse : 16 ;
   unsigned int objects : 15 ;
   unsigned int frozen : 1 ;
};
#line 133 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_163 {
   atomic_t _mapcount ;
   struct __anonstruct____missing_field_name_164 __annonCompField49 ;
   int units ;
};
#line 133 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/uprobes.h"
struct __anonstruct____missing_field_name_162 {
   union __anonunion____missing_field_name_163 __annonCompField50 ;
   atomic_t _count ;
};
#line 133 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_161 {
   unsigned long counters ;
   struct __anonstruct____missing_field_name_162 __annonCompField51 ;
   unsigned int active ;
};
#line 133 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/uprobes.h"
struct __anonstruct____missing_field_name_159 {
   union __anonunion____missing_field_name_160 __annonCompField48 ;
   union __anonunion____missing_field_name_161 __annonCompField52 ;
};
#line 133 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/uprobes.h"
struct __anonstruct____missing_field_name_166 {
   struct page *next ;
   int pages ;
   int pobjects ;
};
#line 133
struct slab;
#line 133 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_165 {
   struct list_head lru ;
   struct __anonstruct____missing_field_name_166 __annonCompField54 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   pgtable_t pmd_huge_pte ;
};
#line 133 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_167 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};
#line 133 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/uprobes.h"
struct page {
   unsigned long flags ;
   union __anonunion____missing_field_name_158 __annonCompField47 ;
   struct __anonstruct____missing_field_name_159 __annonCompField53 ;
   union __anonunion____missing_field_name_165 __annonCompField55 ;
   union __anonunion____missing_field_name_167 __annonCompField56 ;
   unsigned long debug_flags ;
};
#line 187 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};
#line 239 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/mm_types.h"
struct __anonstruct_linear_169 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};
#line 239 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/mm_types.h"
union __anonunion_shared_168 {
   struct __anonstruct_linear_169 linear ;
   struct list_head nonlinear ;
};
#line 239
struct anon_vma;
#line 239
struct mempolicy;
#line 239 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   union __anonunion_shared_168 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct  const  *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};
#line 311 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};
#line 317 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};
#line 330 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};
#line 338 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};
#line 343
struct kioctx_table;
#line 344
struct linux_binfmt;
#line 344
struct mmu_notifier_mm;
#line 344 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file * , unsigned long  , unsigned long  ,
                                      unsigned long  , unsigned long  ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
};
#line 519
struct user_struct;
#line 188 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};
#line 221 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct * ) ;
   void (*close)(struct vm_area_struct * ) ;
   int (*fault)(struct vm_area_struct * , struct vm_fault * ) ;
   void (*map_pages)(struct vm_area_struct * , struct vm_fault * ) ;
   int (*page_mkwrite)(struct vm_area_struct * , struct vm_fault * ) ;
   int (*access)(struct vm_area_struct * , unsigned long  , void * , int  , int  ) ;
   char const   *(*name)(struct vm_area_struct * ) ;
   int (*set_policy)(struct vm_area_struct * , struct mempolicy * ) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct * , unsigned long  ) ;
   int (*migrate)(struct vm_area_struct * , nodemask_t const   * , nodemask_t const   * ,
                  unsigned long  ) ;
   int (*remap_pages)(struct vm_area_struct * , unsigned long  , unsigned long  ,
                      unsigned long  ) ;
};
#line 62 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};
#line 124 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/vtime.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
} ;
#line 16 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;
#line 835 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/linux/sysctl.h"
struct nsproxy;
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file * , wait_queue_head_t * , struct poll_table_struct * ) ;
   unsigned long _key ;
};
#line 15 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;
#line 16 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;
#line 21 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;
#line 190 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};
#line 198 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;
#line 48 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/elf.h"
struct kernel_param;
#line 53 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/elf.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const   * , struct kernel_param  const  * ) ;
   int (*get)(char * , struct kernel_param  const  * ) ;
   void (*free)(void * ) ;
};
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/moduleparam.h"
struct kparam_string;
#line 58
struct kparam_array;
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/moduleparam.h"
union __anonunion____missing_field_name_179 {
   void *arg ;
   struct kparam_string  const  *str ;
   struct kparam_array  const  *arr ;
};
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/moduleparam.h"
struct kernel_param {
   char const   *name ;
   struct kernel_param_ops  const  *ops ;
   u16 perm ;
   s16 level ;
   union __anonunion____missing_field_name_179 __annonCompField60 ;
};
#line 70 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};
#line 76 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops  const  *ops ;
   void *elem ;
};
#line 461 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/moduleparam.h"
struct mod_arch_specific {

};
#line 36 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/module.h"
struct module_param_attrs;
#line 36 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};
#line 46 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute * , struct module_kobject * , char * ) ;
   ssize_t (*store)(struct module_attribute * , struct module_kobject * , char const   * ,
                    size_t  ) ;
   void (*setup)(struct module * , char const   * ) ;
   int (*test)(struct module * ) ;
   void (*free)(struct module * ) ;
};
#line 205
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
} ;
#line 212 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/module.h"
struct module_ref {
   unsigned long incs ;
   unsigned long decs ;
};
#line 226
struct module_sect_attrs;
#line 226
struct module_notes_attrs;
#line 226
struct tracepoint;
#line 226
struct ftrace_event_call;
#line 226 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const   *version ;
   char const   *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol  const  *syms ;
   unsigned long const   *crcs ;
   unsigned int num_syms ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol  const  *gpl_syms ;
   unsigned long const   *gpl_crcs ;
   struct kernel_symbol  const  *unused_syms ;
   unsigned long const   *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol  const  *unused_gpl_syms ;
   unsigned long const   *unused_gpl_crcs ;
   bool sig_ok ;
   struct kernel_symbol  const  *gpl_future_syms ;
   unsigned long const   *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const  *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const   **trace_bprintk_fmt_start ;
   struct ftrace_event_call **trace_events ;
   unsigned int num_trace_events ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   struct module_ref *refptr ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};
#line 648 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/module.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};
#line 12 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};
#line 50
struct hrtimer_clock_base;
#line 51
struct hrtimer_cpu_base;
#line 60
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
} ;
#line 65 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer * ) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};
#line 132 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t resolution ;
   ktime_t (*get_time)(void) ;
   ktime_t softirq_time ;
   ktime_t offset ;
};
#line 163 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   unsigned int active_bases ;
   unsigned int clock_was_set ;
   ktime_t expires_next ;
   int hres_active ;
   int hang_detected ;
   unsigned long nr_events ;
   unsigned long nr_retries ;
   unsigned long nr_hangs ;
   ktime_t max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};
#line 674 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/interrupt.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};
#line 70 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
} ;
#line 77 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/dma-attrs.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};
#line 17 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/asm-generic/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};
#line 351 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/scatterlist.h"
struct dma_map_ops {
   void *(*alloc)(struct device * , size_t  , dma_addr_t * , gfp_t  , struct dma_attrs * ) ;
   void (*free)(struct device * , size_t  , void * , dma_addr_t  , struct dma_attrs * ) ;
   int (*mmap)(struct device * , struct vm_area_struct * , void * , dma_addr_t  ,
               size_t  , struct dma_attrs * ) ;
   int (*get_sgtable)(struct device * , struct sg_table * , void * , dma_addr_t  ,
                      size_t  , struct dma_attrs * ) ;
   dma_addr_t (*map_page)(struct device * , struct page * , unsigned long  , size_t  ,
                          enum dma_data_direction  , struct dma_attrs * ) ;
   void (*unmap_page)(struct device * , dma_addr_t  , size_t  , enum dma_data_direction  ,
                      struct dma_attrs * ) ;
   int (*map_sg)(struct device * , struct scatterlist * , int  , enum dma_data_direction  ,
                 struct dma_attrs * ) ;
   void (*unmap_sg)(struct device * , struct scatterlist * , int  , enum dma_data_direction  ,
                    struct dma_attrs * ) ;
   void (*sync_single_for_cpu)(struct device * , dma_addr_t  , size_t  , enum dma_data_direction  ) ;
   void (*sync_single_for_device)(struct device * , dma_addr_t  , size_t  , enum dma_data_direction  ) ;
   void (*sync_sg_for_cpu)(struct device * , struct scatterlist * , int  , enum dma_data_direction  ) ;
   void (*sync_sg_for_device)(struct device * , struct scatterlist * , int  , enum dma_data_direction  ) ;
   int (*mapping_error)(struct device * , dma_addr_t  ) ;
   int (*dma_supported)(struct device * , u64  ) ;
   int (*set_dma_mask)(struct device * , u64  ) ;
   int is_phys ;
};
#line 57 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/kmemleak.h"
struct mem_cgroup;
#line 368 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/slab.h"
struct kmem_cache_cpu {
   void **freelist ;
   unsigned long tid ;
   struct page *page ;
   struct page *partial ;
   unsigned int stat[26U] ;
};
#line 48 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/slub_def.h"
struct kmem_cache_order_objects {
   unsigned long x ;
};
#line 58
struct memcg_cache_params;
#line 58
struct kmem_cache_node;
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/slub_def.h"
struct kmem_cache {
   struct kmem_cache_cpu *cpu_slab ;
   unsigned long flags ;
   unsigned long min_partial ;
   int size ;
   int object_size ;
   int offset ;
   int cpu_partial ;
   struct kmem_cache_order_objects oo ;
   struct kmem_cache_order_objects max ;
   struct kmem_cache_order_objects min ;
   gfp_t allocflags ;
   int refcount ;
   void (*ctor)(void * ) ;
   int inuse ;
   int align ;
   int reserved ;
   char const   *name ;
   struct list_head list ;
   struct kobject kobj ;
   struct memcg_cache_params *memcg_params ;
   int max_attr_size ;
   struct kset *memcg_kset ;
   int remote_node_defrag_ratio ;
   struct kmem_cache_node *node[1024U] ;
};
#line 505 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/slab.h"
struct __anonstruct____missing_field_name_181 {
   struct callback_head callback_head ;
   struct kmem_cache *memcg_caches[0U] ;
};
#line 505 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/slab.h"
struct __anonstruct____missing_field_name_182 {
   struct mem_cgroup *memcg ;
   struct list_head list ;
   struct kmem_cache *root_cache ;
   atomic_t nr_pages ;
};
#line 505 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/slab.h"
union __anonunion____missing_field_name_180 {
   struct __anonstruct____missing_field_name_181 __annonCompField61 ;
   struct __anonstruct____missing_field_name_182 __annonCompField62 ;
};
#line 505 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/slab.h"
struct memcg_cache_params {
   bool is_root_cache ;
   union __anonunion____missing_field_name_180 __annonCompField63 ;
};
#line 420 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/clk.h"
struct regulator;
#line 421 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/clk.h"
struct regulator_bulk_data {
   char const   *supply ;
   struct regulator *consumer ;
   int ret ;
};
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/of.h"
typedef u32 phandle;
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};
#line 42 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/of.h"
struct device_node {
   char const   *name ;
   char const   *type ;
   phandle phandle ;
   char const   *full_name ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct device_node *next ;
   struct device_node *allnext ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};
#line 272 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/pm_runtime.h"
struct phy;
#line 273 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/pm_runtime.h"
struct phy_ops {
   int (*init)(struct phy * ) ;
   int (*exit)(struct phy * ) ;
   int (*power_on)(struct phy * ) ;
   int (*power_off)(struct phy * ) ;
   struct module *owner ;
};
#line 39 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/phy/phy.h"
struct phy_attrs {
   u32 bus_width ;
};
#line 47
struct phy_init_data;
#line 47 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/phy/phy.h"
struct phy {
   struct device dev ;
   int id ;
   struct phy_ops  const  *ops ;
   struct phy_init_data *init_data ;
   struct mutex mutex ;
   int init_count ;
   int power_count ;
   struct phy_attrs attrs ;
};
#line 83 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/phy/phy.h"
struct phy_consumer {
   char const   *dev_name ;
   char const   *port ;
};
#line 94 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/phy/phy.h"
struct phy_init_data {
   unsigned int num_consumers ;
   struct phy_consumer *consumers ;
};
#line 173 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/phy/phy.h"
struct usb_ctrlrequest {
   __u8 bRequestType ;
   __u8 bRequest ;
   __le16 wValue ;
   __le16 wIndex ;
   __le16 wLength ;
};
#line 253 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/linux/usb/ch9.h"
struct usb_device_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 bcdUSB ;
   __u8 bDeviceClass ;
   __u8 bDeviceSubClass ;
   __u8 bDeviceProtocol ;
   __u8 bMaxPacketSize0 ;
   __le16 idVendor ;
   __le16 idProduct ;
   __le16 bcdDevice ;
   __u8 iManufacturer ;
   __u8 iProduct ;
   __u8 iSerialNumber ;
   __u8 bNumConfigurations ;
};
#line 275 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/linux/usb/ch9.h"
struct usb_config_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 wTotalLength ;
   __u8 bNumInterfaces ;
   __u8 bConfigurationValue ;
   __u8 iConfiguration ;
   __u8 bmAttributes ;
   __u8 bMaxPower ;
};
#line 343 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/linux/usb/ch9.h"
struct usb_interface_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bInterfaceNumber ;
   __u8 bAlternateSetting ;
   __u8 bNumEndpoints ;
   __u8 bInterfaceClass ;
   __u8 bInterfaceSubClass ;
   __u8 bInterfaceProtocol ;
   __u8 iInterface ;
};
#line 363 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/linux/usb/ch9.h"
struct usb_endpoint_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bEndpointAddress ;
   __u8 bmAttributes ;
   __le16 wMaxPacketSize ;
   __u8 bInterval ;
   __u8 bRefresh ;
   __u8 bSynchAddress ;
};
#line 613 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/linux/usb/ch9.h"
struct usb_ss_ep_comp_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bMaxBurst ;
   __u8 bmAttributes ;
   __le16 wBytesPerInterval ;
};
#line 692 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/linux/usb/ch9.h"
struct usb_interface_assoc_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bFirstInterface ;
   __u8 bInterfaceCount ;
   __u8 bFunctionClass ;
   __u8 bFunctionSubClass ;
   __u8 bFunctionProtocol ;
   __u8 iFunction ;
};
#line 751 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/linux/usb/ch9.h"
struct usb_bos_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 wTotalLength ;
   __u8 bNumDeviceCaps ;
};
#line 801 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/linux/usb/ch9.h"
struct usb_ext_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __le32 bmAttributes ;
};
#line 811 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/linux/usb/ch9.h"
struct usb_ss_cap_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __u8 bmAttributes ;
   __le16 wSpeedSupported ;
   __u8 bFunctionalitySupport ;
   __u8 bU1devExitLat ;
   __le16 bU2DevExitLat ;
};
#line 840 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/linux/usb/ch9.h"
struct usb_ss_container_id_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bDevCapabilityType ;
   __u8 bReserved ;
   __u8 ContainerID[16U] ;
};
#line 905
enum usb_device_speed {
    USB_SPEED_UNKNOWN = 0,
    USB_SPEED_LOW = 1,
    USB_SPEED_FULL = 2,
    USB_SPEED_HIGH = 3,
    USB_SPEED_WIRELESS = 4,
    USB_SPEED_SUPER = 5
} ;
#line 914
enum usb_device_state {
    USB_STATE_NOTATTACHED = 0,
    USB_STATE_ATTACHED = 1,
    USB_STATE_POWERED = 2,
    USB_STATE_RECONNECTING = 3,
    USB_STATE_UNAUTHENTICATED = 4,
    USB_STATE_DEFAULT = 5,
    USB_STATE_ADDRESS = 6,
    USB_STATE_CONFIGURED = 7,
    USB_STATE_SUSPENDED = 8
} ;
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/usb/ch9.h"
struct usb_ep;
#line 55 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/usb/ch9.h"
struct usb_request {
   void *buf ;
   unsigned int length ;
   dma_addr_t dma ;
   struct scatterlist *sg ;
   unsigned int num_sgs ;
   unsigned int num_mapped_sgs ;
   unsigned int stream_id : 16 ;
   unsigned int no_interrupt : 1 ;
   unsigned int zero : 1 ;
   unsigned int short_not_ok : 1 ;
   void (*complete)(struct usb_ep * , struct usb_request * ) ;
   void *context ;
   struct list_head list ;
   int status ;
   unsigned int actual ;
};
#line 113 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/usb/gadget.h"
struct usb_ep_ops {
   int (*enable)(struct usb_ep * , struct usb_endpoint_descriptor  const  * ) ;
   int (*disable)(struct usb_ep * ) ;
   struct usb_request *(*alloc_request)(struct usb_ep * , gfp_t  ) ;
   void (*free_request)(struct usb_ep * , struct usb_request * ) ;
   int (*queue)(struct usb_ep * , struct usb_request * , gfp_t  ) ;
   int (*dequeue)(struct usb_ep * , struct usb_request * ) ;
   int (*set_halt)(struct usb_ep * , int  ) ;
   int (*set_wedge)(struct usb_ep * ) ;
   int (*fifo_status)(struct usb_ep * ) ;
   void (*fifo_flush)(struct usb_ep * ) ;
};
#line 142 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/usb/gadget.h"
struct usb_ep {
   void *driver_data ;
   char const   *name ;
   struct usb_ep_ops  const  *ops ;
   struct list_head ep_list ;
   unsigned int maxpacket : 16 ;
   unsigned int maxpacket_limit : 16 ;
   unsigned int max_streams : 16 ;
   unsigned int mult : 2 ;
   unsigned int maxburst : 5 ;
   u8 address ;
   struct usb_endpoint_descriptor  const  *desc ;
   struct usb_ss_ep_comp_descriptor  const  *comp_desc ;
};
#line 462 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/usb/gadget.h"
struct usb_dcd_config_params {
   __u8 bU1devExitLat ;
   __le16 bU2DevExitLat ;
};
#line 471
struct usb_gadget;
#line 472
struct usb_gadget_driver;
#line 473 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/usb/gadget.h"
struct usb_gadget_ops {
   int (*get_frame)(struct usb_gadget * ) ;
   int (*wakeup)(struct usb_gadget * ) ;
   int (*set_selfpowered)(struct usb_gadget * , int  ) ;
   int (*vbus_session)(struct usb_gadget * , int  ) ;
   int (*vbus_draw)(struct usb_gadget * , unsigned int  ) ;
   int (*pullup)(struct usb_gadget * , int  ) ;
   int (*ioctl)(struct usb_gadget * , unsigned int  , unsigned long  ) ;
   void (*get_config_params)(struct usb_dcd_config_params * ) ;
   int (*udc_start)(struct usb_gadget * , struct usb_gadget_driver * ) ;
   int (*udc_stop)(struct usb_gadget * , struct usb_gadget_driver * ) ;
};
#line 494 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/usb/gadget.h"
struct usb_gadget {
   struct work_struct work ;
   struct usb_gadget_ops  const  *ops ;
   struct usb_ep *ep0 ;
   struct list_head ep_list ;
   enum usb_device_speed speed ;
   enum usb_device_speed max_speed ;
   enum usb_device_state state ;
   char const   *name ;
   struct device dev ;
   unsigned int out_epnum ;
   unsigned int in_epnum ;
   unsigned int sg_supported : 1 ;
   unsigned int is_otg : 1 ;
   unsigned int is_a_peripheral : 1 ;
   unsigned int b_hnp_enable : 1 ;
   unsigned int a_hnp_support : 1 ;
   unsigned int a_alt_hnp_support : 1 ;
   unsigned int quirk_ep_out_aligned_size : 1 ;
};
#line 795 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/usb/gadget.h"
struct usb_gadget_driver {
   char *function ;
   enum usb_device_speed max_speed ;
   int (*bind)(struct usb_gadget * , struct usb_gadget_driver * ) ;
   void (*unbind)(struct usb_gadget * ) ;
   int (*setup)(struct usb_gadget * , struct usb_ctrlrequest  const  * ) ;
   void (*disconnect)(struct usb_gadget * ) ;
   void (*suspend)(struct usb_gadget * ) ;
   void (*resume)(struct usb_gadget * ) ;
   struct device_driver driver ;
};
#line 84 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};
#line 4 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/sem.h"
struct sem_undo_list;
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_183 {
   unsigned long sig[1U] ;
};
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_183 sigset_t;
#line 25
struct siginfo;
#line 17 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int  );
#line 18 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);
#line 21 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;
#line 34 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};
#line 10 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_185 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_186 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_187 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_188 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_189 {
   void *_addr ;
   short _addr_lsb ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_190 {
   long _band ;
   int _fd ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_191 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_184 {
   int _pad[28U] ;
   struct __anonstruct__kill_185 _kill ;
   struct __anonstruct__timer_186 _timer ;
   struct __anonstruct__rt_187 _rt ;
   struct __anonstruct__sigchld_188 _sigchld ;
   struct __anonstruct__sigfault_189 _sigfault ;
   struct __anonstruct__sigpoll_190 _sigpoll ;
   struct __anonstruct__sigsys_191 _sigsys ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_184 _sifields ;
};
#line 109 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;
#line 21 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};
#line 246 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};
#line 260 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};
#line 46 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/linux/seccomp.h"
struct seccomp_filter;
#line 47 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};
#line 40 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/rtmutex.h"
struct rt_mutex_waiter;
#line 41 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/resource.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};
#line 45 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};
#line 39 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/latencytop.h"
struct assoc_array_ptr;
#line 39 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};
#line 31 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/key.h"
typedef int32_t key_serial_t;
#line 34 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/key.h"
typedef uint32_t key_perm_t;
#line 35
struct key;
#line 36
struct signal_struct;
#line 37
struct key_type;
#line 41 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const   *description ;
   size_t desc_len ;
};
#line 123 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/key.h"
union __anonunion____missing_field_name_194 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};
#line 123
struct key_user;
#line 123 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/key.h"
union __anonunion____missing_field_name_195 {
   time_t expiry ;
   time_t revoked_at ;
};
#line 123 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/key.h"
struct __anonstruct____missing_field_name_197 {
   struct key_type *type ;
   char *description ;
};
#line 123 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/key.h"
union __anonunion____missing_field_name_196 {
   struct keyring_index_key index_key ;
   struct __anonstruct____missing_field_name_197 __annonCompField66 ;
};
#line 123 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/key.h"
union __anonunion_type_data_198 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};
#line 123 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/key.h"
union __anonunion_payload_200 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};
#line 123 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/key.h"
union __anonunion____missing_field_name_199 {
   union __anonunion_payload_200 payload ;
   struct assoc_array keys ;
};
#line 123 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion____missing_field_name_194 __annonCompField64 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion____missing_field_name_195 __annonCompField65 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion____missing_field_name_196 __annonCompField67 ;
   union __anonunion_type_data_198 type_data ;
   union __anonunion____missing_field_name_199 __annonCompField68 ;
};
#line 356
struct audit_context;
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};
#line 78 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};
#line 125 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/sched.h"
struct futex_pi_state;
#line 126
struct robust_list_head;
#line 127
struct bio_list;
#line 128
struct fs_struct;
#line 129
struct perf_event_context;
#line 130
struct blk_plug;
#line 180
struct cfs_rq;
#line 181
struct task_group;
#line 426 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};
#line 465 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};
#line 473 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};
#line 480 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};
#line 492 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};
#line 512 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime cputime ;
   int running ;
   raw_spinlock_t lock ;
};
#line 554
struct autogroup;
#line 555
struct tty_struct;
#line 555
struct taskstats;
#line 555
struct tty_audit_buf;
#line 555 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int is_child_subreaper : 1 ;
   unsigned int has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};
#line 735 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};
#line 778
struct reclaim_state;
#line 779 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};
#line 794 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   struct timespec blkio_start ;
   struct timespec blkio_end ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   struct timespec freepages_start ;
   struct timespec freepages_end ;
   u64 freepages_delay ;
   u32 freepages_count ;
};
#line 1061 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};
#line 1069 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/sched.h"
struct sched_avg {
   u32 runnable_avg_sum ;
   u32 runnable_avg_period ;
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
};
#line 1081 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};
#line 1116 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};
#line 1148
struct rt_rq;
#line 1148 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};
#line 1164 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};
#line 1222 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/sched.h"
struct memcg_batch_info {
   int do_batch ;
   struct mem_cgroup *memcg ;
   unsigned long nr_pages ;
   unsigned long memsw_nr_pages ;
};
#line 1643 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int may_oom : 1 ;
};
#line 1650
struct sched_class;
#line 1650
struct css_set;
#line 1650
struct compat_robust_list_head;
#line 1650
struct numa_group;
#line 1650
struct ftrace_ret_stack;
#line 1650 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/sched.h"
struct task_struct {
   long volatile   state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class  const  *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   unsigned int brk_randomized : 1 ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned int jobctl ;
   unsigned int personality ;
   unsigned int in_execve : 1 ;
   unsigned int in_iowait : 1 ;
   unsigned int no_new_privs : 1 ;
   unsigned int sched_reset_on_fork : 1 ;
   unsigned int sched_contributes_to_load : 1 ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   struct timespec start_time ;
   struct timespec real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred  const  *real_cred ;
   struct cred  const  *cred ;
   char comm[16U] ;
   int link_count ;
   int total_link_count ;
   struct sysv_sem sysvsem ;
   unsigned long last_switch_count ;
   struct thread_struct thread ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void * ) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct task_struct *pi_top_task ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults_memory ;
   unsigned long total_numa_faults ;
   unsigned long *numa_faults_buffer_memory ;
   unsigned long *numa_faults_cpu ;
   unsigned long *numa_faults_buffer_cpu ;
   unsigned long numa_faults_locality[2U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_batch_info memcg_batch ;
   unsigned int memcg_kmem_skip_account ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
};
#line 2998
struct usb_device;
#line 3000
struct wusb_dev;
#line 3001
struct ep_device;
#line 3002 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/sched.h"
struct usb_host_endpoint {
   struct usb_endpoint_descriptor desc ;
   struct usb_ss_ep_comp_descriptor ss_ep_comp ;
   struct list_head urb_list ;
   void *hcpriv ;
   struct ep_device *ep_dev ;
   unsigned char *extra ;
   int extralen ;
   int enabled ;
   int streams ;
};
#line 77 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/usb.h"
struct usb_host_interface {
   struct usb_interface_descriptor desc ;
   int extralen ;
   unsigned char *extra ;
   struct usb_host_endpoint *endpoint ;
   char *string ;
};
#line 92
enum usb_interface_condition {
    USB_INTERFACE_UNBOUND = 0,
    USB_INTERFACE_BINDING = 1,
    USB_INTERFACE_BOUND = 2,
    USB_INTERFACE_UNBINDING = 3
} ;
#line 99 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/usb.h"
struct usb_interface {
   struct usb_host_interface *altsetting ;
   struct usb_host_interface *cur_altsetting ;
   unsigned int num_altsetting ;
   struct usb_interface_assoc_descriptor *intf_assoc ;
   int minor ;
   enum usb_interface_condition condition ;
   unsigned int sysfs_files_created : 1 ;
   unsigned int ep_devs_created : 1 ;
   unsigned int unregistering : 1 ;
   unsigned int needs_remote_wakeup : 1 ;
   unsigned int needs_altsetting0 : 1 ;
   unsigned int needs_binding : 1 ;
   unsigned int reset_running : 1 ;
   unsigned int resetting_device : 1 ;
   struct device dev ;
   struct device *usb_dev ;
   atomic_t pm_usage_cnt ;
   struct work_struct reset_ws ;
};
#line 206 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/usb.h"
struct usb_interface_cache {
   unsigned int num_altsetting ;
   struct kref ref ;
   struct usb_host_interface altsetting[0U] ;
};
#line 235 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/usb.h"
struct usb_host_config {
   struct usb_config_descriptor desc ;
   char *string ;
   struct usb_interface_assoc_descriptor *intf_assoc[16U] ;
   struct usb_interface *interface[32U] ;
   struct usb_interface_cache *intf_cache[32U] ;
   unsigned char *extra ;
   int extralen ;
};
#line 299 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/usb.h"
struct usb_host_bos {
   struct usb_bos_descriptor *desc ;
   struct usb_ext_cap_descriptor *ext_cap ;
   struct usb_ss_cap_descriptor *ss_cap ;
   struct usb_ss_container_id_descriptor *ss_id ;
};
#line 311 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/usb.h"
struct usb_devmap {
   unsigned long devicemap[2U] ;
};
#line 323
struct mon_bus;
#line 323 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/usb.h"
struct usb_bus {
   struct device *controller ;
   int busnum ;
   char const   *bus_name ;
   u8 uses_dma ;
   u8 uses_pio_for_control ;
   u8 otg_port ;
   unsigned int is_b_host : 1 ;
   unsigned int b_hnp_enable : 1 ;
   unsigned int no_stop_on_short : 1 ;
   unsigned int no_sg_constraint : 1 ;
   unsigned int sg_tablesize ;
   int devnum_next ;
   struct usb_devmap devmap ;
   struct usb_device *root_hub ;
   struct usb_bus *hs_companion ;
   struct list_head bus_list ;
   struct mutex usb_address0_mutex ;
   int bandwidth_allocated ;
   int bandwidth_int_reqs ;
   int bandwidth_isoc_reqs ;
   unsigned int resuming_ports ;
   struct mon_bus *mon_bus ;
   int monitored ;
};
#line 374
struct usb_tt;
#line 375
enum usb_device_removable {
    USB_DEVICE_REMOVABLE_UNKNOWN = 0,
    USB_DEVICE_REMOVABLE = 1,
    USB_DEVICE_FIXED = 2
} ;
#line 388 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/usb.h"
struct usb2_lpm_parameters {
   unsigned int besl ;
   int timeout ;
};
#line 409 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/usb.h"
struct usb3_lpm_parameters {
   unsigned int mel ;
   unsigned int pel ;
   unsigned int sel ;
   int timeout ;
};
#line 448 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/usb.h"
struct usb_device {
   int devnum ;
   char devpath[16U] ;
   u32 route ;
   enum usb_device_state state ;
   enum usb_device_speed speed ;
   struct usb_tt *tt ;
   int ttport ;
   unsigned int toggle[2U] ;
   struct usb_device *parent ;
   struct usb_bus *bus ;
   struct usb_host_endpoint ep0 ;
   struct device dev ;
   struct usb_device_descriptor descriptor ;
   struct usb_host_bos *bos ;
   struct usb_host_config *config ;
   struct usb_host_config *actconfig ;
   struct usb_host_endpoint *ep_in[16U] ;
   struct usb_host_endpoint *ep_out[16U] ;
   char **rawdescriptors ;
   unsigned short bus_mA ;
   u8 portnum ;
   u8 level ;
   unsigned int can_submit : 1 ;
   unsigned int persist_enabled : 1 ;
   unsigned int have_langid : 1 ;
   unsigned int authorized : 1 ;
   unsigned int authenticated : 1 ;
   unsigned int wusb : 1 ;
   unsigned int lpm_capable : 1 ;
   unsigned int usb2_hw_lpm_capable : 1 ;
   unsigned int usb2_hw_lpm_besl_capable : 1 ;
   unsigned int usb2_hw_lpm_enabled : 1 ;
   unsigned int usb2_hw_lpm_allowed : 1 ;
   unsigned int usb3_lpm_enabled : 1 ;
   int string_langid ;
   char *product ;
   char *manufacturer ;
   char *serial ;
   struct list_head filelist ;
   int maxchild ;
   u32 quirks ;
   atomic_t urbnum ;
   unsigned long active_duration ;
   unsigned long connect_time ;
   unsigned int do_remote_wakeup : 1 ;
   unsigned int reset_resume : 1 ;
   unsigned int port_is_suspended : 1 ;
   struct wusb_dev *wusb_dev ;
   int slot_id ;
   enum usb_device_removable removable ;
   struct usb2_lpm_parameters l1_params ;
   struct usb3_lpm_parameters u1_params ;
   struct usb3_lpm_parameters u2_params ;
   unsigned int lpm_disable_count ;
};
#line 1873
enum usb_phy_events {
    USB_EVENT_NONE = 0,
    USB_EVENT_VBUS = 1,
    USB_EVENT_ID = 2,
    USB_EVENT_CHARGER = 3,
    USB_EVENT_ENUMERATED = 4
} ;
#line 1881
enum usb_phy_type {
    USB_PHY_TYPE_UNDEFINED = 0,
    USB_PHY_TYPE_USB2 = 1,
    USB_PHY_TYPE_USB3 = 2
} ;
#line 1887
enum usb_otg_state {
    OTG_STATE_UNDEFINED = 0,
    OTG_STATE_B_IDLE = 1,
    OTG_STATE_B_SRP_INIT = 2,
    OTG_STATE_B_PERIPHERAL = 3,
    OTG_STATE_B_WAIT_ACON = 4,
    OTG_STATE_B_HOST = 5,
    OTG_STATE_A_IDLE = 6,
    OTG_STATE_A_WAIT_VRISE = 7,
    OTG_STATE_A_WAIT_BCON = 8,
    OTG_STATE_A_HOST = 9,
    OTG_STATE_A_SUSPEND = 10,
    OTG_STATE_A_PERIPHERAL = 11,
    OTG_STATE_A_WAIT_VFALL = 12,
    OTG_STATE_A_VBUS_ERR = 13
} ;
#line 1904
struct usb_phy;
#line 1905
struct usb_otg;
#line 1906 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/usb.h"
struct usb_phy_io_ops {
   int (*read)(struct usb_phy * , u32  ) ;
   int (*write)(struct usb_phy * , u32  , u32  ) ;
};
#line 73 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/usb/phy.h"
struct usb_phy {
   struct device *dev ;
   char const   *label ;
   unsigned int flags ;
   enum usb_phy_type type ;
   enum usb_otg_state state ;
   enum usb_phy_events last_event ;
   struct usb_otg *otg ;
   struct device *io_dev ;
   struct usb_phy_io_ops *io_ops ;
   void *io_priv ;
   struct atomic_notifier_head notifier ;
   u16 port_status ;
   u16 port_change ;
   struct list_head head ;
   int (*init)(struct usb_phy * ) ;
   void (*shutdown)(struct usb_phy * ) ;
   int (*set_vbus)(struct usb_phy * , int  ) ;
   int (*set_power)(struct usb_phy * , unsigned int  ) ;
   int (*set_suspend)(struct usb_phy * , int  ) ;
   int (*set_wakeup)(struct usb_phy * , bool  ) ;
   int (*notify_connect)(struct usb_phy * , enum usb_device_speed  ) ;
   int (*notify_disconnect)(struct usb_phy * , enum usb_device_speed  ) ;
};
#line 325
enum s3c_hsotg_dmamode {
    S3C_HSOTG_DMA_NONE = 0,
    S3C_HSOTG_DMA_ONLY = 1,
    S3C_HSOTG_DMA_DRV = 2
} ;
#line 331 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/usb/phy.h"
struct s3c_hsotg_plat {
   enum s3c_hsotg_dmamode dma ;
   unsigned int is_osc : 1 ;
   int phy_type ;
   int (*phy_init)(struct platform_device * , int  ) ;
   int (*phy_exit)(struct platform_device * , int  ) ;
};
#line 41 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/platform_data/s3c-hsotg.h"
struct usb_otg {
   u8 default_a ;
   struct usb_phy *phy ;
   struct usb_bus *host ;
   struct usb_gadget *gadget ;
   int (*set_host)(struct usb_otg * , struct usb_bus * ) ;
   int (*set_peripheral)(struct usb_otg * , struct usb_gadget * ) ;
   int (*set_vbus)(struct usb_otg * , bool  ) ;
   int (*start_srp)(struct usb_otg * ) ;
   int (*start_hnp)(struct usb_otg * ) ;
};
#line 65 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/core.h"
struct s3c_hsotg;
#line 66
struct s3c_hsotg_req;
#line 67 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/core.h"
struct s3c_hsotg_ep {
   struct usb_ep ep ;
   struct list_head queue ;
   struct s3c_hsotg *parent ;
   struct s3c_hsotg_req *req ;
   struct dentry *debugfs ;
   unsigned long total_data ;
   unsigned int size_loaded ;
   unsigned int last_load ;
   unsigned int fifo_load ;
   unsigned short fifo_size ;
   unsigned char dir_in ;
   unsigned char index ;
   unsigned char mc ;
   unsigned char interval ;
   unsigned int halted : 1 ;
   unsigned int periodic : 1 ;
   unsigned int isochronous : 1 ;
   unsigned int sent_zlp : 1 ;
   char name[10U] ;
};
#line 155 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/core.h"
struct s3c_hsotg {
   struct device *dev ;
   struct usb_gadget_driver *driver ;
   struct phy *phy ;
   struct usb_phy *uphy ;
   struct s3c_hsotg_plat *plat ;
   spinlock_t lock ;
   void *regs ;
   int irq ;
   struct clk *clk ;
   struct regulator_bulk_data supplies[2U] ;
   u32 phyif ;
   unsigned int dedicated_fifos : 1 ;
   unsigned char num_of_eps ;
   struct dentry *debug_root ;
   struct dentry *debug_file ;
   struct dentry *debug_fifo ;
   struct usb_request *ep0_reply ;
   struct usb_request *ctrl_req ;
   u8 ep0_buff[8U] ;
   u8 ctrl_buff[8U] ;
   struct usb_gadget gadget ;
   unsigned int setup ;
   unsigned long last_rst ;
   struct s3c_hsotg_ep *eps ;
};
#line 214 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/core.h"
struct s3c_hsotg_req {
   struct usb_request req ;
   struct list_head queue ;
   unsigned char in_progress ;
   unsigned char mapped ;
};
#line 3668 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
struct ldv_struct_platform_instance_5 {
   struct platform_driver *arg0 ;
   int signal_pending ;
};
#line 40 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};
#line 255 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/timer.h"
enum hrtimer_restart;
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/kthread.h"
struct kthread_work;
#line 65 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};
#line 72 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work * ) ;
   wait_queue_head_t done ;
   struct kthread_worker *worker ;
};
#line 351 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/scatterlist.h"
struct dma_chan;
#line 36 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/spi/spi.h"
struct spi_master;
#line 36 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};
#line 155
struct spi_message;
#line 156
struct spi_transfer;
#line 213 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device * ) ;
   int (*transfer)(struct spi_device * , struct spi_message * ) ;
   void (*cleanup)(struct spi_device * ) ;
   bool (*can_dma)(struct spi_master * , struct spi_device * , struct spi_transfer * ) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master * ) ;
   int (*transfer_one_message)(struct spi_master * , struct spi_message * ) ;
   int (*unprepare_transfer_hardware)(struct spi_master * ) ;
   int (*prepare_message)(struct spi_master * , struct spi_message * ) ;
   int (*unprepare_message)(struct spi_master * , struct spi_message * ) ;
   void (*set_cs)(struct spi_device * , bool  ) ;
   int (*transfer_one)(struct spi_master * , struct spi_device * , struct spi_transfer * ) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};
#line 502 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/spi/spi.h"
struct spi_transfer {
   void const   *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int cs_change : 1 ;
   unsigned int tx_nbits : 3 ;
   unsigned int rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};
#line 626 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int is_dma_mapped : 1 ;
   void (*complete)(void * ) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};
#line 1 "<compiler builtins>"
long __builtin_expect(long exp , long c ) ;
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/linux/ldv/err.h"
long ldv_ptr_err(void const   *ptr ) ;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size , gfp_t flags ) ;
#line 25
void *ldv_kcalloc(size_t n , size_t size , gfp_t flags ) ;
#line 16 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_clk_disable_clk_of_s3c_hsotg(struct clk *clk ) ;
#line 17
int ldv_clk_enable_clk_of_s3c_hsotg(void) ;
#line 62 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/linux/ldv/common.h"
extern void ldv_initialize(void) ;
#line 76
extern void ldv_check_final_state(void) ;
#line 113
int ldv_post_init(int init_ret_val ) ;
#line 124
extern void ldv_pre_probe(void) ;
#line 133
int ldv_post_probe(int probe_ret_val ) ;
#line 141
int ldv_filter_err_code(int ret_val ) ;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/common.h"
extern void __VERIFIER_assume(int  ) ;
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/nondet.h"
int ldv_undef_int(void) ;
#line 33
int ldv_undef_int_negative(void) ;
#line 26 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/memory.h"
void ldv_free(void *s ) ;
#line 28
void *ldv_xmalloc(size_t size ) ;
#line 41
void *ldv_xmalloc_unknown_size(size_t size ) ;
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/list.h"
__inline static void INIT_LIST_HEAD(struct list_head *list ) 
{ 


  {
#line 26
  list->next = list;
#line 27
  list->prev = list;
#line 28
  return;
}
}
#line 47
extern void __list_add(struct list_head * , struct list_head * , struct list_head * ) ;
#line 74 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/list.h"
__inline static void list_add_tail(struct list_head *new , struct list_head *head ) 
{ 


  {
  {
#line 76
  __list_add(new, head->prev, head);
  }
#line 77
  return;
}
}
#line 111
extern void __list_del_entry(struct list_head * ) ;
#line 142 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/list.h"
__inline static void list_del_init(struct list_head *entry ) 
{ 


  {
  {
#line 144
  __list_del_entry(entry);
#line 145
  INIT_LIST_HEAD(entry);
  }
#line 146
  return;
}
}
#line 186 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/list.h"
__inline static int list_empty(struct list_head  const  *head ) 
{ 


  {
#line 188
  return ((unsigned long )((struct list_head  const  *)head->next) == (unsigned long )head);
}
}
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/export.h"
extern struct module __this_module ;
#line 358 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/paravirt_types.h"
extern struct pv_irq_ops pv_irq_ops ;
#line 139 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/printk.h"
extern int printk(char const   *  , ...) ;
#line 53 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/dynamic_debug.h"
extern int __dynamic_dev_dbg(struct _ddebug * , struct device  const  * , char const   * 
                             , ...) ;
#line 391 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/kernel.h"
extern int snprintf(char * , size_t  , char const   *  , ...) ;
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/err.h"
__inline static long PTR_ERR(void const   *ptr ) ;
#line 41 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/err.h"
__inline static bool IS_ERR(void const   *ptr ) 
{ 
  long tmp ;

  {
  {
#line 43
  tmp = __builtin_expect((unsigned long )ptr > 0xfffffffffffff000UL, 0L);
  }
#line 43
  return (tmp != 0L);
}
}
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/string_64.h"
extern void *memcpy(void * , void const   * , size_t  ) ;
#line 71 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/asm-generic/bug.h"
extern void warn_slowpath_null(char const   * , int const    ) ;
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/paravirt.h"
extern int ( /* missing proto */  __builtin_unreachable)() ;
#line 802 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/paravirt.h"
__inline static unsigned long arch_local_save_flags(void) 
{ 
  unsigned long __ret ;
  unsigned long __edi ;
  unsigned long __esi ;
  unsigned long __edx ;
  unsigned long __ecx ;
  unsigned long __eax ;
  long tmp ;

  {
  {
#line 804
  __edi = __edi;
#line 804
  __esi = __esi;
#line 804
  __edx = __edx;
#line 804
  __ecx = __ecx;
#line 804
  __eax = __eax;
#line 804
  tmp = __builtin_expect((unsigned long )pv_irq_ops.save_fl.func == (unsigned long )((void *)0),
                         0L);
  }
#line 804
  if (tmp != 0L) {
    {
#line 804
    __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"./arch/x86/include/asm/paravirt.h"),
                         "i" (804), "i" (12UL));
#line 804
    __builtin_unreachable();
    }
  } else {

  }
#line 804
  __asm__  volatile   ("771:\n\tcall *%c2;\n772:\n.pushsection .parainstructions,\"a\"\n .balign 8 \n .quad  771b\n  .byte %c1\n  .byte 772b-771b\n  .short %c3\n.popsection\n": "=a" (__eax): [paravirt_typenum] "i" (44UL),
                       [paravirt_opptr] "i" (& pv_irq_ops.save_fl.func), [paravirt_clobber] "i" (1): "memory",
                       "cc");
#line 804
  __ret = __eax;
#line 804
  return (__ret);
}
}
#line 807 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/paravirt.h"
__inline static void arch_local_irq_restore(unsigned long f ) 
{ 
  unsigned long __edi ;
  unsigned long __esi ;
  unsigned long __edx ;
  unsigned long __ecx ;
  unsigned long __eax ;
  long tmp ;

  {
  {
#line 809
  __edi = __edi;
#line 809
  __esi = __esi;
#line 809
  __edx = __edx;
#line 809
  __ecx = __ecx;
#line 809
  __eax = __eax;
#line 809
  tmp = __builtin_expect((unsigned long )pv_irq_ops.restore_fl.func == (unsigned long )((void *)0),
                         0L);
  }
#line 809
  if (tmp != 0L) {
    {
#line 809
    __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"./arch/x86/include/asm/paravirt.h"),
                         "i" (809), "i" (12UL));
#line 809
    __builtin_unreachable();
    }
  } else {

  }
#line 809
  __asm__  volatile   ("771:\n\tcall *%c2;\n772:\n.pushsection .parainstructions,\"a\"\n .balign 8 \n .quad  771b\n  .byte %c1\n  .byte 772b-771b\n  .short %c3\n.popsection\n": "=a" (__eax): [paravirt_typenum] "i" (45UL),
                       [paravirt_opptr] "i" (& pv_irq_ops.restore_fl.func), [paravirt_clobber] "i" (1),
                       "D" (f): "memory", "cc");
#line 811
  return;
}
}
#line 812 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/paravirt.h"
__inline static void arch_local_irq_disable(void) 
{ 
  unsigned long __edi ;
  unsigned long __esi ;
  unsigned long __edx ;
  unsigned long __ecx ;
  unsigned long __eax ;
  long tmp ;

  {
  {
#line 814
  __edi = __edi;
#line 814
  __esi = __esi;
#line 814
  __edx = __edx;
#line 814
  __ecx = __ecx;
#line 814
  __eax = __eax;
#line 814
  tmp = __builtin_expect((unsigned long )pv_irq_ops.irq_disable.func == (unsigned long )((void *)0),
                         0L);
  }
#line 814
  if (tmp != 0L) {
    {
#line 814
    __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"./arch/x86/include/asm/paravirt.h"),
                         "i" (814), "i" (12UL));
#line 814
    __builtin_unreachable();
    }
  } else {

  }
#line 814
  __asm__  volatile   ("771:\n\tcall *%c2;\n772:\n.pushsection .parainstructions,\"a\"\n .balign 8 \n .quad  771b\n  .byte %c1\n  .byte 772b-771b\n  .short %c3\n.popsection\n": "=a" (__eax): [paravirt_typenum] "i" (46UL),
                       [paravirt_opptr] "i" (& pv_irq_ops.irq_disable.func), [paravirt_clobber] "i" (1): "memory",
                       "cc");
#line 816
  return;
}
}
#line 822 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/paravirt.h"
__inline static unsigned long arch_local_irq_save(void) 
{ 
  unsigned long f ;

  {
  {
#line 826
  f = arch_local_save_flags();
#line 827
  arch_local_irq_disable();
  }
#line 828
  return (f);
}
}
#line 155 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/irqflags.h"
__inline static int arch_irqs_disabled_flags(unsigned long flags ) 
{ 


  {
#line 157
  return ((flags & 512UL) == 0UL);
}
}
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/irqflags.h"
extern void trace_hardirqs_on(void) ;
#line 21
extern void trace_hardirqs_off(void) ;
#line 93 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/spinlock.h"
extern void __raw_spin_lock_init(raw_spinlock_t * , char const   * , struct lock_class_key * ) ;
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/spinlock_api_smp.h"
extern void _raw_spin_lock(raw_spinlock_t * ) ;
#line 32
extern unsigned long _raw_spin_lock_irqsave(raw_spinlock_t * ) ;
#line 39
extern void _raw_spin_unlock(raw_spinlock_t * ) ;
#line 43
extern void _raw_spin_unlock_irqrestore(raw_spinlock_t * , unsigned long  ) ;
#line 290 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock ) 
{ 


  {
#line 292
  return (& lock->__annonCompField18.rlock);
}
}
#line 301 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/spinlock.h"
__inline static void spin_lock(spinlock_t *lock ) 
{ 


  {
  {
#line 303
  _raw_spin_lock(& lock->__annonCompField18.rlock);
  }
#line 304
  return;
}
}
#line 341 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/spinlock.h"
__inline static void spin_unlock(spinlock_t *lock ) 
{ 


  {
  {
#line 343
  _raw_spin_unlock(& lock->__annonCompField18.rlock);
  }
#line 344
  return;
}
}
#line 356 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/spinlock.h"
__inline static void spin_unlock_irqrestore(spinlock_t *lock , unsigned long flags ) 
{ 


  {
  {
#line 358
  _raw_spin_unlock_irqrestore(& lock->__annonCompField18.rlock, flags);
  }
#line 359
  return;
}
}
#line 77 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/jiffies.h"
extern unsigned long volatile   jiffies ;
#line 303
extern unsigned long msecs_to_jiffies(unsigned int const    ) ;
#line 86 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/kobject.h"
__inline static char const   *kobject_name(struct kobject  const  *kobj ) 
{ 


  {
#line 88
  return ((char const   *)kobj->name);
}
}
#line 99 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/seq_file.h"
extern ssize_t seq_read(struct file * , char * , size_t  , loff_t * ) ;
#line 100
extern loff_t seq_lseek(struct file * , loff_t  , int  ) ;
#line 104
extern int seq_puts(struct seq_file * , char const   * ) ;
#line 107
extern int seq_printf(struct seq_file * , char const   *  , ...) ;
#line 140
extern int single_open(struct file * , int (*)(struct seq_file * , void * ) , void * ) ;
#line 142
extern int single_release(struct inode * , struct file * ) ;
#line 56 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/io.h"
__inline static unsigned int readl(void const volatile   *addr ) 
{ 
  unsigned int ret ;

  {
#line 56
  __asm__  volatile   ("movl %1,%0": "=r" (ret): "m" (*((unsigned int volatile   *)addr)): "memory");
#line 56
  return (ret);
}
}
#line 64 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/arch/x86/include/asm/io.h"
__inline static void writel(unsigned int val , void volatile   *addr ) 
{ 


  {
#line 64
  __asm__  volatile   ("movl %0,%1": : "r" (val), "m" (*((unsigned int volatile   *)addr)): "memory");
#line 65
  return;
}
}
#line 53 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/asm-generic/iomap.h"
extern void ioread32_rep(void * , void * , unsigned long  ) ;
#line 57
extern void iowrite32_rep(void * , void const   * , unsigned long  ) ;
#line 607 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/device.h"
extern void *devm_kmalloc(struct device * , size_t  , gfp_t  ) ;
#line 608 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/device.h"
__inline static void *devm_kzalloc(struct device *dev , size_t size , gfp_t gfp ) 
{ 
  void *tmp ;

  {
  {
#line 610
  tmp = devm_kmalloc(dev, size, gfp | 32768U);
  }
#line 610
  return (tmp);
}
}
#line 633
extern void *devm_ioremap_resource(struct device * , struct resource * ) ;
#line 806 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/device.h"
__inline static char const   *dev_name(struct device  const  *dev ) 
{ 
  char const   *tmp ;

  {
#line 809
  if ((unsigned long )dev->init_name != (unsigned long )((char const   */* const  */)0)) {
#line 810
    return ((char const   *)dev->init_name);
  } else {

  }
  {
#line 812
  tmp = kobject_name(& dev->kobj);
  }
#line 812
  return (tmp);
}
}
#line 837 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device  const  *dev ) 
{ 


  {
#line 839
  return ((void *)dev->driver_data);
}
}
#line 842 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev , void *data ) 
{ 


  {
#line 844
  dev->driver_data = data;
#line 845
  return;
}
}
#line 954 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/device.h"
__inline static void *dev_get_platdata(struct device  const  *dev ) 
{ 


  {
#line 956
  return ((void *)dev->platform_data);
}
}
#line 1042
extern int dev_err(struct device  const  * , char const   *  , ...) ;
#line 1044
extern int dev_warn(struct device  const  * , char const   *  , ...) ;
#line 1048
extern int _dev_info(struct device  const  * , char const   *  , ...) ;
#line 50 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/platform_device.h"
extern struct resource *platform_get_resource(struct platform_device * , unsigned int  ,
                                              unsigned int  ) ;
#line 52
extern int platform_get_irq(struct platform_device * , unsigned int  ) ;
#line 196
static int ldv___platform_driver_register_12(struct platform_driver *ldv_func_arg1 ,
                                             struct module *ldv_func_arg2 ) ;
#line 201
static void ldv_platform_driver_unregister_13(struct platform_driver *ldv_func_arg1 ) ;
#line 210 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/platform_device.h"
__inline static void *platform_get_drvdata(struct platform_device  const  *pdev ) 
{ 
  void *tmp ;

  {
  {
#line 212
  tmp = dev_get_drvdata(& pdev->dev);
  }
#line 212
  return (tmp);
}
}
#line 215 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/platform_device.h"
__inline static void platform_set_drvdata(struct platform_device *pdev , void *data ) 
{ 


  {
  {
#line 218
  dev_set_drvdata(& pdev->dev, data);
  }
#line 219
  return;
}
}
#line 148 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/interrupt.h"
extern int devm_request_threaded_irq(struct device * , unsigned int  , irqreturn_t (*)(int  ,
                                                                                       void * ) ,
                                     irqreturn_t (*)(int  , void * ) , unsigned long  ,
                                     char const   * , void * ) ;
#line 154 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/interrupt.h"
__inline static int devm_request_irq(struct device *dev , unsigned int irq , irqreturn_t (*handler)(int  ,
                                                                                                    void * ) ,
                                     unsigned long irqflags , char const   *devname ,
                                     void *dev_id ) 
{ 
  int tmp ;

  {
  {
#line 157
  tmp = devm_request_threaded_irq(dev, irq, handler, (irqreturn_t (*)(int  , void * ))0,
                                  irqflags, devname, dev_id);
  }
#line 157
  return (tmp);
}
}
#line 49 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/debugfs.h"
extern struct dentry *debugfs_create_file(char const   * , umode_t  , struct dentry * ,
                                          void * , struct file_operations  const  * ) ;
#line 53
extern struct dentry *debugfs_create_dir(char const   * , struct dentry * ) ;
#line 58
extern void debugfs_remove(struct dentry * ) ;
#line 10 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/asm-generic/delay.h"
extern void __const_udelay(unsigned long  ) ;
#line 144 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/slab.h"
extern void kfree(void const   * ) ;
#line 576
__inline static void *kcalloc(size_t n , size_t size , gfp_t flags ) ;
#line 637
__inline static void *kzalloc(size_t size , gfp_t flags ) ;
#line 190 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/clk.h"
extern struct clk *devm_clk_get(struct device * , char const   * ) ;
#line 379
__inline static int ldv_clk_prepare_enable_9(struct clk *clk ) ;
#line 395
__inline static void ldv_clk_disable_unprepare_10(struct clk *clk ) ;
#line 399
__inline static void ldv_clk_disable_unprepare_10(struct clk *clk ) ;
#line 186 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/regulator/consumer.h"
extern int devm_regulator_bulk_get(struct device * , int  , struct regulator_bulk_data * ) ;
#line 188
extern int regulator_bulk_enable(int  , struct regulator_bulk_data * ) ;
#line 190
extern int regulator_bulk_disable(int  , struct regulator_bulk_data * ) ;
#line 136 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/phy/phy.h"
extern int phy_init(struct phy * ) ;
#line 137
extern int phy_exit(struct phy * ) ;
#line 138
extern int phy_power_on(struct phy * ) ;
#line 139
extern int phy_power_off(struct phy * ) ;
#line 140 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/phy/phy.h"
__inline static int phy_get_bus_width(struct phy *phy ) 
{ 


  {
#line 142
  return ((int )phy->attrs.bus_width);
}
}
#line 150
extern struct phy *devm_phy_get(struct device * , char const   * ) ;
#line 603 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/uapi/linux/usb/ch9.h"
__inline static int usb_endpoint_maxp(struct usb_endpoint_descriptor  const  *epd ) 
{ 


  {
#line 605
  return ((int )epd->wMaxPacketSize);
}
}
#line 44 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/usb/ch9.h"
extern char const   *usb_speed_string(enum usb_device_speed  ) ;
#line 196 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/usb/gadget.h"
__inline static void usb_ep_set_maxpacket_limit(struct usb_ep *ep , unsigned int maxpacket_limit ) 
{ 


  {
#line 199
  ep->maxpacket_limit = (unsigned short )maxpacket_limit;
#line 200
  ep->maxpacket = (unsigned short )maxpacket_limit;
#line 201
  return;
}
}
#line 918
extern int usb_gadget_unregister_driver(struct usb_gadget_driver * ) ;
#line 922
extern int usb_add_gadget_udc(struct device * , struct usb_gadget * ) ;
#line 923
extern void usb_del_gadget_udc(struct usb_gadget * ) ;
#line 1001
extern int usb_gadget_map_request(struct usb_gadget * , struct usb_request * , int  ) ;
#line 1004
extern void usb_gadget_unmap_request(struct usb_gadget * , struct usb_request * ,
                                     int  ) ;
#line 167 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/usb/phy.h"
__inline static int usb_phy_init(struct usb_phy *x ) 
{ 
  int tmp ;

  {
#line 169
  if ((unsigned long )x != (unsigned long )((struct usb_phy *)0) && (unsigned long )x->init != (unsigned long )((int (*)(struct usb_phy * ))0)) {
    {
#line 170
    tmp = (*(x->init))(x);
    }
#line 170
    return (tmp);
  } else {

  }
#line 172
  return (0);
}
}
#line 176 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/include/linux/usb/phy.h"
__inline static void usb_phy_shutdown(struct usb_phy *x ) 
{ 


  {
#line 178
  if ((unsigned long )x != (unsigned long )((struct usb_phy *)0) && (unsigned long )x->shutdown != (unsigned long )((void (*)(struct usb_phy * ))0)) {
    {
#line 179
    (*(x->shutdown))(x);
    }
  } else {

  }
#line 180
  return;
}
}
#line 203
extern struct usb_phy *devm_usb_get_phy(struct device * , enum usb_phy_type  ) ;
#line 62 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/core.h"
static char const   * const  s3c_hsotg_supply_names[2U]  = {      "vusb_d",      "vusb_a"};
#line 43 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
__inline static struct s3c_hsotg_req *our_req(struct usb_request *req ) 
{ 
  struct usb_request  const  *__mptr ;

  {
#line 45
  __mptr = (struct usb_request  const  *)req;
#line 45
  return ((struct s3c_hsotg_req *)__mptr);
}
}
#line 48 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
__inline static struct s3c_hsotg_ep *our_ep(struct usb_ep *ep ) 
{ 
  struct usb_ep  const  *__mptr ;

  {
#line 50
  __mptr = (struct usb_ep  const  *)ep;
#line 50
  return ((struct s3c_hsotg_ep *)__mptr);
}
}
#line 53 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
__inline static struct s3c_hsotg *to_hsotg(struct usb_gadget *gadget ) 
{ 
  struct usb_gadget  const  *__mptr ;

  {
#line 55
  __mptr = (struct usb_gadget  const  *)gadget;
#line 55
  return ((struct s3c_hsotg *)((char *)__mptr + 0xffffffffffffff08UL));
}
}
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
__inline static void __orr32(void *ptr , u32 val ) 
{ 
  unsigned int tmp ;

  {
  {
#line 60
  tmp = readl((void const volatile   *)ptr);
#line 60
  writel(tmp | val, (void volatile   *)ptr);
  }
#line 61
  return;
}
}
#line 63 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
__inline static void __bic32(void *ptr , u32 val ) 
{ 
  unsigned int tmp ;

  {
  {
#line 65
  tmp = readl((void const volatile   *)ptr);
#line 65
  writel(tmp & ~ val, (void volatile   *)ptr);
  }
#line 66
  return;
}
}
#line 69
static void s3c_hsotg_dump(struct s3c_hsotg *hsotg ) ;
#line 90 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
__inline static bool using_dma(struct s3c_hsotg *hsotg ) 
{ 


  {
#line 92
  return (0);
}
}
#line 100 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_en_gsint(struct s3c_hsotg *hsotg , u32 ints ) 
{ 
  u32 gsintmsk ;
  unsigned int tmp ;
  u32 new_gsintmsk ;
  struct _ddebug descriptor ;
  long tmp___0 ;

  {
  {
#line 102
  tmp = readl((void const volatile   *)(hsotg->regs + 24UL));
#line 102
  gsintmsk = tmp;
#line 105
  new_gsintmsk = gsintmsk | ints;
  }
#line 107
  if (new_gsintmsk != gsintmsk) {
    {
#line 108
    descriptor.modname = "dwc2_gadget";
#line 108
    descriptor.function = "s3c_hsotg_en_gsint";
#line 108
    descriptor.filename = "drivers/usb/dwc2/gadget.c";
#line 108
    descriptor.format = "gsintmsk now 0x%08x\n";
#line 108
    descriptor.lineno = 108U;
#line 108
    descriptor.flags = 1U;
#line 108
    tmp___0 = __builtin_expect((long )descriptor.flags & 1L, 0L);
    }
#line 108
    if (tmp___0 != 0L) {
      {
#line 108
      __dynamic_dev_dbg(& descriptor, (struct device  const  *)hsotg->dev, "gsintmsk now 0x%08x\n",
                        new_gsintmsk);
      }
    } else {

    }
    {
#line 109
    writel(new_gsintmsk, (void volatile   *)(hsotg->regs + 24UL));
    }
  } else {

  }
#line 111
  return;
}
}
#line 118 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_disable_gsint(struct s3c_hsotg *hsotg , u32 ints ) 
{ 
  u32 gsintmsk ;
  unsigned int tmp ;
  u32 new_gsintmsk ;

  {
  {
#line 120
  tmp = readl((void const volatile   *)(hsotg->regs + 24UL));
#line 120
  gsintmsk = tmp;
#line 123
  new_gsintmsk = gsintmsk & ~ ints;
  }
#line 125
  if (new_gsintmsk != gsintmsk) {
    {
#line 126
    writel(new_gsintmsk, (void volatile   *)(hsotg->regs + 24UL));
    }
  } else {

  }
#line 127
  return;
}
}
#line 139 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_ctrl_epint(struct s3c_hsotg *hsotg , unsigned int ep , unsigned int dir_in ,
                                 unsigned int en ) 
{ 
  unsigned long flags ;
  u32 bit ;
  u32 daint ;
  int tmp ;

  {
#line 144
  bit = (u32 )(1 << (int )ep);
#line 147
  if (dir_in == 0U) {
#line 148
    bit = bit << 16;
  } else {

  }
  {
#line 150
  flags = arch_local_irq_save();
#line 150
  trace_hardirqs_off();
#line 151
  daint = readl((void const volatile   *)(hsotg->regs + 2076UL));
  }
#line 152
  if (en != 0U) {
#line 153
    daint = daint | bit;
  } else {
#line 155
    daint = daint & ~ bit;
  }
  {
#line 156
  writel(daint, (void volatile   *)(hsotg->regs + 2076UL));
#line 157
  tmp = arch_irqs_disabled_flags(flags);
  }
#line 157
  if (tmp != 0) {
    {
#line 157
    arch_local_irq_restore(flags);
#line 157
    trace_hardirqs_off();
    }
  } else {
    {
#line 157
    trace_hardirqs_on();
#line 157
    arch_local_irq_restore(flags);
    }
  }
#line 159
  return;
}
}
#line 164 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_init_fifo(struct s3c_hsotg *hsotg ) 
{ 
  unsigned int ep ;
  unsigned int addr ;
  unsigned int size ;
  int timeout ;
  u32 val ;
  struct _ddebug descriptor ;
  long tmp ;

  {
  {
#line 174
  writel(2048U, (void volatile   *)(hsotg->regs + 36UL));
#line 175
  writel(67110912U, (void volatile   *)(hsotg->regs + 40UL));
#line 186
  addr = 3072U;
#line 187
  size = 768U;
#line 194
  ep = 1U;
  }
#line 194
  goto ldv_33282;
  ldv_33281: 
  {
#line 195
  val = addr;
#line 196
  val = val | (size << 16);
#line 197
  addr = addr + size;
#line 199
  writel(val, (void volatile   *)(hsotg->regs + (unsigned long )((ep + 64U) * 4U)));
#line 194
  ep = ep + 1U;
  }
  ldv_33282: ;
#line 194
  if (ep <= 15U) {
#line 196
    goto ldv_33281;
  } else {

  }
  {
#line 207
  writel(1072U, (void volatile   *)(hsotg->regs + 16UL));
#line 211
  timeout = 100;
  }
  ldv_33286: 
  {
#line 213
  val = readl((void const volatile   *)(hsotg->regs + 16UL));
  }
#line 215
  if ((val & 48U) == 0U) {
#line 216
    goto ldv_33284;
  } else {

  }
#line 218
  timeout = timeout - 1;
#line 218
  if (timeout == 0) {
    {
#line 219
    dev_err((struct device  const  *)hsotg->dev, "%s: timeout flushing fifos (GRSTCTL=%08x)\n",
            "s3c_hsotg_init_fifo", val);
    }
  } else {

  }
  {
#line 224
  __const_udelay(4295UL);
  }
#line 225
  goto ldv_33286;
  ldv_33284: 
  {
#line 227
  descriptor.modname = "dwc2_gadget";
#line 227
  descriptor.function = "s3c_hsotg_init_fifo";
#line 227
  descriptor.filename = "drivers/usb/dwc2/gadget.c";
#line 227
  descriptor.format = "FIFOs reset, timeout at %d\n";
#line 227
  descriptor.lineno = 227U;
#line 227
  descriptor.flags = 1U;
#line 227
  tmp = __builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 227
  if (tmp != 0L) {
    {
#line 227
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)hsotg->dev, "FIFOs reset, timeout at %d\n",
                      timeout);
    }
  } else {

  }
#line 229
  return;
}
}
#line 236 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static struct usb_request *s3c_hsotg_ep_alloc_request(struct usb_ep *ep , gfp_t flags ) 
{ 
  struct s3c_hsotg_req *req ;
  void *tmp ;

  {
  {
#line 241
  tmp = kzalloc(112UL, flags);
#line 241
  req = (struct s3c_hsotg_req *)tmp;
  }
#line 242
  if ((unsigned long )req == (unsigned long )((struct s3c_hsotg_req *)0)) {
#line 243
    return ((struct usb_request *)0);
  } else {

  }
  {
#line 245
  INIT_LIST_HEAD(& req->queue);
  }
#line 247
  return (& req->req);
}
}
#line 257 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
__inline static int is_ep_periodic(struct s3c_hsotg_ep *hs_ep ) 
{ 


  {
#line 259
  return ((int )hs_ep->periodic);
}
}
#line 271 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_unmap_dma(struct s3c_hsotg *hsotg , struct s3c_hsotg_ep *hs_ep ,
                                struct s3c_hsotg_req *hs_req ) 
{ 
  struct usb_request *req ;

  {
#line 275
  req = & hs_req->req;
#line 278
  if (hs_req->req.length == 0U) {
#line 279
    return;
  } else {

  }
  {
#line 281
  usb_gadget_unmap_request(& hsotg->gadget, req, (int )hs_ep->dir_in);
  }
#line 282
  return;
}
}
#line 300 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static int s3c_hsotg_write_fifo(struct s3c_hsotg *hsotg , struct s3c_hsotg_ep *hs_ep ,
                                struct s3c_hsotg_req *hs_req ) 
{ 
  bool periodic ;
  int tmp ;
  u32 gnptxsts ;
  unsigned int tmp___0 ;
  int buf_pos ;
  int to_write ;
  void *data ;
  int can_write ;
  int pkt_round ;
  int max_transfer ;
  u32 epsize ;
  unsigned int tmp___1 ;
  int size_left ;
  int size_done ;
  struct _ddebug descriptor ;
  long tmp___2 ;
  struct _ddebug descriptor___0 ;
  long tmp___3 ;
  struct _ddebug descriptor___1 ;
  long tmp___4 ;
  unsigned int tmp___5 ;
  struct _ddebug descriptor___2 ;
  long tmp___6 ;
  struct _ddebug descriptor___3 ;
  long tmp___7 ;
  struct _ddebug descriptor___4 ;
  long tmp___8 ;

  {
  {
#line 304
  tmp = is_ep_periodic(hs_ep);
#line 304
  periodic = tmp != 0;
#line 305
  tmp___0 = readl((void const volatile   *)(hsotg->regs + 44UL));
#line 305
  gnptxsts = tmp___0;
#line 306
  buf_pos = (int )hs_req->req.actual;
#line 307
  to_write = (int )hs_ep->size_loaded;
#line 313
  to_write = (int )((unsigned int )to_write + (hs_ep->last_load - (unsigned int )buf_pos));
  }
#line 316
  if (to_write == 0) {
#line 317
    return (0);
  } else {

  }
#line 319
  if ((int )periodic && (unsigned int )*((unsigned char *)hsotg + 188UL) == 0U) {
    {
#line 320
    tmp___1 = readl((void const volatile   *)(hsotg->regs + (unsigned long )((int )hs_ep->index * 32 + 2320)));
#line 320
    epsize = tmp___1;
#line 329
    size_left = (int )epsize & 524287;
    }
#line 335
    if (hs_ep->fifo_load != 0U) {
      {
#line 336
      s3c_hsotg_en_gsint(hsotg, 67108864U);
      }
#line 337
      return (-28);
    } else {

    }
    {
#line 340
    descriptor.modname = "dwc2_gadget";
#line 340
    descriptor.function = "s3c_hsotg_write_fifo";
#line 340
    descriptor.filename = "drivers/usb/dwc2/gadget.c";
#line 340
    descriptor.format = "%s: left=%d, load=%d, fifo=%d, size %d\n";
#line 340
    descriptor.lineno = 342U;
#line 340
    descriptor.flags = 1U;
#line 340
    tmp___2 = __builtin_expect((long )descriptor.flags & 1L, 0L);
    }
#line 340
    if (tmp___2 != 0L) {
      {
#line 340
      __dynamic_dev_dbg(& descriptor, (struct device  const  *)hsotg->dev, "%s: left=%d, load=%d, fifo=%d, size %d\n",
                        "s3c_hsotg_write_fifo", size_left, hs_ep->size_loaded, hs_ep->fifo_load,
                        (int )hs_ep->fifo_size);
      }
    } else {

    }
    {
#line 345
    size_done = (int )(hs_ep->size_loaded - (unsigned int )size_left);
#line 348
    can_write = (int )(hs_ep->fifo_load - (unsigned int )size_done);
#line 349
    descriptor___0.modname = "dwc2_gadget";
#line 349
    descriptor___0.function = "s3c_hsotg_write_fifo";
#line 349
    descriptor___0.filename = "drivers/usb/dwc2/gadget.c";
#line 349
    descriptor___0.format = "%s: => can_write1=%d\n";
#line 349
    descriptor___0.lineno = 350U;
#line 349
    descriptor___0.flags = 1U;
#line 349
    tmp___3 = __builtin_expect((long )descriptor___0.flags & 1L, 0L);
    }
#line 349
    if (tmp___3 != 0L) {
      {
#line 349
      __dynamic_dev_dbg(& descriptor___0, (struct device  const  *)hsotg->dev, "%s: => can_write1=%d\n",
                        "s3c_hsotg_write_fifo", can_write);
      }
    } else {

    }
    {
#line 352
    can_write = (int )hs_ep->fifo_size - can_write;
#line 353
    descriptor___1.modname = "dwc2_gadget";
#line 353
    descriptor___1.function = "s3c_hsotg_write_fifo";
#line 353
    descriptor___1.filename = "drivers/usb/dwc2/gadget.c";
#line 353
    descriptor___1.format = "%s: => can_write2=%d\n";
#line 353
    descriptor___1.lineno = 354U;
#line 353
    descriptor___1.flags = 1U;
#line 353
    tmp___4 = __builtin_expect((long )descriptor___1.flags & 1L, 0L);
    }
#line 353
    if (tmp___4 != 0L) {
      {
#line 353
      __dynamic_dev_dbg(& descriptor___1, (struct device  const  *)hsotg->dev, "%s: => can_write2=%d\n",
                        "s3c_hsotg_write_fifo", can_write);
      }
    } else {

    }
#line 356
    if (can_write <= 0) {
      {
#line 357
      s3c_hsotg_en_gsint(hsotg, 67108864U);
      }
#line 358
      return (-28);
    } else {

    }
  } else
#line 360
  if ((unsigned int )*((unsigned char *)hsotg + 188UL) != 0U && (unsigned int )hs_ep->index != 0U) {
    {
#line 361
    tmp___5 = readl((void const volatile   *)(hsotg->regs + (unsigned long )((int )hs_ep->index * 32 + 2328)));
#line 361
    can_write = (int )tmp___5;
#line 363
    can_write = can_write & 65535;
#line 364
    can_write = can_write * 4;
    }
  } else {
#line 366
    if (((gnptxsts >> 16) & 255U) == 0U) {
      {
#line 367
      descriptor___2.modname = "dwc2_gadget";
#line 367
      descriptor___2.function = "s3c_hsotg_write_fifo";
#line 367
      descriptor___2.filename = "drivers/usb/dwc2/gadget.c";
#line 367
      descriptor___2.format = "%s: no queue slots available (0x%08x)\n";
#line 367
      descriptor___2.lineno = 369U;
#line 367
      descriptor___2.flags = 1U;
#line 367
      tmp___6 = __builtin_expect((long )descriptor___2.flags & 1L, 0L);
      }
#line 367
      if (tmp___6 != 0L) {
        {
#line 367
        __dynamic_dev_dbg(& descriptor___2, (struct device  const  *)hsotg->dev, "%s: no queue slots available (0x%08x)\n",
                          "s3c_hsotg_write_fifo", gnptxsts);
        }
      } else {

      }
      {
#line 371
      s3c_hsotg_en_gsint(hsotg, 32U);
      }
#line 372
      return (-28);
    } else {

    }
#line 375
    can_write = (int )gnptxsts & 65535;
#line 376
    can_write = can_write * 4;
  }
  {
#line 379
  max_transfer = (int )hs_ep->ep.maxpacket * (int )hs_ep->mc;
#line 381
  descriptor___3.modname = "dwc2_gadget";
#line 381
  descriptor___3.function = "s3c_hsotg_write_fifo";
#line 381
  descriptor___3.filename = "drivers/usb/dwc2/gadget.c";
#line 381
  descriptor___3.format = "%s: GNPTXSTS=%08x, can=%d, to=%d, max_transfer %d\n";
#line 381
  descriptor___3.lineno = 382U;
#line 381
  descriptor___3.flags = 1U;
#line 381
  tmp___7 = __builtin_expect((long )descriptor___3.flags & 1L, 0L);
  }
#line 381
  if (tmp___7 != 0L) {
    {
#line 381
    __dynamic_dev_dbg(& descriptor___3, (struct device  const  *)hsotg->dev, "%s: GNPTXSTS=%08x, can=%d, to=%d, max_transfer %d\n",
                      "s3c_hsotg_write_fifo", gnptxsts, can_write, to_write, max_transfer);
    }
  } else {

  }
#line 389
  if (can_write > 512 && ! periodic) {
#line 390
    can_write = 512;
  } else {

  }
#line 397
  if (to_write > max_transfer) {
#line 398
    to_write = max_transfer;
#line 401
    if ((unsigned int )*((unsigned char *)hsotg + 188UL) == 0U) {
      {
#line 402
      s3c_hsotg_en_gsint(hsotg, (int )periodic ? 67108864U : 32U);
      }
    } else {

    }
  } else {

  }
#line 409
  if (to_write > can_write) {
#line 410
    to_write = can_write;
#line 411
    pkt_round = to_write % max_transfer;
#line 421
    if (pkt_round != 0) {
#line 422
      to_write = to_write - pkt_round;
    } else {

    }
#line 430
    if ((unsigned int )*((unsigned char *)hsotg + 188UL) == 0U) {
      {
#line 431
      s3c_hsotg_en_gsint(hsotg, (int )periodic ? 67108864U : 32U);
      }
    } else {

    }
  } else {

  }
  {
#line 436
  descriptor___4.modname = "dwc2_gadget";
#line 436
  descriptor___4.function = "s3c_hsotg_write_fifo";
#line 436
  descriptor___4.filename = "drivers/usb/dwc2/gadget.c";
#line 436
  descriptor___4.format = "write %d/%d, can_write %d, done %d\n";
#line 436
  descriptor___4.lineno = 437U;
#line 436
  descriptor___4.flags = 1U;
#line 436
  tmp___8 = __builtin_expect((long )descriptor___4.flags & 1L, 0L);
  }
#line 436
  if (tmp___8 != 0L) {
    {
#line 436
    __dynamic_dev_dbg(& descriptor___4, (struct device  const  *)hsotg->dev, "write %d/%d, can_write %d, done %d\n",
                      to_write, hs_req->req.length, can_write, buf_pos);
    }
  } else {

  }
#line 439
  if (to_write <= 0) {
#line 440
    return (-28);
  } else {

  }
#line 442
  hs_req->req.actual = (unsigned int )(buf_pos + to_write);
#line 443
  hs_ep->total_data = hs_ep->total_data + (unsigned long )to_write;
#line 445
  if ((int )periodic) {
#line 446
    hs_ep->fifo_load = hs_ep->fifo_load + (unsigned int )to_write;
  } else {

  }
  {
#line 448
  to_write = (to_write + 3) / 4;
#line 449
  data = hs_req->req.buf + (unsigned long )buf_pos;
#line 451
  iowrite32_rep(hsotg->regs + (unsigned long )(((int )hs_ep->index + 1) * 4096), (void const   *)data,
                (unsigned long )to_write);
  }
#line 453
  return (to_write >= can_write ? -28 : 0);
}
}
#line 463 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static unsigned int get_ep_limit(struct s3c_hsotg_ep *hs_ep ) 
{ 
  int index ;
  unsigned int maxsize ;
  unsigned int maxpkt ;

  {
#line 465
  index = (int )hs_ep->index;
#line 469
  if (index != 0) {
#line 470
    maxsize = 524288U;
#line 471
    maxpkt = 1024U;
  } else {
#line 473
    maxsize = 128U;
#line 474
    if ((unsigned int )hs_ep->dir_in != 0U) {
#line 475
      maxpkt = 4U;
    } else {
#line 477
      maxpkt = 2U;
    }
  }
#line 481
  maxpkt = maxpkt - 1U;
#line 482
  maxsize = maxsize - 1U;
#line 489
  if (maxpkt * hs_ep->ep.maxpacket < maxsize) {
#line 490
    maxsize = maxpkt * hs_ep->ep.maxpacket;
  } else {

  }
#line 492
  return (maxsize);
}
}
#line 505 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_start_req(struct s3c_hsotg *hsotg , struct s3c_hsotg_ep *hs_ep ,
                                struct s3c_hsotg_req *hs_req , bool continuing ) 
{ 
  struct usb_request *ureq ;
  int index ;
  int dir_in ;
  u32 epctrl_reg ;
  u32 epsize_reg ;
  u32 epsize ;
  u32 ctrl ;
  unsigned int length ;
  unsigned int packets ;
  unsigned int maxreq ;
  int __ret_warn_on ;
  long tmp ;
  int __ret_warn_on___0 ;
  long tmp___0 ;
  struct _ddebug descriptor ;
  unsigned int tmp___1 ;
  long tmp___2 ;
  struct _ddebug descriptor___0 ;
  long tmp___3 ;
  int round ;
  struct _ddebug descriptor___2 ;
  long tmp___5 ;
  struct _ddebug descriptor___3 ;
  long tmp___6 ;
  unsigned int dma_reg ;
  struct _ddebug descriptor___4 ;
  long tmp___7 ;
  bool tmp___8 ;
  struct _ddebug descriptor___5 ;
  long tmp___9 ;
  struct _ddebug descriptor___6 ;
  long tmp___10 ;
  bool tmp___11 ;
  int tmp___12 ;
  unsigned int tmp___13 ;
  unsigned int tmp___14 ;
  struct _ddebug descriptor___7 ;
  unsigned int tmp___15 ;
  long tmp___16 ;

  {
#line 510
  ureq = & hs_req->req;
#line 511
  index = (int )hs_ep->index;
#line 512
  dir_in = (int )hs_ep->dir_in;
#line 521
  if (index != 0) {
#line 522
    if ((unsigned long )hs_ep->req != (unsigned long )((struct s3c_hsotg_req *)0) && ! continuing) {
      {
#line 523
      dev_err((struct device  const  *)hsotg->dev, "%s: active request\n", "s3c_hsotg_start_req");
#line 524
      __ret_warn_on = 1;
#line 524
      tmp = __builtin_expect(__ret_warn_on != 0, 0L);
      }
#line 524
      if (tmp != 0L) {
        {
#line 524
        warn_slowpath_null("drivers/usb/dwc2/gadget.c", 524);
        }
      } else {

      }
      {
#line 524
      __builtin_expect(__ret_warn_on != 0, 0L);
      }
#line 525
      return;
    } else
#line 526
    if ((unsigned long )hs_ep->req != (unsigned long )hs_req && (int )continuing) {
      {
#line 527
      dev_err((struct device  const  *)hsotg->dev, "%s: continue different req\n",
              "s3c_hsotg_start_req");
#line 529
      __ret_warn_on___0 = 1;
#line 529
      tmp___0 = __builtin_expect(__ret_warn_on___0 != 0, 0L);
      }
#line 529
      if (tmp___0 != 0L) {
        {
#line 529
        warn_slowpath_null("drivers/usb/dwc2/gadget.c", 529);
        }
      } else {

      }
      {
#line 529
      __builtin_expect(__ret_warn_on___0 != 0, 0L);
      }
#line 530
      return;
    } else {

    }
  } else {

  }
  {
#line 534
  epctrl_reg = (u32 )(dir_in != 0 ? (index + 72) * 32 : (index + 88) * 32);
#line 535
  epsize_reg = (u32 )(dir_in != 0 ? index * 32 + 2320 : index * 32 + 2832);
#line 537
  descriptor.modname = "dwc2_gadget";
#line 537
  descriptor.function = "s3c_hsotg_start_req";
#line 537
  descriptor.filename = "drivers/usb/dwc2/gadget.c";
#line 537
  descriptor.format = "%s: DxEPCTL=0x%08x, ep %d, dir %s\n";
#line 537
  descriptor.lineno = 539U;
#line 537
  descriptor.flags = 1U;
#line 537
  tmp___2 = __builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 537
  if (tmp___2 != 0L) {
    {
#line 537
    tmp___1 = readl((void const volatile   *)(hsotg->regs + (unsigned long )epctrl_reg));
#line 537
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)hsotg->dev, "%s: DxEPCTL=0x%08x, ep %d, dir %s\n",
                      "s3c_hsotg_start_req", tmp___1, index, (unsigned int )hs_ep->dir_in != 0U ? (char *)"in" : (char *)"out");
    }
  } else {

  }
  {
#line 542
  ctrl = readl((void const volatile   *)(hsotg->regs + (unsigned long )epctrl_reg));
  }
#line 544
  if ((ctrl & 2097152U) != 0U) {
    {
#line 545
    dev_warn((struct device  const  *)hsotg->dev, "%s: ep%d is stalled\n", "s3c_hsotg_start_req",
             index);
    }
#line 546
    return;
  } else {

  }
  {
#line 549
  length = ureq->length - ureq->actual;
#line 550
  descriptor___0.modname = "dwc2_gadget";
#line 550
  descriptor___0.function = "s3c_hsotg_start_req";
#line 550
  descriptor___0.filename = "drivers/usb/dwc2/gadget.c";
#line 550
  descriptor___0.format = "ureq->length:%d ureq->actual:%d\n";
#line 550
  descriptor___0.lineno = 551U;
#line 550
  descriptor___0.flags = 1U;
#line 550
  tmp___3 = __builtin_expect((long )descriptor___0.flags & 1L, 0L);
  }
#line 550
  if (tmp___3 != 0L) {
    {
#line 550
    __dynamic_dev_dbg(& descriptor___0, (struct device  const  *)hsotg->dev, "ureq->length:%d ureq->actual:%d\n",
                      ureq->length, ureq->actual);
    }
  } else {

  }
  {
#line 558
  maxreq = get_ep_limit(hs_ep);
  }
#line 559
  if (length > maxreq) {
    {
#line 560
    round = (int )(maxreq % hs_ep->ep.maxpacket);
#line 562
    descriptor___2.modname = "dwc2_gadget";
#line 562
    descriptor___2.function = "s3c_hsotg_start_req";
#line 562
    descriptor___2.filename = "drivers/usb/dwc2/gadget.c";
#line 562
    descriptor___2.format = "%s: length %d, max-req %d, r %d\n";
#line 562
    descriptor___2.lineno = 563U;
#line 562
    descriptor___2.flags = 1U;
#line 562
    tmp___5 = __builtin_expect((long )descriptor___2.flags & 1L, 0L);
    }
#line 562
    if (tmp___5 != 0L) {
      {
#line 562
      __dynamic_dev_dbg(& descriptor___2, (struct device  const  *)hsotg->dev, "%s: length %d, max-req %d, r %d\n",
                        "s3c_hsotg_start_req", length, maxreq, round);
      }
    } else {

    }
#line 566
    if (round != 0) {
#line 567
      maxreq = maxreq - (unsigned int )round;
    } else {

    }
#line 569
    length = maxreq;
  } else {

  }
#line 572
  if (length != 0U) {
#line 573
    packets = ((length + hs_ep->ep.maxpacket) - 1U) / hs_ep->ep.maxpacket;
  } else {
#line 575
    packets = 1U;
  }
#line 577
  if ((unsigned int )*((unsigned char *)hs_ep + 130UL) != 0U && length > (unsigned int )((int )hs_ep->mc * (int )hs_ep->ep.maxpacket)) {
    {
#line 578
    dev_err((struct device  const  *)hsotg->dev, "req length > maxpacket*mc\n");
    }
#line 579
    return;
  } else {

  }
#line 582
  if (dir_in != 0 && index != 0) {
#line 583
    if ((unsigned int )*((unsigned char *)hs_ep + 130UL) != 0U) {
#line 584
      epsize = packets << 29;
    } else {
#line 586
      epsize = 536870912U;
    }
  } else {
#line 588
    epsize = 0U;
  }
#line 590
  if (index != 0 && (unsigned int )*((unsigned char *)ureq + 42UL) != 0U) {
#line 596
    if (length == packets * hs_ep->ep.maxpacket) {
#line 597
      packets = packets + 1U;
    } else {

    }
  } else {

  }
  {
#line 600
  epsize = epsize | (packets << 19);
#line 601
  epsize = epsize | length;
#line 603
  descriptor___3.modname = "dwc2_gadget";
#line 603
  descriptor___3.function = "s3c_hsotg_start_req";
#line 603
  descriptor___3.filename = "drivers/usb/dwc2/gadget.c";
#line 603
  descriptor___3.format = "%s: %d@%d/%d, 0x%08x => 0x%08x\n";
#line 603
  descriptor___3.lineno = 604U;
#line 603
  descriptor___3.flags = 1U;
#line 603
  tmp___6 = __builtin_expect((long )descriptor___3.flags & 1L, 0L);
  }
#line 603
  if (tmp___6 != 0L) {
    {
#line 603
    __dynamic_dev_dbg(& descriptor___3, (struct device  const  *)hsotg->dev, "%s: %d@%d/%d, 0x%08x => 0x%08x\n",
                      "s3c_hsotg_start_req", packets, length, ureq->length, epsize,
                      epsize_reg);
    }
  } else {

  }
  {
#line 607
  hs_ep->req = hs_req;
#line 610
  writel(epsize, (void volatile   *)(hsotg->regs + (unsigned long )epsize_reg));
#line 612
  tmp___8 = using_dma(hsotg);
  }
#line 612
  if ((int )tmp___8 && ! continuing) {
    {
#line 620
    dma_reg = (unsigned int )(dir_in != 0 ? index * 32 + 2324 : index * 32 + 2836);
#line 621
    writel((unsigned int )ureq->dma, (void volatile   *)(hsotg->regs + (unsigned long )dma_reg));
#line 623
    descriptor___4.modname = "dwc2_gadget";
#line 623
    descriptor___4.function = "s3c_hsotg_start_req";
#line 623
    descriptor___4.filename = "drivers/usb/dwc2/gadget.c";
#line 623
    descriptor___4.format = "%s: %pad => 0x%08x\n";
#line 623
    descriptor___4.lineno = 624U;
#line 623
    descriptor___4.flags = 1U;
#line 623
    tmp___7 = __builtin_expect((long )descriptor___4.flags & 1L, 0L);
    }
#line 623
    if (tmp___7 != 0L) {
      {
#line 623
      __dynamic_dev_dbg(& descriptor___4, (struct device  const  *)hsotg->dev, "%s: %pad => 0x%08x\n",
                        "s3c_hsotg_start_req", & ureq->dma, dma_reg);
      }
    } else {

    }
  } else {

  }
  {
#line 627
  ctrl = ctrl | 2147483648U;
#line 628
  ctrl = ctrl | 32768U;
#line 630
  descriptor___5.modname = "dwc2_gadget";
#line 630
  descriptor___5.function = "s3c_hsotg_start_req";
#line 630
  descriptor___5.filename = "drivers/usb/dwc2/gadget.c";
#line 630
  descriptor___5.format = "setup req:%d\n";
#line 630
  descriptor___5.lineno = 630U;
#line 630
  descriptor___5.flags = 1U;
#line 630
  tmp___9 = __builtin_expect((long )descriptor___5.flags & 1L, 0L);
  }
#line 630
  if (tmp___9 != 0L) {
    {
#line 630
    __dynamic_dev_dbg(& descriptor___5, (struct device  const  *)hsotg->dev, "setup req:%d\n",
                      hsotg->setup);
    }
  } else {

  }
#line 633
  if (hsotg->setup != 0U && index == 0) {
#line 634
    hsotg->setup = 0U;
  } else {
#line 636
    ctrl = ctrl | 67108864U;
  }
  {
#line 639
  descriptor___6.modname = "dwc2_gadget";
#line 639
  descriptor___6.function = "s3c_hsotg_start_req";
#line 639
  descriptor___6.filename = "drivers/usb/dwc2/gadget.c";
#line 639
  descriptor___6.format = "%s: DxEPCTL=0x%08x\n";
#line 639
  descriptor___6.lineno = 639U;
#line 639
  descriptor___6.flags = 1U;
#line 639
  tmp___10 = __builtin_expect((long )descriptor___6.flags & 1L, 0L);
  }
#line 639
  if (tmp___10 != 0L) {
    {
#line 639
    __dynamic_dev_dbg(& descriptor___6, (struct device  const  *)hsotg->dev, "%s: DxEPCTL=0x%08x\n",
                      "s3c_hsotg_start_req", ctrl);
    }
  } else {

  }
  {
#line 640
  writel(ctrl, (void volatile   *)(hsotg->regs + (unsigned long )epctrl_reg));
#line 647
  hs_ep->size_loaded = length;
#line 648
  hs_ep->last_load = ureq->actual;
  }
#line 650
  if (dir_in != 0) {
    {
#line 650
    tmp___11 = using_dma(hsotg);
    }
#line 650
    if (tmp___11) {
#line 650
      tmp___12 = 0;
    } else {
#line 650
      tmp___12 = 1;
    }
#line 650
    if (tmp___12) {
      {
#line 652
      hs_ep->fifo_load = 0U;
#line 654
      s3c_hsotg_write_fifo(hsotg, hs_ep, hs_req);
      }
    } else {

    }
  } else {

  }
#line 661
  if (dir_in != 0) {
    {
#line 662
    writel(16U, (void volatile   *)(hsotg->regs + (unsigned long )(index * 32 + 2312)));
    }
  } else {

  }
  {
#line 671
  tmp___14 = readl((void const volatile   *)(hsotg->regs + (unsigned long )epctrl_reg));
  }
#line 671
  if ((int )tmp___14 >= 0) {
    {
#line 672
    tmp___13 = readl((void const volatile   *)(hsotg->regs + (unsigned long )epctrl_reg));
#line 672
    dev_warn((struct device  const  *)hsotg->dev, "ep%d: failed to become enabled (DXEPCTL=0x%08x)?\n",
             index, tmp___13);
    }
  } else {

  }
  {
#line 676
  descriptor___7.modname = "dwc2_gadget";
#line 676
  descriptor___7.function = "s3c_hsotg_start_req";
#line 676
  descriptor___7.filename = "drivers/usb/dwc2/gadget.c";
#line 676
  descriptor___7.format = "%s: DXEPCTL=0x%08x\n";
#line 676
  descriptor___7.lineno = 677U;
#line 676
  descriptor___7.flags = 1U;
#line 676
  tmp___16 = __builtin_expect((long )descriptor___7.flags & 1L, 0L);
  }
#line 676
  if (tmp___16 != 0L) {
    {
#line 676
    tmp___15 = readl((void const volatile   *)(hsotg->regs + (unsigned long )epctrl_reg));
#line 676
    __dynamic_dev_dbg(& descriptor___7, (struct device  const  *)hsotg->dev, "%s: DXEPCTL=0x%08x\n",
                      "s3c_hsotg_start_req", tmp___15);
    }
  } else {

  }
  {
#line 680
  s3c_hsotg_ctrl_epint(hsotg, (unsigned int )hs_ep->index, (unsigned int )hs_ep->dir_in,
                       1U);
  }
#line 681
  return;
}
}
#line 695 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static int s3c_hsotg_map_dma(struct s3c_hsotg *hsotg , struct s3c_hsotg_ep *hs_ep ,
                             struct usb_request *req ) 
{ 
  struct s3c_hsotg_req *hs_req ;
  struct s3c_hsotg_req *tmp ;
  int ret ;

  {
  {
#line 699
  tmp = our_req(req);
#line 699
  hs_req = tmp;
  }
#line 703
  if (hs_req->req.length == 0U) {
#line 704
    return (0);
  } else {

  }
  {
#line 706
  ret = usb_gadget_map_request(& hsotg->gadget, req, (int )hs_ep->dir_in);
  }
#line 707
  if (ret != 0) {
#line 708
    goto dma_error;
  } else {

  }
#line 710
  return (0);
  dma_error: 
  {
#line 713
  dev_err((struct device  const  *)hsotg->dev, "%s: failed to map buffer %p, %d bytes\n",
          "s3c_hsotg_map_dma", req->buf, req->length);
  }
#line 716
  return (-5);
}
}
#line 719 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static int s3c_hsotg_ep_queue(struct usb_ep *ep , struct usb_request *req , gfp_t gfp_flags ) 
{ 
  struct s3c_hsotg_req *hs_req ;
  struct s3c_hsotg_req *tmp ;
  struct s3c_hsotg_ep *hs_ep ;
  struct s3c_hsotg_ep *tmp___0 ;
  struct s3c_hsotg *hs ;
  bool first ;
  struct _ddebug descriptor ;
  long tmp___1 ;
  int ret ;
  int tmp___2 ;
  bool tmp___3 ;
  int tmp___4 ;

  {
  {
#line 722
  tmp = our_req(req);
#line 722
  hs_req = tmp;
#line 723
  tmp___0 = our_ep(ep);
#line 723
  hs_ep = tmp___0;
#line 724
  hs = hs_ep->parent;
#line 727
  descriptor.modname = "dwc2_gadget";
#line 727
  descriptor.function = "s3c_hsotg_ep_queue";
#line 727
  descriptor.filename = "drivers/usb/dwc2/gadget.c";
#line 727
  descriptor.format = "%s: req %p: %d@%p, noi=%d, zero=%d, snok=%d\n";
#line 727
  descriptor.lineno = 729U;
#line 727
  descriptor.flags = 1U;
#line 727
  tmp___1 = __builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 727
  if (tmp___1 != 0L) {
    {
#line 727
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)hs->dev, "%s: req %p: %d@%p, noi=%d, zero=%d, snok=%d\n",
                      ep->name, req, req->length, req->buf, (int )req->no_interrupt,
                      (int )req->zero, (int )req->short_not_ok);
    }
  } else {

  }
  {
#line 732
  INIT_LIST_HEAD(& hs_req->queue);
#line 733
  req->actual = 0U;
#line 734
  req->status = -115;
#line 737
  tmp___3 = using_dma(hs);
  }
#line 737
  if ((int )tmp___3) {
    {
#line 738
    tmp___2 = s3c_hsotg_map_dma(hs, hs_ep, req);
#line 738
    ret = tmp___2;
    }
#line 739
    if (ret != 0) {
#line 740
      return (ret);
    } else {

    }
  } else {

  }
  {
#line 743
  tmp___4 = list_empty((struct list_head  const  *)(& hs_ep->queue));
#line 743
  first = tmp___4 != 0;
#line 744
  list_add_tail(& hs_req->queue, & hs_ep->queue);
  }
#line 746
  if ((int )first) {
    {
#line 747
    s3c_hsotg_start_req(hs, hs_ep, hs_req, 0);
    }
  } else {

  }
#line 749
  return (0);
}
}
#line 752 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static int s3c_hsotg_ep_queue_lock(struct usb_ep *ep , struct usb_request *req , gfp_t gfp_flags ) 
{ 
  struct s3c_hsotg_ep *hs_ep ;
  struct s3c_hsotg_ep *tmp ;
  struct s3c_hsotg *hs ;
  unsigned long flags ;
  int ret ;
  raw_spinlock_t *tmp___0 ;

  {
  {
#line 755
  tmp = our_ep(ep);
#line 755
  hs_ep = tmp;
#line 756
  hs = hs_ep->parent;
#line 757
  flags = 0UL;
#line 758
  ret = 0;
#line 760
  tmp___0 = spinlock_check(& hs->lock);
#line 760
  flags = _raw_spin_lock_irqsave(tmp___0);
#line 761
  ret = s3c_hsotg_ep_queue(ep, req, gfp_flags);
#line 762
  spin_unlock_irqrestore(& hs->lock, flags);
  }
#line 764
  return (ret);
}
}
#line 767 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_ep_free_request(struct usb_ep *ep , struct usb_request *req ) 
{ 
  struct s3c_hsotg_req *hs_req ;
  struct s3c_hsotg_req *tmp ;

  {
  {
#line 770
  tmp = our_req(req);
#line 770
  hs_req = tmp;
#line 772
  kfree((void const   *)hs_req);
  }
#line 773
  return;
}
}
#line 783 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_complete_oursetup(struct usb_ep *ep , struct usb_request *req ) 
{ 
  struct s3c_hsotg_ep *hs_ep ;
  struct s3c_hsotg_ep *tmp ;
  struct s3c_hsotg *hsotg ;
  struct _ddebug descriptor ;
  long tmp___0 ;

  {
  {
#line 786
  tmp = our_ep(ep);
#line 786
  hs_ep = tmp;
#line 787
  hsotg = hs_ep->parent;
#line 789
  descriptor.modname = "dwc2_gadget";
#line 789
  descriptor.function = "s3c_hsotg_complete_oursetup";
#line 789
  descriptor.filename = "drivers/usb/dwc2/gadget.c";
#line 789
  descriptor.format = "%s: ep %p, req %p\n";
#line 789
  descriptor.lineno = 789U;
#line 789
  descriptor.flags = 1U;
#line 789
  tmp___0 = __builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 789
  if (tmp___0 != 0L) {
    {
#line 789
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)hsotg->dev, "%s: ep %p, req %p\n",
                      "s3c_hsotg_complete_oursetup", ep, req);
    }
  } else {

  }
  {
#line 791
  s3c_hsotg_ep_free_request(ep, req);
  }
#line 792
  return;
}
}
#line 802 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static struct s3c_hsotg_ep *ep_from_windex(struct s3c_hsotg *hsotg , u32 windex ) 
{ 
  struct s3c_hsotg_ep *ep ;
  int dir ;
  int idx ;

  {
#line 805
  ep = hsotg->eps + ((unsigned long )windex & 127UL);
#line 806
  dir = (windex & 128U) != 0U;
#line 807
  idx = (int )windex & 127;
#line 809
  if (windex > 255U) {
#line 810
    return ((struct s3c_hsotg_ep *)0);
  } else {

  }
#line 812
  if (idx > (int )hsotg->num_of_eps) {
#line 813
    return ((struct s3c_hsotg_ep *)0);
  } else {

  }
#line 815
  if (idx != 0 && (int )ep->dir_in != dir) {
#line 816
    return ((struct s3c_hsotg_ep *)0);
  } else {

  }
#line 818
  return (ep);
}
}
#line 831 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static int s3c_hsotg_send_reply(struct s3c_hsotg *hsotg , struct s3c_hsotg_ep *ep ,
                                void *buff , int length ) 
{ 
  struct usb_request *req ;
  int ret ;
  struct _ddebug descriptor ;
  long tmp ;

  {
  {
#line 839
  descriptor.modname = "dwc2_gadget";
#line 839
  descriptor.function = "s3c_hsotg_send_reply";
#line 839
  descriptor.filename = "drivers/usb/dwc2/gadget.c";
#line 839
  descriptor.format = "%s: buff %p, len %d\n";
#line 839
  descriptor.lineno = 839U;
#line 839
  descriptor.flags = 1U;
#line 839
  tmp = __builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 839
  if (tmp != 0L) {
    {
#line 839
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)hsotg->dev, "%s: buff %p, len %d\n",
                      "s3c_hsotg_send_reply", buff, length);
    }
  } else {

  }
  {
#line 841
  req = s3c_hsotg_ep_alloc_request(& ep->ep, 32U);
#line 842
  hsotg->ep0_reply = req;
  }
#line 843
  if ((unsigned long )req == (unsigned long )((struct usb_request *)0)) {
    {
#line 844
    dev_warn((struct device  const  *)hsotg->dev, "%s: cannot alloc req\n", "s3c_hsotg_send_reply");
    }
#line 845
    return (-12);
  } else {

  }
#line 848
  req->buf = (void *)(& hsotg->ep0_buff);
#line 849
  req->length = (unsigned int )length;
#line 850
  req->zero = 1U;
#line 851
  req->complete = & s3c_hsotg_complete_oursetup;
#line 853
  if (length != 0) {
    {
#line 854
    memcpy(req->buf, (void const   *)buff, (size_t )length);
    }
  } else {
#line 856
    ep->sent_zlp = 1U;
  }
  {
#line 858
  ret = s3c_hsotg_ep_queue(& ep->ep, req, 32U);
  }
#line 859
  if (ret != 0) {
    {
#line 860
    dev_warn((struct device  const  *)hsotg->dev, "%s: cannot queue req\n", "s3c_hsotg_send_reply");
    }
#line 861
    return (ret);
  } else {

  }
#line 864
  return (0);
}
}
#line 872 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static int s3c_hsotg_process_req_status(struct s3c_hsotg *hsotg , struct usb_ctrlrequest *ctrl ) 
{ 
  struct s3c_hsotg_ep *ep0 ;
  struct s3c_hsotg_ep *ep ;
  __le16 reply ;
  int ret ;
  struct _ddebug descriptor ;
  long tmp ;

  {
  {
#line 875
  ep0 = hsotg->eps;
#line 880
  descriptor.modname = "dwc2_gadget";
#line 880
  descriptor.function = "s3c_hsotg_process_req_status";
#line 880
  descriptor.filename = "drivers/usb/dwc2/gadget.c";
#line 880
  descriptor.format = "%s: USB_REQ_GET_STATUS\n";
#line 880
  descriptor.lineno = 880U;
#line 880
  descriptor.flags = 1U;
#line 880
  tmp = __builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 880
  if (tmp != 0L) {
    {
#line 880
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)hsotg->dev, "%s: USB_REQ_GET_STATUS\n",
                      "s3c_hsotg_process_req_status");
    }
  } else {

  }
#line 882
  if ((unsigned int )ep0->dir_in == 0U) {
    {
#line 883
    dev_warn((struct device  const  *)hsotg->dev, "%s: direction out?\n", "s3c_hsotg_process_req_status");
    }
#line 884
    return (-22);
  } else {

  }
  {
#line 888
  if (((int )ctrl->bRequestType & 31) == 0) {
#line 888
    goto case_0;
  } else {

  }
#line 893
  if (((int )ctrl->bRequestType & 31) == 1) {
#line 893
    goto case_1;
  } else {

  }
#line 898
  if (((int )ctrl->bRequestType & 31) == 2) {
#line 898
    goto case_2;
  } else {

  }
#line 906
  goto switch_default;
  case_0: /* CIL Label */ 
#line 889
  reply = 0U;
#line 891
  goto ldv_33437;
  case_1: /* CIL Label */ 
#line 895
  reply = 0U;
#line 896
  goto ldv_33437;
  case_2: /* CIL Label */ 
  {
#line 899
  ep = ep_from_windex(hsotg, (u32 )ctrl->wIndex);
  }
#line 900
  if ((unsigned long )ep == (unsigned long )((struct s3c_hsotg_ep *)0)) {
#line 901
    return (-2);
  } else {

  }
#line 903
  reply = (unsigned int )((unsigned short )*((unsigned char *)ep + 130UL)) & 1U;
#line 904
  goto ldv_33437;
  switch_default: /* CIL Label */ ;
#line 907
  return (0);
  switch_break: /* CIL Label */ ;
  }
  ldv_33437: ;
#line 910
  if ((unsigned int )ctrl->wLength != 2U) {
#line 911
    return (-22);
  } else {

  }
  {
#line 913
  ret = s3c_hsotg_send_reply(hsotg, ep0, (void *)(& reply), 2);
  }
#line 914
  if (ret != 0) {
    {
#line 915
    dev_err((struct device  const  *)hsotg->dev, "%s: failed to send reply\n", "s3c_hsotg_process_req_status");
    }
#line 916
    return (ret);
  } else {

  }
#line 919
  return (1);
}
}
#line 922
static int s3c_hsotg_ep_sethalt(struct usb_ep *ep , int value ) ;
#line 930 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static struct s3c_hsotg_req *get_ep_head(struct s3c_hsotg_ep *hs_ep ) 
{ 
  int tmp ;
  struct list_head  const  *__mptr ;

  {
  {
#line 932
  tmp = list_empty((struct list_head  const  *)(& hs_ep->queue));
  }
#line 932
  if (tmp != 0) {
#line 933
    return ((struct s3c_hsotg_req *)0);
  } else {

  }
#line 935
  __mptr = (struct list_head  const  *)hs_ep->queue.next;
#line 935
  return ((struct s3c_hsotg_req *)((char *)__mptr + 0xffffffffffffffa8UL));
}
}
#line 943 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static int s3c_hsotg_process_req_feature(struct s3c_hsotg *hsotg , struct usb_ctrlrequest *ctrl ) 
{ 
  struct s3c_hsotg_ep *ep0 ;
  struct s3c_hsotg_req *hs_req ;
  bool restart ;
  bool set ;
  struct s3c_hsotg_ep *ep ;
  int ret ;
  bool halted ;
  struct _ddebug descriptor ;
  long tmp ;
  struct _ddebug descriptor___0 ;
  long tmp___0 ;
  int tmp___1 ;

  {
  {
#line 946
  ep0 = hsotg->eps;
#line 949
  set = (unsigned int )ctrl->bRequest == 3U;
#line 954
  descriptor.modname = "dwc2_gadget";
#line 954
  descriptor.function = "s3c_hsotg_process_req_feature";
#line 954
  descriptor.filename = "drivers/usb/dwc2/gadget.c";
#line 954
  descriptor.format = "%s: %s_FEATURE\n";
#line 954
  descriptor.lineno = 955U;
#line 954
  descriptor.flags = 1U;
#line 954
  tmp = __builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 954
  if (tmp != 0L) {
    {
#line 954
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)hsotg->dev, "%s: %s_FEATURE\n",
                      "s3c_hsotg_process_req_feature", (int )set ? (char *)"SET" : (char *)"CLEAR");
    }
  } else {

  }
#line 957
  if ((unsigned int )ctrl->bRequestType == 2U) {
    {
#line 958
    ep = ep_from_windex(hsotg, (u32 )ctrl->wIndex);
    }
#line 959
    if ((unsigned long )ep == (unsigned long )((struct s3c_hsotg_ep *)0)) {
      {
#line 960
      descriptor___0.modname = "dwc2_gadget";
#line 960
      descriptor___0.function = "s3c_hsotg_process_req_feature";
#line 960
      descriptor___0.filename = "drivers/usb/dwc2/gadget.c";
#line 960
      descriptor___0.format = "%s: no endpoint for 0x%04x\n";
#line 960
      descriptor___0.lineno = 961U;
#line 960
      descriptor___0.flags = 1U;
#line 960
      tmp___0 = __builtin_expect((long )descriptor___0.flags & 1L, 0L);
      }
#line 960
      if (tmp___0 != 0L) {
        {
#line 960
        __dynamic_dev_dbg(& descriptor___0, (struct device  const  *)hsotg->dev, "%s: no endpoint for 0x%04x\n",
                          "s3c_hsotg_process_req_feature", (int )ctrl->wIndex);
        }
      } else {

      }
#line 962
      return (-2);
    } else {

    }
    {
#line 966
    if ((int )ctrl->wValue == 0) {
#line 966
      goto case_0;
    } else {

    }
#line 1007
    goto switch_default;
    case_0: /* CIL Label */ 
    {
#line 967
    halted = (int )ep->halted != 0;
#line 969
    s3c_hsotg_ep_sethalt(& ep->ep, (int )set);
#line 971
    ret = s3c_hsotg_send_reply(hsotg, ep0, (void *)0, 0);
    }
#line 972
    if (ret != 0) {
      {
#line 973
      dev_err((struct device  const  *)hsotg->dev, "%s: failed to send reply\n", "s3c_hsotg_process_req_feature");
      }
#line 975
      return (ret);
    } else {

    }
#line 983
    if (! set && (int )halted) {
#line 988
      if ((unsigned long )ep->req != (unsigned long )((struct s3c_hsotg_req *)0)) {
        {
#line 989
        hs_req = ep->req;
#line 990
        ep->req = (struct s3c_hsotg_req *)0;
#line 991
        list_del_init(& hs_req->queue);
#line 992
        (*(hs_req->req.complete))(& ep->ep, & hs_req->req);
        }
      } else {

      }
      {
#line 997
      tmp___1 = list_empty((struct list_head  const  *)(& ep->queue));
#line 997
      restart = tmp___1 == 0;
      }
#line 998
      if ((int )restart) {
        {
#line 999
        hs_req = get_ep_head(ep);
#line 1000
        s3c_hsotg_start_req(hsotg, ep, hs_req, 0);
        }
      } else {

      }
    } else {

    }
#line 1005
    goto ldv_33464;
    switch_default: /* CIL Label */ ;
#line 1008
    return (-2);
    switch_break: /* CIL Label */ ;
    }
    ldv_33464: ;
  } else {
#line 1011
    return (-2);
  }
#line 1013
  return (1);
}
}
#line 1016
static void s3c_hsotg_enqueue_setup(struct s3c_hsotg *hsotg ) ;
#line 1017
static void s3c_hsotg_disconnect(struct s3c_hsotg *hsotg ) ;
#line 1025 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_stall_ep0(struct s3c_hsotg *hsotg ) 
{ 
  struct s3c_hsotg_ep *ep0 ;
  u32 reg ;
  u32 ctrl ;
  struct _ddebug descriptor ;
  long tmp ;
  struct _ddebug descriptor___0 ;
  unsigned int tmp___0 ;
  long tmp___1 ;

  {
  {
#line 1026
  ep0 = hsotg->eps;
#line 1030
  descriptor.modname = "dwc2_gadget";
#line 1030
  descriptor.function = "s3c_hsotg_stall_ep0";
#line 1030
  descriptor.filename = "drivers/usb/dwc2/gadget.c";
#line 1030
  descriptor.format = "ep0 stall (dir=%d)\n";
#line 1030
  descriptor.lineno = 1030U;
#line 1030
  descriptor.flags = 1U;
#line 1030
  tmp = __builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 1030
  if (tmp != 0L) {
    {
#line 1030
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)hsotg->dev, "ep0 stall (dir=%d)\n",
                      (int )ep0->dir_in);
    }
  } else {

  }
  {
#line 1031
  reg = (unsigned int )ep0->dir_in != 0U ? 2304U : 2816U;
#line 1038
  ctrl = readl((void const volatile   *)(hsotg->regs + (unsigned long )reg));
#line 1039
  ctrl = ctrl | 2097152U;
#line 1040
  ctrl = ctrl | 67108864U;
#line 1041
  writel(ctrl, (void volatile   *)(hsotg->regs + (unsigned long )reg));
#line 1043
  descriptor___0.modname = "dwc2_gadget";
#line 1043
  descriptor___0.function = "s3c_hsotg_stall_ep0";
#line 1043
  descriptor___0.filename = "drivers/usb/dwc2/gadget.c";
#line 1043
  descriptor___0.format = "written DXEPCTL=0x%08x to %08x (DXEPCTL=0x%08x)\n";
#line 1043
  descriptor___0.lineno = 1045U;
#line 1043
  descriptor___0.flags = 1U;
#line 1043
  tmp___1 = __builtin_expect((long )descriptor___0.flags & 1L, 0L);
  }
#line 1043
  if (tmp___1 != 0L) {
    {
#line 1043
    tmp___0 = readl((void const volatile   *)(hsotg->regs + (unsigned long )reg));
#line 1043
    __dynamic_dev_dbg(& descriptor___0, (struct device  const  *)hsotg->dev, "written DXEPCTL=0x%08x to %08x (DXEPCTL=0x%08x)\n",
                      ctrl, reg, tmp___0);
    }
  } else {

  }
  {
#line 1051
  s3c_hsotg_enqueue_setup(hsotg);
  }
#line 1052
  return;
}
}
#line 1063 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_process_control(struct s3c_hsotg *hsotg , struct usb_ctrlrequest *ctrl ) 
{ 
  struct s3c_hsotg_ep *ep0 ;
  int ret ;
  u32 dcfg ;
  struct _ddebug descriptor ;
  long tmp ;
  struct _ddebug descriptor___0 ;
  long tmp___0 ;
  struct _ddebug descriptor___1 ;
  long tmp___1 ;

  {
  {
#line 1066
  ep0 = hsotg->eps;
#line 1067
  ret = 0;
#line 1070
  ep0->sent_zlp = 0U;
#line 1072
  descriptor.modname = "dwc2_gadget";
#line 1072
  descriptor.function = "s3c_hsotg_process_control";
#line 1072
  descriptor.filename = "drivers/usb/dwc2/gadget.c";
#line 1072
  descriptor.format = "ctrl Req=%02x, Type=%02x, V=%04x, L=%04x\n";
#line 1072
  descriptor.lineno = 1074U;
#line 1072
  descriptor.flags = 1U;
#line 1072
  tmp = __builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 1072
  if (tmp != 0L) {
    {
#line 1072
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)hsotg->dev, "ctrl Req=%02x, Type=%02x, V=%04x, L=%04x\n",
                      (int )ctrl->bRequest, (int )ctrl->bRequestType, (int )ctrl->wValue,
                      (int )ctrl->wLength);
    }
  } else {

  }
  {
#line 1081
  ep0->dir_in = (int )((signed char )ctrl->bRequestType) < 0;
#line 1082
  descriptor___0.modname = "dwc2_gadget";
#line 1082
  descriptor___0.function = "s3c_hsotg_process_control";
#line 1082
  descriptor___0.filename = "drivers/usb/dwc2/gadget.c";
#line 1082
  descriptor___0.format = "ctrl: dir_in=%d\n";
#line 1082
  descriptor___0.lineno = 1082U;
#line 1082
  descriptor___0.flags = 1U;
#line 1082
  tmp___0 = __builtin_expect((long )descriptor___0.flags & 1L, 0L);
  }
#line 1082
  if (tmp___0 != 0L) {
    {
#line 1082
    __dynamic_dev_dbg(& descriptor___0, (struct device  const  *)hsotg->dev, "ctrl: dir_in=%d\n",
                      (int )ep0->dir_in);
    }
  } else {

  }
#line 1088
  if ((unsigned int )ctrl->wLength == 0U) {
#line 1089
    ep0->dir_in = 1U;
  } else {

  }
#line 1091
  if (((int )ctrl->bRequestType & 96) == 0) {
    {
#line 1093
    if ((int )ctrl->bRequest == 5) {
#line 1093
      goto case_5;
    } else {

    }
#line 1106
    if ((int )ctrl->bRequest == 0) {
#line 1106
      goto case_0;
    } else {

    }
#line 1110
    if ((int )ctrl->bRequest == 1) {
#line 1110
      goto case_1;
    } else {

    }
#line 1111
    if ((int )ctrl->bRequest == 3) {
#line 1111
      goto case_3;
    } else {

    }
#line 1092
    goto switch_break;
    case_5: /* CIL Label */ 
    {
#line 1094
    s3c_hsotg_disconnect(hsotg);
#line 1095
    dcfg = readl((void const volatile   *)(hsotg->regs + 2048UL));
#line 1096
    dcfg = dcfg & 4294965263U;
#line 1097
    dcfg = dcfg | ((u32 )((int )ctrl->wValue << 4) & 2032U);
#line 1099
    writel(dcfg, (void volatile   *)(hsotg->regs + 2048UL));
#line 1101
    _dev_info((struct device  const  *)hsotg->dev, "new address %d\n", (int )ctrl->wValue);
#line 1103
    ret = s3c_hsotg_send_reply(hsotg, ep0, (void *)0, 0);
    }
#line 1104
    return;
    case_0: /* CIL Label */ 
    {
#line 1107
    ret = s3c_hsotg_process_req_status(hsotg, ctrl);
    }
#line 1108
    goto ldv_33491;
    case_1: /* CIL Label */ ;
    case_3: /* CIL Label */ 
    {
#line 1112
    ret = s3c_hsotg_process_req_feature(hsotg, ctrl);
    }
#line 1113
    goto ldv_33491;
    switch_break: /* CIL Label */ ;
    }
    ldv_33491: ;
  } else {

  }
#line 1119
  if (ret == 0 && (unsigned long )hsotg->driver != (unsigned long )((struct usb_gadget_driver *)0)) {
    {
#line 1120
    spin_unlock(& hsotg->lock);
#line 1121
    ret = (*((hsotg->driver)->setup))(& hsotg->gadget, (struct usb_ctrlrequest  const  *)ctrl);
#line 1122
    spin_lock(& hsotg->lock);
    }
#line 1123
    if (ret < 0) {
      {
#line 1124
      descriptor___1.modname = "dwc2_gadget";
#line 1124
      descriptor___1.function = "s3c_hsotg_process_control";
#line 1124
      descriptor___1.filename = "drivers/usb/dwc2/gadget.c";
#line 1124
      descriptor___1.format = "driver->setup() ret %d\n";
#line 1124
      descriptor___1.lineno = 1124U;
#line 1124
      descriptor___1.flags = 1U;
#line 1124
      tmp___1 = __builtin_expect((long )descriptor___1.flags & 1L, 0L);
      }
#line 1124
      if (tmp___1 != 0L) {
        {
#line 1124
        __dynamic_dev_dbg(& descriptor___1, (struct device  const  *)hsotg->dev, "driver->setup() ret %d\n",
                          ret);
        }
      } else {

      }
    } else {

    }
  } else {

  }
#line 1132
  if (ret < 0) {
    {
#line 1133
    s3c_hsotg_stall_ep0(hsotg);
    }
  } else {

  }
#line 1134
  return;
}
}
#line 1144 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_complete_setup(struct usb_ep *ep , struct usb_request *req ) 
{ 
  struct s3c_hsotg_ep *hs_ep ;
  struct s3c_hsotg_ep *tmp ;
  struct s3c_hsotg *hsotg ;
  struct _ddebug descriptor ;
  long tmp___0 ;

  {
  {
#line 1147
  tmp = our_ep(ep);
#line 1147
  hs_ep = tmp;
#line 1148
  hsotg = hs_ep->parent;
  }
#line 1150
  if (req->status < 0) {
    {
#line 1151
    descriptor.modname = "dwc2_gadget";
#line 1151
    descriptor.function = "s3c_hsotg_complete_setup";
#line 1151
    descriptor.filename = "drivers/usb/dwc2/gadget.c";
#line 1151
    descriptor.format = "%s: failed %d\n";
#line 1151
    descriptor.lineno = 1151U;
#line 1151
    descriptor.flags = 1U;
#line 1151
    tmp___0 = __builtin_expect((long )descriptor.flags & 1L, 0L);
    }
#line 1151
    if (tmp___0 != 0L) {
      {
#line 1151
      __dynamic_dev_dbg(& descriptor, (struct device  const  *)hsotg->dev, "%s: failed %d\n",
                        "s3c_hsotg_complete_setup", req->status);
      }
    } else {

    }
#line 1152
    return;
  } else {

  }
  {
#line 1155
  spin_lock(& hsotg->lock);
  }
#line 1156
  if (req->actual == 0U) {
    {
#line 1157
    s3c_hsotg_enqueue_setup(hsotg);
    }
  } else {
    {
#line 1159
    s3c_hsotg_process_control(hsotg, (struct usb_ctrlrequest *)req->buf);
    }
  }
  {
#line 1160
  spin_unlock(& hsotg->lock);
  }
#line 1161
  return;
}
}
#line 1170 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_enqueue_setup(struct s3c_hsotg *hsotg ) 
{ 
  struct usb_request *req ;
  struct s3c_hsotg_req *hs_req ;
  struct s3c_hsotg_req *tmp ;
  int ret ;
  struct _ddebug descriptor ;
  long tmp___0 ;
  struct _ddebug descriptor___0 ;
  long tmp___1 ;
  int tmp___2 ;

  {
  {
#line 1172
  req = hsotg->ctrl_req;
#line 1173
  tmp = our_req(req);
#line 1173
  hs_req = tmp;
#line 1176
  descriptor.modname = "dwc2_gadget";
#line 1176
  descriptor.function = "s3c_hsotg_enqueue_setup";
#line 1176
  descriptor.filename = "drivers/usb/dwc2/gadget.c";
#line 1176
  descriptor.format = "%s: queueing setup request\n";
#line 1176
  descriptor.lineno = 1176U;
#line 1176
  descriptor.flags = 1U;
#line 1176
  tmp___0 = __builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 1176
  if (tmp___0 != 0L) {
    {
#line 1176
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)hsotg->dev, "%s: queueing setup request\n",
                      "s3c_hsotg_enqueue_setup");
    }
  } else {

  }
  {
#line 1178
  req->zero = 0U;
#line 1179
  req->length = 8U;
#line 1180
  req->buf = (void *)(& hsotg->ctrl_buff);
#line 1181
  req->complete = & s3c_hsotg_complete_setup;
#line 1183
  tmp___2 = list_empty((struct list_head  const  *)(& hs_req->queue));
  }
#line 1183
  if (tmp___2 == 0) {
    {
#line 1184
    descriptor___0.modname = "dwc2_gadget";
#line 1184
    descriptor___0.function = "s3c_hsotg_enqueue_setup";
#line 1184
    descriptor___0.filename = "drivers/usb/dwc2/gadget.c";
#line 1184
    descriptor___0.format = "%s already queued???\n";
#line 1184
    descriptor___0.lineno = 1184U;
#line 1184
    descriptor___0.flags = 1U;
#line 1184
    tmp___1 = __builtin_expect((long )descriptor___0.flags & 1L, 0L);
    }
#line 1184
    if (tmp___1 != 0L) {
      {
#line 1184
      __dynamic_dev_dbg(& descriptor___0, (struct device  const  *)hsotg->dev, "%s already queued???\n",
                        "s3c_hsotg_enqueue_setup");
      }
    } else {

    }
#line 1185
    return;
  } else {

  }
  {
#line 1188
  (hsotg->eps)->dir_in = 0U;
#line 1190
  ret = s3c_hsotg_ep_queue(& (hsotg->eps)->ep, req, 32U);
  }
#line 1191
  if (ret < 0) {
    {
#line 1192
    dev_err((struct device  const  *)hsotg->dev, "%s: failed queue (%d)\n", "s3c_hsotg_enqueue_setup",
            ret);
    }
  } else {

  }
#line 1193
  return;
}
}
#line 1213 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_complete_request(struct s3c_hsotg *hsotg , struct s3c_hsotg_ep *hs_ep ,
                                       struct s3c_hsotg_req *hs_req , int result ) 
{ 
  bool restart ;
  struct _ddebug descriptor ;
  long tmp ;
  struct _ddebug descriptor___0 ;
  long tmp___0 ;
  bool tmp___1 ;
  int tmp___2 ;

  {
#line 1220
  if ((unsigned long )hs_req == (unsigned long )((struct s3c_hsotg_req *)0)) {
    {
#line 1221
    descriptor.modname = "dwc2_gadget";
#line 1221
    descriptor.function = "s3c_hsotg_complete_request";
#line 1221
    descriptor.filename = "drivers/usb/dwc2/gadget.c";
#line 1221
    descriptor.format = "%s: nothing to complete?\n";
#line 1221
    descriptor.lineno = 1221U;
#line 1221
    descriptor.flags = 1U;
#line 1221
    tmp = __builtin_expect((long )descriptor.flags & 1L, 0L);
    }
#line 1221
    if (tmp != 0L) {
      {
#line 1221
      __dynamic_dev_dbg(& descriptor, (struct device  const  *)hsotg->dev, "%s: nothing to complete?\n",
                        "s3c_hsotg_complete_request");
      }
    } else {

    }
#line 1222
    return;
  } else {

  }
  {
#line 1225
  descriptor___0.modname = "dwc2_gadget";
#line 1225
  descriptor___0.function = "s3c_hsotg_complete_request";
#line 1225
  descriptor___0.filename = "drivers/usb/dwc2/gadget.c";
#line 1225
  descriptor___0.format = "complete: ep %p %s, req %p, %d => %p\n";
#line 1225
  descriptor___0.lineno = 1226U;
#line 1225
  descriptor___0.flags = 1U;
#line 1225
  tmp___0 = __builtin_expect((long )descriptor___0.flags & 1L, 0L);
  }
#line 1225
  if (tmp___0 != 0L) {
    {
#line 1225
    __dynamic_dev_dbg(& descriptor___0, (struct device  const  *)hsotg->dev, "complete: ep %p %s, req %p, %d => %p\n",
                      hs_ep, hs_ep->ep.name, hs_req, result, hs_req->req.complete);
    }
  } else {

  }
#line 1233
  if (hs_req->req.status == -115) {
#line 1234
    hs_req->req.status = result;
  } else {

  }
  {
#line 1236
  hs_ep->req = (struct s3c_hsotg_req *)0;
#line 1237
  list_del_init(& hs_req->queue);
#line 1239
  tmp___1 = using_dma(hsotg);
  }
#line 1239
  if ((int )tmp___1) {
    {
#line 1240
    s3c_hsotg_unmap_dma(hsotg, hs_ep, hs_req);
    }
  } else {

  }
#line 1247
  if ((unsigned long )hs_req->req.complete != (unsigned long )((void (*)(struct usb_ep * ,
                                                                         struct usb_request * ))0)) {
    {
#line 1248
    spin_unlock(& hsotg->lock);
#line 1249
    (*(hs_req->req.complete))(& hs_ep->ep, & hs_req->req);
#line 1250
    spin_lock(& hsotg->lock);
    }
  } else {

  }
#line 1259
  if ((unsigned long )hs_ep->req == (unsigned long )((struct s3c_hsotg_req *)0) && result >= 0) {
    {
#line 1260
    tmp___2 = list_empty((struct list_head  const  *)(& hs_ep->queue));
#line 1260
    restart = tmp___2 == 0;
    }
#line 1261
    if ((int )restart) {
      {
#line 1262
      hs_req = get_ep_head(hs_ep);
#line 1263
      s3c_hsotg_start_req(hsotg, hs_ep, hs_req, 0);
      }
    } else {

    }
  } else {

  }
#line 1266
  return;
}
}
#line 1278 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_rx_data(struct s3c_hsotg *hsotg , int ep_idx , int size ) 
{ 
  struct s3c_hsotg_ep *hs_ep ;
  struct s3c_hsotg_req *hs_req ;
  void *fifo ;
  int to_read ;
  int max_req ;
  int read_ptr ;
  u32 epctl ;
  unsigned int tmp ;
  int ptr ;
  struct _ddebug descriptor ;
  long tmp___0 ;
  bool __warned ;
  int __ret_warn_once ;
  int __ret_warn_on ;
  long tmp___1 ;
  long tmp___2 ;
  long tmp___3 ;

  {
#line 1280
  hs_ep = hsotg->eps + (unsigned long )ep_idx;
#line 1281
  hs_req = hs_ep->req;
#line 1282
  fifo = hsotg->regs + (unsigned long )((ep_idx + 1) * 4096);
#line 1288
  if ((unsigned long )hs_req == (unsigned long )((struct s3c_hsotg_req *)0)) {
    {
#line 1289
    tmp = readl((void const volatile   *)(hsotg->regs + (unsigned long )((ep_idx + 88) * 32)));
#line 1289
    epctl = tmp;
#line 1292
    dev_warn((struct device  const  *)hsotg->dev, "%s: FIFO %d bytes on ep%d but no req (DXEPCTl=0x%08x)\n",
             "s3c_hsotg_rx_data", size, ep_idx, epctl);
#line 1297
    ptr = 0;
    }
#line 1297
    goto ldv_33537;
    ldv_33536: 
    {
#line 1298
    readl((void const volatile   *)fifo);
#line 1297
    ptr = ptr + 4;
    }
    ldv_33537: ;
#line 1297
    if (ptr < size) {
#line 1299
      goto ldv_33536;
    } else {

    }

#line 1300
    return;
  } else {

  }
  {
#line 1303
  to_read = size;
#line 1304
  read_ptr = (int )hs_req->req.actual;
#line 1305
  max_req = (int )(hs_req->req.length - (unsigned int )read_ptr);
#line 1307
  descriptor.modname = "dwc2_gadget";
#line 1307
  descriptor.function = "s3c_hsotg_rx_data";
#line 1307
  descriptor.filename = "drivers/usb/dwc2/gadget.c";
#line 1307
  descriptor.format = "%s: read %d/%d, done %d/%d\n";
#line 1307
  descriptor.lineno = 1308U;
#line 1307
  descriptor.flags = 1U;
#line 1307
  tmp___0 = __builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 1307
  if (tmp___0 != 0L) {
    {
#line 1307
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)hsotg->dev, "%s: read %d/%d, done %d/%d\n",
                      "s3c_hsotg_rx_data", to_read, max_req, read_ptr, hs_req->req.length);
    }
  } else {

  }
#line 1310
  if (to_read > max_req) {
    {
#line 1317
    __ret_warn_once = 1;
#line 1317
    tmp___3 = __builtin_expect(__ret_warn_once != 0, 0L);
    }
#line 1317
    if (tmp___3 != 0L) {
      {
#line 1317
      __ret_warn_on = ! __warned;
#line 1317
      tmp___1 = __builtin_expect(__ret_warn_on != 0, 0L);
      }
#line 1317
      if (tmp___1 != 0L) {
        {
#line 1317
        warn_slowpath_null("drivers/usb/dwc2/gadget.c", 1317);
        }
      } else {

      }
      {
#line 1317
      tmp___2 = __builtin_expect(__ret_warn_on != 0, 0L);
      }
#line 1317
      if (tmp___2 != 0L) {
#line 1317
        __warned = 1;
      } else {

      }
    } else {

    }
    {
#line 1317
    __builtin_expect(__ret_warn_once != 0, 0L);
    }
  } else {

  }
  {
#line 1320
  hs_ep->total_data = hs_ep->total_data + (unsigned long )to_read;
#line 1321
  hs_req->req.actual = hs_req->req.actual + (unsigned int )to_read;
#line 1322
  to_read = (to_read + 3) / 4;
#line 1328
  ioread32_rep(fifo, hs_req->req.buf + (unsigned long )read_ptr, (unsigned long )to_read);
  }
#line 1329
  return;
}
}
#line 1343 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_send_zlp(struct s3c_hsotg *hsotg , struct s3c_hsotg_req *req ) 
{ 
  u32 ctrl ;
  struct _ddebug descriptor ;
  long tmp ;

  {
#line 1348
  if ((unsigned long )req == (unsigned long )((struct s3c_hsotg_req *)0)) {
    {
#line 1349
    dev_warn((struct device  const  *)hsotg->dev, "%s: no request?\n", "s3c_hsotg_send_zlp");
    }
#line 1350
    return;
  } else {

  }
#line 1353
  if (req->req.length == 0U) {
    {
#line 1354
    (hsotg->eps)->sent_zlp = 1U;
#line 1355
    s3c_hsotg_enqueue_setup(hsotg);
    }
#line 1356
    return;
  } else {

  }
  {
#line 1359
  (hsotg->eps)->dir_in = 1U;
#line 1360
  (hsotg->eps)->sent_zlp = 1U;
#line 1362
  descriptor.modname = "dwc2_gadget";
#line 1362
  descriptor.function = "s3c_hsotg_send_zlp";
#line 1362
  descriptor.filename = "drivers/usb/dwc2/gadget.c";
#line 1362
  descriptor.format = "sending zero-length packet\n";
#line 1362
  descriptor.lineno = 1362U;
#line 1362
  descriptor.flags = 1U;
#line 1362
  tmp = __builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 1362
  if (tmp != 0L) {
    {
#line 1362
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)hsotg->dev, "sending zero-length packet\n");
    }
  } else {

  }
  {
#line 1365
  writel(537395200U, (void volatile   *)(hsotg->regs + 2320UL));
#line 1368
  ctrl = readl((void const volatile   *)(hsotg->regs + 2304UL));
#line 1369
  ctrl = ctrl | 67108864U;
#line 1370
  ctrl = ctrl | 2147483648U;
#line 1371
  ctrl = ctrl | 32768U;
#line 1372
  writel(ctrl, (void volatile   *)(hsotg->regs + 2304UL));
  }
#line 1373
  return;
}
}
#line 1385 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_handle_outdone(struct s3c_hsotg *hsotg , int epnum , bool was_setup ) 
{ 
  u32 epsize ;
  unsigned int tmp ;
  struct s3c_hsotg_ep *hs_ep ;
  struct s3c_hsotg_req *hs_req ;
  struct usb_request *req ;
  unsigned int size_left ;
  int result ;
  struct _ddebug descriptor ;
  long tmp___0 ;
  unsigned int size_done ;
  bool tmp___1 ;
  struct _ddebug descriptor___0 ;
  long tmp___2 ;

  {
  {
#line 1388
  tmp = readl((void const volatile   *)(hsotg->regs + (unsigned long )(epnum * 32 + 2832)));
#line 1388
  epsize = tmp;
#line 1389
  hs_ep = hsotg->eps + (unsigned long )epnum;
#line 1390
  hs_req = hs_ep->req;
#line 1391
  req = & hs_req->req;
#line 1392
  size_left = epsize & 524287U;
#line 1393
  result = 0;
  }
#line 1395
  if ((unsigned long )hs_req == (unsigned long )((struct s3c_hsotg_req *)0)) {
    {
#line 1396
    descriptor.modname = "dwc2_gadget";
#line 1396
    descriptor.function = "s3c_hsotg_handle_outdone";
#line 1396
    descriptor.filename = "drivers/usb/dwc2/gadget.c";
#line 1396
    descriptor.format = "%s: no request active\n";
#line 1396
    descriptor.lineno = 1396U;
#line 1396
    descriptor.flags = 1U;
#line 1396
    tmp___0 = __builtin_expect((long )descriptor.flags & 1L, 0L);
    }
#line 1396
    if (tmp___0 != 0L) {
      {
#line 1396
      __dynamic_dev_dbg(& descriptor, (struct device  const  *)hsotg->dev, "%s: no request active\n",
                        "s3c_hsotg_handle_outdone");
      }
    } else {

    }
#line 1397
    return;
  } else {

  }
  {
#line 1400
  tmp___1 = using_dma(hsotg);
  }
#line 1400
  if ((int )tmp___1) {
#line 1412
    size_done = hs_ep->size_loaded - size_left;
#line 1413
    size_done = size_done + hs_ep->last_load;
#line 1415
    req->actual = size_done;
  } else {

  }
#line 1419
  if (req->actual < req->length && size_left == 0U) {
    {
#line 1420
    s3c_hsotg_start_req(hsotg, hs_ep, hs_req, 1);
    }
#line 1421
    return;
  } else
#line 1422
  if (epnum == 0) {
#line 1427
    hsotg->setup = (int )was_setup ? 0U : 1U;
  } else {

  }
#line 1430
  if (req->actual < req->length && (unsigned int )*((unsigned char *)req + 42UL) != 0U) {
    {
#line 1431
    descriptor___0.modname = "dwc2_gadget";
#line 1431
    descriptor___0.function = "s3c_hsotg_handle_outdone";
#line 1431
    descriptor___0.filename = "drivers/usb/dwc2/gadget.c";
#line 1431
    descriptor___0.format = "%s: got %d/%d (short not ok) => error\n";
#line 1431
    descriptor___0.lineno = 1432U;
#line 1431
    descriptor___0.flags = 1U;
#line 1431
    tmp___2 = __builtin_expect((long )descriptor___0.flags & 1L, 0L);
    }
#line 1431
    if (tmp___2 != 0L) {
      {
#line 1431
      __dynamic_dev_dbg(& descriptor___0, (struct device  const  *)hsotg->dev, "%s: got %d/%d (short not ok) => error\n",
                        "s3c_hsotg_handle_outdone", req->actual, req->length);
      }
    } else {

    }
  } else {

  }
#line 1440
  if (epnum == 0) {
#line 1445
    if (! was_setup && (unsigned long )req->complete != (unsigned long )(& s3c_hsotg_complete_setup)) {
      {
#line 1446
      s3c_hsotg_send_zlp(hsotg, hs_req);
      }
    } else {

    }
  } else {

  }
  {
#line 1449
  s3c_hsotg_complete_request(hsotg, hs_ep, hs_req, result);
  }
#line 1450
  return;
}
}
#line 1458 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static u32 s3c_hsotg_read_frameno(struct s3c_hsotg *hsotg ) 
{ 
  u32 dsts ;

  {
  {
#line 1462
  dsts = readl((void const volatile   *)(hsotg->regs + 2056UL));
#line 1463
  dsts = dsts & 4194048U;
#line 1464
  dsts = dsts >> 8;
  }
#line 1466
  return (dsts);
}
}
#line 1485 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_handle_rx(struct s3c_hsotg *hsotg ) 
{ 
  u32 grxstsr ;
  unsigned int tmp ;
  u32 epnum ;
  u32 status ;
  u32 size ;
  int __ret_warn_on ;
  bool tmp___0 ;
  long tmp___1 ;
  struct _ddebug descriptor ;
  long tmp___2 ;
  struct _ddebug descriptor___0 ;
  long tmp___3 ;
  struct _ddebug descriptor___1 ;
  u32 tmp___4 ;
  long tmp___5 ;
  bool tmp___6 ;
  int tmp___7 ;
  struct _ddebug descriptor___2 ;
  unsigned int tmp___8 ;
  u32 tmp___9 ;
  long tmp___10 ;
  struct _ddebug descriptor___3 ;
  unsigned int tmp___11 ;
  u32 tmp___12 ;
  long tmp___13 ;

  {
  {
#line 1487
  tmp = readl((void const volatile   *)(hsotg->regs + 32UL));
#line 1487
  grxstsr = tmp;
#line 1490
  tmp___0 = using_dma(hsotg);
#line 1490
  __ret_warn_on = (int )tmp___0;
#line 1490
  tmp___1 = __builtin_expect(__ret_warn_on != 0, 0L);
  }
#line 1490
  if (tmp___1 != 0L) {
    {
#line 1490
    warn_slowpath_null("drivers/usb/dwc2/gadget.c", 1490);
    }
  } else {

  }
  {
#line 1490
  __builtin_expect(__ret_warn_on != 0, 0L);
#line 1492
  epnum = grxstsr & 15U;
#line 1493
  status = grxstsr & 1966080U;
#line 1495
  size = grxstsr & 32752U;
#line 1496
  size = size >> 4;
#line 1499
  descriptor.modname = "dwc2_gadget";
#line 1499
  descriptor.function = "s3c_hsotg_handle_rx";
#line 1499
  descriptor.filename = "drivers/usb/dwc2/gadget.c";
#line 1499
  descriptor.format = "%s: GRXSTSP=0x%08x (%d@%d)\n";
#line 1499
  descriptor.lineno = 1500U;
#line 1499
  descriptor.flags = 1U;
#line 1499
  tmp___2 = __builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 1499
  if (tmp___2 != 0L) {
    {
#line 1499
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)hsotg->dev, "%s: GRXSTSP=0x%08x (%d@%d)\n",
                      "s3c_hsotg_handle_rx", grxstsr, size, epnum);
    }
  } else {

  }
  {
#line 1503
  if ((status & 1966080U) >> 17 == 1U) {
#line 1503
    goto case_1;
  } else {

  }
#line 1507
  if ((status & 1966080U) >> 17 == 3U) {
#line 1507
    goto case_3;
  } else {

  }
#line 1515
  if ((status & 1966080U) >> 17 == 4U) {
#line 1515
    goto case_4;
  } else {

  }
#line 1524
  if ((status & 1966080U) >> 17 == 2U) {
#line 1524
    goto case_2;
  } else {

  }
#line 1528
  if ((status & 1966080U) >> 17 == 6U) {
#line 1528
    goto case_6;
  } else {

  }
#line 1537
  goto switch_default;
  case_1: /* CIL Label */ 
  {
#line 1504
  descriptor___0.modname = "dwc2_gadget";
#line 1504
  descriptor___0.function = "s3c_hsotg_handle_rx";
#line 1504
  descriptor___0.filename = "drivers/usb/dwc2/gadget.c";
#line 1504
  descriptor___0.format = "GLOBALOUTNAK\n";
#line 1504
  descriptor___0.lineno = 1504U;
#line 1504
  descriptor___0.flags = 1U;
#line 1504
  tmp___3 = __builtin_expect((long )descriptor___0.flags & 1L, 0L);
  }
#line 1504
  if (tmp___3 != 0L) {
    {
#line 1504
    __dynamic_dev_dbg(& descriptor___0, (struct device  const  *)hsotg->dev, "GLOBALOUTNAK\n");
    }
  } else {

  }
#line 1505
  goto ldv_33584;
  case_3: /* CIL Label */ 
  {
#line 1508
  descriptor___1.modname = "dwc2_gadget";
#line 1508
  descriptor___1.function = "s3c_hsotg_handle_rx";
#line 1508
  descriptor___1.filename = "drivers/usb/dwc2/gadget.c";
#line 1508
  descriptor___1.format = "OutDone (Frame=0x%08x)\n";
#line 1508
  descriptor___1.lineno = 1509U;
#line 1508
  descriptor___1.flags = 1U;
#line 1508
  tmp___5 = __builtin_expect((long )descriptor___1.flags & 1L, 0L);
  }
#line 1508
  if (tmp___5 != 0L) {
    {
#line 1508
    tmp___4 = s3c_hsotg_read_frameno(hsotg);
#line 1508
    __dynamic_dev_dbg(& descriptor___1, (struct device  const  *)hsotg->dev, "OutDone (Frame=0x%08x)\n",
                      tmp___4);
    }
  } else {

  }
  {
#line 1511
  tmp___6 = using_dma(hsotg);
  }
#line 1511
  if (tmp___6) {
#line 1511
    tmp___7 = 0;
  } else {
#line 1511
    tmp___7 = 1;
  }
#line 1511
  if (tmp___7) {
    {
#line 1512
    s3c_hsotg_handle_outdone(hsotg, (int )epnum, 0);
    }
  } else {

  }
#line 1513
  goto ldv_33584;
  case_4: /* CIL Label */ 
  {
#line 1516
  descriptor___2.modname = "dwc2_gadget";
#line 1516
  descriptor___2.function = "s3c_hsotg_handle_rx";
#line 1516
  descriptor___2.filename = "drivers/usb/dwc2/gadget.c";
#line 1516
  descriptor___2.format = "SetupDone (Frame=0x%08x, DOPEPCTL=0x%08x)\n";
#line 1516
  descriptor___2.lineno = 1519U;
#line 1516
  descriptor___2.flags = 1U;
#line 1516
  tmp___10 = __builtin_expect((long )descriptor___2.flags & 1L, 0L);
  }
#line 1516
  if (tmp___10 != 0L) {
    {
#line 1516
    tmp___8 = readl((void const volatile   *)(hsotg->regs + 2816UL));
#line 1516
    tmp___9 = s3c_hsotg_read_frameno(hsotg);
#line 1516
    __dynamic_dev_dbg(& descriptor___2, (struct device  const  *)hsotg->dev, "SetupDone (Frame=0x%08x, DOPEPCTL=0x%08x)\n",
                      tmp___9, tmp___8);
    }
  } else {

  }
  {
#line 1521
  s3c_hsotg_handle_outdone(hsotg, (int )epnum, 1);
  }
#line 1522
  goto ldv_33584;
  case_2: /* CIL Label */ 
  {
#line 1525
  s3c_hsotg_rx_data(hsotg, (int )epnum, (int )size);
  }
#line 1526
  goto ldv_33584;
  case_6: /* CIL Label */ 
  {
#line 1529
  descriptor___3.modname = "dwc2_gadget";
#line 1529
  descriptor___3.function = "s3c_hsotg_handle_rx";
#line 1529
  descriptor___3.filename = "drivers/usb/dwc2/gadget.c";
#line 1529
  descriptor___3.format = "SetupRX (Frame=0x%08x, DOPEPCTL=0x%08x)\n";
#line 1529
  descriptor___3.lineno = 1532U;
#line 1529
  descriptor___3.flags = 1U;
#line 1529
  tmp___13 = __builtin_expect((long )descriptor___3.flags & 1L, 0L);
  }
#line 1529
  if (tmp___13 != 0L) {
    {
#line 1529
    tmp___11 = readl((void const volatile   *)(hsotg->regs + 2816UL));
#line 1529
    tmp___12 = s3c_hsotg_read_frameno(hsotg);
#line 1529
    __dynamic_dev_dbg(& descriptor___3, (struct device  const  *)hsotg->dev, "SetupRX (Frame=0x%08x, DOPEPCTL=0x%08x)\n",
                      tmp___12, tmp___11);
    }
  } else {

  }
  {
#line 1534
  s3c_hsotg_rx_data(hsotg, (int )epnum, (int )size);
  }
#line 1535
  goto ldv_33584;
  switch_default: /* CIL Label */ 
  {
#line 1538
  dev_warn((struct device  const  *)hsotg->dev, "%s: unknown status %08x\n", "s3c_hsotg_handle_rx",
           grxstsr);
#line 1541
  s3c_hsotg_dump(hsotg);
  }
#line 1542
  goto ldv_33584;
  switch_break: /* CIL Label */ ;
  }
  ldv_33584: ;
#line 1545
  return;
}
}
#line 1550 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static u32 s3c_hsotg_ep0_mps(unsigned int mps ) 
{ 
  int __ret_warn_on ;
  long tmp ;

  {
  {
#line 1553
  if (mps == 64U) {
#line 1553
    goto case_64;
  } else {

  }
#line 1555
  if (mps == 32U) {
#line 1555
    goto case_32;
  } else {

  }
#line 1557
  if (mps == 16U) {
#line 1557
    goto case_16;
  } else {

  }
#line 1559
  if (mps == 8U) {
#line 1559
    goto case_8;
  } else {

  }
#line 1552
  goto switch_break;
  case_64: /* CIL Label */ ;
#line 1554
  return (0U);
  case_32: /* CIL Label */ ;
#line 1556
  return (1U);
  case_16: /* CIL Label */ ;
#line 1558
  return (2U);
  case_8: /* CIL Label */ ;
#line 1560
  return (3U);
  switch_break: /* CIL Label */ ;
  }
  {
#line 1564
  __ret_warn_on = 1;
#line 1564
  tmp = __builtin_expect(__ret_warn_on != 0, 0L);
  }
#line 1564
  if (tmp != 0L) {
    {
#line 1564
    warn_slowpath_null("drivers/usb/dwc2/gadget.c", 1564);
    }
  } else {

  }
  {
#line 1564
  __builtin_expect(__ret_warn_on != 0, 0L);
  }
#line 1565
  return (4294967295U);
}
}
#line 1577 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_set_ep_maxpacket(struct s3c_hsotg *hsotg , unsigned int ep ,
                                       unsigned int mps ) 
{ 
  struct s3c_hsotg_ep *hs_ep ;
  void *regs ;
  u32 mpsval ;
  u32 mcval ;
  u32 reg ;

  {
#line 1580
  hs_ep = hsotg->eps + (unsigned long )ep;
#line 1581
  regs = hsotg->regs;
#line 1586
  if (ep == 0U) {
    {
#line 1588
    mpsval = s3c_hsotg_ep0_mps(mps);
    }
#line 1589
    if (mpsval > 3U) {
#line 1590
      goto bad_mps;
    } else {

    }
#line 1591
    hs_ep->ep.maxpacket = (unsigned short )mps;
#line 1592
    hs_ep->mc = 1U;
  } else {
#line 1594
    mpsval = mps & 2047U;
#line 1595
    if (mpsval > 1024U) {
#line 1596
      goto bad_mps;
    } else {

    }
#line 1597
    mcval = ((mps >> 11) & 3U) + 1U;
#line 1598
    hs_ep->mc = (unsigned char )mcval;
#line 1599
    if (mcval > 3U) {
#line 1600
      goto bad_mps;
    } else {

    }
#line 1601
    hs_ep->ep.maxpacket = (unsigned short )mpsval;
  }
  {
#line 1609
  reg = readl((void const volatile   *)(regs + (unsigned long )((ep + 72U) * 32U)));
#line 1610
  reg = reg & 4294965248U;
#line 1611
  reg = reg | mpsval;
#line 1612
  writel(reg, (void volatile   *)(regs + (unsigned long )((ep + 72U) * 32U)));
  }
#line 1614
  if (ep != 0U) {
    {
#line 1615
    reg = readl((void const volatile   *)(regs + (unsigned long )((ep + 88U) * 32U)));
#line 1616
    reg = reg & 4294965248U;
#line 1617
    reg = reg | mpsval;
#line 1618
    writel(reg, (void volatile   *)(regs + (unsigned long )((ep + 88U) * 32U)));
    }
  } else {

  }
#line 1621
  return;
  bad_mps: 
  {
#line 1624
  dev_err((struct device  const  *)hsotg->dev, "ep%d: bad mps of %d\n", ep, mps);
  }
#line 1625
  return;
}
}
#line 1632 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_txfifo_flush(struct s3c_hsotg *hsotg , unsigned int idx ) 
{ 
  int timeout ;
  int val ;
  unsigned int tmp ;

  {
  {
#line 1637
  writel((idx << 6) | 32U, (void volatile   *)(hsotg->regs + 16UL));
#line 1641
  timeout = 100;
  }
  ldv_33621: 
  {
#line 1644
  tmp = readl((void const volatile   *)(hsotg->regs + 16UL));
#line 1644
  val = (int )tmp;
  }
#line 1646
  if ((val & 32) == 0) {
#line 1647
    goto ldv_33619;
  } else {

  }
#line 1649
  timeout = timeout - 1;
#line 1649
  if (timeout == 0) {
    {
#line 1650
    dev_err((struct device  const  *)hsotg->dev, "%s: timeout flushing fifo (GRSTCTL=%08x)\n",
            "s3c_hsotg_txfifo_flush", val);
    }
#line 1653
    goto ldv_33619;
  } else {

  }
  {
#line 1656
  __const_udelay(4295UL);
  }
#line 1657
  goto ldv_33621;
  ldv_33619: ;
#line 1659
  return;
}
}
#line 1668 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static int s3c_hsotg_trytx(struct s3c_hsotg *hsotg , struct s3c_hsotg_ep *hs_ep ) 
{ 
  struct s3c_hsotg_req *hs_req ;
  struct _ddebug descriptor ;
  long tmp ;
  int tmp___0 ;

  {
#line 1671
  hs_req = hs_ep->req;
#line 1673
  if ((unsigned int )hs_ep->dir_in == 0U || (unsigned long )hs_req == (unsigned long )((struct s3c_hsotg_req *)0)) {
#line 1678
    if ((unsigned int )hs_ep->index != 0U) {
      {
#line 1679
      s3c_hsotg_ctrl_epint(hsotg, (unsigned int )hs_ep->index, (unsigned int )hs_ep->dir_in,
                           0U);
      }
    } else {

    }
#line 1681
    return (0);
  } else {

  }
#line 1684
  if (hs_req->req.actual < hs_req->req.length) {
    {
#line 1685
    descriptor.modname = "dwc2_gadget";
#line 1685
    descriptor.function = "s3c_hsotg_trytx";
#line 1685
    descriptor.filename = "drivers/usb/dwc2/gadget.c";
#line 1685
    descriptor.format = "trying to write more for ep%d\n";
#line 1685
    descriptor.lineno = 1686U;
#line 1685
    descriptor.flags = 1U;
#line 1685
    tmp = __builtin_expect((long )descriptor.flags & 1L, 0L);
    }
#line 1685
    if (tmp != 0L) {
      {
#line 1685
      __dynamic_dev_dbg(& descriptor, (struct device  const  *)hsotg->dev, "trying to write more for ep%d\n",
                        (int )hs_ep->index);
      }
    } else {

    }
    {
#line 1687
    tmp___0 = s3c_hsotg_write_fifo(hsotg, hs_ep, hs_req);
    }
#line 1687
    return (tmp___0);
  } else {

  }
#line 1690
  return (0);
}
}
#line 1701 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_complete_in(struct s3c_hsotg *hsotg , struct s3c_hsotg_ep *hs_ep ) 
{ 
  struct s3c_hsotg_req *hs_req ;
  u32 epsize ;
  unsigned int tmp ;
  int size_left ;
  int size_done ;
  struct _ddebug descriptor ;
  long tmp___0 ;
  struct _ddebug descriptor___0 ;
  long tmp___1 ;
  struct _ddebug descriptor___1 ;
  long tmp___2 ;
  struct _ddebug descriptor___2 ;
  long tmp___3 ;
  struct _ddebug descriptor___3 ;
  long tmp___4 ;
  struct _ddebug descriptor___4 ;
  long tmp___5 ;

  {
  {
#line 1704
  hs_req = hs_ep->req;
#line 1705
  tmp = readl((void const volatile   *)(hsotg->regs + (unsigned long )((int )hs_ep->index * 32 + 2320)));
#line 1705
  epsize = tmp;
  }
#line 1708
  if ((unsigned long )hs_req == (unsigned long )((struct s3c_hsotg_req *)0)) {
    {
#line 1709
    descriptor.modname = "dwc2_gadget";
#line 1709
    descriptor.function = "s3c_hsotg_complete_in";
#line 1709
    descriptor.filename = "drivers/usb/dwc2/gadget.c";
#line 1709
    descriptor.format = "XferCompl but no req\n";
#line 1709
    descriptor.lineno = 1709U;
#line 1709
    descriptor.flags = 1U;
#line 1709
    tmp___0 = __builtin_expect((long )descriptor.flags & 1L, 0L);
    }
#line 1709
    if (tmp___0 != 0L) {
      {
#line 1709
      __dynamic_dev_dbg(& descriptor, (struct device  const  *)hsotg->dev, "XferCompl but no req\n");
      }
    } else {

    }
#line 1710
    return;
  } else {

  }
#line 1714
  if ((unsigned int )*((unsigned char *)hsotg->eps + 130UL) != 0U) {
    {
#line 1715
    descriptor___0.modname = "dwc2_gadget";
#line 1715
    descriptor___0.function = "s3c_hsotg_complete_in";
#line 1715
    descriptor___0.filename = "drivers/usb/dwc2/gadget.c";
#line 1715
    descriptor___0.format = "zlp packet received\n";
#line 1715
    descriptor___0.lineno = 1715U;
#line 1715
    descriptor___0.flags = 1U;
#line 1715
    tmp___1 = __builtin_expect((long )descriptor___0.flags & 1L, 0L);
    }
#line 1715
    if (tmp___1 != 0L) {
      {
#line 1715
      __dynamic_dev_dbg(& descriptor___0, (struct device  const  *)hsotg->dev, "zlp packet received\n");
      }
    } else {

    }
    {
#line 1716
    s3c_hsotg_complete_request(hsotg, hs_ep, hs_req, 0);
    }
#line 1717
    return;
  } else {

  }
#line 1730
  size_left = (int )epsize & 524287;
#line 1732
  size_done = (int )(hs_ep->size_loaded - (unsigned int )size_left);
#line 1733
  size_done = (int )((unsigned int )size_done + hs_ep->last_load);
#line 1735
  if (hs_req->req.actual != (unsigned int )size_done) {
    {
#line 1736
    descriptor___1.modname = "dwc2_gadget";
#line 1736
    descriptor___1.function = "s3c_hsotg_complete_in";
#line 1736
    descriptor___1.filename = "drivers/usb/dwc2/gadget.c";
#line 1736
    descriptor___1.format = "%s: adjusting size done %d => %d\n";
#line 1736
    descriptor___1.lineno = 1737U;
#line 1736
    descriptor___1.flags = 1U;
#line 1736
    tmp___2 = __builtin_expect((long )descriptor___1.flags & 1L, 0L);
    }
#line 1736
    if (tmp___2 != 0L) {
      {
#line 1736
      __dynamic_dev_dbg(& descriptor___1, (struct device  const  *)hsotg->dev, "%s: adjusting size done %d => %d\n",
                        "s3c_hsotg_complete_in", hs_req->req.actual, size_done);
      }
    } else {

    }
  } else {

  }
  {
#line 1739
  hs_req->req.actual = (unsigned int )size_done;
#line 1740
  descriptor___2.modname = "dwc2_gadget";
#line 1740
  descriptor___2.function = "s3c_hsotg_complete_in";
#line 1740
  descriptor___2.filename = "drivers/usb/dwc2/gadget.c";
#line 1740
  descriptor___2.format = "req->length:%d req->actual:%d req->zero:%d\n";
#line 1740
  descriptor___2.lineno = 1741U;
#line 1740
  descriptor___2.flags = 1U;
#line 1740
  tmp___3 = __builtin_expect((long )descriptor___2.flags & 1L, 0L);
  }
#line 1740
  if (tmp___3 != 0L) {
    {
#line 1740
    __dynamic_dev_dbg(& descriptor___2, (struct device  const  *)hsotg->dev, "req->length:%d req->actual:%d req->zero:%d\n",
                      hs_req->req.length, hs_req->req.actual, (int )hs_req->req.zero);
    }
  } else {

  }
#line 1753
  if ((((hs_req->req.length != 0U && (unsigned int )hs_ep->index == 0U) && (unsigned int )*((unsigned char *)hs_req + 42UL) != 0U) && hs_req->req.length == hs_req->req.actual) && hs_req->req.length % hs_ep->ep.maxpacket == 0U) {
    {
#line 1757
    descriptor___3.modname = "dwc2_gadget";
#line 1757
    descriptor___3.function = "s3c_hsotg_complete_in";
#line 1757
    descriptor___3.filename = "drivers/usb/dwc2/gadget.c";
#line 1757
    descriptor___3.format = "ep0 zlp IN packet sent\n";
#line 1757
    descriptor___3.lineno = 1757U;
#line 1757
    descriptor___3.flags = 1U;
#line 1757
    tmp___4 = __builtin_expect((long )descriptor___3.flags & 1L, 0L);
    }
#line 1757
    if (tmp___4 != 0L) {
      {
#line 1757
      __dynamic_dev_dbg(& descriptor___3, (struct device  const  *)hsotg->dev, "ep0 zlp IN packet sent\n");
      }
    } else {

    }
    {
#line 1758
    s3c_hsotg_send_zlp(hsotg, hs_req);
    }
#line 1760
    return;
  } else {

  }
#line 1763
  if (size_left == 0 && hs_req->req.actual < hs_req->req.length) {
    {
#line 1764
    descriptor___4.modname = "dwc2_gadget";
#line 1764
    descriptor___4.function = "s3c_hsotg_complete_in";
#line 1764
    descriptor___4.filename = "drivers/usb/dwc2/gadget.c";
#line 1764
    descriptor___4.format = "%s trying more for req...\n";
#line 1764
    descriptor___4.lineno = 1764U;
#line 1764
    descriptor___4.flags = 1U;
#line 1764
    tmp___5 = __builtin_expect((long )descriptor___4.flags & 1L, 0L);
    }
#line 1764
    if (tmp___5 != 0L) {
      {
#line 1764
      __dynamic_dev_dbg(& descriptor___4, (struct device  const  *)hsotg->dev, "%s trying more for req...\n",
                        "s3c_hsotg_complete_in");
      }
    } else {

    }
    {
#line 1765
    s3c_hsotg_start_req(hsotg, hs_ep, hs_req, 1);
    }
  } else {
    {
#line 1767
    s3c_hsotg_complete_request(hsotg, hs_ep, hs_req, 0);
    }
  }
#line 1768
  return;
}
}
#line 1778 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_epint(struct s3c_hsotg *hsotg , unsigned int idx , int dir_in ) 
{ 
  struct s3c_hsotg_ep *hs_ep ;
  u32 epint_reg ;
  u32 epctl_reg ;
  u32 epsiz_reg ;
  u32 ints ;
  u32 ctrl ;
  struct _ddebug descriptor ;
  long tmp ;
  struct _ddebug descriptor___0 ;
  unsigned int tmp___0 ;
  unsigned int tmp___1 ;
  long tmp___2 ;
  bool tmp___3 ;
  struct _ddebug descriptor___1 ;
  long tmp___4 ;
  int epctl ;
  unsigned int tmp___5 ;
  int dctl ;
  unsigned int tmp___6 ;
  struct _ddebug descriptor___2 ;
  long tmp___7 ;
  struct _ddebug descriptor___3 ;
  long tmp___8 ;
  bool __warned ;
  int __ret_warn_once ;
  int __ret_warn_on ;
  long tmp___9 ;
  long tmp___10 ;
  long tmp___11 ;
  bool tmp___12 ;
  struct _ddebug descriptor___4 ;
  long tmp___13 ;
  struct _ddebug descriptor___5 ;
  long tmp___14 ;
  struct _ddebug descriptor___6 ;
  long tmp___15 ;
  bool tmp___16 ;
  int tmp___17 ;

  {
  {
#line 1781
  hs_ep = hsotg->eps + (unsigned long )idx;
#line 1782
  epint_reg = dir_in != 0 ? idx * 32U + 2312U : idx * 32U + 2824U;
#line 1783
  epctl_reg = dir_in != 0 ? (idx + 72U) * 32U : (idx + 88U) * 32U;
#line 1784
  epsiz_reg = dir_in != 0 ? idx * 32U + 2320U : idx * 32U + 2832U;
#line 1788
  ints = readl((void const volatile   *)(hsotg->regs + (unsigned long )epint_reg));
#line 1789
  ctrl = readl((void const volatile   *)(hsotg->regs + (unsigned long )epctl_reg));
#line 1792
  writel(ints, (void volatile   *)(hsotg->regs + (unsigned long )epint_reg));
#line 1794
  descriptor.modname = "dwc2_gadget";
#line 1794
  descriptor.function = "s3c_hsotg_epint";
#line 1794
  descriptor.filename = "drivers/usb/dwc2/gadget.c";
#line 1794
  descriptor.format = "%s: ep%d(%s) DxEPINT=0x%08x\n";
#line 1794
  descriptor.lineno = 1795U;
#line 1794
  descriptor.flags = 1U;
#line 1794
  tmp = __builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 1794
  if (tmp != 0L) {
    {
#line 1794
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)hsotg->dev, "%s: ep%d(%s) DxEPINT=0x%08x\n",
                      "s3c_hsotg_epint", idx, dir_in != 0 ? (char *)"in" : (char *)"out",
                      ints);
    }
  } else {

  }
#line 1797
  if ((int )ints & 1) {
#line 1798
    if (*((unsigned int *)hs_ep + 32UL) == 262400U) {
#line 1799
      if ((ctrl & 65536U) != 0U) {
#line 1800
        ctrl = ctrl | 268435456U;
      } else {
#line 1802
        ctrl = ctrl | 536870912U;
      }
      {
#line 1803
      writel(ctrl, (void volatile   *)(hsotg->regs + (unsigned long )epctl_reg));
      }
    } else {

    }
    {
#line 1806
    descriptor___0.modname = "dwc2_gadget";
#line 1806
    descriptor___0.function = "s3c_hsotg_epint";
#line 1806
    descriptor___0.filename = "drivers/usb/dwc2/gadget.c";
#line 1806
    descriptor___0.format = "%s: XferCompl: DxEPCTL=0x%08x, DXEPTSIZ=%08x\n";
#line 1806
    descriptor___0.lineno = 1809U;
#line 1806
    descriptor___0.flags = 1U;
#line 1806
    tmp___2 = __builtin_expect((long )descriptor___0.flags & 1L, 0L);
    }
#line 1806
    if (tmp___2 != 0L) {
      {
#line 1806
      tmp___0 = readl((void const volatile   *)(hsotg->regs + (unsigned long )epsiz_reg));
#line 1806
      tmp___1 = readl((void const volatile   *)(hsotg->regs + (unsigned long )epctl_reg));
#line 1806
      __dynamic_dev_dbg(& descriptor___0, (struct device  const  *)hsotg->dev, "%s: XferCompl: DxEPCTL=0x%08x, DXEPTSIZ=%08x\n",
                        "s3c_hsotg_epint", tmp___1, tmp___0);
      }
    } else {

    }
#line 1815
    if (dir_in != 0) {
      {
#line 1816
      s3c_hsotg_complete_in(hsotg, hs_ep);
      }
#line 1818
      if (idx == 0U && (unsigned long )hs_ep->req == (unsigned long )((struct s3c_hsotg_req *)0)) {
        {
#line 1819
        s3c_hsotg_enqueue_setup(hsotg);
        }
      } else {

      }
    } else {
      {
#line 1820
      tmp___3 = using_dma(hsotg);
      }
#line 1820
      if ((int )tmp___3) {
        {
#line 1826
        s3c_hsotg_handle_outdone(hsotg, (int )idx, 0);
        }
      } else {

      }
    }
  } else {

  }
#line 1830
  if ((ints & 2U) != 0U) {
    {
#line 1831
    descriptor___1.modname = "dwc2_gadget";
#line 1831
    descriptor___1.function = "s3c_hsotg_epint";
#line 1831
    descriptor___1.filename = "drivers/usb/dwc2/gadget.c";
#line 1831
    descriptor___1.format = "%s: EPDisbld\n";
#line 1831
    descriptor___1.lineno = 1831U;
#line 1831
    descriptor___1.flags = 1U;
#line 1831
    tmp___4 = __builtin_expect((long )descriptor___1.flags & 1L, 0L);
    }
#line 1831
    if (tmp___4 != 0L) {
      {
#line 1831
      __dynamic_dev_dbg(& descriptor___1, (struct device  const  *)hsotg->dev, "%s: EPDisbld\n",
                        "s3c_hsotg_epint");
      }
    } else {

    }
#line 1833
    if (dir_in != 0) {
      {
#line 1834
      tmp___5 = readl((void const volatile   *)(hsotg->regs + (unsigned long )epctl_reg));
#line 1834
      epctl = (int )tmp___5;
#line 1836
      s3c_hsotg_txfifo_flush(hsotg, idx);
      }
#line 1838
      if (((unsigned int )epctl & 2621440U) == 2621440U) {
        {
#line 1840
        tmp___6 = readl((void const volatile   *)(hsotg->regs + 2052UL));
#line 1840
        dctl = (int )tmp___6;
#line 1842
        dctl = dctl | 256;
#line 1843
        writel((unsigned int )dctl, (void volatile   *)(hsotg->regs + 2052UL));
        }
      } else {

      }
    } else {

    }
  } else {

  }
#line 1848
  if ((ints & 4U) != 0U) {
    {
#line 1849
    descriptor___2.modname = "dwc2_gadget";
#line 1849
    descriptor___2.function = "s3c_hsotg_epint";
#line 1849
    descriptor___2.filename = "drivers/usb/dwc2/gadget.c";
#line 1849
    descriptor___2.format = "%s: AHBErr\n";
#line 1849
    descriptor___2.lineno = 1849U;
#line 1849
    descriptor___2.flags = 1U;
#line 1849
    tmp___7 = __builtin_expect((long )descriptor___2.flags & 1L, 0L);
    }
#line 1849
    if (tmp___7 != 0L) {
      {
#line 1849
      __dynamic_dev_dbg(& descriptor___2, (struct device  const  *)hsotg->dev, "%s: AHBErr\n",
                        "s3c_hsotg_epint");
      }
    } else {

    }
  } else {

  }
#line 1851
  if ((ints & 8U) != 0U) {
    {
#line 1852
    descriptor___3.modname = "dwc2_gadget";
#line 1852
    descriptor___3.function = "s3c_hsotg_epint";
#line 1852
    descriptor___3.filename = "drivers/usb/dwc2/gadget.c";
#line 1852
    descriptor___3.format = "%s: Setup/Timeout\n";
#line 1852
    descriptor___3.lineno = 1852U;
#line 1852
    descriptor___3.flags = 1U;
#line 1852
    tmp___8 = __builtin_expect((long )descriptor___3.flags & 1L, 0L);
    }
#line 1852
    if (tmp___8 != 0L) {
      {
#line 1852
      __dynamic_dev_dbg(& descriptor___3, (struct device  const  *)hsotg->dev, "%s: Setup/Timeout\n",
                        "s3c_hsotg_epint");
      }
    } else {

    }
    {
#line 1854
    tmp___12 = using_dma(hsotg);
    }
#line 1854
    if ((int )tmp___12 && idx == 0U) {
#line 1862
      if (dir_in != 0) {
        {
#line 1863
        __ret_warn_once = 1;
#line 1863
        tmp___11 = __builtin_expect(__ret_warn_once != 0, 0L);
        }
#line 1863
        if (tmp___11 != 0L) {
          {
#line 1863
          __ret_warn_on = ! __warned;
#line 1863
          tmp___9 = __builtin_expect(__ret_warn_on != 0, 0L);
          }
#line 1863
          if (tmp___9 != 0L) {
            {
#line 1863
            warn_slowpath_null("drivers/usb/dwc2/gadget.c", 1863);
            }
          } else {

          }
          {
#line 1863
          tmp___10 = __builtin_expect(__ret_warn_on != 0, 0L);
          }
#line 1863
          if (tmp___10 != 0L) {
#line 1863
            __warned = 1;
          } else {

          }
        } else {

        }
        {
#line 1863
        __builtin_expect(__ret_warn_once != 0, 0L);
        }
      } else {
        {
#line 1865
        s3c_hsotg_handle_outdone(hsotg, 0, 1);
        }
      }
    } else {

    }
  } else {

  }
#line 1869
  if ((ints & 64U) != 0U) {
    {
#line 1870
    descriptor___4.modname = "dwc2_gadget";
#line 1870
    descriptor___4.function = "s3c_hsotg_epint";
#line 1870
    descriptor___4.filename = "drivers/usb/dwc2/gadget.c";
#line 1870
    descriptor___4.format = "%s: B2BSetup/INEPNakEff\n";
#line 1870
    descriptor___4.lineno = 1870U;
#line 1870
    descriptor___4.flags = 1U;
#line 1870
    tmp___13 = __builtin_expect((long )descriptor___4.flags & 1L, 0L);
    }
#line 1870
    if (tmp___13 != 0L) {
      {
#line 1870
      __dynamic_dev_dbg(& descriptor___4, (struct device  const  *)hsotg->dev, "%s: B2BSetup/INEPNakEff\n",
                        "s3c_hsotg_epint");
      }
    } else {

    }
  } else {

  }
#line 1872
  if (dir_in != 0 && (unsigned int )*((unsigned char *)hs_ep + 130UL) == 0U) {
#line 1874
    if ((ints & 16U) != 0U) {
      {
#line 1875
      descriptor___5.modname = "dwc2_gadget";
#line 1875
      descriptor___5.function = "s3c_hsotg_epint";
#line 1875
      descriptor___5.filename = "drivers/usb/dwc2/gadget.c";
#line 1875
      descriptor___5.format = "%s: ep%d: INTknTXFEmpMsk\n";
#line 1875
      descriptor___5.lineno = 1876U;
#line 1875
      descriptor___5.flags = 1U;
#line 1875
      tmp___14 = __builtin_expect((long )descriptor___5.flags & 1L, 0L);
      }
#line 1875
      if (tmp___14 != 0L) {
        {
#line 1875
        __dynamic_dev_dbg(& descriptor___5, (struct device  const  *)hsotg->dev, "%s: ep%d: INTknTXFEmpMsk\n",
                          "s3c_hsotg_epint", idx);
        }
      } else {

      }
    } else {

    }
#line 1880
    if ((ints & 32U) != 0U) {
      {
#line 1881
      dev_warn((struct device  const  *)hsotg->dev, "%s: ep%d: INTknEP\n", "s3c_hsotg_epint",
               idx);
      }
    } else {

    }
#line 1886
    if ((unsigned int )*((unsigned char *)hsotg + 188UL) != 0U && (ints & 128U) != 0U) {
      {
#line 1888
      descriptor___6.modname = "dwc2_gadget";
#line 1888
      descriptor___6.function = "s3c_hsotg_epint";
#line 1888
      descriptor___6.filename = "drivers/usb/dwc2/gadget.c";
#line 1888
      descriptor___6.format = "%s: ep%d: TxFIFOEmpty\n";
#line 1888
      descriptor___6.lineno = 1889U;
#line 1888
      descriptor___6.flags = 1U;
#line 1888
      tmp___15 = __builtin_expect((long )descriptor___6.flags & 1L, 0L);
      }
#line 1888
      if (tmp___15 != 0L) {
        {
#line 1888
        __dynamic_dev_dbg(& descriptor___6, (struct device  const  *)hsotg->dev, "%s: ep%d: TxFIFOEmpty\n",
                          "s3c_hsotg_epint", idx);
        }
      } else {

      }
      {
#line 1890
      tmp___16 = using_dma(hsotg);
      }
#line 1890
      if (tmp___16) {
#line 1890
        tmp___17 = 0;
      } else {
#line 1890
        tmp___17 = 1;
      }
#line 1890
      if (tmp___17) {
        {
#line 1891
        s3c_hsotg_trytx(hsotg, hs_ep);
        }
      } else {

      }
    } else {

    }
  } else {

  }
#line 1894
  return;
}
}
#line 1903 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_irq_enumdone(struct s3c_hsotg *hsotg ) 
{ 
  u32 dsts ;
  unsigned int tmp ;
  int ep0_mps ;
  int ep_mps ;
  struct _ddebug descriptor ;
  long tmp___0 ;
  char const   *tmp___1 ;
  int i ;
  struct _ddebug descriptor___0 ;
  unsigned int tmp___2 ;
  unsigned int tmp___3 ;
  long tmp___4 ;

  {
  {
#line 1905
  tmp = readl((void const volatile   *)(hsotg->regs + 2056UL));
#line 1905
  dsts = tmp;
#line 1906
  ep0_mps = 0;
#line 1914
  descriptor.modname = "dwc2_gadget";
#line 1914
  descriptor.function = "s3c_hsotg_irq_enumdone";
#line 1914
  descriptor.filename = "drivers/usb/dwc2/gadget.c";
#line 1914
  descriptor.format = "EnumDone (DSTS=0x%08x)\n";
#line 1914
  descriptor.lineno = 1914U;
#line 1914
  descriptor.flags = 1U;
#line 1914
  tmp___0 = __builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 1914
  if (tmp___0 != 0L) {
    {
#line 1914
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)hsotg->dev, "EnumDone (DSTS=0x%08x)\n",
                      dsts);
    }
  } else {

  }
  {
#line 1924
  if ((dsts & 6U) == 1U) {
#line 1924
    goto case_1;
  } else {

  }
#line 1925
  if ((dsts & 6U) == 3U) {
#line 1925
    goto case_3;
  } else {

  }
#line 1931
  if ((dsts & 6U) == 0U) {
#line 1931
    goto case_0;
  } else {

  }
#line 1937
  if ((dsts & 6U) == 2U) {
#line 1937
    goto case_2;
  } else {

  }
#line 1923
  goto switch_break;
  case_1: /* CIL Label */ ;
  case_3: /* CIL Label */ 
#line 1926
  hsotg->gadget.speed = 2;
#line 1927
  ep0_mps = 64;
#line 1928
  ep_mps = 1023;
#line 1929
  goto ldv_33681;
  case_0: /* CIL Label */ 
#line 1932
  hsotg->gadget.speed = 3;
#line 1933
  ep0_mps = 64;
#line 1934
  ep_mps = 1024;
#line 1935
  goto ldv_33681;
  case_2: /* CIL Label */ 
#line 1938
  hsotg->gadget.speed = 1;
#line 1944
  goto ldv_33681;
  switch_break: /* CIL Label */ ;
  }
  ldv_33681: 
  {
#line 1946
  tmp___1 = usb_speed_string(hsotg->gadget.speed);
#line 1946
  _dev_info((struct device  const  *)hsotg->dev, "new device is %s\n", tmp___1);
  }
#line 1954
  if (ep0_mps != 0) {
    {
#line 1956
    s3c_hsotg_set_ep_maxpacket(hsotg, 0U, (unsigned int )ep0_mps);
#line 1957
    i = 1;
    }
#line 1957
    goto ldv_33686;
    ldv_33685: 
    {
#line 1958
    s3c_hsotg_set_ep_maxpacket(hsotg, (unsigned int )i, (unsigned int )ep_mps);
#line 1957
    i = i + 1;
    }
    ldv_33686: ;
#line 1957
    if (i < (int )hsotg->num_of_eps) {
#line 1959
      goto ldv_33685;
    } else {

    }

  } else {

  }
  {
#line 1963
  s3c_hsotg_enqueue_setup(hsotg);
#line 1965
  descriptor___0.modname = "dwc2_gadget";
#line 1965
  descriptor___0.function = "s3c_hsotg_irq_enumdone";
#line 1965
  descriptor___0.filename = "drivers/usb/dwc2/gadget.c";
#line 1965
  descriptor___0.format = "EP0: DIEPCTL0=0x%08x, DOEPCTL0=0x%08x\n";
#line 1965
  descriptor___0.lineno = 1967U;
#line 1965
  descriptor___0.flags = 1U;
#line 1965
  tmp___4 = __builtin_expect((long )descriptor___0.flags & 1L, 0L);
  }
#line 1965
  if (tmp___4 != 0L) {
    {
#line 1965
    tmp___2 = readl((void const volatile   *)(hsotg->regs + 2816UL));
#line 1965
    tmp___3 = readl((void const volatile   *)(hsotg->regs + 2304UL));
#line 1965
    __dynamic_dev_dbg(& descriptor___0, (struct device  const  *)hsotg->dev, "EP0: DIEPCTL0=0x%08x, DOEPCTL0=0x%08x\n",
                      tmp___3, tmp___2);
    }
  } else {

  }
#line 1967
  return;
}
}
#line 1980 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void kill_all_requests(struct s3c_hsotg *hsotg , struct s3c_hsotg_ep *ep ,
                              int result , bool force ) 
{ 
  struct s3c_hsotg_req *req ;
  struct s3c_hsotg_req *treq ;
  struct list_head  const  *__mptr ;
  struct list_head  const  *__mptr___0 ;
  struct list_head  const  *__mptr___1 ;
  unsigned int tmp ;

  {
#line 1986
  __mptr = (struct list_head  const  *)ep->queue.next;
#line 1986
  req = (struct s3c_hsotg_req *)((char *)__mptr + 0xffffffffffffffa8UL);
#line 1986
  __mptr___0 = (struct list_head  const  *)req->queue.next;
#line 1986
  treq = (struct s3c_hsotg_req *)((char *)__mptr___0 + 0xffffffffffffffa8UL);
#line 1986
  goto ldv_33705;
  ldv_33704: ;
#line 1992
  if (((unsigned long )ep->req == (unsigned long )req && (unsigned int )ep->dir_in != 0U) && ! force) {
#line 1993
    goto ldv_33703;
  } else {

  }
  {
#line 1995
  s3c_hsotg_complete_request(hsotg, ep, req, result);
  }
  ldv_33703: 
#line 1986
  req = treq;
#line 1986
  __mptr___1 = (struct list_head  const  *)treq->queue.next;
#line 1986
  treq = (struct s3c_hsotg_req *)((char *)__mptr___1 + 0xffffffffffffffa8UL);
  ldv_33705: ;
#line 1986
  if ((unsigned long )(& req->queue) != (unsigned long )(& ep->queue)) {
#line 1988
    goto ldv_33704;
  } else {

  }

#line 1998
  if ((unsigned int )*((unsigned char *)hsotg + 188UL) != 0U) {
    {
#line 1999
    tmp = readl((void const volatile   *)(hsotg->regs + (unsigned long )((int )ep->index * 32 + 2328)));
    }
#line 1999
    if ((tmp & 65535U) * 4U <= 3071U) {
      {
#line 2000
      s3c_hsotg_txfifo_flush(hsotg, (unsigned int )ep->index);
      }
    } else {

    }
  } else {

  }
#line 2001
  return;
}
}
#line 2011 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_disconnect(struct s3c_hsotg *hsotg ) 
{ 
  unsigned int ep ;

  {
#line 2015
  ep = 0U;
#line 2015
  goto ldv_33712;
  ldv_33711: 
  {
#line 2016
  kill_all_requests(hsotg, hsotg->eps + (unsigned long )ep, -108, 1);
#line 2015
  ep = ep + 1U;
  }
  ldv_33712: ;
#line 2015
  if (ep < (unsigned int )hsotg->num_of_eps) {
#line 2017
    goto ldv_33711;
  } else {

  }

#line 2018
  if (((unsigned int )hsotg->gadget.speed != 0U && (unsigned long )hsotg->driver != (unsigned long )((struct usb_gadget_driver *)0)) && (unsigned long )(hsotg->driver)->disconnect != (unsigned long )((void (*)(struct usb_gadget * ))0)) {
    {
#line 2018
    spin_unlock(& hsotg->lock);
#line 2018
    (*((hsotg->driver)->disconnect))(& hsotg->gadget);
#line 2018
    spin_lock(& hsotg->lock);
    }
  } else {

  }
#line 2020
  return;
}
}
#line 2026 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_irq_fifoempty(struct s3c_hsotg *hsotg , bool periodic ) 
{ 
  struct s3c_hsotg_ep *ep ;
  int epno ;
  int ret ;

  {
#line 2033
  epno = 0;
#line 2033
  goto ldv_33724;
  ldv_33723: 
#line 2034
  ep = hsotg->eps + (unsigned long )epno;
#line 2036
  if ((unsigned int )ep->dir_in == 0U) {
#line 2037
    goto ldv_33721;
  } else {

  }
#line 2039
  if (((int )periodic && (unsigned int )*((unsigned char *)ep + 130UL) == 0U) || (! periodic && (unsigned int )*((unsigned char *)ep + 130UL) != 0U)) {
#line 2041
    goto ldv_33721;
  } else {

  }
  {
#line 2043
  ret = s3c_hsotg_trytx(hsotg, ep);
  }
#line 2044
  if (ret < 0) {
#line 2045
    goto ldv_33722;
  } else {

  }
  ldv_33721: 
#line 2033
  epno = epno + 1;
  ldv_33724: ;
#line 2033
  if (epno < (int )hsotg->num_of_eps) {
#line 2035
    goto ldv_33723;
  } else {

  }
  ldv_33722: ;
#line 2040
  return;
}
}
#line 2060 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static int s3c_hsotg_corereset(struct s3c_hsotg *hsotg ) 
{ 
  int timeout ;
  u32 grstctl ;
  struct _ddebug descriptor ;
  long tmp ;
  int tmp___0 ;
  u32 grstctl___0 ;
  unsigned int tmp___1 ;
  int tmp___2 ;
  struct _ddebug descriptor___0 ;
  long tmp___3 ;

  {
  {
#line 2065
  descriptor.modname = "dwc2_gadget";
#line 2065
  descriptor.function = "s3c_hsotg_corereset";
#line 2065
  descriptor.filename = "drivers/usb/dwc2/gadget.c";
#line 2065
  descriptor.format = "resetting core\n";
#line 2065
  descriptor.lineno = 2065U;
#line 2065
  descriptor.flags = 1U;
#line 2065
  tmp = __builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 2065
  if (tmp != 0L) {
    {
#line 2065
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)hsotg->dev, "resetting core\n");
    }
  } else {

  }
  {
#line 2068
  writel(1U, (void volatile   *)(hsotg->regs + 16UL));
#line 2070
  timeout = 10000;
  }
  ldv_33732: 
  {
#line 2072
  grstctl = readl((void const volatile   *)(hsotg->regs + 16UL));
  }
#line 2073
  if ((int )grstctl & 1) {
#line 2073
    tmp___0 = timeout;
#line 2073
    timeout = timeout - 1;
#line 2073
    if (tmp___0 > 0) {
#line 2075
      goto ldv_33732;
    } else {
#line 2078
      goto ldv_33733;
    }
  } else {

  }
  ldv_33733: ;
#line 2075
  if ((int )grstctl & 1) {
    {
#line 2076
    dev_err((struct device  const  *)hsotg->dev, "Failed to get CSftRst asserted\n");
    }
#line 2077
    return (-22);
  } else {

  }
#line 2080
  timeout = 10000;
  ldv_33737: 
  {
#line 2083
  tmp___1 = readl((void const volatile   *)(hsotg->regs + 16UL));
#line 2083
  grstctl___0 = tmp___1;
#line 2085
  tmp___2 = timeout;
#line 2085
  timeout = timeout - 1;
  }
#line 2085
  if (tmp___2 < 0) {
    {
#line 2086
    _dev_info((struct device  const  *)hsotg->dev, "%s: reset failed, GRSTCTL=%08x\n",
              "s3c_hsotg_corereset", grstctl___0);
    }
#line 2089
    return (-110);
  } else {

  }
#line 2092
  if ((int )grstctl___0 >= 0) {
#line 2093
    goto ldv_33735;
  } else {

  }
#line 2095
  goto ldv_33736;
  ldv_33735: ;
#line 2096
  goto ldv_33737;
  ldv_33736: 
  {
#line 2098
  descriptor___0.modname = "dwc2_gadget";
#line 2098
  descriptor___0.function = "s3c_hsotg_corereset";
#line 2098
  descriptor___0.filename = "drivers/usb/dwc2/gadget.c";
#line 2098
  descriptor___0.format = "reset successful\n";
#line 2098
  descriptor___0.lineno = 2098U;
#line 2098
  descriptor___0.flags = 1U;
#line 2098
  tmp___3 = __builtin_expect((long )descriptor___0.flags & 1L, 0L);
  }
#line 2098
  if (tmp___3 != 0L) {
    {
#line 2098
    __dynamic_dev_dbg(& descriptor___0, (struct device  const  *)hsotg->dev, "reset successful\n");
    }
  } else {

  }
#line 2099
  return (0);
}
}
#line 2108 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_core_init(struct s3c_hsotg *hsotg ) 
{ 
  bool tmp ;
  bool tmp___0 ;
  struct _ddebug descriptor ;
  unsigned int tmp___1 ;
  unsigned int tmp___2 ;
  long tmp___3 ;
  bool tmp___4 ;
  int tmp___5 ;
  struct _ddebug descriptor___0 ;
  unsigned int tmp___6 ;
  long tmp___7 ;
  u32 tmp___8 ;
  u32 tmp___9 ;
  struct _ddebug descriptor___1 ;
  unsigned int tmp___10 ;
  unsigned int tmp___11 ;
  long tmp___12 ;
  unsigned long __ms ;
  unsigned long tmp___13 ;

  {
  {
#line 2110
  s3c_hsotg_corereset(hsotg);
#line 2118
  writel(hsotg->phyif | 5127U, (void volatile   *)(hsotg->regs + 12UL));
#line 2121
  s3c_hsotg_init_fifo(hsotg);
#line 2123
  __orr32(hsotg->regs + 2052UL, 2U);
#line 2125
  writel(262144U, (void volatile   *)(hsotg->regs + 2048UL));
#line 2128
  writel(4294967295U, (void volatile   *)(hsotg->regs + 4UL));
#line 2131
  writel(4294967295U, (void volatile   *)(hsotg->regs + 20UL));
#line 2133
  writel(3489676484U, (void volatile   *)(hsotg->regs + 24UL));
#line 2140
  tmp = using_dma(hsotg);
  }
#line 2140
  if ((int )tmp) {
    {
#line 2141
    writel(35U, (void volatile   *)(hsotg->regs + 8UL));
    }
  } else {
    {
#line 2145
    writel((unsigned int )*((unsigned char *)hsotg + 188UL) != 0U ? 385U : 1U, (void volatile   *)(hsotg->regs + 8UL));
    }
  }
  {
#line 2156
  writel((unsigned int )*((unsigned char *)hsotg + 188UL) != 0U ? 191U : 47U, (void volatile   *)(hsotg->regs + 2064UL));
#line 2167
  tmp___0 = using_dma(hsotg);
#line 2167
  writel((int )tmp___0 ? 15U : 14U, (void volatile   *)(hsotg->regs + 2068UL));
#line 2173
  writel(0U, (void volatile   *)(hsotg->regs + 2076UL));
#line 2175
  descriptor.modname = "dwc2_gadget";
#line 2175
  descriptor.function = "s3c_hsotg_core_init";
#line 2175
  descriptor.filename = "drivers/usb/dwc2/gadget.c";
#line 2175
  descriptor.format = "EP0: DIEPCTL0=0x%08x, DOEPCTL0=0x%08x\n";
#line 2175
  descriptor.lineno = 2177U;
#line 2175
  descriptor.flags = 1U;
#line 2175
  tmp___3 = __builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 2175
  if (tmp___3 != 0L) {
    {
#line 2175
    tmp___1 = readl((void const volatile   *)(hsotg->regs + 2816UL));
#line 2175
    tmp___2 = readl((void const volatile   *)(hsotg->regs + 2304UL));
#line 2175
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)hsotg->dev, "EP0: DIEPCTL0=0x%08x, DOEPCTL0=0x%08x\n",
                      tmp___2, tmp___1);
    }
  } else {

  }
  {
#line 2180
  s3c_hsotg_en_gsint(hsotg, 786432U);
#line 2187
  tmp___4 = using_dma(hsotg);
  }
#line 2187
  if (tmp___4) {
#line 2187
    tmp___5 = 0;
  } else {
#line 2187
    tmp___5 = 1;
  }
#line 2187
  if (tmp___5) {
    {
#line 2188
    s3c_hsotg_en_gsint(hsotg, 16U);
    }
  } else {

  }
  {
#line 2191
  s3c_hsotg_ctrl_epint(hsotg, 0U, 0U, 1U);
#line 2192
  s3c_hsotg_ctrl_epint(hsotg, 0U, 1U, 1U);
#line 2194
  __orr32(hsotg->regs + 2052UL, 2048U);
#line 2195
  __const_udelay(42950UL);
#line 2196
  __bic32(hsotg->regs + 2052UL, 2048U);
#line 2198
  descriptor___0.modname = "dwc2_gadget";
#line 2198
  descriptor___0.function = "s3c_hsotg_core_init";
#line 2198
  descriptor___0.filename = "drivers/usb/dwc2/gadget.c";
#line 2198
  descriptor___0.format = "DCTL=0x%08x\n";
#line 2198
  descriptor___0.lineno = 2198U;
#line 2198
  descriptor___0.flags = 1U;
#line 2198
  tmp___7 = __builtin_expect((long )descriptor___0.flags & 1L, 0L);
  }
#line 2198
  if (tmp___7 != 0L) {
    {
#line 2198
    tmp___6 = readl((void const volatile   *)(hsotg->regs + 2052UL));
#line 2198
    __dynamic_dev_dbg(& descriptor___0, (struct device  const  *)hsotg->dev, "DCTL=0x%08x\n",
                      tmp___6);
    }
  } else {

  }
  {
#line 2206
  writel(537395208U, (void volatile   *)(hsotg->regs + 2832UL));
#line 2209
  tmp___8 = s3c_hsotg_ep0_mps((hsotg->eps)->ep.maxpacket);
#line 2209
  writel(tmp___8 | 2214625280U, (void volatile   *)(hsotg->regs + 2816UL));
#line 2215
  tmp___9 = s3c_hsotg_ep0_mps((hsotg->eps)->ep.maxpacket);
#line 2215
  writel(tmp___9 | 32768U, (void volatile   *)(hsotg->regs + 2304UL));
#line 2218
  s3c_hsotg_enqueue_setup(hsotg);
#line 2220
  descriptor___1.modname = "dwc2_gadget";
#line 2220
  descriptor___1.function = "s3c_hsotg_core_init";
#line 2220
  descriptor___1.filename = "drivers/usb/dwc2/gadget.c";
#line 2220
  descriptor___1.format = "EP0: DIEPCTL0=0x%08x, DOEPCTL0=0x%08x\n";
#line 2220
  descriptor___1.lineno = 2222U;
#line 2220
  descriptor___1.flags = 1U;
#line 2220
  tmp___12 = __builtin_expect((long )descriptor___1.flags & 1L, 0L);
  }
#line 2220
  if (tmp___12 != 0L) {
    {
#line 2220
    tmp___10 = readl((void const volatile   *)(hsotg->regs + 2816UL));
#line 2220
    tmp___11 = readl((void const volatile   *)(hsotg->regs + 2304UL));
#line 2220
    __dynamic_dev_dbg(& descriptor___1, (struct device  const  *)hsotg->dev, "EP0: DIEPCTL0=0x%08x, DOEPCTL0=0x%08x\n",
                      tmp___11, tmp___10);
    }
  } else {

  }
  {
#line 2225
  writel(1280U, (void volatile   *)(hsotg->regs + 2052UL));
  }
#line 2229
  if (1) {
    {
#line 2229
    __const_udelay(12885000UL);
    }
  } else {
#line 2229
    __ms = 3UL;
#line 2229
    goto ldv_33748;
    ldv_33747: 
    {
#line 2229
    __const_udelay(4295000UL);
    }
    ldv_33748: 
#line 2229
    tmp___13 = __ms;
#line 2229
    __ms = __ms - 1UL;
#line 2229
    if (tmp___13 != 0UL) {
#line 2231
      goto ldv_33747;
    } else {

    }

  }
  {
#line 2232
  __bic32(hsotg->regs + 2052UL, 2U);
  }
#line 2233
  return;
}
}
#line 2240 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static irqreturn_t s3c_hsotg_irq(int irq , void *pw ) 
{ 
  struct s3c_hsotg *hsotg ;
  int retry_count ;
  u32 gintsts ;
  u32 gintmsk ;
  struct _ddebug descriptor ;
  long tmp ;
  u32 otgint ;
  unsigned int tmp___0 ;
  struct _ddebug descriptor___0 ;
  long tmp___1 ;
  struct _ddebug descriptor___1 ;
  unsigned int tmp___2 ;
  unsigned int tmp___3 ;
  long tmp___4 ;
  u32 daint ;
  unsigned int tmp___5 ;
  u32 daintmsk ;
  unsigned int tmp___6 ;
  u32 daint_out ;
  u32 daint_in ;
  int ep ;
  struct _ddebug descriptor___2 ;
  long tmp___7 ;
  u32 usb_status ;
  unsigned int tmp___8 ;
  struct _ddebug descriptor___3 ;
  unsigned int tmp___9 ;
  long tmp___10 ;
  unsigned long tmp___11 ;
  struct _ddebug descriptor___4 ;
  long tmp___12 ;
  struct _ddebug descriptor___5 ;
  long tmp___13 ;
  struct _ddebug descriptor___6 ;
  long tmp___14 ;

  {
  {
#line 2242
  hsotg = (struct s3c_hsotg *)pw;
#line 2243
  retry_count = 8;
#line 2247
  spin_lock(& hsotg->lock);
  }
  irq_retry: 
  {
#line 2249
  gintsts = readl((void const volatile   *)(hsotg->regs + 20UL));
#line 2250
  gintmsk = readl((void const volatile   *)(hsotg->regs + 24UL));
#line 2252
  descriptor.modname = "dwc2_gadget";
#line 2252
  descriptor.function = "s3c_hsotg_irq";
#line 2252
  descriptor.filename = "drivers/usb/dwc2/gadget.c";
#line 2252
  descriptor.format = "%s: %08x %08x (%08x) retry %d\n";
#line 2252
  descriptor.lineno = 2253U;
#line 2252
  descriptor.flags = 1U;
#line 2252
  tmp = __builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 2252
  if (tmp != 0L) {
    {
#line 2252
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)hsotg->dev, "%s: %08x %08x (%08x) retry %d\n",
                      "s3c_hsotg_irq", gintsts, gintsts & gintmsk, gintmsk, retry_count);
    }
  } else {

  }
#line 2255
  gintsts = gintsts & gintmsk;
#line 2257
  if ((gintsts & 4U) != 0U) {
    {
#line 2258
    tmp___0 = readl((void const volatile   *)(hsotg->regs + 4UL));
#line 2258
    otgint = tmp___0;
#line 2260
    _dev_info((struct device  const  *)hsotg->dev, "OTGInt: %08x\n", otgint);
#line 2262
    writel(otgint, (void volatile   *)(hsotg->regs + 4UL));
    }
  } else {

  }
#line 2265
  if ((gintsts & 1073741824U) != 0U) {
    {
#line 2266
    descriptor___0.modname = "dwc2_gadget";
#line 2266
    descriptor___0.function = "s3c_hsotg_irq";
#line 2266
    descriptor___0.filename = "drivers/usb/dwc2/gadget.c";
#line 2266
    descriptor___0.format = "%s: SessReqInt\n";
#line 2266
    descriptor___0.lineno = 2266U;
#line 2266
    descriptor___0.flags = 1U;
#line 2266
    tmp___1 = __builtin_expect((long )descriptor___0.flags & 1L, 0L);
    }
#line 2266
    if (tmp___1 != 0L) {
      {
#line 2266
      __dynamic_dev_dbg(& descriptor___0, (struct device  const  *)hsotg->dev, "%s: SessReqInt\n",
                        "s3c_hsotg_irq");
      }
    } else {

    }
    {
#line 2267
    writel(1073741824U, (void volatile   *)(hsotg->regs + 20UL));
    }
  } else {

  }
#line 2270
  if ((gintsts & 8192U) != 0U) {
    {
#line 2271
    writel(8192U, (void volatile   *)(hsotg->regs + 20UL));
#line 2273
    s3c_hsotg_irq_enumdone(hsotg);
    }
  } else {

  }
#line 2276
  if ((gintsts & 268435456U) != 0U) {
    {
#line 2277
    descriptor___1.modname = "dwc2_gadget";
#line 2277
    descriptor___1.function = "s3c_hsotg_irq";
#line 2277
    descriptor___1.filename = "drivers/usb/dwc2/gadget.c";
#line 2277
    descriptor___1.format = "ConIDStsChg (DSTS=0x%08x, GOTCTL=%08x)\n";
#line 2277
    descriptor___1.lineno = 2279U;
#line 2277
    descriptor___1.flags = 1U;
#line 2277
    tmp___4 = __builtin_expect((long )descriptor___1.flags & 1L, 0L);
    }
#line 2277
    if (tmp___4 != 0L) {
      {
#line 2277
      tmp___2 = readl((void const volatile   *)hsotg->regs);
#line 2277
      tmp___3 = readl((void const volatile   *)(hsotg->regs + 2056UL));
#line 2277
      __dynamic_dev_dbg(& descriptor___1, (struct device  const  *)hsotg->dev, "ConIDStsChg (DSTS=0x%08x, GOTCTL=%08x)\n",
                        tmp___3, tmp___2);
      }
    } else {

    }
    {
#line 2281
    writel(268435456U, (void volatile   *)(hsotg->regs + 20UL));
    }
  } else {

  }
#line 2284
  if ((gintsts & 786432U) != 0U) {
    {
#line 2285
    tmp___5 = readl((void const volatile   *)(hsotg->regs + 2072UL));
#line 2285
    daint = tmp___5;
#line 2286
    tmp___6 = readl((void const volatile   *)(hsotg->regs + 2076UL));
#line 2286
    daintmsk = tmp___6;
#line 2290
    daint = daint & daintmsk;
#line 2291
    daint_out = daint >> 16;
#line 2292
    daint_in = daint & ~ (daint_out << 16);
#line 2294
    descriptor___2.modname = "dwc2_gadget";
#line 2294
    descriptor___2.function = "s3c_hsotg_irq";
#line 2294
    descriptor___2.filename = "drivers/usb/dwc2/gadget.c";
#line 2294
    descriptor___2.format = "%s: daint=%08x\n";
#line 2294
    descriptor___2.lineno = 2294U;
#line 2294
    descriptor___2.flags = 1U;
#line 2294
    tmp___7 = __builtin_expect((long )descriptor___2.flags & 1L, 0L);
    }
#line 2294
    if (tmp___7 != 0L) {
      {
#line 2294
      __dynamic_dev_dbg(& descriptor___2, (struct device  const  *)hsotg->dev, "%s: daint=%08x\n",
                        "s3c_hsotg_irq", daint);
      }
    } else {

    }
#line 2296
    ep = 0;
#line 2296
    goto ldv_33771;
    ldv_33770: ;
#line 2297
    if ((int )daint_out & 1) {
      {
#line 2298
      s3c_hsotg_epint(hsotg, (unsigned int )ep, 0);
      }
    } else {

    }
#line 2296
    ep = ep + 1;
#line 2296
    daint_out = daint_out >> 1;
    ldv_33771: ;
#line 2296
    if (ep <= 14 && daint_out != 0U) {
#line 2298
      goto ldv_33770;
    } else {

    }
#line 2301
    ep = 0;
#line 2301
    goto ldv_33774;
    ldv_33773: ;
#line 2302
    if ((int )daint_in & 1) {
      {
#line 2303
      s3c_hsotg_epint(hsotg, (unsigned int )ep, 1);
      }
    } else {

    }
#line 2301
    ep = ep + 1;
#line 2301
    daint_in = daint_in >> 1;
    ldv_33774: ;
#line 2301
    if (ep <= 14 && daint_in != 0U) {
#line 2303
      goto ldv_33773;
    } else {

    }

  } else {

  }
#line 2307
  if ((gintsts & 4096U) != 0U) {
    {
#line 2309
    tmp___8 = readl((void const volatile   *)hsotg->regs);
#line 2309
    usb_status = tmp___8;
#line 2311
    _dev_info((struct device  const  *)hsotg->dev, "%s: USBRst\n", "s3c_hsotg_irq");
#line 2312
    descriptor___3.modname = "dwc2_gadget";
#line 2312
    descriptor___3.function = "s3c_hsotg_irq";
#line 2312
    descriptor___3.filename = "drivers/usb/dwc2/gadget.c";
#line 2312
    descriptor___3.format = "GNPTXSTS=%08x\n";
#line 2312
    descriptor___3.lineno = 2313U;
#line 2312
    descriptor___3.flags = 1U;
#line 2312
    tmp___10 = __builtin_expect((long )descriptor___3.flags & 1L, 0L);
    }
#line 2312
    if (tmp___10 != 0L) {
      {
#line 2312
      tmp___9 = readl((void const volatile   *)(hsotg->regs + 44UL));
#line 2312
      __dynamic_dev_dbg(& descriptor___3, (struct device  const  *)hsotg->dev, "GNPTXSTS=%08x\n",
                        tmp___9);
      }
    } else {

    }
    {
#line 2315
    writel(4096U, (void volatile   *)(hsotg->regs + 20UL));
    }
#line 2317
    if ((usb_status & 524288U) != 0U) {
      {
#line 2318
      tmp___11 = msecs_to_jiffies(200U);
      }
#line 2318
      if ((long )((hsotg->last_rst + tmp___11) - (unsigned long )jiffies) < 0L) {
        {
#line 2321
        kill_all_requests(hsotg, hsotg->eps, -104, 1);
#line 2324
        s3c_hsotg_core_init(hsotg);
#line 2325
        hsotg->last_rst = jiffies;
        }
      } else {

      }
    } else {

    }
  } else {

  }
#line 2332
  if ((gintsts & 32U) != 0U) {
    {
#line 2333
    descriptor___4.modname = "dwc2_gadget";
#line 2333
    descriptor___4.function = "s3c_hsotg_irq";
#line 2333
    descriptor___4.filename = "drivers/usb/dwc2/gadget.c";
#line 2333
    descriptor___4.format = "NPTxFEmp\n";
#line 2333
    descriptor___4.lineno = 2333U;
#line 2333
    descriptor___4.flags = 1U;
#line 2333
    tmp___12 = __builtin_expect((long )descriptor___4.flags & 1L, 0L);
    }
#line 2333
    if (tmp___12 != 0L) {
      {
#line 2333
      __dynamic_dev_dbg(& descriptor___4, (struct device  const  *)hsotg->dev, "NPTxFEmp\n");
      }
    } else {

    }
    {
#line 2341
    s3c_hsotg_disable_gsint(hsotg, 32U);
#line 2342
    s3c_hsotg_irq_fifoempty(hsotg, 0);
    }
  } else {

  }
#line 2345
  if ((gintsts & 67108864U) != 0U) {
    {
#line 2346
    descriptor___5.modname = "dwc2_gadget";
#line 2346
    descriptor___5.function = "s3c_hsotg_irq";
#line 2346
    descriptor___5.filename = "drivers/usb/dwc2/gadget.c";
#line 2346
    descriptor___5.format = "PTxFEmp\n";
#line 2346
    descriptor___5.lineno = 2346U;
#line 2346
    descriptor___5.flags = 1U;
#line 2346
    tmp___13 = __builtin_expect((long )descriptor___5.flags & 1L, 0L);
    }
#line 2346
    if (tmp___13 != 0L) {
      {
#line 2346
      __dynamic_dev_dbg(& descriptor___5, (struct device  const  *)hsotg->dev, "PTxFEmp\n");
      }
    } else {

    }
    {
#line 2350
    s3c_hsotg_disable_gsint(hsotg, 67108864U);
#line 2351
    s3c_hsotg_irq_fifoempty(hsotg, 1);
    }
  } else {

  }
#line 2354
  if ((gintsts & 16U) != 0U) {
    {
#line 2361
    s3c_hsotg_handle_rx(hsotg);
    }
  } else {

  }
#line 2364
  if ((gintsts & 2U) != 0U) {
    {
#line 2365
    dev_warn((struct device  const  *)hsotg->dev, "warning, mode mismatch triggered\n");
#line 2366
    writel(2U, (void volatile   *)(hsotg->regs + 20UL));
    }
  } else {

  }
#line 2369
  if ((gintsts & 2048U) != 0U) {
    {
#line 2370
    _dev_info((struct device  const  *)hsotg->dev, "GINTSTS_USBSusp\n");
#line 2371
    writel(2048U, (void volatile   *)(hsotg->regs + 20UL));
    }
#line 2373
    if (((unsigned int )hsotg->gadget.speed != 0U && (unsigned long )hsotg->driver != (unsigned long )((struct usb_gadget_driver *)0)) && (unsigned long )(hsotg->driver)->suspend != (unsigned long )((void (*)(struct usb_gadget * ))0)) {
      {
#line 2373
      spin_unlock(& hsotg->lock);
#line 2373
      (*((hsotg->driver)->suspend))(& hsotg->gadget);
#line 2373
      spin_lock(& hsotg->lock);
      }
    } else {

    }
  } else {

  }
#line 2376
  if ((int )gintsts < 0) {
    {
#line 2377
    _dev_info((struct device  const  *)hsotg->dev, "GINTSTS_WkUpIn\n");
#line 2378
    writel(2147483648U, (void volatile   *)(hsotg->regs + 20UL));
    }
#line 2380
    if (((unsigned int )hsotg->gadget.speed != 0U && (unsigned long )hsotg->driver != (unsigned long )((struct usb_gadget_driver *)0)) && (unsigned long )(hsotg->driver)->resume != (unsigned long )((void (*)(struct usb_gadget * ))0)) {
      {
#line 2380
      spin_unlock(& hsotg->lock);
#line 2380
      (*((hsotg->driver)->resume))(& hsotg->gadget);
#line 2380
      spin_lock(& hsotg->lock);
      }
    } else {

    }
  } else {

  }
#line 2383
  if ((gintsts & 1024U) != 0U) {
    {
#line 2384
    descriptor___6.modname = "dwc2_gadget";
#line 2384
    descriptor___6.function = "s3c_hsotg_irq";
#line 2384
    descriptor___6.filename = "drivers/usb/dwc2/gadget.c";
#line 2384
    descriptor___6.format = "GINTSTS_ErlySusp\n";
#line 2384
    descriptor___6.lineno = 2384U;
#line 2384
    descriptor___6.flags = 1U;
#line 2384
    tmp___14 = __builtin_expect((long )descriptor___6.flags & 1L, 0L);
    }
#line 2384
    if (tmp___14 != 0L) {
      {
#line 2384
      __dynamic_dev_dbg(& descriptor___6, (struct device  const  *)hsotg->dev, "GINTSTS_ErlySusp\n");
      }
    } else {

    }
    {
#line 2385
    writel(1024U, (void volatile   *)(hsotg->regs + 20UL));
    }
  } else {

  }
#line 2394
  if ((gintsts & 128U) != 0U) {
    {
#line 2395
    _dev_info((struct device  const  *)hsotg->dev, "GOUTNakEff triggered\n");
#line 2397
    writel(1024U, (void volatile   *)(hsotg->regs + 2052UL));
#line 2399
    s3c_hsotg_dump(hsotg);
    }
  } else {

  }
#line 2402
  if ((gintsts & 64U) != 0U) {
    {
#line 2403
    _dev_info((struct device  const  *)hsotg->dev, "GINNakEff triggered\n");
#line 2405
    writel(256U, (void volatile   *)(hsotg->regs + 2052UL));
#line 2407
    s3c_hsotg_dump(hsotg);
    }
  } else {

  }
#line 2415
  if ((gintsts & 67108912U) != 0U) {
#line 2415
    retry_count = retry_count - 1;
#line 2415
    if (retry_count > 0) {
#line 2416
      goto irq_retry;
    } else {

    }
  } else {

  }
  {
#line 2418
  spin_unlock(& hsotg->lock);
  }
#line 2420
  return (1);
}
}
#line 2430 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static int s3c_hsotg_ep_enable(struct usb_ep *ep , struct usb_endpoint_descriptor  const  *desc ) 
{ 
  struct s3c_hsotg_ep *hs_ep ;
  struct s3c_hsotg_ep *tmp ;
  struct s3c_hsotg *hsotg ;
  unsigned long flags ;
  int index ;
  u32 epctrl_reg ;
  u32 epctrl ;
  u32 mps ;
  int dir_in ;
  int ret ;
  struct _ddebug descriptor ;
  long tmp___0 ;
  int __ret_warn_on ;
  long tmp___1 ;
  int tmp___2 ;
  struct _ddebug descriptor___0 ;
  long tmp___3 ;
  raw_spinlock_t *tmp___4 ;
  struct _ddebug descriptor___1 ;
  long tmp___5 ;
  struct _ddebug descriptor___2 ;
  unsigned int tmp___6 ;
  long tmp___7 ;

  {
  {
#line 2433
  tmp = our_ep(ep);
#line 2433
  hs_ep = tmp;
#line 2434
  hsotg = hs_ep->parent;
#line 2436
  index = (int )hs_ep->index;
#line 2441
  ret = 0;
#line 2443
  descriptor.modname = "dwc2_gadget";
#line 2443
  descriptor.function = "s3c_hsotg_ep_enable";
#line 2443
  descriptor.filename = "drivers/usb/dwc2/gadget.c";
#line 2443
  descriptor.format = "%s: ep %s: a 0x%02x, attr 0x%02x, mps 0x%04x, intr %d\n";
#line 2443
  descriptor.lineno = 2446U;
#line 2443
  descriptor.flags = 1U;
#line 2443
  tmp___0 = __builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 2443
  if (tmp___0 != 0L) {
    {
#line 2443
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)hsotg->dev, "%s: ep %s: a 0x%02x, attr 0x%02x, mps 0x%04x, intr %d\n",
                      "s3c_hsotg_ep_enable", ep->name, (int )desc->bEndpointAddress,
                      (int )desc->bmAttributes, (int )desc->wMaxPacketSize, (int )desc->bInterval);
    }
  } else {

  }
  {
#line 2449
  __ret_warn_on = index == 0;
#line 2449
  tmp___1 = __builtin_expect(__ret_warn_on != 0, 0L);
  }
#line 2449
  if (tmp___1 != 0L) {
    {
#line 2449
    warn_slowpath_null("drivers/usb/dwc2/gadget.c", 2449);
    }
  } else {

  }
  {
#line 2449
  __builtin_expect(__ret_warn_on != 0, 0L);
#line 2451
  dir_in = (int )((signed char )desc->bEndpointAddress) < 0;
  }
#line 2452
  if (dir_in != (int )hs_ep->dir_in) {
    {
#line 2453
    dev_err((struct device  const  *)hsotg->dev, "%s: direction mismatch!\n", "s3c_hsotg_ep_enable");
    }
#line 2454
    return (-22);
  } else {

  }
  {
#line 2457
  tmp___2 = usb_endpoint_maxp(desc);
#line 2457
  mps = (u32 )tmp___2;
#line 2461
  epctrl_reg = (u32 )(dir_in != 0 ? (index + 72) * 32 : (index + 88) * 32);
#line 2462
  epctrl = readl((void const volatile   *)(hsotg->regs + (unsigned long )epctrl_reg));
#line 2464
  descriptor___0.modname = "dwc2_gadget";
#line 2464
  descriptor___0.function = "s3c_hsotg_ep_enable";
#line 2464
  descriptor___0.filename = "drivers/usb/dwc2/gadget.c";
#line 2464
  descriptor___0.format = "%s: read DxEPCTL=0x%08x from 0x%08x\n";
#line 2464
  descriptor___0.lineno = 2465U;
#line 2464
  descriptor___0.flags = 1U;
#line 2464
  tmp___3 = __builtin_expect((long )descriptor___0.flags & 1L, 0L);
  }
#line 2464
  if (tmp___3 != 0L) {
    {
#line 2464
    __dynamic_dev_dbg(& descriptor___0, (struct device  const  *)hsotg->dev, "%s: read DxEPCTL=0x%08x from 0x%08x\n",
                      "s3c_hsotg_ep_enable", epctrl, epctrl_reg);
    }
  } else {

  }
  {
#line 2467
  tmp___4 = spinlock_check(& hsotg->lock);
#line 2467
  flags = _raw_spin_lock_irqsave(tmp___4);
#line 2469
  epctrl = epctrl & 4294178816U;
#line 2470
  epctrl = epctrl | mps;
#line 2476
  epctrl = epctrl | 32768U;
#line 2485
  epctrl = epctrl | 134217728U;
#line 2488
  s3c_hsotg_set_ep_maxpacket(hsotg, (unsigned int )hs_ep->index, mps);
#line 2491
  hs_ep->isochronous = 0U;
#line 2492
  hs_ep->periodic = 0U;
#line 2493
  hs_ep->halted = 0U;
#line 2494
  hs_ep->interval = desc->bInterval;
  }
#line 2496
  if ((unsigned int )hs_ep->interval > 1U && (unsigned int )hs_ep->mc > 1U) {
    {
#line 2497
    dev_err((struct device  const  *)hsotg->dev, "MC > 1 when interval is not 1\n");
    }
  } else {

  }
  {
#line 2500
  if (((int )desc->bmAttributes & 3) == 1) {
#line 2500
    goto case_1;
  } else {

  }
#line 2508
  if (((int )desc->bmAttributes & 3) == 2) {
#line 2508
    goto case_2;
  } else {

  }
#line 2512
  if (((int )desc->bmAttributes & 3) == 3) {
#line 2512
    goto case_3;
  } else {

  }
#line 2528
  if (((int )desc->bmAttributes & 3) == 0) {
#line 2528
    goto case_0;
  } else {

  }
#line 2499
  goto switch_break;
  case_1: /* CIL Label */ 
#line 2501
  epctrl = epctrl | 262144U;
#line 2502
  epctrl = epctrl | 268435456U;
#line 2503
  hs_ep->isochronous = 1U;
#line 2504
  if (dir_in != 0) {
#line 2505
    hs_ep->periodic = 1U;
  } else {

  }
#line 2506
  goto ldv_33809;
  case_2: /* CIL Label */ 
#line 2509
  epctrl = epctrl | 524288U;
#line 2510
  goto ldv_33809;
  case_3: /* CIL Label */ ;
#line 2513
  if (dir_in != 0) {
#line 2521
    hs_ep->periodic = 1U;
#line 2522
    epctrl = epctrl | (u32 )(index << 22);
  } else {

  }
#line 2525
  epctrl = epctrl | 786432U;
#line 2526
  goto ldv_33809;
  case_0: /* CIL Label */ 
#line 2529
  epctrl = epctrl;
#line 2530
  goto ldv_33809;
  switch_break: /* CIL Label */ ;
  }
  ldv_33809: ;
#line 2537
  if (dir_in != 0 && (unsigned int )*((unsigned char *)hsotg + 188UL) != 0U) {
#line 2538
    epctrl = epctrl | (u32 )(index << 22);
  } else {

  }
#line 2541
  if (index != 0) {
#line 2542
    epctrl = epctrl | 268435456U;
  } else {

  }
  {
#line 2544
  descriptor___1.modname = "dwc2_gadget";
#line 2544
  descriptor___1.function = "s3c_hsotg_ep_enable";
#line 2544
  descriptor___1.filename = "drivers/usb/dwc2/gadget.c";
#line 2544
  descriptor___1.format = "%s: write DxEPCTL=0x%08x\n";
#line 2544
  descriptor___1.lineno = 2545U;
#line 2544
  descriptor___1.flags = 1U;
#line 2544
  tmp___5 = __builtin_expect((long )descriptor___1.flags & 1L, 0L);
  }
#line 2544
  if (tmp___5 != 0L) {
    {
#line 2544
    __dynamic_dev_dbg(& descriptor___1, (struct device  const  *)hsotg->dev, "%s: write DxEPCTL=0x%08x\n",
                      "s3c_hsotg_ep_enable", epctrl);
    }
  } else {

  }
  {
#line 2547
  writel(epctrl, (void volatile   *)(hsotg->regs + (unsigned long )epctrl_reg));
#line 2548
  descriptor___2.modname = "dwc2_gadget";
#line 2548
  descriptor___2.function = "s3c_hsotg_ep_enable";
#line 2548
  descriptor___2.filename = "drivers/usb/dwc2/gadget.c";
#line 2548
  descriptor___2.format = "%s: read DxEPCTL=0x%08x\n";
#line 2548
  descriptor___2.lineno = 2549U;
#line 2548
  descriptor___2.flags = 1U;
#line 2548
  tmp___7 = __builtin_expect((long )descriptor___2.flags & 1L, 0L);
  }
#line 2548
  if (tmp___7 != 0L) {
    {
#line 2548
    tmp___6 = readl((void const volatile   *)(hsotg->regs + (unsigned long )epctrl_reg));
#line 2548
    __dynamic_dev_dbg(& descriptor___2, (struct device  const  *)hsotg->dev, "%s: read DxEPCTL=0x%08x\n",
                      "s3c_hsotg_ep_enable", tmp___6);
    }
  } else {

  }
  {
#line 2552
  s3c_hsotg_ctrl_epint(hsotg, (unsigned int )index, (unsigned int )dir_in, 1U);
#line 2554
  spin_unlock_irqrestore(& hsotg->lock, flags);
  }
#line 2555
  return (ret);
}
}
#line 2562 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static int s3c_hsotg_ep_disable(struct usb_ep *ep ) 
{ 
  struct s3c_hsotg_ep *hs_ep ;
  struct s3c_hsotg_ep *tmp ;
  struct s3c_hsotg *hsotg ;
  int dir_in ;
  int index ;
  unsigned long flags ;
  u32 epctrl_reg ;
  u32 ctrl ;
  raw_spinlock_t *tmp___0 ;
  struct _ddebug descriptor ;
  long tmp___1 ;

  {
  {
#line 2564
  tmp = our_ep(ep);
#line 2564
  hs_ep = tmp;
#line 2565
  hsotg = hs_ep->parent;
#line 2566
  dir_in = (int )hs_ep->dir_in;
#line 2567
  index = (int )hs_ep->index;
#line 2572
  _dev_info((struct device  const  *)hsotg->dev, "%s(ep %p)\n", "s3c_hsotg_ep_disable",
            ep);
  }
#line 2574
  if ((unsigned long )ep == (unsigned long )(& (hsotg->eps)->ep)) {
    {
#line 2575
    dev_err((struct device  const  *)hsotg->dev, "%s: called for ep0\n", "s3c_hsotg_ep_disable");
    }
#line 2576
    return (-22);
  } else {

  }
  {
#line 2579
  epctrl_reg = (u32 )(dir_in != 0 ? (index + 72) * 32 : (index + 88) * 32);
#line 2581
  tmp___0 = spinlock_check(& hsotg->lock);
#line 2581
  flags = _raw_spin_lock_irqsave(tmp___0);
#line 2583
  kill_all_requests(hsotg, hs_ep, -108, 0);
#line 2586
  ctrl = readl((void const volatile   *)(hsotg->regs + (unsigned long )epctrl_reg));
#line 2587
  ctrl = ctrl & 2147483647U;
#line 2588
  ctrl = ctrl & 4294934527U;
#line 2589
  ctrl = ctrl | 134217728U;
#line 2591
  descriptor.modname = "dwc2_gadget";
#line 2591
  descriptor.function = "s3c_hsotg_ep_disable";
#line 2591
  descriptor.filename = "drivers/usb/dwc2/gadget.c";
#line 2591
  descriptor.format = "%s: DxEPCTL=0x%08x\n";
#line 2591
  descriptor.lineno = 2591U;
#line 2591
  descriptor.flags = 1U;
#line 2591
  tmp___1 = __builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 2591
  if (tmp___1 != 0L) {
    {
#line 2591
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)hsotg->dev, "%s: DxEPCTL=0x%08x\n",
                      "s3c_hsotg_ep_disable", ctrl);
    }
  } else {

  }
  {
#line 2592
  writel(ctrl, (void volatile   *)(hsotg->regs + (unsigned long )epctrl_reg));
#line 2595
  s3c_hsotg_ctrl_epint(hsotg, (unsigned int )hs_ep->index, (unsigned int )hs_ep->dir_in,
                       0U);
#line 2597
  spin_unlock_irqrestore(& hsotg->lock, flags);
  }
#line 2598
  return (0);
}
}
#line 2606 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static bool on_list(struct s3c_hsotg_ep *ep , struct s3c_hsotg_req *test ) 
{ 
  struct s3c_hsotg_req *req ;
  struct s3c_hsotg_req *treq ;
  struct list_head  const  *__mptr ;
  struct list_head  const  *__mptr___0 ;
  struct list_head  const  *__mptr___1 ;

  {
#line 2610
  __mptr = (struct list_head  const  *)ep->queue.next;
#line 2610
  req = (struct s3c_hsotg_req *)((char *)__mptr + 0xffffffffffffffa8UL);
#line 2610
  __mptr___0 = (struct list_head  const  *)req->queue.next;
#line 2610
  treq = (struct s3c_hsotg_req *)((char *)__mptr___0 + 0xffffffffffffffa8UL);
#line 2610
  goto ldv_33843;
  ldv_33842: ;
#line 2611
  if ((unsigned long )req == (unsigned long )test) {
#line 2612
    return (1);
  } else {

  }
#line 2610
  req = treq;
#line 2610
  __mptr___1 = (struct list_head  const  *)treq->queue.next;
#line 2610
  treq = (struct s3c_hsotg_req *)((char *)__mptr___1 + 0xffffffffffffffa8UL);
  ldv_33843: ;
#line 2610
  if ((unsigned long )(& req->queue) != (unsigned long )(& ep->queue)) {
#line 2612
    goto ldv_33842;
  } else {

  }

#line 2615
  return (0);
}
}
#line 2623 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static int s3c_hsotg_ep_dequeue(struct usb_ep *ep , struct usb_request *req ) 
{ 
  struct s3c_hsotg_req *hs_req ;
  struct s3c_hsotg_req *tmp ;
  struct s3c_hsotg_ep *hs_ep ;
  struct s3c_hsotg_ep *tmp___0 ;
  struct s3c_hsotg *hs ;
  unsigned long flags ;
  raw_spinlock_t *tmp___1 ;
  bool tmp___2 ;
  int tmp___3 ;

  {
  {
#line 2625
  tmp = our_req(req);
#line 2625
  hs_req = tmp;
#line 2626
  tmp___0 = our_ep(ep);
#line 2626
  hs_ep = tmp___0;
#line 2627
  hs = hs_ep->parent;
#line 2630
  _dev_info((struct device  const  *)hs->dev, "ep_dequeue(%p,%p)\n", ep, req);
#line 2632
  tmp___1 = spinlock_check(& hs->lock);
#line 2632
  flags = _raw_spin_lock_irqsave(tmp___1);
#line 2634
  tmp___2 = on_list(hs_ep, hs_req);
  }
#line 2634
  if (tmp___2) {
#line 2634
    tmp___3 = 0;
  } else {
#line 2634
    tmp___3 = 1;
  }
#line 2634
  if (tmp___3) {
    {
#line 2635
    spin_unlock_irqrestore(& hs->lock, flags);
    }
#line 2636
    return (-22);
  } else {

  }
  {
#line 2639
  s3c_hsotg_complete_request(hs, hs_ep, hs_req, -104);
#line 2640
  spin_unlock_irqrestore(& hs->lock, flags);
  }
#line 2642
  return (0);
}
}
#line 2650 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static int s3c_hsotg_ep_sethalt(struct usb_ep *ep , int value ) 
{ 
  struct s3c_hsotg_ep *hs_ep ;
  struct s3c_hsotg_ep *tmp ;
  struct s3c_hsotg *hs ;
  int index ;
  u32 epreg ;
  u32 epctl ;
  u32 xfertype ;

  {
  {
#line 2652
  tmp = our_ep(ep);
#line 2652
  hs_ep = tmp;
#line 2653
  hs = hs_ep->parent;
#line 2654
  index = (int )hs_ep->index;
#line 2659
  _dev_info((struct device  const  *)hs->dev, "%s(ep %p %s, %d)\n", "s3c_hsotg_ep_sethalt",
            ep, ep->name, value);
  }
#line 2661
  if (index == 0) {
#line 2662
    if (value != 0) {
      {
#line 2663
      s3c_hsotg_stall_ep0(hs);
      }
    } else {
      {
#line 2665
      dev_warn((struct device  const  *)hs->dev, "%s: can\'t clear halt on ep0\n",
               "s3c_hsotg_ep_sethalt");
      }
    }
#line 2667
    return (0);
  } else {

  }
  {
#line 2672
  epreg = (u32 )((index + 72) * 32);
#line 2673
  epctl = readl((void const volatile   *)(hs->regs + (unsigned long )epreg));
  }
#line 2675
  if (value != 0) {
#line 2676
    epctl = epctl | 136314880U;
#line 2677
    if ((int )epctl < 0) {
#line 2678
      epctl = epctl | 1073741824U;
    } else {

    }
  } else {
#line 2680
    epctl = epctl & 4292870143U;
#line 2681
    xfertype = epctl & 786432U;
#line 2682
    if (xfertype == 524288U || xfertype == 786432U) {
#line 2684
      epctl = epctl | 268435456U;
    } else {

    }
  }
  {
#line 2687
  writel(epctl, (void volatile   *)(hs->regs + (unsigned long )epreg));
#line 2689
  epreg = (u32 )((index + 88) * 32);
#line 2690
  epctl = readl((void const volatile   *)(hs->regs + (unsigned long )epreg));
  }
#line 2692
  if (value != 0) {
#line 2693
    epctl = epctl | 2097152U;
  } else {
#line 2695
    epctl = epctl & 4292870143U;
#line 2696
    xfertype = epctl & 786432U;
#line 2697
    if (xfertype == 524288U || xfertype == 786432U) {
#line 2699
      epctl = epctl | 268435456U;
    } else {

    }
  }
  {
#line 2702
  writel(epctl, (void volatile   *)(hs->regs + (unsigned long )epreg));
#line 2704
  hs_ep->halted = (unsigned char )value;
  }
#line 2706
  return (0);
}
}
#line 2714 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static int s3c_hsotg_ep_sethalt_lock(struct usb_ep *ep , int value ) 
{ 
  struct s3c_hsotg_ep *hs_ep ;
  struct s3c_hsotg_ep *tmp ;
  struct s3c_hsotg *hs ;
  unsigned long flags ;
  int ret ;
  raw_spinlock_t *tmp___0 ;

  {
  {
#line 2716
  tmp = our_ep(ep);
#line 2716
  hs_ep = tmp;
#line 2717
  hs = hs_ep->parent;
#line 2718
  flags = 0UL;
#line 2719
  ret = 0;
#line 2721
  tmp___0 = spinlock_check(& hs->lock);
#line 2721
  flags = _raw_spin_lock_irqsave(tmp___0);
#line 2722
  ret = s3c_hsotg_ep_sethalt(ep, value);
#line 2723
  spin_unlock_irqrestore(& hs->lock, flags);
  }
#line 2725
  return (ret);
}
}
#line 2728 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static struct usb_ep_ops s3c_hsotg_ep_ops  = 
#line 2728
     {& s3c_hsotg_ep_enable, & s3c_hsotg_ep_disable, & s3c_hsotg_ep_alloc_request, & s3c_hsotg_ep_free_request,
    & s3c_hsotg_ep_queue_lock, & s3c_hsotg_ep_dequeue, & s3c_hsotg_ep_sethalt_lock,
    0, 0, 0};
#line 2746 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_phy_enable(struct s3c_hsotg *hsotg ) 
{ 
  struct platform_device *pdev ;
  struct device  const  *__mptr ;
  struct _ddebug descriptor ;
  long tmp ;

  {
  {
#line 2748
  __mptr = (struct device  const  *)hsotg->dev;
#line 2748
  pdev = (struct platform_device *)((char *)__mptr + 0xfffffffffffffff0UL);
#line 2750
  descriptor.modname = "dwc2_gadget";
#line 2750
  descriptor.function = "s3c_hsotg_phy_enable";
#line 2750
  descriptor.filename = "drivers/usb/dwc2/gadget.c";
#line 2750
  descriptor.format = "pdev 0x%p\n";
#line 2750
  descriptor.lineno = 2750U;
#line 2750
  descriptor.flags = 1U;
#line 2750
  tmp = __builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 2750
  if (tmp != 0L) {
    {
#line 2750
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)hsotg->dev, "pdev 0x%p\n",
                      pdev);
    }
  } else {

  }
#line 2752
  if ((unsigned long )hsotg->uphy != (unsigned long )((struct usb_phy *)0)) {
    {
#line 2753
    usb_phy_init(hsotg->uphy);
    }
  } else
#line 2754
  if ((unsigned long )hsotg->plat != (unsigned long )((struct s3c_hsotg_plat *)0) && (unsigned long )(hsotg->plat)->phy_init != (unsigned long )((int (*)(struct platform_device * ,
                                                                                                                                                          int  ))0)) {
    {
#line 2755
    (*((hsotg->plat)->phy_init))(pdev, (hsotg->plat)->phy_type);
    }
  } else {
    {
#line 2757
    phy_init(hsotg->phy);
#line 2758
    phy_power_on(hsotg->phy);
    }
  }
#line 2760
  return;
}
}
#line 2769 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_phy_disable(struct s3c_hsotg *hsotg ) 
{ 
  struct platform_device *pdev ;
  struct device  const  *__mptr ;

  {
#line 2771
  __mptr = (struct device  const  *)hsotg->dev;
#line 2771
  pdev = (struct platform_device *)((char *)__mptr + 0xfffffffffffffff0UL);
#line 2773
  if ((unsigned long )hsotg->uphy != (unsigned long )((struct usb_phy *)0)) {
    {
#line 2774
    usb_phy_shutdown(hsotg->uphy);
    }
  } else
#line 2775
  if ((unsigned long )hsotg->plat != (unsigned long )((struct s3c_hsotg_plat *)0) && (unsigned long )(hsotg->plat)->phy_exit != (unsigned long )((int (*)(struct platform_device * ,
                                                                                                                                                          int  ))0)) {
    {
#line 2776
    (*((hsotg->plat)->phy_exit))(pdev, (hsotg->plat)->phy_type);
    }
  } else {
    {
#line 2778
    phy_power_off(hsotg->phy);
#line 2779
    phy_exit(hsotg->phy);
    }
  }
#line 2781
  return;
}
}
#line 2787 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_init(struct s3c_hsotg *hsotg ) 
{ 
  struct _ddebug descriptor ;
  unsigned int tmp ;
  unsigned int tmp___0 ;
  long tmp___1 ;
  bool tmp___2 ;

  {
  {
#line 2791
  writel(15U, (void volatile   *)(hsotg->regs + 2064UL));
#line 2795
  writel(15U, (void volatile   *)(hsotg->regs + 2068UL));
#line 2799
  writel(0U, (void volatile   *)(hsotg->regs + 2076UL));
#line 2802
  __orr32(hsotg->regs + 2052UL, 2U);
#line 2812
  descriptor.modname = "dwc2_gadget";
#line 2812
  descriptor.function = "s3c_hsotg_init";
#line 2812
  descriptor.filename = "drivers/usb/dwc2/gadget.c";
#line 2812
  descriptor.format = "GRXFSIZ=0x%08x, GNPTXFSIZ=0x%08x\n";
#line 2812
  descriptor.lineno = 2814U;
#line 2812
  descriptor.flags = 1U;
#line 2812
  tmp___1 = __builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 2812
  if (tmp___1 != 0L) {
    {
#line 2812
    tmp = readl((void const volatile   *)(hsotg->regs + 40UL));
#line 2812
    tmp___0 = readl((void const volatile   *)(hsotg->regs + 36UL));
#line 2812
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)hsotg->dev, "GRXFSIZ=0x%08x, GNPTXFSIZ=0x%08x\n",
                      tmp___0, tmp);
    }
  } else {

  }
  {
#line 2816
  s3c_hsotg_init_fifo(hsotg);
#line 2819
  writel(5135U, (void volatile   *)(hsotg->regs + 12UL));
#line 2822
  tmp___2 = using_dma(hsotg);
#line 2822
  writel((int )tmp___2 ? 32U : 0U, (void volatile   *)(hsotg->regs + 8UL));
  }
#line 2824
  return;
}
}
#line 2834 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static int s3c_hsotg_udc_start(struct usb_gadget *gadget , struct usb_gadget_driver *driver ) 
{ 
  struct s3c_hsotg *hsotg ;
  struct s3c_hsotg *tmp ;
  int ret ;
  int __ret_warn_on ;
  long tmp___0 ;

  {
  {
#line 2837
  tmp = to_hsotg(gadget);
#line 2837
  hsotg = tmp;
  }
#line 2840
  if ((unsigned long )hsotg == (unsigned long )((struct s3c_hsotg *)0)) {
    {
#line 2841
    printk("\v%s: called with no device\n", "s3c_hsotg_udc_start");
    }
#line 2842
    return (-19);
  } else {

  }
#line 2845
  if ((unsigned long )driver == (unsigned long )((struct usb_gadget_driver *)0)) {
    {
#line 2846
    dev_err((struct device  const  *)hsotg->dev, "%s: no driver\n", "s3c_hsotg_udc_start");
    }
#line 2847
    return (-22);
  } else {

  }
#line 2850
  if ((unsigned int )driver->max_speed <= 1U) {
    {
#line 2851
    dev_err((struct device  const  *)hsotg->dev, "%s: bad speed\n", "s3c_hsotg_udc_start");
    }
  } else {

  }
#line 2853
  if ((unsigned long )driver->setup == (unsigned long )((int (*)(struct usb_gadget * ,
                                                                 struct usb_ctrlrequest  const  * ))0)) {
    {
#line 2854
    dev_err((struct device  const  *)hsotg->dev, "%s: missing entry points\n", "s3c_hsotg_udc_start");
    }
#line 2855
    return (-22);
  } else {

  }
  {
#line 2858
  __ret_warn_on = (unsigned long )hsotg->driver != (unsigned long )((struct usb_gadget_driver *)0);
#line 2858
  tmp___0 = __builtin_expect(__ret_warn_on != 0, 0L);
  }
#line 2858
  if (tmp___0 != 0L) {
    {
#line 2858
    warn_slowpath_null("drivers/usb/dwc2/gadget.c", 2858);
    }
  } else {

  }
  {
#line 2858
  __builtin_expect(__ret_warn_on != 0, 0L);
#line 2860
  driver->driver.bus = (struct bus_type *)0;
#line 2861
  hsotg->driver = driver;
#line 2862
  hsotg->gadget.dev.of_node = (hsotg->dev)->of_node;
#line 2863
  hsotg->gadget.speed = 0;
#line 2865
  ret = regulator_bulk_enable(2, (struct regulator_bulk_data *)(& hsotg->supplies));
  }
#line 2867
  if (ret != 0) {
    {
#line 2868
    dev_err((struct device  const  *)hsotg->dev, "failed to enable supplies: %d\n",
            ret);
    }
#line 2869
    goto err;
  } else {

  }
  {
#line 2872
  hsotg->last_rst = jiffies;
#line 2873
  _dev_info((struct device  const  *)hsotg->dev, "bound driver %s\n", driver->driver.name);
  }
#line 2874
  return (0);
  err: 
#line 2877
  hsotg->driver = (struct usb_gadget_driver *)0;
#line 2878
  return (ret);
}
}
#line 2888 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static int s3c_hsotg_udc_stop(struct usb_gadget *gadget , struct usb_gadget_driver *driver ) 
{ 
  struct s3c_hsotg *hsotg ;
  struct s3c_hsotg *tmp ;
  unsigned long flags ;
  int ep ;
  raw_spinlock_t *tmp___0 ;

  {
  {
#line 2891
  tmp = to_hsotg(gadget);
#line 2891
  hsotg = tmp;
#line 2892
  flags = 0UL;
  }
#line 2895
  if ((unsigned long )hsotg == (unsigned long )((struct s3c_hsotg *)0)) {
#line 2896
    return (-19);
  } else {

  }
#line 2899
  ep = 0;
#line 2899
  goto ldv_33918;
  ldv_33917: 
  {
#line 2900
  s3c_hsotg_ep_disable(& (hsotg->eps + (unsigned long )ep)->ep);
#line 2899
  ep = ep + 1;
  }
  ldv_33918: ;
#line 2899
  if (ep < (int )hsotg->num_of_eps) {
#line 2901
    goto ldv_33917;
  } else {

  }
  {
#line 2902
  tmp___0 = spinlock_check(& hsotg->lock);
#line 2902
  flags = _raw_spin_lock_irqsave(tmp___0);
  }
#line 2904
  if ((unsigned long )driver == (unsigned long )((struct usb_gadget_driver *)0)) {
#line 2905
    hsotg->driver = (struct usb_gadget_driver *)0;
  } else {

  }
  {
#line 2907
  hsotg->gadget.speed = 0;
#line 2909
  spin_unlock_irqrestore(& hsotg->lock, flags);
#line 2911
  regulator_bulk_disable(2, (struct regulator_bulk_data *)(& hsotg->supplies));
  }
#line 2913
  return (0);
}
}
#line 2922 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static int s3c_hsotg_gadget_getframe(struct usb_gadget *gadget ) 
{ 
  struct s3c_hsotg *tmp ;
  u32 tmp___0 ;

  {
  {
#line 2924
  tmp = to_hsotg(gadget);
#line 2924
  tmp___0 = s3c_hsotg_read_frameno(tmp);
  }
#line 2924
  return ((int )tmp___0);
}
}
#line 2934 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static int s3c_hsotg_pullup(struct usb_gadget *gadget , int is_on ) 
{ 
  struct s3c_hsotg *hsotg ;
  struct s3c_hsotg *tmp ;
  unsigned long flags ;
  struct _ddebug descriptor ;
  long tmp___0 ;
  raw_spinlock_t *tmp___1 ;

  {
  {
#line 2936
  tmp = to_hsotg(gadget);
#line 2936
  hsotg = tmp;
#line 2937
  flags = 0UL;
#line 2939
  descriptor.modname = "dwc2_gadget";
#line 2939
  descriptor.function = "s3c_hsotg_pullup";
#line 2939
  descriptor.filename = "drivers/usb/dwc2/gadget.c";
#line 2939
  descriptor.format = "%s: is_in: %d\n";
#line 2939
  descriptor.lineno = 2939U;
#line 2939
  descriptor.flags = 1U;
#line 2939
  tmp___0 = __builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 2939
  if (tmp___0 != 0L) {
    {
#line 2939
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)hsotg->dev, "%s: is_in: %d\n",
                      "s3c_hsotg_pullup", is_on);
    }
  } else {

  }
  {
#line 2941
  tmp___1 = spinlock_check(& hsotg->lock);
#line 2941
  flags = _raw_spin_lock_irqsave(tmp___1);
  }
#line 2942
  if (is_on != 0) {
    {
#line 2943
    s3c_hsotg_phy_enable(hsotg);
#line 2944
    s3c_hsotg_core_init(hsotg);
    }
  } else {
    {
#line 2946
    s3c_hsotg_phy_disable(hsotg);
    }
  }
  {
#line 2949
  hsotg->gadget.speed = 0;
#line 2950
  spin_unlock_irqrestore(& hsotg->lock, flags);
  }
#line 2952
  return (0);
}
}
#line 2955 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static struct usb_gadget_ops  const  s3c_hsotg_gadget_ops  = 
#line 2955
     {& s3c_hsotg_gadget_getframe, 0, 0, 0, 0, & s3c_hsotg_pullup, 0, 0, & s3c_hsotg_udc_start,
    & s3c_hsotg_udc_stop};
#line 2972 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_initep(struct s3c_hsotg *hsotg , struct s3c_hsotg_ep *hs_ep ,
                             int epnum ) 
{ 
  u32 ptxfifo ;
  char *dir ;
  u32 next ;
  bool tmp ;

  {
#line 2979
  if (epnum == 0) {
#line 2980
    dir = (char *)"";
  } else
#line 2981
  if (((unsigned int )epnum & 1U) == 0U) {
#line 2982
    dir = (char *)"out";
  } else {
#line 2984
    dir = (char *)"in";
#line 2985
    hs_ep->dir_in = 1U;
  }
  {
#line 2988
  hs_ep->index = (unsigned char )epnum;
#line 2990
  snprintf((char *)(& hs_ep->name), 10UL, "ep%d%s", epnum, dir);
#line 2992
  INIT_LIST_HEAD(& hs_ep->queue);
#line 2993
  INIT_LIST_HEAD(& hs_ep->ep.ep_list);
  }
#line 2996
  if (epnum != 0) {
    {
#line 2997
    list_add_tail(& hs_ep->ep.ep_list, & hsotg->gadget.ep_list);
    }
  } else {

  }
  {
#line 2999
  hs_ep->parent = hsotg;
#line 3000
  hs_ep->ep.name = (char const   *)(& hs_ep->name);
#line 3001
  usb_ep_set_maxpacket_limit(& hs_ep->ep, epnum != 0 ? 1024U : 64U);
#line 3002
  hs_ep->ep.ops = (struct usb_ep_ops  const  *)(& s3c_hsotg_ep_ops);
#line 3010
  ptxfifo = readl((void const volatile   *)(hsotg->regs + (unsigned long )((epnum + 64) * 4)));
#line 3011
  hs_ep->fifo_size = (unsigned int )((unsigned short )(ptxfifo >> 16)) * 4U;
#line 3018
  tmp = using_dma(hsotg);
  }
#line 3018
  if ((int )tmp) {
    {
#line 3019
    next = (u32 )((epnum + 1) % 15 << 11);
#line 3020
    writel(next, (void volatile   *)(hsotg->regs + (unsigned long )((epnum + 72) * 32)));
#line 3021
    writel(next, (void volatile   *)(hsotg->regs + (unsigned long )((epnum + 88) * 32)));
    }
  } else {

  }
#line 3023
  return;
}
}
#line 3031 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_hw_cfg(struct s3c_hsotg *hsotg ) 
{ 
  u32 cfg2 ;
  u32 cfg4 ;

  {
  {
#line 3036
  cfg2 = readl((void const volatile   *)(hsotg->regs + 72UL));
#line 3037
  hsotg->num_of_eps = (unsigned int )((unsigned char )(cfg2 >> 10)) & 15U;
#line 3039
  _dev_info((struct device  const  *)hsotg->dev, "EPs:%d\n", (int )hsotg->num_of_eps);
#line 3041
  cfg4 = readl((void const volatile   *)(hsotg->regs + 80UL));
#line 3042
  hsotg->dedicated_fifos = (unsigned int )((unsigned char )(cfg4 >> 25)) & 1U;
#line 3044
  _dev_info((struct device  const  *)hsotg->dev, "%s fifos\n", (unsigned int )*((unsigned char *)hsotg + 188UL) != 0U ? (char *)"dedicated" : (char *)"shared");
  }
#line 3045
  return;
}
}
#line 3052 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_dump(struct s3c_hsotg *hsotg ) 
{ 
  struct device *dev ;
  void *regs ;
  u32 val ;
  int idx ;
  unsigned int tmp ;
  unsigned int tmp___0 ;
  unsigned int tmp___1 ;
  unsigned int tmp___2 ;
  unsigned int tmp___3 ;
  unsigned int tmp___4 ;
  unsigned int tmp___5 ;
  unsigned int tmp___6 ;
  unsigned int tmp___7 ;
  unsigned int tmp___8 ;
  unsigned int tmp___9 ;
  unsigned int tmp___10 ;
  unsigned int tmp___11 ;
  unsigned int tmp___12 ;
  unsigned int tmp___13 ;

  {
  {
#line 3055
  dev = hsotg->dev;
#line 3056
  regs = hsotg->regs;
#line 3060
  tmp = readl((void const volatile   *)(regs + 2064UL));
#line 3060
  tmp___0 = readl((void const volatile   *)(regs + 2052UL));
#line 3060
  tmp___1 = readl((void const volatile   *)(regs + 2048UL));
#line 3060
  _dev_info((struct device  const  *)dev, "DCFG=0x%08x, DCTL=0x%08x, DIEPMSK=%08x\n",
            tmp___1, tmp___0, tmp);
#line 3064
  tmp___2 = readl((void const volatile   *)(regs + 68UL));
#line 3064
  tmp___3 = readl((void const volatile   *)(regs + 8UL));
#line 3064
  _dev_info((struct device  const  *)dev, "GAHBCFG=0x%08x, 0x44=0x%08x\n", tmp___3,
            tmp___2);
#line 3067
  tmp___4 = readl((void const volatile   *)(regs + 40UL));
#line 3067
  tmp___5 = readl((void const volatile   *)(regs + 36UL));
#line 3067
  _dev_info((struct device  const  *)dev, "GRXFSIZ=0x%08x, GNPTXFSIZ=0x%08x\n", tmp___5,
            tmp___4);
#line 3072
  idx = 1;
  }
#line 3072
  goto ldv_33961;
  ldv_33960: 
  {
#line 3073
  val = readl((void const volatile   *)(regs + (unsigned long )((idx + 64) * 4)));
#line 3074
  _dev_info((struct device  const  *)dev, "DPTx[%d] FSize=%d, StAddr=0x%08x\n", idx,
            val >> 16, val & 65535U);
#line 3072
  idx = idx + 1;
  }
  ldv_33961: ;
#line 3072
  if (idx <= 15) {
#line 3074
    goto ldv_33960;
  } else {

  }
#line 3079
  idx = 0;
#line 3079
  goto ldv_33964;
  ldv_33963: 
  {
#line 3080
  tmp___6 = readl((void const volatile   *)(regs + (unsigned long )(idx * 32 + 2324)));
#line 3080
  tmp___7 = readl((void const volatile   *)(regs + (unsigned long )(idx * 32 + 2320)));
#line 3080
  tmp___8 = readl((void const volatile   *)(regs + (unsigned long )((idx + 72) * 32)));
#line 3080
  _dev_info((struct device  const  *)dev, "ep%d-in: EPCTL=0x%08x, SIZ=0x%08x, DMA=0x%08x\n",
            idx, tmp___8, tmp___7, tmp___6);
#line 3086
  val = readl((void const volatile   *)(regs + (unsigned long )((idx + 88) * 32)));
#line 3087
  tmp___9 = readl((void const volatile   *)(regs + (unsigned long )(idx * 32 + 2836)));
#line 3087
  tmp___10 = readl((void const volatile   *)(regs + (unsigned long )(idx * 32 + 2832)));
#line 3087
  tmp___11 = readl((void const volatile   *)(regs + (unsigned long )((idx + 88) * 32)));
#line 3087
  _dev_info((struct device  const  *)dev, "ep%d-out: EPCTL=0x%08x, SIZ=0x%08x, DMA=0x%08x\n",
            idx, tmp___11, tmp___10, tmp___9);
#line 3079
  idx = idx + 1;
  }
  ldv_33964: ;
#line 3079
  if (idx <= 14) {
#line 3081
    goto ldv_33963;
  } else {

  }
  {
#line 3095
  tmp___12 = readl((void const volatile   *)(regs + 2092UL));
#line 3095
  tmp___13 = readl((void const volatile   *)(regs + 2088UL));
#line 3095
  _dev_info((struct device  const  *)dev, "DVBUSDIS=0x%08x, DVBUSPULSE=%08x\n", tmp___13,
            tmp___12);
  }
#line 3096
  return;
}
}
#line 3109 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static int state_show(struct seq_file *seq , void *v ) 
{ 
  struct s3c_hsotg *hsotg ;
  void *regs ;
  int idx ;
  unsigned int tmp ;
  unsigned int tmp___0 ;
  unsigned int tmp___1 ;
  unsigned int tmp___2 ;
  unsigned int tmp___3 ;
  unsigned int tmp___4 ;
  unsigned int tmp___5 ;
  unsigned int tmp___6 ;
  unsigned int tmp___7 ;
  unsigned int tmp___8 ;
  unsigned int tmp___9 ;
  u32 in ;
  u32 out ;

  {
  {
#line 3111
  hsotg = (struct s3c_hsotg *)seq->private;
#line 3112
  regs = hsotg->regs;
#line 3115
  tmp = readl((void const volatile   *)(regs + 2056UL));
#line 3115
  tmp___0 = readl((void const volatile   *)(regs + 2052UL));
#line 3115
  tmp___1 = readl((void const volatile   *)(regs + 2048UL));
#line 3115
  seq_printf(seq, "DCFG=0x%08x, DCTL=0x%08x, DSTS=0x%08x\n", tmp___1, tmp___0, tmp);
#line 3120
  tmp___2 = readl((void const volatile   *)(regs + 2068UL));
#line 3120
  tmp___3 = readl((void const volatile   *)(regs + 2064UL));
#line 3120
  seq_printf(seq, "DIEPMSK=0x%08x, DOEPMASK=0x%08x\n", tmp___3, tmp___2);
#line 3123
  tmp___4 = readl((void const volatile   *)(regs + 20UL));
#line 3123
  tmp___5 = readl((void const volatile   *)(regs + 24UL));
#line 3123
  seq_printf(seq, "GINTMSK=0x%08x, GINTSTS=0x%08x\n", tmp___5, tmp___4);
#line 3127
  tmp___6 = readl((void const volatile   *)(regs + 2072UL));
#line 3127
  tmp___7 = readl((void const volatile   *)(regs + 2076UL));
#line 3127
  seq_printf(seq, "DAINTMSK=0x%08x, DAINT=0x%08x\n", tmp___7, tmp___6);
#line 3131
  tmp___8 = readl((void const volatile   *)(regs + 28UL));
#line 3131
  tmp___9 = readl((void const volatile   *)(regs + 44UL));
#line 3131
  seq_printf(seq, "GNPTXSTS=0x%08x, GRXSTSR=%08x\n", tmp___9, tmp___8);
#line 3135
  seq_puts(seq, "\nEndpoint status:\n");
#line 3137
  idx = 0;
  }
#line 3137
  goto ldv_33976;
  ldv_33975: 
  {
#line 3140
  in = readl((void const volatile   *)(regs + (unsigned long )((idx + 72) * 32)));
#line 3141
  out = readl((void const volatile   *)(regs + (unsigned long )((idx + 88) * 32)));
#line 3143
  seq_printf(seq, "ep%d: DIEPCTL=0x%08x, DOEPCTL=0x%08x", idx, in, out);
#line 3146
  in = readl((void const volatile   *)(regs + (unsigned long )(idx * 32 + 2320)));
#line 3147
  out = readl((void const volatile   *)(regs + (unsigned long )(idx * 32 + 2832)));
#line 3149
  seq_printf(seq, ", DIEPTSIZ=0x%08x, DOEPTSIZ=0x%08x", in, out);
#line 3152
  seq_puts(seq, "\n");
#line 3137
  idx = idx + 1;
  }
  ldv_33976: ;
#line 3137
  if (idx <= 14) {
#line 3139
    goto ldv_33975;
  } else {

  }

#line 3155
  return (0);
}
}
#line 3158 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static int state_open(struct inode *inode , struct file *file ) 
{ 
  int tmp ;

  {
  {
#line 3160
  tmp = single_open(file, & state_show, inode->i_private);
  }
#line 3160
  return (tmp);
}
}
#line 3163 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static struct file_operations  const  state_fops  = 
#line 3163
     {& __this_module, & seq_lseek, & seq_read, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, & state_open,
    0, & single_release, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
#line 3179 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static int fifo_show(struct seq_file *seq , void *v ) 
{ 
  struct s3c_hsotg *hsotg ;
  void *regs ;
  u32 val ;
  int idx ;
  unsigned int tmp ;

  {
  {
#line 3181
  hsotg = (struct s3c_hsotg *)seq->private;
#line 3182
  regs = hsotg->regs;
#line 3186
  seq_puts(seq, "Non-periodic FIFOs:\n");
#line 3187
  tmp = readl((void const volatile   *)(regs + 36UL));
#line 3187
  seq_printf(seq, "RXFIFO: Size %d\n", tmp);
#line 3189
  val = readl((void const volatile   *)(regs + 40UL));
#line 3190
  seq_printf(seq, "NPTXFIFO: Size %d, Start 0x%08x\n", val >> 16, val & 4294901760U);
#line 3194
  seq_puts(seq, "\nPeriodic TXFIFOs:\n");
#line 3196
  idx = 1;
  }
#line 3196
  goto ldv_33992;
  ldv_33991: 
  {
#line 3197
  val = readl((void const volatile   *)(regs + (unsigned long )((idx + 64) * 4)));
#line 3199
  seq_printf(seq, "\tDPTXFIFO%2d: Size %d, Start 0x%08x\n", idx, val >> 16, val & 65535U);
#line 3196
  idx = idx + 1;
  }
  ldv_33992: ;
#line 3196
  if (idx <= 15) {
#line 3198
    goto ldv_33991;
  } else {

  }

#line 3204
  return (0);
}
}
#line 3207 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static int fifo_open(struct inode *inode , struct file *file ) 
{ 
  int tmp ;

  {
  {
#line 3209
  tmp = single_open(file, & fifo_show, inode->i_private);
  }
#line 3209
  return (tmp);
}
}
#line 3212 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static struct file_operations  const  fifo_fops  = 
#line 3212
     {& __this_module, & seq_lseek, & seq_read, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, & fifo_open,
    0, & single_release, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
#line 3221 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static char const   *decode_direction(int is_in ) 
{ 


  {
#line 3223
  return (is_in != 0 ? "in" : "out");
}
}
#line 3234 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static int ep_show(struct seq_file *seq , void *v ) 
{ 
  struct s3c_hsotg_ep *ep ;
  struct s3c_hsotg *hsotg ;
  struct s3c_hsotg_req *req ;
  void *regs ;
  int index ;
  int show_limit ;
  unsigned long flags ;
  char const   *tmp ;
  unsigned int tmp___0 ;
  unsigned int tmp___1 ;
  unsigned int tmp___2 ;
  unsigned int tmp___3 ;
  unsigned int tmp___4 ;
  unsigned int tmp___5 ;
  unsigned int tmp___6 ;
  unsigned int tmp___7 ;
  raw_spinlock_t *tmp___8 ;
  struct list_head  const  *__mptr ;
  struct list_head  const  *__mptr___0 ;

  {
  {
#line 3236
  ep = (struct s3c_hsotg_ep *)seq->private;
#line 3237
  hsotg = ep->parent;
#line 3239
  regs = hsotg->regs;
#line 3240
  index = (int )ep->index;
#line 3241
  show_limit = 15;
#line 3244
  tmp = decode_direction((int )ep->dir_in);
#line 3244
  seq_printf(seq, "Endpoint index %d, named %s,  dir %s:\n", (int )ep->index, ep->ep.name,
             tmp);
#line 3249
  tmp___0 = readl((void const volatile   *)(regs + (unsigned long )((index + 88) * 32)));
#line 3249
  tmp___1 = readl((void const volatile   *)(regs + (unsigned long )((index + 72) * 32)));
#line 3249
  seq_printf(seq, "\tDIEPCTL=0x%08x, DOEPCTL=0x%08x\n", tmp___1, tmp___0);
#line 3253
  tmp___2 = readl((void const volatile   *)(regs + (unsigned long )(index * 32 + 2836)));
#line 3253
  tmp___3 = readl((void const volatile   *)(regs + (unsigned long )(index * 32 + 2324)));
#line 3253
  seq_printf(seq, "\tDIEPDMA=0x%08x, DOEPDMA=0x%08x\n", tmp___3, tmp___2);
#line 3257
  tmp___4 = readl((void const volatile   *)(regs + (unsigned long )(index * 32 + 2824)));
#line 3257
  tmp___5 = readl((void const volatile   *)(regs + (unsigned long )(index * 32 + 2312)));
#line 3257
  seq_printf(seq, "\tDIEPINT=0x%08x, DOEPINT=0x%08x\n", tmp___5, tmp___4);
#line 3261
  tmp___6 = readl((void const volatile   *)(regs + (unsigned long )(index * 32 + 2832)));
#line 3261
  tmp___7 = readl((void const volatile   *)(regs + (unsigned long )(index * 32 + 2320)));
#line 3261
  seq_printf(seq, "\tDIEPTSIZ=0x%08x, DOEPTSIZ=0x%08x\n", tmp___7, tmp___6);
#line 3265
  seq_puts(seq, "\n");
#line 3266
  seq_printf(seq, "mps %d\n", (int )ep->ep.maxpacket);
#line 3267
  seq_printf(seq, "total_data=%ld\n", ep->total_data);
#line 3269
  seq_printf(seq, "request list (%p,%p):\n", ep->queue.next, ep->queue.prev);
#line 3272
  tmp___8 = spinlock_check(& hsotg->lock);
#line 3272
  flags = _raw_spin_lock_irqsave(tmp___8);
#line 3274
  __mptr = (struct list_head  const  *)ep->queue.next;
#line 3274
  req = (struct s3c_hsotg_req *)((char *)__mptr + 0xffffffffffffffa8UL);
  }
#line 3274
  goto ldv_34022;
  ldv_34021: 
#line 3275
  show_limit = show_limit - 1;
#line 3275
  if (show_limit < 0) {
    {
#line 3276
    seq_puts(seq, "not showing more requests...\n");
    }
#line 3277
    goto ldv_34020;
  } else {

  }
  {
#line 3280
  seq_printf(seq, "%c req %p: %d bytes @%p, ", (unsigned long )req == (unsigned long )ep->req ? 42 : 32,
             req, req->req.length, req->req.buf);
#line 3283
  seq_printf(seq, "%d done, res %d\n", req->req.actual, req->req.status);
#line 3274
  __mptr___0 = (struct list_head  const  *)req->queue.next;
#line 3274
  req = (struct s3c_hsotg_req *)((char *)__mptr___0 + 0xffffffffffffffa8UL);
  }
  ldv_34022: ;
#line 3274
  if ((unsigned long )(& req->queue) != (unsigned long )(& ep->queue)) {
#line 3276
    goto ldv_34021;
  } else {

  }
  ldv_34020: 
  {
#line 3287
  spin_unlock_irqrestore(& hsotg->lock, flags);
  }
#line 3289
  return (0);
}
}
#line 3292 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static int ep_open(struct inode *inode , struct file *file ) 
{ 
  int tmp ;

  {
  {
#line 3294
  tmp = single_open(file, & ep_show, inode->i_private);
  }
#line 3294
  return (tmp);
}
}
#line 3297 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static struct file_operations  const  ep_fops  = 
#line 3297
     {& __this_module, & seq_lseek, & seq_read, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, & ep_open,
    0, & single_release, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
#line 3314 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_create_debug(struct s3c_hsotg *hsotg ) 
{ 
  struct dentry *root ;
  unsigned int epidx ;
  char const   *tmp ;
  bool tmp___0 ;
  bool tmp___1 ;
  bool tmp___2 ;
  struct s3c_hsotg_ep *ep ;
  bool tmp___3 ;

  {
  {
#line 3319
  tmp = dev_name((struct device  const  *)hsotg->dev);
#line 3319
  root = debugfs_create_dir(tmp, (struct dentry *)0);
#line 3320
  hsotg->debug_root = root;
#line 3321
  tmp___0 = IS_ERR((void const   *)root);
  }
#line 3321
  if ((int )tmp___0) {
    {
#line 3322
    dev_err((struct device  const  *)hsotg->dev, "cannot create debug root\n");
    }
#line 3323
    return;
  } else {

  }
  {
#line 3328
  hsotg->debug_file = debugfs_create_file("state", 292, root, (void *)hsotg, & state_fops);
#line 3331
  tmp___1 = IS_ERR((void const   *)hsotg->debug_file);
  }
#line 3331
  if ((int )tmp___1) {
    {
#line 3332
    dev_err((struct device  const  *)hsotg->dev, "%s: failed to create state\n", "s3c_hsotg_create_debug");
    }
  } else {

  }
  {
#line 3334
  hsotg->debug_fifo = debugfs_create_file("fifo", 292, root, (void *)hsotg, & fifo_fops);
#line 3337
  tmp___2 = IS_ERR((void const   *)hsotg->debug_fifo);
  }
#line 3337
  if ((int )tmp___2) {
    {
#line 3338
    dev_err((struct device  const  *)hsotg->dev, "%s: failed to create fifo\n", "s3c_hsotg_create_debug");
    }
  } else {

  }
#line 3342
  epidx = 0U;
#line 3342
  goto ldv_34036;
  ldv_34035: 
  {
#line 3343
  ep = hsotg->eps + (unsigned long )epidx;
#line 3345
  ep->debugfs = debugfs_create_file((char const   *)(& ep->name), 292, root, (void *)ep,
                                    & ep_fops);
#line 3348
  tmp___3 = IS_ERR((void const   *)ep->debugfs);
  }
#line 3348
  if ((int )tmp___3) {
    {
#line 3349
    dev_err((struct device  const  *)hsotg->dev, "failed to create %s debug file\n",
            (char *)(& ep->name));
    }
  } else {

  }
#line 3342
  epidx = epidx + 1U;
  ldv_34036: ;
#line 3342
  if (epidx < (unsigned int )hsotg->num_of_eps) {
#line 3344
    goto ldv_34035;
  } else {

  }

#line 3349
  return;
}
}
#line 3360 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_delete_debug(struct s3c_hsotg *hsotg ) 
{ 
  unsigned int epidx ;
  struct s3c_hsotg_ep *ep ;

  {
#line 3364
  epidx = 0U;
#line 3364
  goto ldv_34044;
  ldv_34043: 
  {
#line 3365
  ep = hsotg->eps + (unsigned long )epidx;
#line 3366
  debugfs_remove(ep->debugfs);
#line 3364
  epidx = epidx + 1U;
  }
  ldv_34044: ;
#line 3364
  if (epidx < (unsigned int )hsotg->num_of_eps) {
#line 3366
    goto ldv_34043;
  } else {

  }
  {
#line 3369
  debugfs_remove(hsotg->debug_file);
#line 3370
  debugfs_remove(hsotg->debug_fifo);
#line 3371
  debugfs_remove(hsotg->debug_root);
  }
#line 3372
  return;
}
}
#line 3379 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static int s3c_hsotg_probe(struct platform_device *pdev ) 
{ 
  struct s3c_hsotg_plat *plat ;
  void *tmp ;
  struct phy *phy ;
  struct usb_phy *uphy ;
  struct device *dev ;
  struct s3c_hsotg_ep *eps ;
  struct s3c_hsotg *hsotg ;
  struct resource *res ;
  int epnum ;
  int ret ;
  int i ;
  void *tmp___0 ;
  void *tmp___1 ;
  bool tmp___2 ;
  bool tmp___3 ;
  long tmp___4 ;
  bool tmp___5 ;
  long tmp___6 ;
  bool tmp___7 ;
  struct lock_class_key __key ;
  char const   *tmp___8 ;
  int tmp___9 ;
  void *tmp___10 ;

  {
  {
#line 3381
  tmp = dev_get_platdata((struct device  const  *)(& pdev->dev));
#line 3381
  plat = (struct s3c_hsotg_plat *)tmp;
#line 3384
  dev = & pdev->dev;
#line 3392
  tmp___0 = devm_kzalloc(& pdev->dev, 1840UL, 208U);
#line 3392
  hsotg = (struct s3c_hsotg *)tmp___0;
  }
#line 3393
  if ((unsigned long )hsotg == (unsigned long )((struct s3c_hsotg *)0)) {
    {
#line 3394
    dev_err((struct device  const  *)dev, "cannot get memory\n");
    }
#line 3395
    return (-12);
  } else {

  }
  {
#line 3402
  phy = devm_phy_get(& pdev->dev, "usb2-phy");
#line 3403
  tmp___3 = IS_ERR((void const   *)phy);
  }
#line 3403
  if ((int )tmp___3) {
    {
#line 3404
    uphy = devm_usb_get_phy(dev, 1);
#line 3405
    tmp___2 = IS_ERR((void const   *)uphy);
    }
#line 3405
    if ((int )tmp___2) {
      {
#line 3407
      tmp___1 = dev_get_platdata((struct device  const  *)(& pdev->dev));
#line 3407
      plat = (struct s3c_hsotg_plat *)tmp___1;
      }
#line 3408
      if ((unsigned long )plat == (unsigned long )((struct s3c_hsotg_plat *)0)) {
        {
#line 3409
        dev_err((struct device  const  *)(& pdev->dev), "no platform data or transceiver defined\n");
        }
#line 3411
        return (-517);
      } else {

      }
#line 3413
      hsotg->plat = plat;
    } else {
#line 3415
      hsotg->uphy = uphy;
    }
  } else {
#line 3417
    hsotg->phy = phy;
  }
  {
#line 3419
  hsotg->dev = dev;
#line 3421
  hsotg->clk = devm_clk_get(& pdev->dev, "otg");
#line 3422
  tmp___5 = IS_ERR((void const   *)hsotg->clk);
  }
#line 3422
  if ((int )tmp___5) {
    {
#line 3423
    dev_err((struct device  const  *)dev, "cannot get otg clock\n");
#line 3424
    tmp___4 = PTR_ERR((void const   *)hsotg->clk);
    }
#line 3424
    return ((int )tmp___4);
  } else {

  }
  {
#line 3427
  platform_set_drvdata(pdev, (void *)hsotg);
#line 3429
  res = platform_get_resource(pdev, 512U, 0U);
#line 3431
  hsotg->regs = devm_ioremap_resource(& pdev->dev, res);
#line 3432
  tmp___7 = IS_ERR((void const   *)hsotg->regs);
  }
#line 3432
  if ((int )tmp___7) {
    {
#line 3433
    tmp___6 = PTR_ERR((void const   *)hsotg->regs);
#line 3433
    ret = (int )tmp___6;
    }
#line 3434
    goto err_clk;
  } else {

  }
  {
#line 3437
  ret = platform_get_irq(pdev, 0U);
  }
#line 3438
  if (ret < 0) {
    {
#line 3439
    dev_err((struct device  const  *)dev, "cannot find IRQ\n");
    }
#line 3440
    goto err_clk;
  } else {

  }
  {
#line 3443
  spinlock_check(& hsotg->lock);
#line 3443
  __raw_spin_lock_init(& hsotg->lock.__annonCompField18.rlock, "&(&hsotg->lock)->rlock",
                       & __key);
#line 3445
  hsotg->irq = ret;
#line 3447
  tmp___8 = dev_name((struct device  const  *)dev);
#line 3447
  ret = devm_request_irq(& pdev->dev, (unsigned int )hsotg->irq, & s3c_hsotg_irq,
                         0UL, tmp___8, (void *)hsotg);
  }
#line 3449
  if (ret < 0) {
    {
#line 3450
    dev_err((struct device  const  *)dev, "cannot claim IRQ\n");
    }
#line 3451
    goto err_clk;
  } else {

  }
  {
#line 3454
  _dev_info((struct device  const  *)dev, "regs %p, irq %d\n", hsotg->regs, hsotg->irq);
#line 3456
  hsotg->gadget.max_speed = 3;
#line 3457
  hsotg->gadget.ops = & s3c_hsotg_gadget_ops;
#line 3458
  hsotg->gadget.name = dev_name((struct device  const  *)dev);
#line 3462
  ldv_clk_prepare_enable_9(hsotg->clk);
#line 3466
  i = 0;
  }
#line 3466
  goto ldv_34064;
  ldv_34063: 
#line 3467
  hsotg->supplies[i].supply = s3c_hsotg_supply_names[i];
#line 3466
  i = i + 1;
  ldv_34064: ;
#line 3466
  if ((unsigned int )i <= 1U) {
#line 3468
    goto ldv_34063;
  } else {

  }
  {
#line 3469
  ret = devm_regulator_bulk_get(dev, 2, (struct regulator_bulk_data *)(& hsotg->supplies));
  }
#line 3471
  if (ret != 0) {
    {
#line 3472
    dev_err((struct device  const  *)dev, "failed to request supplies: %d\n", ret);
    }
#line 3473
    goto err_clk;
  } else {

  }
  {
#line 3476
  ret = regulator_bulk_enable(2, (struct regulator_bulk_data *)(& hsotg->supplies));
  }
#line 3479
  if (ret != 0) {
    {
#line 3480
    dev_err((struct device  const  *)hsotg->dev, "failed to enable supplies: %d\n",
            ret);
    }
#line 3481
    goto err_supplies;
  } else {

  }
#line 3485
  hsotg->phyif = 8U;
#line 3491
  if ((unsigned long )hsotg->phy != (unsigned long )((struct phy *)0)) {
    {
#line 3491
    tmp___9 = phy_get_bus_width(phy);
    }
#line 3491
    if (tmp___9 == 8) {
#line 3492
      hsotg->phyif = 0U;
    } else {

    }
  } else {

  }
  {
#line 3495
  s3c_hsotg_phy_enable(hsotg);
#line 3497
  s3c_hsotg_corereset(hsotg);
#line 3498
  s3c_hsotg_init(hsotg);
#line 3499
  s3c_hsotg_hw_cfg(hsotg);
  }
#line 3503
  if ((unsigned int )hsotg->num_of_eps == 0U) {
    {
#line 3504
    dev_err((struct device  const  *)dev, "wrong number of EPs (zero)\n");
#line 3505
    ret = -22;
    }
#line 3506
    goto err_supplies;
  } else {

  }
  {
#line 3509
  tmp___10 = kcalloc((size_t )((int )hsotg->num_of_eps + 1), 144UL, 208U);
#line 3509
  eps = (struct s3c_hsotg_ep *)tmp___10;
  }
#line 3511
  if ((unsigned long )eps == (unsigned long )((struct s3c_hsotg_ep *)0)) {
    {
#line 3512
    dev_err((struct device  const  *)dev, "cannot get memory\n");
#line 3513
    ret = -12;
    }
#line 3514
    goto err_supplies;
  } else {

  }
  {
#line 3517
  hsotg->eps = eps;
#line 3521
  INIT_LIST_HEAD(& hsotg->gadget.ep_list);
#line 3522
  hsotg->gadget.ep0 = & (hsotg->eps)->ep;
#line 3526
  hsotg->ctrl_req = s3c_hsotg_ep_alloc_request(& (hsotg->eps)->ep, 208U);
  }
#line 3528
  if ((unsigned long )hsotg->ctrl_req == (unsigned long )((struct usb_request *)0)) {
    {
#line 3529
    dev_err((struct device  const  *)dev, "failed to allocate ctrl req\n");
#line 3530
    ret = -12;
    }
#line 3531
    goto err_ep_mem;
  } else {

  }
#line 3535
  epnum = 0;
#line 3535
  goto ldv_34073;
  ldv_34072: 
  {
#line 3536
  s3c_hsotg_initep(hsotg, hsotg->eps + (unsigned long )epnum, epnum);
#line 3535
  epnum = epnum + 1;
  }
  ldv_34073: ;
#line 3535
  if (epnum < (int )hsotg->num_of_eps) {
#line 3537
    goto ldv_34072;
  } else {

  }
  {
#line 3540
  ret = regulator_bulk_disable(2, (struct regulator_bulk_data *)(& hsotg->supplies));
  }
#line 3542
  if (ret != 0) {
    {
#line 3543
    dev_err((struct device  const  *)hsotg->dev, "failed to disable supplies: %d\n",
            ret);
    }
#line 3544
    goto err_ep_mem;
  } else {

  }
  {
#line 3547
  s3c_hsotg_phy_disable(hsotg);
#line 3549
  ret = usb_add_gadget_udc(& pdev->dev, & hsotg->gadget);
  }
#line 3550
  if (ret != 0) {
#line 3551
    goto err_ep_mem;
  } else {

  }
  {
#line 3553
  s3c_hsotg_create_debug(hsotg);
#line 3555
  s3c_hsotg_dump(hsotg);
  }
#line 3557
  return (0);
  err_ep_mem: 
  {
#line 3560
  kfree((void const   *)eps);
  }
  err_supplies: 
  {
#line 3562
  s3c_hsotg_phy_disable(hsotg);
  }
  err_clk: 
  {
#line 3564
  ldv_clk_disable_unprepare_10(hsotg->clk);
  }
#line 3566
  return (ret);
}
}
#line 3573 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static int s3c_hsotg_remove(struct platform_device *pdev ) 
{ 
  struct s3c_hsotg *hsotg ;
  void *tmp ;

  {
  {
#line 3575
  tmp = platform_get_drvdata((struct platform_device  const  *)pdev);
#line 3575
  hsotg = (struct s3c_hsotg *)tmp;
#line 3577
  usb_del_gadget_udc(& hsotg->gadget);
#line 3579
  s3c_hsotg_delete_debug(hsotg);
  }
#line 3581
  if ((unsigned long )hsotg->driver != (unsigned long )((struct usb_gadget_driver *)0)) {
    {
#line 3583
    usb_gadget_unregister_driver(hsotg->driver);
    }
  } else {

  }
  {
#line 3586
  ldv_clk_disable_unprepare_10(hsotg->clk);
  }
#line 3588
  return (0);
}
}
#line 3591 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static int s3c_hsotg_suspend(struct platform_device *pdev , pm_message_t state ) 
{ 
  struct s3c_hsotg *hsotg ;
  void *tmp ;
  unsigned long flags ;
  int ret ;
  raw_spinlock_t *tmp___0 ;
  int ep ;

  {
  {
#line 3593
  tmp = platform_get_drvdata((struct platform_device  const  *)pdev);
#line 3593
  hsotg = (struct s3c_hsotg *)tmp;
#line 3595
  ret = 0;
  }
#line 3597
  if ((unsigned long )hsotg->driver != (unsigned long )((struct usb_gadget_driver *)0)) {
    {
#line 3598
    _dev_info((struct device  const  *)hsotg->dev, "suspending usb gadget %s\n", (hsotg->driver)->driver.name);
    }
  } else {

  }
  {
#line 3601
  tmp___0 = spinlock_check(& hsotg->lock);
#line 3601
  flags = _raw_spin_lock_irqsave(tmp___0);
#line 3602
  s3c_hsotg_disconnect(hsotg);
#line 3603
  s3c_hsotg_phy_disable(hsotg);
#line 3604
  hsotg->gadget.speed = 0;
#line 3605
  spin_unlock_irqrestore(& hsotg->lock, flags);
  }
#line 3607
  if ((unsigned long )hsotg->driver != (unsigned long )((struct usb_gadget_driver *)0)) {
#line 3609
    ep = 0;
#line 3609
    goto ldv_34093;
    ldv_34092: 
    {
#line 3610
    s3c_hsotg_ep_disable(& (hsotg->eps + (unsigned long )ep)->ep);
#line 3609
    ep = ep + 1;
    }
    ldv_34093: ;
#line 3609
    if (ep < (int )hsotg->num_of_eps) {
#line 3611
      goto ldv_34092;
    } else {

    }
    {
#line 3612
    ret = regulator_bulk_disable(2, (struct regulator_bulk_data *)(& hsotg->supplies));
    }
  } else {

  }
#line 3616
  return (ret);
}
}
#line 3619 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static int s3c_hsotg_resume(struct platform_device *pdev ) 
{ 
  struct s3c_hsotg *hsotg ;
  void *tmp ;
  unsigned long flags ;
  int ret ;
  raw_spinlock_t *tmp___0 ;

  {
  {
#line 3621
  tmp = platform_get_drvdata((struct platform_device  const  *)pdev);
#line 3621
  hsotg = (struct s3c_hsotg *)tmp;
#line 3623
  ret = 0;
  }
#line 3625
  if ((unsigned long )hsotg->driver != (unsigned long )((struct usb_gadget_driver *)0)) {
    {
#line 3626
    _dev_info((struct device  const  *)hsotg->dev, "resuming usb gadget %s\n", (hsotg->driver)->driver.name);
#line 3628
    ret = regulator_bulk_enable(2, (struct regulator_bulk_data *)(& hsotg->supplies));
    }
  } else {

  }
  {
#line 3632
  tmp___0 = spinlock_check(& hsotg->lock);
#line 3632
  flags = _raw_spin_lock_irqsave(tmp___0);
#line 3633
  hsotg->last_rst = jiffies;
#line 3634
  s3c_hsotg_phy_enable(hsotg);
#line 3635
  s3c_hsotg_core_init(hsotg);
#line 3636
  spin_unlock_irqrestore(& hsotg->lock, flags);
  }
#line 3638
  return (ret);
}
}
#line 3650 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static struct platform_driver s3c_hsotg_driver  = 
#line 3650
     {& s3c_hsotg_probe, & s3c_hsotg_remove, 0, & s3c_hsotg_suspend, & s3c_hsotg_resume,
    {"s3c-hsotg", 0, & __this_module, 0, (_Bool)0, (struct of_device_id  const  *)0,
     0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, (_Bool)0};
#line 3662 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static int s3c_hsotg_driver_init(void) 
{ 
  int tmp ;

  {
  {
#line 3662
  tmp = ldv___platform_driver_register_12(& s3c_hsotg_driver, & __this_module);
  }
#line 3662
  return (tmp);
}
}
#line 3662 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/lkbce/drivers/usb/dwc2/gadget.c"
static void s3c_hsotg_driver_exit(void) 
{ 


  {
  {
#line 3662
  ldv_platform_driver_unregister_13(& s3c_hsotg_driver);
  }
#line 3663
  return;
}
}
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_character_driver_scenario_2(void *arg0 ) ;
#line 55
void ldv_character_driver_scenario_3(void *arg0 ) ;
#line 56
void ldv_character_driver_scenario_4(void *arg0 ) ;
#line 57
void ldv_character_driver_scenario_callback_2_22(ssize_t (*arg0)(struct file * , char * ,
                                                                 size_t  , loff_t * ) ,
                                                 struct file *arg1 , char *arg2 ,
                                                 unsigned long arg3 , long long *arg4 ) ;
#line 58
void ldv_character_driver_scenario_callback_2_5(loff_t (*arg0)(struct file * , loff_t  ,
                                                               int  ) , struct file *arg1 ,
                                                long long arg2 , int arg3 ) ;
#line 59
void ldv_character_driver_scenario_callback_3_22(ssize_t (*arg0)(struct file * , char * ,
                                                                 size_t  , loff_t * ) ,
                                                 struct file *arg1 , char *arg2 ,
                                                 unsigned long arg3 , long long *arg4 ) ;
#line 60
void ldv_character_driver_scenario_callback_3_5(loff_t (*arg0)(struct file * , loff_t  ,
                                                               int  ) , struct file *arg1 ,
                                                long long arg2 , int arg3 ) ;
#line 61
void ldv_character_driver_scenario_callback_4_22(ssize_t (*arg0)(struct file * , char * ,
                                                                 size_t  , loff_t * ) ,
                                                 struct file *arg1 , char *arg2 ,
                                                 unsigned long arg3 , long long *arg4 ) ;
#line 62
void ldv_character_driver_scenario_callback_4_5(loff_t (*arg0)(struct file * , loff_t  ,
                                                               int  ) , struct file *arg1 ,
                                                long long arg2 , int arg3 ) ;
#line 63
int ldv_character_driver_scenario_probe_2_13(int (*arg0)(struct inode * , struct file * ) ,
                                             struct inode *arg1 , struct file *arg2 ) ;
#line 64
int ldv_character_driver_scenario_probe_3_13(int (*arg0)(struct inode * , struct file * ) ,
                                             struct inode *arg1 , struct file *arg2 ) ;
#line 65
int ldv_character_driver_scenario_probe_4_13(int (*arg0)(struct inode * , struct file * ) ,
                                             struct inode *arg1 , struct file *arg2 ) ;
#line 66
void ldv_character_driver_scenario_release_2_2(int (*arg0)(struct inode * , struct file * ) ,
                                               struct inode *arg1 , struct file *arg2 ) ;
#line 67
void ldv_character_driver_scenario_release_3_2(int (*arg0)(struct inode * , struct file * ) ,
                                               struct inode *arg1 , struct file *arg2 ) ;
#line 68
void ldv_character_driver_scenario_release_4_2(int (*arg0)(struct inode * , struct file * ) ,
                                               struct inode *arg1 , struct file *arg2 ) ;
#line 69
void ldv_character_driver_scenario_write_2_4(ssize_t (*arg0)(struct file * , char * ,
                                                             size_t  , loff_t * ) ,
                                             struct file *arg1 , char *arg2 , unsigned long arg3 ,
                                             long long *arg4 ) ;
#line 70
void ldv_character_driver_scenario_write_3_4(ssize_t (*arg0)(struct file * , char * ,
                                                             size_t  , loff_t * ) ,
                                             struct file *arg1 , char *arg2 , unsigned long arg3 ,
                                             long long *arg4 ) ;
#line 71
void ldv_character_driver_scenario_write_4_4(ssize_t (*arg0)(struct file * , char * ,
                                                             size_t  , loff_t * ) ,
                                             struct file *arg1 , char *arg2 , unsigned long arg3 ,
                                             long long *arg4 ) ;
#line 72
void ldv_dispatch_default_deregister_3_7_3(void) ;
#line 73
void ldv_dispatch_default_register_3_7_4(void) ;
#line 74
void ldv_dispatch_deregister_9_1(struct platform_driver *arg0 ) ;
#line 75
void ldv_dispatch_insmod_deregister_10_1(void) ;
#line 76
void ldv_dispatch_insmod_register_10_2(void) ;
#line 77
void ldv_dispatch_pm_deregister_5_5(void) ;
#line 78
void ldv_dispatch_pm_register_5_6(void) ;
#line 79
void ldv_dispatch_register_8_3(struct platform_driver *arg0 ) ;
#line 80
int ldv_emg___platform_driver_register(struct platform_driver *arg0 , struct module *arg1 ) ;
#line 81
void ldv_emg_platform_driver_unregister(struct platform_driver *arg0 ) ;
#line 82
void ldv_insmod_7(void *arg0 ) ;
#line 83
void ldv_insmod_s3c_hsotg_driver_exit_7_2(void (*arg0)(void) ) ;
#line 84
int ldv_insmod_s3c_hsotg_driver_init_7_9(int (*arg0)(void) ) ;
#line 85
void ldv_main_10(void *arg0 ) ;
#line 86
void ldv_platform_instance_5(void *arg0 ) ;
#line 87
void ldv_platform_instance_callback_5_18(int (*arg0)(struct platform_device * , pm_message_t  ) ,
                                         struct platform_device *arg1 , struct pm_message *arg2 ) ;
#line 88
void ldv_platform_instance_callback_5_7(int (*arg0)(struct platform_device * ) , struct platform_device *arg1 ) ;
#line 89
int ldv_platform_instance_probe_5_14(int (*arg0)(struct platform_device * ) , struct platform_device *arg1 ) ;
#line 90
void ldv_platform_instance_release_5_3(int (*arg0)(struct platform_device * ) , struct platform_device *arg1 ) ;
#line 91
void ldv_pm_ops_scenario_6(void *arg0 ) ;
#line 92
void ldv_pm_ops_scenario_complete_6_3(void (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 93
void ldv_pm_ops_scenario_freeze_6_15(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 94
void ldv_pm_ops_scenario_freeze_late_6_14(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 95
void ldv_pm_ops_scenario_freeze_noirq_6_12(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 96
void ldv_pm_ops_scenario_poweroff_6_9(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 97
void ldv_pm_ops_scenario_poweroff_late_6_8(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 98
void ldv_pm_ops_scenario_poweroff_noirq_6_6(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 99
void ldv_pm_ops_scenario_prepare_6_22(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 100
void ldv_pm_ops_scenario_restore_6_4(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 101
void ldv_pm_ops_scenario_restore_early_6_7(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 102
void ldv_pm_ops_scenario_restore_noirq_6_5(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 103
void ldv_pm_ops_scenario_resume_6_16(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 104
void ldv_pm_ops_scenario_resume_early_6_17(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 105
void ldv_pm_ops_scenario_resume_noirq_6_19(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 106
void ldv_pm_ops_scenario_runtime_idle_6_27(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 107
void ldv_pm_ops_scenario_runtime_resume_6_24(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 108
void ldv_pm_ops_scenario_runtime_suspend_6_25(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 109
void ldv_pm_ops_scenario_suspend_6_21(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 110
void ldv_pm_ops_scenario_suspend_late_6_18(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 111
void ldv_pm_ops_scenario_suspend_noirq_6_20(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 112
void ldv_pm_ops_scenario_thaw_6_10(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 113
void ldv_pm_ops_scenario_thaw_early_6_13(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 114
void ldv_pm_ops_scenario_thaw_noirq_6_11(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 115
int main(void) ;
#line 123 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_character_driver_scenario_2(void *arg0 ) 
{ 
  loff_t (*ldv_2_callback_llseek)(struct file * , loff_t  , int  ) ;
  ssize_t (*ldv_2_callback_read)(struct file * , char * , size_t  , loff_t * ) ;
  struct file_operations *ldv_2_container_file_operations ;
  char *ldv_2_ldv_param_22_1_default ;
  long long *ldv_2_ldv_param_22_3_default ;
  char *ldv_2_ldv_param_4_1_default ;
  loff_t *ldv_2_ldv_param_4_3_default ;
  long long ldv_2_ldv_param_5_1_default ;
  int ldv_2_ldv_param_5_2_default ;
  struct file *ldv_2_resource_file ;
  struct inode *ldv_2_resource_inode ;
  int ldv_2_ret_default ;
  size_t ldv_2_size_cnt_write_size ;
  void *tmp ;
  void *tmp___0 ;
  void *tmp___1 ;
  int tmp___2 ;
  int tmp___3 ;
  int tmp___4 ;
  int tmp___5 ;
  void *tmp___6 ;
  void *tmp___7 ;
  void *tmp___8 ;
  void *tmp___9 ;
  int tmp___10 ;

  {
  {
#line 141
  ldv_2_ret_default = ldv_undef_int();
#line 143
  ldv_free(arg0);
#line 147
  tmp = ldv_xmalloc_unknown_size(0UL);
#line 147
  ldv_2_container_file_operations = (struct file_operations *)tmp;
#line 151
  tmp___0 = ldv_xmalloc(512UL);
#line 151
  ldv_2_resource_file = (struct file *)tmp___0;
#line 152
  tmp___1 = ldv_xmalloc(1032UL);
#line 152
  ldv_2_resource_inode = (struct inode *)tmp___1;
#line 153
  tmp___2 = ldv_undef_int();
#line 153
  ldv_2_size_cnt_write_size = (size_t )tmp___2;
  }
#line 160
  goto ldv_main_2;
#line 162
  return;
  ldv_main_2: 
  {
#line 168
  tmp___4 = ldv_undef_int();
  }
#line 168
  if (tmp___4 != 0) {
    {
#line 171
    ldv_2_ret_default = ldv_character_driver_scenario_probe_2_13(ldv_2_container_file_operations->open,
                                                                 ldv_2_resource_inode,
                                                                 ldv_2_resource_file);
#line 173
    ldv_2_ret_default = ldv_filter_err_code(ldv_2_ret_default);
#line 176
    tmp___3 = ldv_undef_int();
    }
#line 176
    if (tmp___3 != 0) {
      {
#line 178
      __VERIFIER_assume(ldv_2_ret_default == 0);
      }
#line 185
      goto ldv_call_2;
    } else {
      {
#line 189
      __VERIFIER_assume(ldv_2_ret_default != 0);
      }
#line 196
      goto ldv_main_2;
    }
  } else {
    {
#line 201
    ldv_free((void *)ldv_2_resource_file);
#line 202
    ldv_free((void *)ldv_2_resource_inode);
#line 206
    ldv_free((void *)ldv_2_container_file_operations);
    }
#line 214
    return;
  }
#line 217
  return;
  ldv_call_2: 
  {
#line 223
  tmp___5 = ldv_undef_int();
  }
  {
#line 224
  if (tmp___5 == 1) {
#line 224
    goto case_1;
  } else {

  }
#line 255
  if (tmp___5 == 2) {
#line 255
    goto case_2;
  } else {

  }
#line 268
  if (tmp___5 == 3) {
#line 268
    goto case_3;
  } else {

  }
#line 298
  goto switch_default;
  case_1: /* CIL Label */ 
  {
#line 226
  tmp___6 = ldv_xmalloc_unknown_size(0UL);
#line 226
  ldv_2_ldv_param_4_1_default = (char *)tmp___6;
#line 227
  tmp___7 = ldv_xmalloc_unknown_size(0UL);
#line 227
  ldv_2_ldv_param_4_3_default = (loff_t *)tmp___7;
#line 236
  __VERIFIER_assume(ldv_2_size_cnt_write_size <= 2147479552UL);
  }
#line 237
  if ((unsigned long )ldv_2_container_file_operations->write != (unsigned long )((ssize_t (*)(struct file * ,
                                                                                              char const   * ,
                                                                                              size_t  ,
                                                                                              loff_t * ))0)) {
    {
#line 239
    ldv_character_driver_scenario_write_2_4((ssize_t (*)(struct file * , char * ,
                                                         size_t  , loff_t * ))ldv_2_container_file_operations->write,
                                            ldv_2_resource_file, ldv_2_ldv_param_4_1_default,
                                            ldv_2_size_cnt_write_size, ldv_2_ldv_param_4_3_default);
    }
  } else {

  }
  {
#line 244
  ldv_free((void *)ldv_2_ldv_param_4_1_default);
#line 245
  ldv_free((void *)ldv_2_ldv_param_4_3_default);
  }
#line 252
  goto ldv_call_2;
  case_2: /* CIL Label */ 
  {
#line 258
  ldv_character_driver_scenario_release_2_2(ldv_2_container_file_operations->release,
                                            ldv_2_resource_inode, ldv_2_resource_file);
  }
#line 265
  goto ldv_main_2;
  case_3: /* CIL Label */ 
  {
#line 272
  tmp___10 = ldv_undef_int();
  }
#line 272
  if (tmp___10 != 0) {
    {
#line 274
    tmp___8 = ldv_xmalloc_unknown_size(0UL);
#line 274
    ldv_2_ldv_param_22_1_default = (char *)tmp___8;
#line 275
    tmp___9 = ldv_xmalloc_unknown_size(0UL);
#line 275
    ldv_2_ldv_param_22_3_default = (long long *)tmp___9;
#line 280
    ldv_character_driver_scenario_callback_2_22(ldv_2_callback_read, ldv_2_resource_file,
                                                ldv_2_ldv_param_22_1_default, ldv_2_size_cnt_write_size,
                                                ldv_2_ldv_param_22_3_default);
#line 284
    ldv_free((void *)ldv_2_ldv_param_22_1_default);
#line 285
    ldv_free((void *)ldv_2_ldv_param_22_3_default);
    }
  } else {
    {
#line 292
    ldv_character_driver_scenario_callback_2_5(ldv_2_callback_llseek, ldv_2_resource_file,
                                               ldv_2_ldv_param_5_1_default, ldv_2_ldv_param_5_2_default);
    }
  }
#line 296
  goto ldv_34433;
  switch_default: /* CIL Label */ 
  {
#line 298
  __VERIFIER_assume(0);
  }
  switch_break: /* CIL Label */ ;
  }
  ldv_34433: ;
#line 307
  goto ldv_call_2;
#line 309
  return;
}
}
#line 314 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_character_driver_scenario_3(void *arg0 ) 
{ 
  loff_t (*ldv_3_callback_llseek)(struct file * , loff_t  , int  ) ;
  ssize_t (*ldv_3_callback_read)(struct file * , char * , size_t  , loff_t * ) ;
  struct file_operations *ldv_3_container_file_operations ;
  char *ldv_3_ldv_param_22_1_default ;
  long long *ldv_3_ldv_param_22_3_default ;
  char *ldv_3_ldv_param_4_1_default ;
  loff_t *ldv_3_ldv_param_4_3_default ;
  long long ldv_3_ldv_param_5_1_default ;
  int ldv_3_ldv_param_5_2_default ;
  struct file *ldv_3_resource_file ;
  struct inode *ldv_3_resource_inode ;
  int ldv_3_ret_default ;
  size_t ldv_3_size_cnt_write_size ;
  void *tmp ;
  void *tmp___0 ;
  void *tmp___1 ;
  int tmp___2 ;
  int tmp___3 ;
  int tmp___4 ;
  int tmp___5 ;
  void *tmp___6 ;
  void *tmp___7 ;
  void *tmp___8 ;
  void *tmp___9 ;
  int tmp___10 ;

  {
  {
#line 332
  ldv_3_ret_default = ldv_undef_int();
#line 334
  ldv_free(arg0);
#line 338
  tmp = ldv_xmalloc_unknown_size(0UL);
#line 338
  ldv_3_container_file_operations = (struct file_operations *)tmp;
#line 342
  tmp___0 = ldv_xmalloc(512UL);
#line 342
  ldv_3_resource_file = (struct file *)tmp___0;
#line 343
  tmp___1 = ldv_xmalloc(1032UL);
#line 343
  ldv_3_resource_inode = (struct inode *)tmp___1;
#line 344
  tmp___2 = ldv_undef_int();
#line 344
  ldv_3_size_cnt_write_size = (size_t )tmp___2;
  }
#line 351
  goto ldv_main_3;
#line 353
  return;
  ldv_main_3: 
  {
#line 359
  tmp___4 = ldv_undef_int();
  }
#line 359
  if (tmp___4 != 0) {
    {
#line 362
    ldv_3_ret_default = ldv_character_driver_scenario_probe_3_13(ldv_3_container_file_operations->open,
                                                                 ldv_3_resource_inode,
                                                                 ldv_3_resource_file);
#line 364
    ldv_3_ret_default = ldv_filter_err_code(ldv_3_ret_default);
#line 367
    tmp___3 = ldv_undef_int();
    }
#line 367
    if (tmp___3 != 0) {
      {
#line 369
      __VERIFIER_assume(ldv_3_ret_default == 0);
      }
#line 376
      goto ldv_call_3;
    } else {
      {
#line 380
      __VERIFIER_assume(ldv_3_ret_default != 0);
      }
#line 387
      goto ldv_main_3;
    }
  } else {
    {
#line 392
    ldv_free((void *)ldv_3_resource_file);
#line 393
    ldv_free((void *)ldv_3_resource_inode);
#line 397
    ldv_free((void *)ldv_3_container_file_operations);
    }
#line 405
    return;
  }
#line 408
  return;
  ldv_call_3: 
  {
#line 414
  tmp___5 = ldv_undef_int();
  }
  {
#line 415
  if (tmp___5 == 1) {
#line 415
    goto case_1;
  } else {

  }
#line 446
  if (tmp___5 == 2) {
#line 446
    goto case_2;
  } else {

  }
#line 459
  if (tmp___5 == 3) {
#line 459
    goto case_3;
  } else {

  }
#line 489
  goto switch_default;
  case_1: /* CIL Label */ 
  {
#line 417
  tmp___6 = ldv_xmalloc_unknown_size(0UL);
#line 417
  ldv_3_ldv_param_4_1_default = (char *)tmp___6;
#line 418
  tmp___7 = ldv_xmalloc_unknown_size(0UL);
#line 418
  ldv_3_ldv_param_4_3_default = (loff_t *)tmp___7;
#line 427
  __VERIFIER_assume(ldv_3_size_cnt_write_size <= 2147479552UL);
  }
#line 428
  if ((unsigned long )ldv_3_container_file_operations->write != (unsigned long )((ssize_t (*)(struct file * ,
                                                                                              char const   * ,
                                                                                              size_t  ,
                                                                                              loff_t * ))0)) {
    {
#line 430
    ldv_character_driver_scenario_write_3_4((ssize_t (*)(struct file * , char * ,
                                                         size_t  , loff_t * ))ldv_3_container_file_operations->write,
                                            ldv_3_resource_file, ldv_3_ldv_param_4_1_default,
                                            ldv_3_size_cnt_write_size, ldv_3_ldv_param_4_3_default);
    }
  } else {

  }
  {
#line 435
  ldv_free((void *)ldv_3_ldv_param_4_1_default);
#line 436
  ldv_free((void *)ldv_3_ldv_param_4_3_default);
  }
#line 443
  goto ldv_call_3;
  case_2: /* CIL Label */ 
  {
#line 449
  ldv_character_driver_scenario_release_3_2(ldv_3_container_file_operations->release,
                                            ldv_3_resource_inode, ldv_3_resource_file);
  }
#line 456
  goto ldv_main_3;
  case_3: /* CIL Label */ 
  {
#line 463
  tmp___10 = ldv_undef_int();
  }
#line 463
  if (tmp___10 != 0) {
    {
#line 465
    tmp___8 = ldv_xmalloc_unknown_size(0UL);
#line 465
    ldv_3_ldv_param_22_1_default = (char *)tmp___8;
#line 466
    tmp___9 = ldv_xmalloc_unknown_size(0UL);
#line 466
    ldv_3_ldv_param_22_3_default = (long long *)tmp___9;
#line 471
    ldv_character_driver_scenario_callback_3_22(ldv_3_callback_read, ldv_3_resource_file,
                                                ldv_3_ldv_param_22_1_default, ldv_3_size_cnt_write_size,
                                                ldv_3_ldv_param_22_3_default);
#line 475
    ldv_free((void *)ldv_3_ldv_param_22_1_default);
#line 476
    ldv_free((void *)ldv_3_ldv_param_22_3_default);
    }
  } else {
    {
#line 483
    ldv_character_driver_scenario_callback_3_5(ldv_3_callback_llseek, ldv_3_resource_file,
                                               ldv_3_ldv_param_5_1_default, ldv_3_ldv_param_5_2_default);
    }
  }
#line 487
  goto ldv_34463;
  switch_default: /* CIL Label */ 
  {
#line 489
  __VERIFIER_assume(0);
  }
  switch_break: /* CIL Label */ ;
  }
  ldv_34463: ;
#line 498
  goto ldv_call_3;
#line 500
  return;
}
}
#line 505 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_character_driver_scenario_4(void *arg0 ) 
{ 
  loff_t (*ldv_4_callback_llseek)(struct file * , loff_t  , int  ) ;
  ssize_t (*ldv_4_callback_read)(struct file * , char * , size_t  , loff_t * ) ;
  struct file_operations *ldv_4_container_file_operations ;
  char *ldv_4_ldv_param_22_1_default ;
  long long *ldv_4_ldv_param_22_3_default ;
  char *ldv_4_ldv_param_4_1_default ;
  loff_t *ldv_4_ldv_param_4_3_default ;
  long long ldv_4_ldv_param_5_1_default ;
  int ldv_4_ldv_param_5_2_default ;
  struct file *ldv_4_resource_file ;
  struct inode *ldv_4_resource_inode ;
  int ldv_4_ret_default ;
  size_t ldv_4_size_cnt_write_size ;
  void *tmp ;
  void *tmp___0 ;
  void *tmp___1 ;
  int tmp___2 ;
  int tmp___3 ;
  int tmp___4 ;
  int tmp___5 ;
  void *tmp___6 ;
  void *tmp___7 ;
  void *tmp___8 ;
  void *tmp___9 ;
  int tmp___10 ;

  {
  {
#line 523
  ldv_4_ret_default = ldv_undef_int();
#line 525
  ldv_free(arg0);
#line 529
  tmp = ldv_xmalloc_unknown_size(0UL);
#line 529
  ldv_4_container_file_operations = (struct file_operations *)tmp;
#line 533
  tmp___0 = ldv_xmalloc(512UL);
#line 533
  ldv_4_resource_file = (struct file *)tmp___0;
#line 534
  tmp___1 = ldv_xmalloc(1032UL);
#line 534
  ldv_4_resource_inode = (struct inode *)tmp___1;
#line 535
  tmp___2 = ldv_undef_int();
#line 535
  ldv_4_size_cnt_write_size = (size_t )tmp___2;
  }
#line 542
  goto ldv_main_4;
#line 544
  return;
  ldv_main_4: 
  {
#line 550
  tmp___4 = ldv_undef_int();
  }
#line 550
  if (tmp___4 != 0) {
    {
#line 553
    ldv_4_ret_default = ldv_character_driver_scenario_probe_4_13(ldv_4_container_file_operations->open,
                                                                 ldv_4_resource_inode,
                                                                 ldv_4_resource_file);
#line 555
    ldv_4_ret_default = ldv_filter_err_code(ldv_4_ret_default);
#line 558
    tmp___3 = ldv_undef_int();
    }
#line 558
    if (tmp___3 != 0) {
      {
#line 560
      __VERIFIER_assume(ldv_4_ret_default == 0);
      }
#line 567
      goto ldv_call_4;
    } else {
      {
#line 571
      __VERIFIER_assume(ldv_4_ret_default != 0);
      }
#line 578
      goto ldv_main_4;
    }
  } else {
    {
#line 583
    ldv_free((void *)ldv_4_resource_file);
#line 584
    ldv_free((void *)ldv_4_resource_inode);
#line 588
    ldv_free((void *)ldv_4_container_file_operations);
    }
#line 596
    return;
  }
#line 599
  return;
  ldv_call_4: 
  {
#line 605
  tmp___5 = ldv_undef_int();
  }
  {
#line 606
  if (tmp___5 == 1) {
#line 606
    goto case_1;
  } else {

  }
#line 637
  if (tmp___5 == 2) {
#line 637
    goto case_2;
  } else {

  }
#line 650
  if (tmp___5 == 3) {
#line 650
    goto case_3;
  } else {

  }
#line 680
  goto switch_default;
  case_1: /* CIL Label */ 
  {
#line 608
  tmp___6 = ldv_xmalloc_unknown_size(0UL);
#line 608
  ldv_4_ldv_param_4_1_default = (char *)tmp___6;
#line 609
  tmp___7 = ldv_xmalloc_unknown_size(0UL);
#line 609
  ldv_4_ldv_param_4_3_default = (loff_t *)tmp___7;
#line 618
  __VERIFIER_assume(ldv_4_size_cnt_write_size <= 2147479552UL);
  }
#line 619
  if ((unsigned long )ldv_4_container_file_operations->write != (unsigned long )((ssize_t (*)(struct file * ,
                                                                                              char const   * ,
                                                                                              size_t  ,
                                                                                              loff_t * ))0)) {
    {
#line 621
    ldv_character_driver_scenario_write_4_4((ssize_t (*)(struct file * , char * ,
                                                         size_t  , loff_t * ))ldv_4_container_file_operations->write,
                                            ldv_4_resource_file, ldv_4_ldv_param_4_1_default,
                                            ldv_4_size_cnt_write_size, ldv_4_ldv_param_4_3_default);
    }
  } else {

  }
  {
#line 626
  ldv_free((void *)ldv_4_ldv_param_4_1_default);
#line 627
  ldv_free((void *)ldv_4_ldv_param_4_3_default);
  }
#line 634
  goto ldv_call_4;
  case_2: /* CIL Label */ 
  {
#line 640
  ldv_character_driver_scenario_release_4_2(ldv_4_container_file_operations->release,
                                            ldv_4_resource_inode, ldv_4_resource_file);
  }
#line 647
  goto ldv_main_4;
  case_3: /* CIL Label */ 
  {
#line 654
  tmp___10 = ldv_undef_int();
  }
#line 654
  if (tmp___10 != 0) {
    {
#line 656
    tmp___8 = ldv_xmalloc_unknown_size(0UL);
#line 656
    ldv_4_ldv_param_22_1_default = (char *)tmp___8;
#line 657
    tmp___9 = ldv_xmalloc_unknown_size(0UL);
#line 657
    ldv_4_ldv_param_22_3_default = (long long *)tmp___9;
#line 662
    ldv_character_driver_scenario_callback_4_22(ldv_4_callback_read, ldv_4_resource_file,
                                                ldv_4_ldv_param_22_1_default, ldv_4_size_cnt_write_size,
                                                ldv_4_ldv_param_22_3_default);
#line 666
    ldv_free((void *)ldv_4_ldv_param_22_1_default);
#line 667
    ldv_free((void *)ldv_4_ldv_param_22_3_default);
    }
  } else {
    {
#line 674
    ldv_character_driver_scenario_callback_4_5(ldv_4_callback_llseek, ldv_4_resource_file,
                                               ldv_4_ldv_param_5_1_default, ldv_4_ldv_param_5_2_default);
    }
  }
#line 678
  goto ldv_34493;
  switch_default: /* CIL Label */ 
  {
#line 680
  __VERIFIER_assume(0);
  }
  switch_break: /* CIL Label */ ;
  }
  ldv_34493: ;
#line 689
  goto ldv_call_4;
#line 691
  return;
}
}
#line 696 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_character_driver_scenario_callback_2_22(ssize_t (*arg0)(struct file * , char * ,
                                                                 size_t  , loff_t * ) ,
                                                 struct file *arg1 , char *arg2 ,
                                                 unsigned long arg3 , long long *arg4 ) 
{ 


  {
  {
#line 697
  seq_read(arg1, arg2, arg3, arg4);
  }
#line 698
  return;
}
}
#line 701 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_character_driver_scenario_callback_2_5(loff_t (*arg0)(struct file * , loff_t  ,
                                                               int  ) , struct file *arg1 ,
                                                long long arg2 , int arg3 ) 
{ 


  {
  {
#line 702
  seq_lseek(arg1, arg2, arg3);
  }
#line 703
  return;
}
}
#line 706 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_character_driver_scenario_callback_3_22(ssize_t (*arg0)(struct file * , char * ,
                                                                 size_t  , loff_t * ) ,
                                                 struct file *arg1 , char *arg2 ,
                                                 unsigned long arg3 , long long *arg4 ) 
{ 


  {
  {
#line 707
  seq_read(arg1, arg2, arg3, arg4);
  }
#line 708
  return;
}
}
#line 711 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_character_driver_scenario_callback_3_5(loff_t (*arg0)(struct file * , loff_t  ,
                                                               int  ) , struct file *arg1 ,
                                                long long arg2 , int arg3 ) 
{ 


  {
  {
#line 712
  seq_lseek(arg1, arg2, arg3);
  }
#line 713
  return;
}
}
#line 716 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_character_driver_scenario_callback_4_22(ssize_t (*arg0)(struct file * , char * ,
                                                                 size_t  , loff_t * ) ,
                                                 struct file *arg1 , char *arg2 ,
                                                 unsigned long arg3 , long long *arg4 ) 
{ 


  {
  {
#line 717
  seq_read(arg1, arg2, arg3, arg4);
  }
#line 718
  return;
}
}
#line 721 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_character_driver_scenario_callback_4_5(loff_t (*arg0)(struct file * , loff_t  ,
                                                               int  ) , struct file *arg1 ,
                                                long long arg2 , int arg3 ) 
{ 


  {
  {
#line 722
  seq_lseek(arg1, arg2, arg3);
  }
#line 723
  return;
}
}
#line 726 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
int ldv_character_driver_scenario_probe_2_13(int (*arg0)(struct inode * , struct file * ) ,
                                             struct inode *arg1 , struct file *arg2 ) 
{ 
  int tmp ;

  {
  {
#line 727
  tmp = ep_open(arg1, arg2);
  }
#line 727
  return (tmp);
}
}
#line 731 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
int ldv_character_driver_scenario_probe_3_13(int (*arg0)(struct inode * , struct file * ) ,
                                             struct inode *arg1 , struct file *arg2 ) 
{ 
  int tmp ;

  {
  {
#line 732
  tmp = fifo_open(arg1, arg2);
  }
#line 732
  return (tmp);
}
}
#line 736 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
int ldv_character_driver_scenario_probe_4_13(int (*arg0)(struct inode * , struct file * ) ,
                                             struct inode *arg1 , struct file *arg2 ) 
{ 
  int tmp ;

  {
  {
#line 737
  tmp = state_open(arg1, arg2);
  }
#line 737
  return (tmp);
}
}
#line 741 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_character_driver_scenario_release_2_2(int (*arg0)(struct inode * , struct file * ) ,
                                               struct inode *arg1 , struct file *arg2 ) 
{ 


  {
  {
#line 742
  single_release(arg1, arg2);
  }
#line 743
  return;
}
}
#line 746 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_character_driver_scenario_release_3_2(int (*arg0)(struct inode * , struct file * ) ,
                                               struct inode *arg1 , struct file *arg2 ) 
{ 


  {
  {
#line 747
  single_release(arg1, arg2);
  }
#line 748
  return;
}
}
#line 751 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_character_driver_scenario_release_4_2(int (*arg0)(struct inode * , struct file * ) ,
                                               struct inode *arg1 , struct file *arg2 ) 
{ 


  {
  {
#line 752
  single_release(arg1, arg2);
  }
#line 753
  return;
}
}
#line 756 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_character_driver_scenario_write_2_4(ssize_t (*arg0)(struct file * , char * ,
                                                             size_t  , loff_t * ) ,
                                             struct file *arg1 , char *arg2 , unsigned long arg3 ,
                                             long long *arg4 ) 
{ 


  {
  {
#line 757
  (*arg0)(arg1, arg2, arg3, arg4);
  }
#line 758
  return;
}
}
#line 761 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_character_driver_scenario_write_3_4(ssize_t (*arg0)(struct file * , char * ,
                                                             size_t  , loff_t * ) ,
                                             struct file *arg1 , char *arg2 , unsigned long arg3 ,
                                             long long *arg4 ) 
{ 


  {
  {
#line 762
  (*arg0)(arg1, arg2, arg3, arg4);
  }
#line 763
  return;
}
}
#line 766 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_character_driver_scenario_write_4_4(ssize_t (*arg0)(struct file * , char * ,
                                                             size_t  , loff_t * ) ,
                                             struct file *arg1 , char *arg2 , unsigned long arg3 ,
                                             long long *arg4 ) 
{ 


  {
  {
#line 767
  (*arg0)(arg1, arg2, arg3, arg4);
  }
#line 768
  return;
}
}
#line 771 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_dispatch_default_deregister_3_7_3(void) 
{ 


  {
#line 778
  return;
}
}
#line 782 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_dispatch_default_register_3_7_4(void) 
{ 
  struct ldv_struct_platform_instance_5 *cf_arg_2 ;
  struct ldv_struct_platform_instance_5 *cf_arg_3 ;
  struct ldv_struct_platform_instance_5 *cf_arg_4 ;
  void *tmp ;
  void *tmp___0 ;
  void *tmp___1 ;

  {
  {
#line 786
  tmp = ldv_xmalloc(16UL);
#line 786
  cf_arg_2 = (struct ldv_struct_platform_instance_5 *)tmp;
#line 787
  ldv_character_driver_scenario_2((void *)cf_arg_2);
#line 788
  tmp___0 = ldv_xmalloc(16UL);
#line 788
  cf_arg_3 = (struct ldv_struct_platform_instance_5 *)tmp___0;
#line 789
  ldv_character_driver_scenario_3((void *)cf_arg_3);
#line 790
  tmp___1 = ldv_xmalloc(16UL);
#line 790
  cf_arg_4 = (struct ldv_struct_platform_instance_5 *)tmp___1;
#line 791
  ldv_character_driver_scenario_4((void *)cf_arg_4);
  }
#line 792
  return;
}
}
#line 796 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_dispatch_deregister_9_1(struct platform_driver *arg0 ) 
{ 


  {
#line 799
  return;
}
}
#line 803 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_dispatch_insmod_deregister_10_1(void) 
{ 


  {
#line 806
  return;
}
}
#line 810 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_dispatch_insmod_register_10_2(void) 
{ 
  struct ldv_struct_platform_instance_5 *cf_arg_7 ;
  void *tmp ;

  {
  {
#line 812
  tmp = ldv_xmalloc(16UL);
#line 812
  cf_arg_7 = (struct ldv_struct_platform_instance_5 *)tmp;
#line 813
  ldv_insmod_7((void *)cf_arg_7);
  }
#line 814
  return;
}
}
#line 818 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_dispatch_pm_deregister_5_5(void) 
{ 


  {
#line 821
  return;
}
}
#line 825 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_dispatch_pm_register_5_6(void) 
{ 
  struct ldv_struct_platform_instance_5 *cf_arg_6 ;
  void *tmp ;

  {
  {
#line 827
  tmp = ldv_xmalloc(16UL);
#line 827
  cf_arg_6 = (struct ldv_struct_platform_instance_5 *)tmp;
#line 828
  ldv_pm_ops_scenario_6((void *)cf_arg_6);
  }
#line 829
  return;
}
}
#line 833 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_dispatch_register_8_3(struct platform_driver *arg0 ) 
{ 
  struct ldv_struct_platform_instance_5 *cf_arg_5 ;
  void *tmp ;

  {
  {
#line 835
  tmp = ldv_xmalloc(16UL);
#line 835
  cf_arg_5 = (struct ldv_struct_platform_instance_5 *)tmp;
#line 836
  cf_arg_5->arg0 = arg0;
#line 837
  ldv_platform_instance_5((void *)cf_arg_5);
  }
#line 838
  return;
}
}
#line 842 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
int ldv_emg___platform_driver_register(struct platform_driver *arg0 , struct module *arg1 ) 
{ 
  struct platform_driver *ldv_8_platform_driver_platform_driver ;
  int tmp ;
  int tmp___0 ;

  {
  {
#line 849
  tmp___0 = ldv_undef_int();
  }
#line 849
  if (tmp___0 != 0) {
    {
#line 851
    ldv_8_platform_driver_platform_driver = arg0;
#line 855
    ldv_dispatch_register_8_3(ldv_8_platform_driver_platform_driver);
    }
#line 859
    return (0);
  } else {
    {
#line 866
    tmp = ldv_undef_int_negative();
    }
#line 866
    return (tmp);
  }
}
}
#line 876 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_emg_platform_driver_unregister(struct platform_driver *arg0 ) 
{ 
  struct platform_driver *ldv_9_platform_driver_platform_driver ;

  {
  {
#line 882
  ldv_9_platform_driver_platform_driver = arg0;
#line 886
  ldv_dispatch_deregister_9_1(ldv_9_platform_driver_platform_driver);
  }
#line 890
  return;
#line 892
  return;
}
}
#line 897 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_insmod_7(void *arg0 ) 
{ 
  int ldv_7_reg_guard_3_default ;
  int ldv_7_ret_default ;
  void (*ldv_7_s3c_hsotg_driver_exit_default)(void) ;
  int (*ldv_7_s3c_hsotg_driver_init_default)(void) ;
  int tmp ;

  {
  {
#line 906
  ldv_free(arg0);
#line 911
  ldv_7_ret_default = ldv_insmod_s3c_hsotg_driver_init_7_9(ldv_7_s3c_hsotg_driver_init_default);
#line 913
  ldv_7_ret_default = ldv_post_init(ldv_7_ret_default);
#line 916
  tmp = ldv_undef_int();
  }
#line 916
  if (tmp != 0) {
    {
#line 918
    __VERIFIER_assume(ldv_7_ret_default != 0);
    }
#line 926
    return;
  } else {
    {
#line 930
    __VERIFIER_assume(ldv_7_ret_default == 0);
#line 934
    ldv_7_reg_guard_3_default = ldv_undef_int();
    }
#line 938
    if (ldv_7_reg_guard_3_default != 0) {
      {
#line 939
      ldv_dispatch_default_register_3_7_4();
      }
    } else {

    }
#line 944
    if (ldv_7_reg_guard_3_default != 0) {
      {
#line 945
      ldv_dispatch_default_deregister_3_7_3();
      }
    } else {

    }
    {
#line 951
    ldv_insmod_s3c_hsotg_driver_exit_7_2(ldv_7_s3c_hsotg_driver_exit_default);
    }
#line 959
    return;
  }
#line 962
  return;
}
}
#line 967 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_insmod_s3c_hsotg_driver_exit_7_2(void (*arg0)(void) ) 
{ 


  {
  {
#line 968
  s3c_hsotg_driver_exit();
  }
#line 969
  return;
}
}
#line 972 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
int ldv_insmod_s3c_hsotg_driver_init_7_9(int (*arg0)(void) ) 
{ 
  int tmp ;

  {
  {
#line 973
  tmp = s3c_hsotg_driver_init();
  }
#line 973
  return (tmp);
}
}
#line 977 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_main_10(void *arg0 ) 
{ 


  {
  {
#line 982
  ldv_dispatch_insmod_register_10_2();
#line 986
  ldv_dispatch_insmod_deregister_10_1();
  }
#line 990
  return;
#line 992
  return;
}
}
#line 997 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_platform_instance_5(void *arg0 ) 
{ 
  int (*ldv_5_callback_resume)(struct platform_device * ) ;
  int (*ldv_5_callback_suspend)(struct platform_device * , pm_message_t  ) ;
  struct platform_driver *ldv_5_container_platform_driver ;
  struct pm_message *ldv_5_ldv_param_18_1_default ;
  int ldv_5_probed_default ;
  struct platform_device *ldv_5_resource_platform_device ;
  struct ldv_struct_platform_instance_5 *data ;
  void *tmp ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  void *tmp___3 ;

  {
  {
#line 1007
  data = (struct ldv_struct_platform_instance_5 *)arg0;
#line 1011
  ldv_5_probed_default = ldv_undef_int();
  }
#line 1014
  if ((unsigned long )data != (unsigned long )((struct ldv_struct_platform_instance_5 *)0)) {
    {
#line 1015
    ldv_5_container_platform_driver = data->arg0;
#line 1016
    ldv_free((void *)data);
    }
  } else {

  }
  {
#line 1021
  tmp = ldv_xmalloc(1464UL);
#line 1021
  ldv_5_resource_platform_device = (struct platform_device *)tmp;
  }
#line 1028
  goto ldv_main_5;
#line 1030
  return;
  ldv_main_5: 
  {
#line 1036
  tmp___1 = ldv_undef_int();
  }
#line 1036
  if (tmp___1 != 0) {
    {
#line 1039
    ldv_pre_probe();
#line 1041
    ldv_5_probed_default = ldv_platform_instance_probe_5_14(ldv_5_container_platform_driver->probe,
                                                            ldv_5_resource_platform_device);
#line 1043
    ldv_5_probed_default = ldv_post_probe(ldv_5_probed_default);
#line 1046
    tmp___0 = ldv_undef_int();
    }
#line 1046
    if (tmp___0 != 0) {
      {
#line 1048
      __VERIFIER_assume(ldv_5_probed_default == 0);
      }
#line 1055
      goto ldv_call_5;
    } else {
      {
#line 1059
      __VERIFIER_assume(ldv_5_probed_default != 0);
      }
#line 1066
      goto ldv_main_5;
    }
  } else {
    {
#line 1071
    ldv_free((void *)ldv_5_resource_platform_device);
    }
#line 1079
    return;
  }
#line 1082
  return;
  ldv_call_5: 
  {
#line 1088
  tmp___2 = ldv_undef_int();
  }
  {
#line 1089
  if (tmp___2 == 1) {
#line 1089
    goto case_1;
  } else {

  }
#line 1110
  if (tmp___2 == 2) {
#line 1110
    goto case_2;
  } else {

  }
#line 1123
  if (tmp___2 == 3) {
#line 1123
    goto case_3;
  } else {

  }
#line 1139
  if (tmp___2 == 4) {
#line 1139
    goto case_4;
  } else {

  }
#line 1156
  goto switch_default;
  case_1: /* CIL Label */ 
  {
#line 1091
  tmp___3 = ldv_xmalloc_unknown_size(0UL);
#line 1091
  ldv_5_ldv_param_18_1_default = (struct pm_message *)tmp___3;
#line 1096
  ldv_platform_instance_callback_5_18(ldv_5_callback_suspend, ldv_5_resource_platform_device,
                                      ldv_5_ldv_param_18_1_default);
#line 1100
  ldv_free((void *)ldv_5_ldv_param_18_1_default);
  }
#line 1107
  goto ldv_call_5;
  case_2: /* CIL Label */ 
  {
#line 1113
  ldv_platform_instance_callback_5_7(ldv_5_callback_resume, ldv_5_resource_platform_device);
  }
#line 1120
  goto ldv_call_5;
  case_3: /* CIL Label */ 
  {
#line 1125
  ldv_dispatch_pm_register_5_6();
#line 1129
  ldv_dispatch_pm_deregister_5_5();
  }
#line 1136
  goto ldv_call_5;
  case_4: /* CIL Label */ 
  {
#line 1142
  ldv_platform_instance_release_5_3(ldv_5_container_platform_driver->remove, ldv_5_resource_platform_device);
#line 1146
  ldv_5_probed_default = 1;
  }
#line 1153
  goto ldv_main_5;
  switch_default: /* CIL Label */ 
  {
#line 1156
  __VERIFIER_assume(0);
  }
  switch_break: /* CIL Label */ ;
  }
#line 1159
  return;
}
}
#line 1164 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_platform_instance_callback_5_18(int (*arg0)(struct platform_device * , pm_message_t  ) ,
                                         struct platform_device *arg1 , struct pm_message *arg2 ) 
{ 


  {
  {
#line 1165
  s3c_hsotg_suspend(arg1, *arg2);
  }
#line 1166
  return;
}
}
#line 1169 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_platform_instance_callback_5_7(int (*arg0)(struct platform_device * ) , struct platform_device *arg1 ) 
{ 


  {
  {
#line 1170
  s3c_hsotg_resume(arg1);
  }
#line 1171
  return;
}
}
#line 1174 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
int ldv_platform_instance_probe_5_14(int (*arg0)(struct platform_device * ) , struct platform_device *arg1 ) 
{ 
  int tmp ;

  {
  {
#line 1175
  tmp = s3c_hsotg_probe(arg1);
  }
#line 1175
  return (tmp);
}
}
#line 1179 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_platform_instance_release_5_3(int (*arg0)(struct platform_device * ) , struct platform_device *arg1 ) 
{ 


  {
  {
#line 1180
  s3c_hsotg_remove(arg1);
  }
#line 1181
  return;
}
}
#line 1184 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_pm_ops_scenario_6(void *arg0 ) 
{ 
  struct device *ldv_6_device_device ;
  struct dev_pm_ops *ldv_6_pm_ops_dev_pm_ops ;
  int tmp ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  int tmp___3 ;

  {
  {
#line 1191
  ldv_free(arg0);
  }
#line 1198
  goto ldv_do_6;
#line 1200
  return;
  ldv_do_6: 
  {
#line 1206
  tmp = ldv_undef_int();
  }
  {
#line 1207
  if (tmp == 1) {
#line 1207
    goto case_1;
  } else {

  }
#line 1222
  if (tmp == 2) {
#line 1222
    goto case_2;
  } else {

  }
#line 1244
  if (tmp == 3) {
#line 1244
    goto case_3;
  } else {

  }
#line 1416
  if (tmp == 4) {
#line 1416
    goto case_4;
  } else {

  }
#line 1425
  goto switch_default___0;
  case_1: /* CIL Label */ ;
#line 1209
  if ((unsigned long )ldv_6_pm_ops_dev_pm_ops->runtime_idle != (unsigned long )((int (*)(struct device * ))0)) {
    {
#line 1211
    ldv_pm_ops_scenario_runtime_idle_6_27(ldv_6_pm_ops_dev_pm_ops->runtime_idle, ldv_6_device_device);
    }
  } else {

  }
#line 1219
  goto ldv_do_6;
  case_2: /* CIL Label */ ;
#line 1224
  if ((unsigned long )ldv_6_pm_ops_dev_pm_ops->runtime_suspend != (unsigned long )((int (*)(struct device * ))0)) {
    {
#line 1226
    ldv_pm_ops_scenario_runtime_suspend_6_25(ldv_6_pm_ops_dev_pm_ops->runtime_suspend,
                                             ldv_6_device_device);
    }
  } else {

  }
#line 1231
  if ((unsigned long )ldv_6_pm_ops_dev_pm_ops->runtime_resume != (unsigned long )((int (*)(struct device * ))0)) {
    {
#line 1233
    ldv_pm_ops_scenario_runtime_resume_6_24(ldv_6_pm_ops_dev_pm_ops->runtime_resume,
                                            ldv_6_device_device);
    }
  } else {

  }
#line 1241
  goto ldv_do_6;
  case_3: /* CIL Label */ ;
#line 1246
  if ((unsigned long )ldv_6_pm_ops_dev_pm_ops->prepare != (unsigned long )((int (*)(struct device * ))0)) {
    {
#line 1248
    ldv_pm_ops_scenario_prepare_6_22(ldv_6_pm_ops_dev_pm_ops->prepare, ldv_6_device_device);
    }
  } else {

  }
  {
#line 1252
  tmp___0 = ldv_undef_int();
  }
  {
#line 1253
  if (tmp___0 == 1) {
#line 1253
    goto case_1___0;
  } else {

  }
#line 1302
  if (tmp___0 == 2) {
#line 1302
    goto case_2___0;
  } else {

  }
#line 1351
  if (tmp___0 == 3) {
#line 1351
    goto case_3___0;
  } else {

  }
#line 1400
  goto switch_default;
  case_1___0: /* CIL Label */ ;
#line 1255
  if ((unsigned long )ldv_6_pm_ops_dev_pm_ops->suspend != (unsigned long )((int (*)(struct device * ))0)) {
    {
#line 1257
    ldv_pm_ops_scenario_suspend_6_21(ldv_6_pm_ops_dev_pm_ops->suspend, ldv_6_device_device);
    }
  } else {

  }
  {
#line 1261
  tmp___1 = ldv_undef_int();
  }
#line 1261
  if (tmp___1 != 0) {
#line 1263
    if ((unsigned long )ldv_6_pm_ops_dev_pm_ops->suspend_noirq != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 1265
      ldv_pm_ops_scenario_suspend_noirq_6_20(ldv_6_pm_ops_dev_pm_ops->suspend_noirq,
                                             ldv_6_device_device);
      }
    } else {

    }
#line 1270
    if ((unsigned long )ldv_6_pm_ops_dev_pm_ops->resume_noirq != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 1272
      ldv_pm_ops_scenario_resume_noirq_6_19(ldv_6_pm_ops_dev_pm_ops->resume_noirq,
                                            ldv_6_device_device);
      }
    } else {

    }
  } else {
#line 1279
    if ((unsigned long )ldv_6_pm_ops_dev_pm_ops->suspend_late != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 1281
      ldv_pm_ops_scenario_suspend_late_6_18(ldv_6_pm_ops_dev_pm_ops->suspend_late,
                                            ldv_6_device_device);
      }
    } else {

    }
#line 1286
    if ((unsigned long )ldv_6_pm_ops_dev_pm_ops->resume_early != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 1288
      ldv_pm_ops_scenario_resume_early_6_17(ldv_6_pm_ops_dev_pm_ops->resume_early,
                                            ldv_6_device_device);
      }
    } else {

    }
  }
#line 1294
  if ((unsigned long )ldv_6_pm_ops_dev_pm_ops->resume != (unsigned long )((int (*)(struct device * ))0)) {
    {
#line 1296
    ldv_pm_ops_scenario_resume_6_16(ldv_6_pm_ops_dev_pm_ops->resume, ldv_6_device_device);
    }
  } else {

  }
#line 1300
  goto ldv_34741;
  case_2___0: /* CIL Label */ ;
#line 1304
  if ((unsigned long )ldv_6_pm_ops_dev_pm_ops->freeze != (unsigned long )((int (*)(struct device * ))0)) {
    {
#line 1306
    ldv_pm_ops_scenario_freeze_6_15(ldv_6_pm_ops_dev_pm_ops->freeze, ldv_6_device_device);
    }
  } else {

  }
  {
#line 1310
  tmp___2 = ldv_undef_int();
  }
#line 1310
  if (tmp___2 != 0) {
#line 1312
    if ((unsigned long )ldv_6_pm_ops_dev_pm_ops->freeze_late != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 1314
      ldv_pm_ops_scenario_freeze_late_6_14(ldv_6_pm_ops_dev_pm_ops->freeze_late, ldv_6_device_device);
      }
    } else {

    }
#line 1319
    if ((unsigned long )ldv_6_pm_ops_dev_pm_ops->thaw_early != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 1321
      ldv_pm_ops_scenario_thaw_early_6_13(ldv_6_pm_ops_dev_pm_ops->thaw_early, ldv_6_device_device);
      }
    } else {

    }
  } else {
#line 1328
    if ((unsigned long )ldv_6_pm_ops_dev_pm_ops->freeze_noirq != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 1330
      ldv_pm_ops_scenario_freeze_noirq_6_12(ldv_6_pm_ops_dev_pm_ops->freeze_noirq,
                                            ldv_6_device_device);
      }
    } else {

    }
#line 1335
    if ((unsigned long )ldv_6_pm_ops_dev_pm_ops->thaw_noirq != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 1337
      ldv_pm_ops_scenario_thaw_noirq_6_11(ldv_6_pm_ops_dev_pm_ops->thaw_noirq, ldv_6_device_device);
      }
    } else {

    }
  }
#line 1343
  if ((unsigned long )ldv_6_pm_ops_dev_pm_ops->thaw != (unsigned long )((int (*)(struct device * ))0)) {
    {
#line 1345
    ldv_pm_ops_scenario_thaw_6_10(ldv_6_pm_ops_dev_pm_ops->thaw, ldv_6_device_device);
    }
  } else {

  }
#line 1349
  goto ldv_34741;
  case_3___0: /* CIL Label */ ;
#line 1353
  if ((unsigned long )ldv_6_pm_ops_dev_pm_ops->poweroff != (unsigned long )((int (*)(struct device * ))0)) {
    {
#line 1355
    ldv_pm_ops_scenario_poweroff_6_9(ldv_6_pm_ops_dev_pm_ops->poweroff, ldv_6_device_device);
    }
  } else {

  }
  {
#line 1359
  tmp___3 = ldv_undef_int();
  }
#line 1359
  if (tmp___3 != 0) {
#line 1361
    if ((unsigned long )ldv_6_pm_ops_dev_pm_ops->poweroff_late != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 1363
      ldv_pm_ops_scenario_poweroff_late_6_8(ldv_6_pm_ops_dev_pm_ops->poweroff_late,
                                            ldv_6_device_device);
      }
    } else {

    }
#line 1368
    if ((unsigned long )ldv_6_pm_ops_dev_pm_ops->restore_early != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 1370
      ldv_pm_ops_scenario_restore_early_6_7(ldv_6_pm_ops_dev_pm_ops->restore_early,
                                            ldv_6_device_device);
      }
    } else {

    }
  } else {
#line 1377
    if ((unsigned long )ldv_6_pm_ops_dev_pm_ops->poweroff_noirq != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 1379
      ldv_pm_ops_scenario_poweroff_noirq_6_6(ldv_6_pm_ops_dev_pm_ops->poweroff_noirq,
                                             ldv_6_device_device);
      }
    } else {

    }
#line 1384
    if ((unsigned long )ldv_6_pm_ops_dev_pm_ops->restore_noirq != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 1386
      ldv_pm_ops_scenario_restore_noirq_6_5(ldv_6_pm_ops_dev_pm_ops->restore_noirq,
                                            ldv_6_device_device);
      }
    } else {

    }
  }
#line 1392
  if ((unsigned long )ldv_6_pm_ops_dev_pm_ops->restore != (unsigned long )((int (*)(struct device * ))0)) {
    {
#line 1394
    ldv_pm_ops_scenario_restore_6_4(ldv_6_pm_ops_dev_pm_ops->restore, ldv_6_device_device);
    }
  } else {

  }
#line 1398
  goto ldv_34741;
  switch_default: /* CIL Label */ 
  {
#line 1400
  __VERIFIER_assume(0);
  }
  switch_break___0: /* CIL Label */ ;
  }
  ldv_34741: ;
#line 1403
  if ((unsigned long )ldv_6_pm_ops_dev_pm_ops->complete != (unsigned long )((void (*)(struct device * ))0)) {
    {
#line 1405
    ldv_pm_ops_scenario_complete_6_3(ldv_6_pm_ops_dev_pm_ops->complete, ldv_6_device_device);
    }
  } else {

  }
#line 1413
  goto ldv_do_6;
  case_4: /* CIL Label */ ;
#line 1422
  return;
  switch_default___0: /* CIL Label */ 
  {
#line 1425
  __VERIFIER_assume(0);
  }
  switch_break: /* CIL Label */ ;
  }
#line 1428
  return;
}
}
#line 1433 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_pm_ops_scenario_complete_6_3(void (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1434
  (*arg0)(arg1);
  }
#line 1435
  return;
}
}
#line 1438 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_pm_ops_scenario_freeze_6_15(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1439
  (*arg0)(arg1);
  }
#line 1440
  return;
}
}
#line 1443 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_pm_ops_scenario_freeze_late_6_14(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1444
  (*arg0)(arg1);
  }
#line 1445
  return;
}
}
#line 1448 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_pm_ops_scenario_freeze_noirq_6_12(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1449
  (*arg0)(arg1);
  }
#line 1450
  return;
}
}
#line 1453 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_pm_ops_scenario_poweroff_6_9(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1454
  (*arg0)(arg1);
  }
#line 1455
  return;
}
}
#line 1458 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_pm_ops_scenario_poweroff_late_6_8(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1459
  (*arg0)(arg1);
  }
#line 1460
  return;
}
}
#line 1463 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_pm_ops_scenario_poweroff_noirq_6_6(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1464
  (*arg0)(arg1);
  }
#line 1465
  return;
}
}
#line 1468 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_pm_ops_scenario_prepare_6_22(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1469
  (*arg0)(arg1);
  }
#line 1470
  return;
}
}
#line 1473 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_pm_ops_scenario_restore_6_4(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1474
  (*arg0)(arg1);
  }
#line 1475
  return;
}
}
#line 1478 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_pm_ops_scenario_restore_early_6_7(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1479
  (*arg0)(arg1);
  }
#line 1480
  return;
}
}
#line 1483 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_pm_ops_scenario_restore_noirq_6_5(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1484
  (*arg0)(arg1);
  }
#line 1485
  return;
}
}
#line 1488 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_pm_ops_scenario_resume_6_16(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1489
  (*arg0)(arg1);
  }
#line 1490
  return;
}
}
#line 1493 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_pm_ops_scenario_resume_early_6_17(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1494
  (*arg0)(arg1);
  }
#line 1495
  return;
}
}
#line 1498 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_pm_ops_scenario_resume_noirq_6_19(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1499
  (*arg0)(arg1);
  }
#line 1500
  return;
}
}
#line 1503 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_pm_ops_scenario_runtime_idle_6_27(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1504
  (*arg0)(arg1);
  }
#line 1505
  return;
}
}
#line 1508 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_pm_ops_scenario_runtime_resume_6_24(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1509
  (*arg0)(arg1);
  }
#line 1510
  return;
}
}
#line 1513 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_pm_ops_scenario_runtime_suspend_6_25(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1514
  (*arg0)(arg1);
  }
#line 1515
  return;
}
}
#line 1518 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_pm_ops_scenario_suspend_6_21(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1519
  (*arg0)(arg1);
  }
#line 1520
  return;
}
}
#line 1523 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_pm_ops_scenario_suspend_late_6_18(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1524
  (*arg0)(arg1);
  }
#line 1525
  return;
}
}
#line 1528 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_pm_ops_scenario_suspend_noirq_6_20(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1529
  (*arg0)(arg1);
  }
#line 1530
  return;
}
}
#line 1533 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_pm_ops_scenario_thaw_6_10(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1534
  (*arg0)(arg1);
  }
#line 1535
  return;
}
}
#line 1538 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_pm_ops_scenario_thaw_early_6_13(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1539
  (*arg0)(arg1);
  }
#line 1540
  return;
}
}
#line 1543 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
void ldv_pm_ops_scenario_thaw_noirq_6_11(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1544
  (*arg0)(arg1);
  }
#line 1545
  return;
}
}
#line 1548 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
int main(void) 
{ 


  {
  {
#line 1551
  ldv_initialize();
#line 1554
  ldv_main_10((void *)0);
#line 1557
  ldv_check_final_state();
  }
#line 1559
  return (0);
}
}
#line 1572 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
__inline static long PTR_ERR(void const   *ptr ) 
{ 
  long tmp ;

  {
  {
#line 1575
  tmp = ldv_ptr_err(ptr);
  }
#line 1575
  return (tmp);
}
}
#line 1593 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
__inline static void *kcalloc(size_t n , size_t size , gfp_t flags ) 
{ 
  void *tmp ;

  {
  {
#line 1596
  tmp = ldv_kcalloc(n, size, flags);
  }
#line 1596
  return (tmp);
}
}
#line 1600 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
__inline static void *kzalloc(size_t size , gfp_t flags ) 
{ 
  void *tmp ;

  {
  {
#line 1603
  tmp = ldv_kzalloc(size, flags);
  }
#line 1603
  return (tmp);
}
}
#line 1621 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
__inline static int ldv_clk_prepare_enable_9(struct clk *clk ) 
{ 
  int tmp ;

  {
  {
#line 1624
  tmp = ldv_clk_enable_clk_of_s3c_hsotg();
  }
#line 1624
  return (tmp);
}
}
#line 1628 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
__inline static void ldv_clk_disable_unprepare_10(struct clk *clk ) 
{ 


  {
  {
#line 1631
  ldv_clk_disable_clk_of_s3c_hsotg(clk);
  }
#line 1632
  return;
}
}
#line 1642 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
static int ldv___platform_driver_register_12(struct platform_driver *ldv_func_arg1 ,
                                             struct module *ldv_func_arg2 ) 
{ 
  int tmp ;

  {
  {
#line 1646
  tmp = ldv_emg___platform_driver_register(ldv_func_arg1, ldv_func_arg2);
  }
#line 1646
  return (tmp);
}
}
#line 1650 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/weaver/.tmp_gadget.c.aux"
static void ldv_platform_driver_unregister_13(struct platform_driver *ldv_func_arg1 ) 
{ 


  {
  {
#line 1654
  ldv_emg_platform_driver_unregister(ldv_func_arg1);
  }
#line 1655
  return;
}
}
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device  const  *dev ) ;
#line 24
int ldv_dev_set_drvdata(struct device *dev , void *data ) ;
#line 29 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/memory.h"
void *ldv_xzalloc(size_t size ) ;
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device  const  *dev ) 
{ 


  {
#line 29
  if ((unsigned long )dev != (unsigned long )((struct device  const  *)0) && (unsigned long )dev->p != (unsigned long )((struct device_private */* const  */)0)) {
#line 30
    return ((dev->p)->driver_data);
  } else {

  }
#line 32
  return ((void *)0);
}
}
#line 41 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev , void *data ) 
{ 
  void *tmp ;

  {
  {
#line 43
  tmp = ldv_xzalloc(8UL);
#line 43
  dev->p = (struct device_private *)tmp;
#line 44
  (dev->p)->driver_data = data;
  }
#line 46
  return (0);
}
}
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/memory.h"
void *ldv_zalloc(size_t size ) ;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host , unsigned int size ) 
{ 
  struct spi_master *master ;
  void *tmp ;

  {
  {
#line 27
  tmp = ldv_zalloc((unsigned long )size + 2280UL);
#line 27
  master = (struct spi_master *)tmp;
  }
#line 29
  if ((unsigned long )master == (unsigned long )((struct spi_master *)0)) {
#line 30
    return ((struct spi_master *)0);
  } else {

  }
  {
#line 32
  ldv_dev_set_drvdata(& master->dev, (void *)(master + 1UL));
  }
#line 34
  return (master);
}
}
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/linux/ldv/err.h"
long ldv_is_err(void const   *ptr ) ;
#line 28
long ldv_is_err_or_null(void const   *ptr ) ;
#line 29
void *ldv_err_ptr(long error ) ;
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/linux/err.c"
long ldv_is_err(void const   *ptr ) 
{ 


  {
#line 22
  return ((unsigned long )ptr > 4294967295UL);
}
}
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/linux/err.c"
void *ldv_err_ptr(long error ) 
{ 


  {
#line 27
  return ((void *)(4294967295L - error));
}
}
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/linux/err.c"
long ldv_ptr_err(void const   *ptr ) 
{ 


  {
#line 32
  return ((long )(4294967295UL - (unsigned long )ptr));
}
}
#line 35 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/linux/err.c"
long ldv_is_err_or_null(void const   *ptr ) 
{ 
  long tmp ;
  int tmp___0 ;

  {
#line 37
  if ((unsigned long )ptr == (unsigned long )((void const   *)0)) {
#line 37
    tmp___0 = 1;
  } else {
    {
#line 37
    tmp = ldv_is_err(ptr);
    }
#line 37
    if (tmp != 0L) {
#line 37
      tmp___0 = 1;
    } else {
#line 37
      tmp___0 = 0;
    }
  }
#line 37
  return ((long )tmp___0);
}
}
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void) ;
#line 42
void ldv_switch_to_process_context(void) ;
#line 50
bool ldv_in_interrupt_context(void) ;
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/linux/ldv/common.c"
static bool __ldv_in_interrupt_context  =    0;
#line 28 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void) 
{ 


  {
#line 30
  __ldv_in_interrupt_context = 1;
#line 31
  return;
}
}
#line 34 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/linux/ldv/common.c"
void ldv_switch_to_process_context(void) 
{ 


  {
#line 36
  __ldv_in_interrupt_context = 0;
#line 37
  return;
}
}
#line 39 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/linux/ldv/common.c"
bool ldv_in_interrupt_context(void) 
{ 


  {
#line 41
  return (__ldv_in_interrupt_context);
}
}
#line 44 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/linux/ldv/common.c"
static int ldv_filter_positive_int(int val ) 
{ 


  {
  {
#line 46
  __VERIFIER_assume(val <= 0);
  }
#line 47
  return (val);
}
}
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/linux/ldv/common.c"
int ldv_post_init(int init_ret_val ) 
{ 
  int tmp ;

  {
  {
#line 56
  tmp = ldv_filter_positive_int(init_ret_val);
  }
#line 56
  return (tmp);
}
}
#line 60 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val ) 
{ 
  int tmp ;

  {
  {
#line 62
  tmp = ldv_filter_positive_int(probe_ret_val);
  }
#line 62
  return (tmp);
}
}
#line 66 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val ) 
{ 
  int tmp ;

  {
  {
#line 68
  tmp = ldv_filter_positive_int(ret_val);
  }
#line 68
  return (tmp);
}
}
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/linux/ldv/slab.h"
void *ldv_kmalloc(size_t size , gfp_t flags ) ;
#line 26
void *ldv_kmalloc_array(size_t n , size_t size , gfp_t flags ) ;
#line 28
extern void ldv_check_alloc_flags(gfp_t  ) ;
#line 29
extern void ldv_after_alloc(void * ) ;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/memory.h"
void *ldv_malloc(size_t size ) ;
#line 24
void *ldv_calloc(size_t nmemb , size_t size ) ;
#line 21 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/linux/mm/slab.c"
void *ldv_kmalloc(size_t size , gfp_t flags ) 
{ 
  void *res ;

  {
  {
#line 25
  ldv_check_alloc_flags(flags);
#line 26
  res = ldv_malloc(size);
#line 27
  ldv_after_alloc(res);
  }
#line 29
  return (res);
}
}
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/linux/mm/slab.c"
void *ldv_kcalloc(size_t n , size_t size , gfp_t flags ) 
{ 
  void *res ;

  {
  {
#line 36
  ldv_check_alloc_flags(flags);
#line 37
  res = ldv_calloc(n, size);
#line 38
  ldv_after_alloc(res);
  }
#line 40
  return (res);
}
}
#line 43 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/linux/mm/slab.c"
void *ldv_kzalloc(size_t size , gfp_t flags ) 
{ 
  void *res ;

  {
  {
#line 47
  ldv_check_alloc_flags(flags);
#line 48
  res = ldv_zalloc(size);
#line 49
  ldv_after_alloc(res);
  }
#line 51
  return (res);
}
}
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n , size_t size , gfp_t flags ) 
{ 
  void *res ;

  {
  {
#line 58
  ldv_check_alloc_flags(flags);
#line 59
  res = ldv_malloc(n * size);
#line 60
  ldv_after_alloc(res);
  }
#line 62
  return (res);
}
}
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/common.h"
extern void __VERIFIER_error(void) ;
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/gcc.c"
long __builtin_expect(long exp , long c ) 
{ 


  {
#line 26
  return (exp);
}
}
#line 35 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/gcc.c"
void __builtin_trap(void) 
{ 


  {
  {
#line 37
  __VERIFIER_error();
  }
#line 38
  return;
}
}
#line 31 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/memory.h"
extern void *external_allocated_data(void) ;
#line 33
void *ldv_malloc_unknown_size(void) ;
#line 34
void *ldv_calloc_unknown_size(void) ;
#line 35
void *ldv_zalloc_unknown_size(void) ;
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/memory.c"
extern void *malloc(size_t  ) ;
#line 25
extern void *calloc(size_t  , size_t  ) ;
#line 26
extern void free(void * ) ;
#line 27
extern void *memset(void * , int  , size_t  ) ;
#line 29 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_malloc(size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;
  int tmp___1 ;

  {
  {
#line 31
  tmp___1 = ldv_undef_int();
  }
#line 31
  if (tmp___1 != 0) {
    {
#line 32
    tmp = malloc(size);
#line 32
    res = tmp;
#line 34
    __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 35
    tmp___0 = ldv_is_err((void const   *)res);
#line 35
    __VERIFIER_assume(tmp___0 == 0L);
    }
#line 37
    return (res);
  } else {
#line 40
    return ((void *)0);
  }
}
}
#line 43 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_calloc(size_t nmemb , size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;
  int tmp___1 ;

  {
  {
#line 45
  tmp___1 = ldv_undef_int();
  }
#line 45
  if (tmp___1 != 0) {
    {
#line 46
    tmp = calloc(nmemb, size);
#line 46
    res = tmp;
#line 48
    __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 49
    tmp___0 = ldv_is_err((void const   *)res);
#line 49
    __VERIFIER_assume(tmp___0 == 0L);
    }
#line 51
    return (res);
  } else {
#line 54
    return ((void *)0);
  }
}
}
#line 57 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_zalloc(size_t size ) 
{ 
  void *tmp ;

  {
  {
#line 59
  tmp = ldv_calloc(1UL, size);
  }
#line 59
  return (tmp);
}
}
#line 62 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/memory.c"
void ldv_free(void *s ) 
{ 


  {
  {
#line 64
  free(s);
  }
#line 65
  return;
}
}
#line 67 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_xmalloc(size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;

  {
  {
#line 69
  tmp = malloc(size);
#line 69
  res = tmp;
#line 71
  __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 72
  tmp___0 = ldv_is_err((void const   *)res);
#line 72
  __VERIFIER_assume(tmp___0 == 0L);
  }
#line 74
  return (res);
}
}
#line 77 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_xzalloc(size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;

  {
  {
#line 79
  tmp = calloc(1UL, size);
#line 79
  res = tmp;
#line 81
  __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 82
  tmp___0 = ldv_is_err((void const   *)res);
#line 82
  __VERIFIER_assume(tmp___0 == 0L);
  }
#line 84
  return (res);
}
}
#line 87 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_malloc_unknown_size(void) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;
  int tmp___1 ;

  {
  {
#line 89
  tmp___1 = ldv_undef_int();
  }
#line 89
  if (tmp___1 != 0) {
    {
#line 90
    tmp = external_allocated_data();
#line 90
    res = tmp;
#line 92
    __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 93
    tmp___0 = ldv_is_err((void const   *)res);
#line 93
    __VERIFIER_assume(tmp___0 == 0L);
    }
#line 95
    return (res);
  } else {
#line 98
    return ((void *)0);
  }
}
}
#line 101 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_calloc_unknown_size(void) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;
  int tmp___1 ;

  {
  {
#line 103
  tmp___1 = ldv_undef_int();
  }
#line 103
  if (tmp___1 != 0) {
    {
#line 104
    tmp = external_allocated_data();
#line 104
    res = tmp;
#line 106
    memset(res, 0, 8UL);
#line 107
    __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 108
    tmp___0 = ldv_is_err((void const   *)res);
#line 108
    __VERIFIER_assume(tmp___0 == 0L);
    }
#line 110
    return (res);
  } else {
#line 113
    return ((void *)0);
  }
}
}
#line 116 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_zalloc_unknown_size(void) 
{ 
  void *tmp ;

  {
  {
#line 118
  tmp = ldv_calloc_unknown_size();
  }
#line 118
  return (tmp);
}
}
#line 121 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;

  {
  {
#line 123
  tmp = external_allocated_data();
#line 123
  res = tmp;
#line 125
  __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 126
  tmp___0 = ldv_is_err((void const   *)res);
#line 126
  __VERIFIER_assume(tmp___0 == 0L);
  }
#line 128
  return (res);
}
}
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/nondet.h"
int ldv_undef_long(void) ;
#line 24
unsigned int ldv_undef_uint(void) ;
#line 25
unsigned long ldv_undef_ulong(void) ;
#line 26
unsigned long long ldv_undef_ulonglong(void) ;
#line 27
void *ldv_undef_ptr(void) ;
#line 30
int ldv_undef_int_positive(void) ;
#line 36
int ldv_undef_int_nonpositive(void) ;
#line 39
void *ldv_undef_ptr_non_null(void) ;
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/nondet.c"
extern int __VERIFIER_nondet_int(void) ;
#line 26
extern long __VERIFIER_nondet_long(void) ;
#line 33
extern unsigned int __VERIFIER_nondet_uint(void) ;
#line 36
extern unsigned long __VERIFIER_nondet_ulong(void) ;
#line 37
extern unsigned long long __VERIFIER_nondet_ulonglong(void) ;
#line 38
extern void *__VERIFIER_nondet_pointer(void) ;
#line 41 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/nondet.c"
int ldv_undef_int(void) 
{ 
  int tmp ;

  {
  {
#line 43
  tmp = __VERIFIER_nondet_int();
  }
#line 43
  return (tmp);
}
}
#line 46 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/nondet.c"
int ldv_undef_long(void) 
{ 
  long tmp ;

  {
  {
#line 48
  tmp = __VERIFIER_nondet_long();
  }
#line 48
  return ((int )tmp);
}
}
#line 51 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/nondet.c"
unsigned int ldv_undef_uint(void) 
{ 
  unsigned int tmp ;

  {
  {
#line 53
  tmp = __VERIFIER_nondet_uint();
  }
#line 53
  return (tmp);
}
}
#line 56 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/nondet.c"
void *ldv_undef_ptr(void) 
{ 
  void *tmp ;

  {
  {
#line 58
  tmp = __VERIFIER_nondet_pointer();
  }
#line 58
  return (tmp);
}
}
#line 61 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/nondet.c"
unsigned long ldv_undef_ulong(void) 
{ 
  unsigned long tmp ;

  {
  {
#line 63
  tmp = __VERIFIER_nondet_ulong();
  }
#line 63
  return (tmp);
}
}
#line 66 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void) 
{ 
  unsigned long long tmp ;

  {
  {
#line 68
  tmp = __VERIFIER_nondet_ulonglong();
  }
#line 68
  return (tmp);
}
}
#line 71 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/nondet.c"
int ldv_undef_int_positive(void) 
{ 
  int ret ;
  int tmp ;

  {
  {
#line 73
  tmp = ldv_undef_int();
#line 73
  ret = tmp;
#line 75
  __VERIFIER_assume(ret > 0);
  }
#line 77
  return (ret);
}
}
#line 80 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/nondet.c"
int ldv_undef_int_negative(void) 
{ 
  int ret ;
  int tmp ;

  {
  {
#line 82
  tmp = ldv_undef_int();
#line 82
  ret = tmp;
#line 84
  __VERIFIER_assume(ret < 0);
  }
#line 86
  return (ret);
}
}
#line 89 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/nondet.c"
int ldv_undef_int_nonpositive(void) 
{ 
  int ret ;
  int tmp ;

  {
  {
#line 91
  tmp = ldv_undef_int();
#line 91
  ret = tmp;
#line 93
  __VERIFIER_assume(ret <= 0);
  }
#line 95
  return (ret);
}
}
#line 98 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/job/root/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void) 
{ 
  void *ret ;
  int tmp ;

  {
  {
#line 100
  tmp = ldv_undef_int();
#line 100
  ret = (void *)((long )tmp);
#line 102
  __VERIFIER_assume((unsigned long )ret != (unsigned long )((void *)0));
  }
#line 104
  return (ret);
}
}
#line 1 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/rsg/models/clk2.bk.c"
void ldv_assert_linux_drivers_clk2__less_initial_decrement(int expr ) ;
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/tr/linux/drivers/clk2.c"
int ldv_counter_clk  =    0;
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/tr/linux/drivers/clk2.c"
void ldv_clk_disable_clk(struct clk *clk ) 
{ 


  {
  {
#line 30
  ldv_assert_linux_drivers_clk2__less_initial_decrement(ldv_counter_clk == 1);
#line 32
  ldv_counter_clk = 0;
  }
#line 33
  return;
}
}
#line 36 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/tr/linux/drivers/clk2.c"
int ldv_clk_enable_clk(void) 
{ 
  int retval ;
  int tmp ;

  {
  {
#line 38
  tmp = ldv_undef_int();
#line 38
  retval = tmp;
  }
#line 39
  if (retval == 0) {
#line 41
    ldv_counter_clk = 1;
  } else {

  }
#line 43
  return (retval);
}
}
#line 46 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/tr/linux/drivers/clk2.c"
int ldv_counter_clk_of_s3c_hsotg  =    0;
#line 49 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/tr/linux/drivers/clk2.c"
void ldv_clk_disable_clk_of_s3c_hsotg(struct clk *clk ) 
{ 


  {
  {
#line 52
  ldv_assert_linux_drivers_clk2__less_initial_decrement(ldv_counter_clk_of_s3c_hsotg == 1);
#line 54
  ldv_counter_clk_of_s3c_hsotg = 0;
  }
#line 55
  return;
}
}
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/tr/linux/drivers/clk2.c"
int ldv_clk_enable_clk_of_s3c_hsotg(void) 
{ 
  int retval ;
  int tmp ;

  {
  {
#line 60
  tmp = ldv_undef_int();
#line 60
  retval = tmp;
  }
#line 61
  if (retval == 0) {
#line 63
    ldv_counter_clk_of_s3c_hsotg = 1;
  } else {

  }
#line 65
  return (retval);
}
}
#line 3 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/93b7dfb214c2286d98a1d31d87facd21/klever-core-work-dir/7/vtg/drivers/usb/dwc2/dwc2_gadget.ko/linux:drivers:clk2/fvtp/bug kind funcs.c"
void ldv_assert_linux_drivers_clk2__less_initial_decrement(int expr ) 
{ 


  {
#line 4
  if (! expr) {
    {
#line 5
    __VERIFIER_error();
    }
  } else {

  }
#line 6
  return;
}
}
