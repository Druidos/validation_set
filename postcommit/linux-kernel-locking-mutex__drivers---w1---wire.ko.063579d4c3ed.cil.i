/* Generated by CIL v. 1.5.1 */
/* print_CIL_Input is false */

#line 7 ".tmp_w1.c"
struct device;
#line 19 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef signed char __s8;
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;
#line 26 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;
#line 15 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/asm-generic/int-ll64.h"
typedef signed char s8;
#line 16 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/asm-generic/int-ll64.h"
typedef unsigned char u8;
#line 18 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/asm-generic/int-ll64.h"
typedef short s16;
#line 19 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/asm-generic/int-ll64.h"
typedef unsigned short u16;
#line 21 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/asm-generic/int-ll64.h"
typedef int s32;
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/asm-generic/int-ll64.h"
typedef unsigned int u32;
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/asm-generic/int-ll64.h"
typedef long long s64;
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;
#line 14 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;
#line 15 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;
#line 48 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;
#line 49 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;
#line 71 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;
#line 72 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;
#line 87 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;
#line 88 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;
#line 89 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;
#line 90 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;
#line 91 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/types.h"
typedef __u16 __be16;
#line 35 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/types.h"
typedef __u32 __be32;
#line 40 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/types.h"
typedef __u32 __wsum;
#line 12 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/types.h"
typedef __u32 __kernel_dev_t;
#line 15 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/types.h"
typedef __kernel_dev_t dev_t;
#line 18 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/types.h"
typedef unsigned short umode_t;
#line 21 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/types.h"
typedef __kernel_pid_t pid_t;
#line 26 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;
#line 29 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/types.h"
typedef _Bool bool;
#line 31 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/types.h"
typedef __kernel_uid32_t uid_t;
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/types.h"
typedef __kernel_gid32_t gid_t;
#line 45 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/types.h"
typedef __kernel_loff_t loff_t;
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/types.h"
typedef __kernel_size_t size_t;
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;
#line 69 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/types.h"
typedef __kernel_time_t time_t;
#line 102 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/types.h"
typedef __s32 int32_t;
#line 106 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/types.h"
typedef __u8 uint8_t;
#line 108 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/types.h"
typedef __u32 uint32_t;
#line 111 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/types.h"
typedef __u64 uint64_t;
#line 133 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/types.h"
typedef unsigned long sector_t;
#line 134 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/types.h"
typedef unsigned long blkcnt_t;
#line 146 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/types.h"
typedef u64 dma_addr_t;
#line 157 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/types.h"
typedef unsigned int gfp_t;
#line 158 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/types.h"
typedef unsigned int fmode_t;
#line 159 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/types.h"
typedef unsigned int oom_flags_t;
#line 177 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};
#line 177 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;
#line 182 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};
#line 182 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;
#line 183 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};
#line 188
struct hlist_node;
#line 188 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};
#line 192 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};
#line 203 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head * ) ;
};
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/slab.h"
struct mutex;
#line 103 "/home/debian/klever-inst/klever-addons/CIF/bin/aspectator-bin/bin/../lib64/gcc/x86_64-unknown-linux-gnu/4.6.0/include/stdarg.h"
struct kernel_symbol {
   unsigned long value ;
   char const   *name ;
};
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/export.h"
struct module;
#line 65 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/ptrace.h"
struct __anonstruct____missing_field_name_9 {
   unsigned int a ;
   unsigned int b ;
};
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/ptrace.h"
struct __anonstruct____missing_field_name_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int base1 : 8 ;
   unsigned int type : 4 ;
   unsigned int s : 1 ;
   unsigned int dpl : 2 ;
   unsigned int p : 1 ;
   unsigned int limit : 4 ;
   unsigned int avl : 1 ;
   unsigned int l : 1 ;
   unsigned int d : 1 ;
   unsigned int g : 1 ;
   unsigned int base2 : 8 ;
};
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/ptrace.h"
union __anonunion____missing_field_name_8 {
   struct __anonstruct____missing_field_name_9 __annonCompField4 ;
   struct __anonstruct____missing_field_name_10 __annonCompField5 ;
};
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion____missing_field_name_8 __annonCompField6 ;
};
#line 12 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;
#line 15 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;
#line 16 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;
#line 18 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};
#line 18 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};
#line 238 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;
#line 240 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};
#line 240 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;
#line 328
struct page;
#line 328 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;
#line 336
struct file;
#line 349
struct seq_file;
#line 386
struct thread_struct;
#line 388
struct mm_struct;
#line 389
struct task_struct;
#line 390
struct cpumask;
#line 327 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/paravirt_types.h"
struct arch_spinlock;
#line 18 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/spinlock_types.h"
typedef u16 __ticket_t;
#line 19 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/spinlock_types.h"
typedef u32 __ticketpair_t;
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/spinlock_types.h"
struct __raw_tickets {
   __ticket_t head ;
   __ticket_t tail ;
};
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/spinlock_types.h"
union __anonunion____missing_field_name_15 {
   __ticketpair_t head_tail ;
   struct __raw_tickets tickets ;
};
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/spinlock_types.h"
struct arch_spinlock {
   union __anonunion____missing_field_name_15 __annonCompField7 ;
};
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/spinlock_types.h"
typedef struct arch_spinlock arch_spinlock_t;
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/rwlock.h"
struct __anonstruct____missing_field_name_17 {
   u32 read ;
   s32 write ;
};
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/rwlock.h"
union __anonunion_arch_rwlock_t_16 {
   s64 lock ;
   struct __anonstruct____missing_field_name_17 __annonCompField8 ;
};
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/rwlock.h"
typedef union __anonunion_arch_rwlock_t_16 arch_rwlock_t;
#line 142 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/init.h"
typedef void (*ctor_fn_t)(void);
#line 208 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/printk.h"
struct _ddebug {
   char const   *modname ;
   char const   *function ;
   char const   *filename ;
   char const   *format ;
   unsigned int lineno : 18 ;
   unsigned int flags : 8 ;
};
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/dynamic_debug.h"
struct net_device;
#line 372 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/printk.h"
struct file_operations;
#line 384
struct completion;
#line 416 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kernel.h"
struct pid;
#line 527 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/percpu.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};
#line 102 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/bug.h"
struct timespec;
#line 127 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};
#line 79 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/vm86.h"
union __anonunion____missing_field_name_22 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};
#line 79 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion____missing_field_name_22 __annonCompField10 ;
};
#line 306 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[128U] ;
};
#line 14 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;
#line 663 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;
#line 162 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/processor.h"
struct seq_operations;
#line 294 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/processor.h"
struct i387_fsave_struct {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};
#line 312 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/processor.h"
struct __anonstruct____missing_field_name_27 {
   u64 rip ;
   u64 rdp ;
};
#line 312 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/processor.h"
struct __anonstruct____missing_field_name_28 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};
#line 312 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/processor.h"
union __anonunion____missing_field_name_26 {
   struct __anonstruct____missing_field_name_27 __annonCompField14 ;
   struct __anonstruct____missing_field_name_28 __annonCompField15 ;
};
#line 312 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/processor.h"
union __anonunion____missing_field_name_29 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};
#line 312 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/processor.h"
struct i387_fxsave_struct {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion____missing_field_name_26 __annonCompField16 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion____missing_field_name_29 __annonCompField17 ;
};
#line 346 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/processor.h"
struct i387_soft_struct {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};
#line 367 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/processor.h"
struct ymmh_struct {
   u32 ymmh_space[64U] ;
};
#line 372 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/processor.h"
struct lwp_struct {
   u8 reserved[128U] ;
};
#line 377 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/processor.h"
struct bndregs_struct {
   u64 bndregs[8U] ;
};
#line 381 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/processor.h"
struct bndcsr_struct {
   u64 cfg_reg_u ;
   u64 status_reg ;
};
#line 386 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/processor.h"
struct xsave_hdr_struct {
   u64 xstate_bv ;
   u64 reserved1[2U] ;
   u64 reserved2[5U] ;
};
#line 392 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/processor.h"
struct xsave_struct {
   struct i387_fxsave_struct i387 ;
   struct xsave_hdr_struct xsave_hdr ;
   struct ymmh_struct ymmh ;
   struct lwp_struct lwp ;
   struct bndregs_struct bndregs ;
   struct bndcsr_struct bndcsr ;
};
#line 401 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/processor.h"
union thread_xstate {
   struct i387_fsave_struct fsave ;
   struct i387_fxsave_struct fxsave ;
   struct i387_soft_struct soft ;
   struct xsave_struct xsave ;
};
#line 409 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/processor.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned int has_fpu ;
   union thread_xstate *state ;
};
#line 465
struct kmem_cache;
#line 466
struct perf_event;
#line 467 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned long usersp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   struct fpu fpu ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   unsigned char fpu_counter ;
};
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;
#line 152 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/barrier.h"
struct lockdep_map;
#line 55 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};
#line 26 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};
#line 53 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const   *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};
#line 144 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const   *name ;
   int cpu ;
   unsigned long ip ;
};
#line 205 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int class_idx : 13 ;
   unsigned int irq_context : 2 ;
   unsigned int trylock : 1 ;
   unsigned int read : 2 ;
   unsigned int check : 1 ;
   unsigned int hardirqs_off : 1 ;
   unsigned int references : 12 ;
};
#line 530 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/spinlock_types.h"
struct __anonstruct____missing_field_name_33 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/spinlock_types.h"
union __anonunion____missing_field_name_32 {
   struct raw_spinlock rlock ;
   struct __anonstruct____missing_field_name_33 __annonCompField19 ;
};
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion____missing_field_name_32 __annonCompField20 ;
};
#line 76 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_34 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_34 rwlock_t;
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/jump_label.h"
struct jump_entry;
#line 36 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;
#line 37 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};
#line 412 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/spinlock.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};
#line 51 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;
#line 259 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/seqlock.h"
struct __anonstruct_seqlock_t_35 {
   struct seqcount seqcount ;
   spinlock_t lock ;
};
#line 259 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_35 seqlock_t;
#line 433 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/seqlock.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};
#line 83 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/highuid.h"
struct user_namespace;
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/uidgid.h"
struct __anonstruct_kuid_t_36 {
   uid_t val ;
};
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_36 kuid_t;
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/uidgid.h"
struct __anonstruct_kgid_t_37 {
   gid_t val ;
};
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_37 kgid_t;
#line 127 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/uidgid.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};
#line 34 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};
#line 39 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;
#line 98 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_38 {
   unsigned long bits[16U] ;
};
#line 98 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_38 nodemask_t;
#line 806 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/mmzone.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   char const   *name ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 68 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};
#line 346
struct rw_semaphore;
#line 347 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/mutex.h"
struct rw_semaphore {
   long count ;
   raw_spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct lockdep_map dep_map ;
};
#line 155 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/rwsem.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};
#line 225 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/rcupdate.h"
struct notifier_block;
#line 323 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/ktime.h"
typedef union ktime ktime_t;
#line 388
struct tvec_base;
#line 389 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/ktime.h"
struct timer_list {
   struct list_head entry ;
   unsigned long expires ;
   struct tvec_base *base ;
   void (*function)(unsigned long  ) ;
   unsigned long data ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};
#line 254 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/timer.h"
struct hrtimer;
#line 255
enum hrtimer_restart;
#line 266
struct workqueue_struct;
#line 267
struct work_struct;
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct * ) ;
   struct lockdep_map lockdep_map ;
};
#line 107 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};
#line 51 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block * , unsigned long  , void * ) ;
   struct notifier_block *next ;
   int priority ;
};
#line 63 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/notifier.h"
struct blocking_notifier_head {
   struct rw_semaphore rwsem ;
   struct notifier_block *head ;
};
#line 897 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/mmzone.h"
struct ctl_table;
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/pm.h"
struct pm_message {
   int event ;
};
#line 64 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/pm.h"
typedef struct pm_message pm_message_t;
#line 65 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device * ) ;
   void (*complete)(struct device * ) ;
   int (*suspend)(struct device * ) ;
   int (*resume)(struct device * ) ;
   int (*freeze)(struct device * ) ;
   int (*thaw)(struct device * ) ;
   int (*poweroff)(struct device * ) ;
   int (*restore)(struct device * ) ;
   int (*suspend_late)(struct device * ) ;
   int (*resume_early)(struct device * ) ;
   int (*freeze_late)(struct device * ) ;
   int (*thaw_early)(struct device * ) ;
   int (*poweroff_late)(struct device * ) ;
   int (*restore_early)(struct device * ) ;
   int (*suspend_noirq)(struct device * ) ;
   int (*resume_noirq)(struct device * ) ;
   int (*freeze_noirq)(struct device * ) ;
   int (*thaw_noirq)(struct device * ) ;
   int (*poweroff_noirq)(struct device * ) ;
   int (*restore_noirq)(struct device * ) ;
   int (*runtime_suspend)(struct device * ) ;
   int (*runtime_resume)(struct device * ) ;
   int (*runtime_idle)(struct device * ) ;
};
#line 301
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
} ;
#line 308
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
} ;
#line 316
struct wakeup_source;
#line 527 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};
#line 534
struct dev_pm_qos;
#line 534 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int can_wakeup : 1 ;
   unsigned int async_suspend : 1 ;
   bool is_prepared : 1 ;
   bool is_suspended : 1 ;
   bool is_noirq_suspended : 1 ;
   bool is_late_suspended : 1 ;
   bool ignore_children : 1 ;
   bool early_init : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool wakeup_path : 1 ;
   bool syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int disable_depth : 3 ;
   unsigned int idle_notification : 1 ;
   unsigned int request_pending : 1 ;
   unsigned int deferred_resume : 1 ;
   unsigned int run_wake : 1 ;
   unsigned int runtime_auto : 1 ;
   unsigned int no_callbacks : 1 ;
   unsigned int irq_safe : 1 ;
   unsigned int use_autosuspend : 1 ;
   unsigned int timer_autosuspends : 1 ;
   unsigned int memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device * , s32  ) ;
   struct dev_pm_qos *qos ;
};
#line 594 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
};
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_103 {
   void *ldt ;
   int size ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
};
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_103 mm_context_t;
#line 18 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/asm-generic/pci_iomap.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};
#line 40 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};
#line 87
struct vm_area_struct;
#line 341 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/clocksource.h"
struct device_node;
#line 1282 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/mmzone.h"
struct llist_node;
#line 64 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};
#line 835 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/sysctl.h"
struct nsproxy;
#line 836
struct ctl_table_root;
#line 837
struct ctl_table_header;
#line 838
struct ctl_dir;
#line 39 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table * , int  , void * , size_t * , loff_t * );
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sysctl.h"
struct ctl_table_poll {
   atomic_t event ;
   wait_queue_head_t wait ;
};
#line 98 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sysctl.h"
struct ctl_table {
   char const   *procname ;
   void *data ;
   int maxlen ;
   umode_t mode ;
   struct ctl_table *child ;
   proc_handler *proc_handler ;
   struct ctl_table_poll *poll ;
   void *extra1 ;
   void *extra2 ;
};
#line 119 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sysctl.h"
struct ctl_node {
   struct rb_node node ;
   struct ctl_table_header *header ;
};
#line 124 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sysctl.h"
struct __anonstruct____missing_field_name_131 {
   struct ctl_table *ctl_table ;
   int used ;
   int count ;
   int nreg ;
};
#line 124 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sysctl.h"
union __anonunion____missing_field_name_130 {
   struct __anonstruct____missing_field_name_131 __annonCompField31 ;
   struct callback_head rcu ;
};
#line 124
struct ctl_table_set;
#line 124 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sysctl.h"
struct ctl_table_header {
   union __anonunion____missing_field_name_130 __annonCompField32 ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_dir *parent ;
   struct ctl_node *node ;
};
#line 145 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sysctl.h"
struct ctl_dir {
   struct ctl_table_header header ;
   struct rb_root root ;
};
#line 151 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sysctl.h"
struct ctl_table_set {
   int (*is_seen)(struct ctl_table_set * ) ;
   struct ctl_dir dir ;
};
#line 156 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sysctl.h"
struct ctl_table_root {
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root * , struct nsproxy * ) ;
   int (*permissions)(struct ctl_table_header * , struct ctl_table * ) ;
};
#line 37 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kmod.h"
struct cred;
#line 15 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;
#line 16 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;
#line 21 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;
#line 190 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};
#line 198 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;
#line 48 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/elf.h"
struct idr_layer {
   int prefix ;
   unsigned long bitmap[4U] ;
   struct idr_layer *ary[256U] ;
   int count ;
   int layer ;
   struct callback_head callback_head ;
};
#line 38 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   struct idr_layer *id_free ;
   int layers ;
   int id_free_cnt ;
   int cur ;
   spinlock_t lock ;
};
#line 121 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};
#line 150 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};
#line 182
struct dentry;
#line 183
struct iattr;
#line 184
struct super_block;
#line 185
struct file_system_type;
#line 186
struct kernfs_open_node;
#line 187
struct kernfs_iattrs;
#line 210
struct kernfs_root;
#line 210 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/idr.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};
#line 85 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kernfs.h"
struct kernfs_node;
#line 85 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};
#line 89
struct kernfs_ops;
#line 89 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops  const  *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
};
#line 95 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kernfs.h"
union __anonunion____missing_field_name_136 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};
#line 95 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const   *name ;
   struct rb_node rb ;
   void const   *ns ;
   unsigned int hash ;
   union __anonunion____missing_field_name_136 __annonCompField33 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};
#line 137 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root * , int * , char * ) ;
   int (*show_options)(struct seq_file * , struct kernfs_root * ) ;
   int (*mkdir)(struct kernfs_node * , char const   * , umode_t  ) ;
   int (*rmdir)(struct kernfs_node * ) ;
   int (*rename)(struct kernfs_node * , struct kernfs_node * , char const   * ) ;
};
#line 154 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   wait_queue_head_t deactivate_waitq ;
};
#line 166
struct vm_operations_struct;
#line 166 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct  const  *vm_ops ;
};
#line 182 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file * , void * ) ;
   void *(*seq_start)(struct seq_file * , loff_t * ) ;
   void *(*seq_next)(struct seq_file * , void * , loff_t * ) ;
   void (*seq_stop)(struct seq_file * , void * ) ;
   ssize_t (*read)(struct kernfs_open_file * , char * , size_t  , loff_t  ) ;
   size_t atomic_write_len ;
   ssize_t (*write)(struct kernfs_open_file * , char * , size_t  , loff_t  ) ;
   int (*mmap)(struct kernfs_open_file * , struct vm_area_struct * ) ;
   struct lock_class_key lockdep_key ;
};
#line 458
struct sock;
#line 459
struct kobject;
#line 460
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
} ;
#line 466 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const   *(*netlink_ns)(struct sock * ) ;
   void const   *(*initial_ns)(void) ;
   void (*drop_ns)(void * ) ;
};
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kobject_ns.h"
struct bin_attribute;
#line 60 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kobject_ns.h"
struct attribute {
   char const   *name ;
   umode_t mode ;
   bool ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};
#line 37 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sysfs.h"
struct attribute_group {
   char const   *name ;
   umode_t (*is_visible)(struct kobject * , struct attribute * , int  ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};
#line 67 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file * , struct kobject * , struct bin_attribute * , char * ,
                   loff_t  , size_t  ) ;
   ssize_t (*write)(struct file * , struct kobject * , struct bin_attribute * , char * ,
                    loff_t  , size_t  ) ;
   int (*mmap)(struct file * , struct kobject * , struct bin_attribute * , struct vm_area_struct * ) ;
};
#line 131 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject * , struct attribute * , char * ) ;
   ssize_t (*store)(struct kobject * , struct attribute * , char const   * , size_t  ) ;
};
#line 470 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};
#line 40 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kobject.h"
enum kobject_action {
    KOBJ_ADD = 0,
    KOBJ_REMOVE = 1,
    KOBJ_CHANGE = 2,
    KOBJ_MOVE = 3,
    KOBJ_ONLINE = 4,
    KOBJ_OFFLINE = 5,
    KOBJ_MAX = 6
} ;
#line 50
struct kset;
#line 50
struct kobj_type;
#line 50 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kobject.h"
struct kobject {
   char const   *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int state_initialized : 1 ;
   unsigned int state_in_sysfs : 1 ;
   unsigned int state_add_uevent_sent : 1 ;
   unsigned int state_remove_uevent_sent : 1 ;
   unsigned int uevent_suppress : 1 ;
};
#line 112 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject * ) ;
   struct sysfs_ops  const  *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations  const  *(*child_ns_type)(struct kobject * ) ;
   void const   *(*namespace)(struct kobject * ) ;
};
#line 120 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};
#line 128 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const  filter)(struct kset * , struct kobject * ) ;
   char const   *(* const  name)(struct kset * , struct kobject * ) ;
   int (* const  uevent)(struct kset * , struct kobject * , struct kobj_uevent_env * ) ;
};
#line 145 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops  const  *uevent_ops ;
};
#line 220
struct kernel_param;
#line 225 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kobject.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const   * , struct kernel_param  const  * ) ;
   int (*get)(char * , struct kernel_param  const  * ) ;
   void (*free)(void * ) ;
};
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/moduleparam.h"
struct kparam_string;
#line 58
struct kparam_array;
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/moduleparam.h"
union __anonunion____missing_field_name_137 {
   void *arg ;
   struct kparam_string  const  *str ;
   struct kparam_array  const  *arr ;
};
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/moduleparam.h"
struct kernel_param {
   char const   *name ;
   struct kernel_param_ops  const  *ops ;
   u16 perm ;
   s16 level ;
   union __anonunion____missing_field_name_137 __annonCompField34 ;
};
#line 70 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};
#line 76 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops  const  *ops ;
   void *elem ;
};
#line 461 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/moduleparam.h"
struct mod_arch_specific {

};
#line 36 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/module.h"
struct module_param_attrs;
#line 36 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};
#line 46 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute * , struct module_kobject * , char * ) ;
   ssize_t (*store)(struct module_attribute * , struct module_kobject * , char const   * ,
                    size_t  ) ;
   void (*setup)(struct module * , char const   * ) ;
   int (*test)(struct module * ) ;
   void (*free)(struct module * ) ;
};
#line 72
struct exception_table_entry;
#line 205
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
} ;
#line 212 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/module.h"
struct module_ref {
   unsigned long incs ;
   unsigned long decs ;
};
#line 226
struct module_sect_attrs;
#line 226
struct module_notes_attrs;
#line 226
struct tracepoint;
#line 226
struct ftrace_event_call;
#line 226 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const   *version ;
   char const   *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol  const  *syms ;
   unsigned long const   *crcs ;
   unsigned int num_syms ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol  const  *gpl_syms ;
   unsigned long const   *gpl_crcs ;
   struct kernel_symbol  const  *unused_syms ;
   unsigned long const   *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol  const  *unused_gpl_syms ;
   unsigned long const   *unused_gpl_crcs ;
   bool sig_ok ;
   struct kernel_symbol  const  *gpl_future_syms ;
   unsigned long const   *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const  *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const   **trace_bprintk_fmt_start ;
   struct ftrace_event_call **trace_events ;
   unsigned int num_trace_events ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   struct module_ref *refptr ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};
#line 359 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/irq.h"
struct proc_dir_entry;
#line 62 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};
#line 61 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/hardirq.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};
#line 12 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};
#line 50
struct hrtimer_clock_base;
#line 51
struct hrtimer_cpu_base;
#line 60
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
} ;
#line 65 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer * ) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};
#line 132 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t resolution ;
   ktime_t (*get_time)(void) ;
   ktime_t softirq_time ;
   ktime_t offset ;
};
#line 163 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   unsigned int active_bases ;
   unsigned int clock_was_set ;
   ktime_t expires_next ;
   int hres_active ;
   int hang_detected ;
   unsigned long nr_events ;
   unsigned long nr_retries ;
   unsigned long nr_hangs ;
   ktime_t max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};
#line 444 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long  ) ;
   unsigned long data ;
};
#line 657
struct klist_node;
#line 37 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};
#line 67
struct path;
#line 68
struct inode;
#line 69 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/klist.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations  const  *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};
#line 35 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file * , loff_t * ) ;
   void (*stop)(struct seq_file * , void * ) ;
   void *(*next)(struct seq_file * , void * , loff_t * ) ;
   int (*show)(struct seq_file * , void * ) ;
};
#line 196
struct pinctrl;
#line 197
struct pinctrl_state;
#line 194 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};
#line 42 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/ratelimit.h"
struct dma_map_ops;
#line 42 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};
#line 14 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/device.h"
struct device_private;
#line 15
struct device_driver;
#line 16
struct driver_private;
#line 17
struct class;
#line 18
struct subsys_private;
#line 19
struct bus_type;
#line 20
struct iommu_ops;
#line 21
struct iommu_group;
#line 60 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/device.h"
struct device_attribute;
#line 60 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/device.h"
struct bus_type {
   char const   *name ;
   char const   *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group  const  **bus_groups ;
   struct attribute_group  const  **dev_groups ;
   struct attribute_group  const  **drv_groups ;
   int (*match)(struct device * , struct device_driver * ) ;
   int (*uevent)(struct device * , struct kobj_uevent_env * ) ;
   int (*probe)(struct device * ) ;
   int (*remove)(struct device * ) ;
   void (*shutdown)(struct device * ) ;
   int (*online)(struct device * ) ;
   int (*offline)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
   struct iommu_ops *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};
#line 138
struct device_type;
#line 195
struct of_device_id;
#line 195
struct acpi_device_id;
#line 195 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/device.h"
struct device_driver {
   char const   *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const   *mod_name ;
   bool suppress_bind_attrs ;
   struct of_device_id  const  *of_match_table ;
   struct acpi_device_id  const  *acpi_match_table ;
   int (*probe)(struct device * ) ;
   int (*remove)(struct device * ) ;
   void (*shutdown)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct attribute_group  const  **groups ;
   struct dev_pm_ops  const  *pm ;
   struct driver_private *p ;
};
#line 321
struct class_attribute;
#line 321 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/device.h"
struct class {
   char const   *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group  const  **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device * , struct kobj_uevent_env * ) ;
   char *(*devnode)(struct device * , umode_t * ) ;
   void (*class_release)(struct class * ) ;
   void (*dev_release)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct kobj_ns_type_operations  const  *ns_type ;
   void const   *(*namespace)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
   struct subsys_private *p ;
};
#line 414 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class * , struct class_attribute * , char * ) ;
   ssize_t (*store)(struct class * , struct class_attribute * , char const   * , size_t  ) ;
};
#line 482 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/device.h"
struct device_type {
   char const   *name ;
   struct attribute_group  const  **groups ;
   int (*uevent)(struct device * , struct kobj_uevent_env * ) ;
   char *(*devnode)(struct device * , umode_t * , kuid_t * , kgid_t * ) ;
   void (*release)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
};
#line 510 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device * , struct device_attribute * , char * ) ;
   ssize_t (*store)(struct device * , struct device_attribute * , char const   * ,
                    size_t  ) ;
};
#line 634 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};
#line 643
struct acpi_device;
#line 644 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/device.h"
struct acpi_dev_node {
   struct acpi_device *companion ;
};
#line 650
struct dma_coherent_mem;
#line 650 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const   *init_name ;
   struct device_type  const  *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct acpi_dev_node acpi_node ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group  const  **groups ;
   void (*release)(struct device * ) ;
   struct iommu_group *iommu_group ;
   bool offline_disabled : 1 ;
   bool offline : 1 ;
};
#line 792 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/device.h"
struct wakeup_source {
   char const   *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool active : 1 ;
   bool autosleep_enabled : 1 ;
};
#line 56 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kmemleak.h"
struct mem_cgroup;
#line 366 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/slab.h"
struct kmem_cache_cpu {
   void **freelist ;
   unsigned long tid ;
   struct page *page ;
   struct page *partial ;
   unsigned int stat[26U] ;
};
#line 48 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/slub_def.h"
struct kmem_cache_order_objects {
   unsigned long x ;
};
#line 58
struct memcg_cache_params;
#line 58
struct kmem_cache_node;
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/slub_def.h"
struct kmem_cache {
   struct kmem_cache_cpu *cpu_slab ;
   unsigned long flags ;
   unsigned long min_partial ;
   int size ;
   int object_size ;
   int offset ;
   int cpu_partial ;
   struct kmem_cache_order_objects oo ;
   struct kmem_cache_order_objects max ;
   struct kmem_cache_order_objects min ;
   gfp_t allocflags ;
   int refcount ;
   void (*ctor)(void * ) ;
   int inuse ;
   int align ;
   int reserved ;
   char const   *name ;
   struct list_head list ;
   struct kobject kobj ;
   struct memcg_cache_params *memcg_params ;
   int max_attr_size ;
   struct kset *memcg_kset ;
   int remote_node_defrag_ratio ;
   struct kmem_cache_node *node[1024U] ;
};
#line 512 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/slab.h"
struct __anonstruct____missing_field_name_141 {
   struct callback_head callback_head ;
   struct kmem_cache *memcg_caches[0U] ;
};
#line 512 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/slab.h"
struct __anonstruct____missing_field_name_142 {
   struct mem_cgroup *memcg ;
   struct list_head list ;
   struct kmem_cache *root_cache ;
   bool dead ;
   atomic_t nr_pages ;
   struct work_struct destroy ;
};
#line 512 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/slab.h"
union __anonunion____missing_field_name_140 {
   struct __anonstruct____missing_field_name_141 __annonCompField36 ;
   struct __anonstruct____missing_field_name_142 __annonCompField37 ;
};
#line 512 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/slab.h"
struct memcg_cache_params {
   bool is_root_cache ;
   union __anonunion____missing_field_name_140 __annonCompField38 ;
};
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;
#line 218 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/capability.h"
struct plist_head {
   struct list_head node_list ;
};
#line 84 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};
#line 45 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};
#line 54
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
} ;
#line 61 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/uprobes.h"
struct __anonstruct____missing_field_name_146 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};
#line 61 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/uprobes.h"
struct __anonstruct____missing_field_name_147 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};
#line 61 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/uprobes.h"
union __anonunion____missing_field_name_145 {
   struct __anonstruct____missing_field_name_146 __annonCompField40 ;
   struct __anonstruct____missing_field_name_147 __annonCompField41 ;
};
#line 61
struct uprobe;
#line 61
struct return_instance;
#line 61 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion____missing_field_name_145 __annonCompField42 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};
#line 93 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/uprobes.h"
struct xol_area;
#line 94 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};
#line 130
struct address_space;
#line 131 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_148 {
   struct address_space *mapping ;
   void *s_mem ;
};
#line 131 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_150 {
   unsigned long index ;
   void *freelist ;
   bool pfmemalloc ;
};
#line 131 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/uprobes.h"
struct __anonstruct____missing_field_name_154 {
   unsigned int inuse : 16 ;
   unsigned int objects : 15 ;
   unsigned int frozen : 1 ;
};
#line 131 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_153 {
   atomic_t _mapcount ;
   struct __anonstruct____missing_field_name_154 __annonCompField45 ;
   int units ;
};
#line 131 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/uprobes.h"
struct __anonstruct____missing_field_name_152 {
   union __anonunion____missing_field_name_153 __annonCompField46 ;
   atomic_t _count ;
};
#line 131 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_151 {
   unsigned long counters ;
   struct __anonstruct____missing_field_name_152 __annonCompField47 ;
   unsigned int active ;
};
#line 131 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/uprobes.h"
struct __anonstruct____missing_field_name_149 {
   union __anonunion____missing_field_name_150 __annonCompField44 ;
   union __anonunion____missing_field_name_151 __annonCompField48 ;
};
#line 131 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/uprobes.h"
struct __anonstruct____missing_field_name_156 {
   struct page *next ;
   int pages ;
   int pobjects ;
};
#line 131
struct slab;
#line 131 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_155 {
   struct list_head lru ;
   struct __anonstruct____missing_field_name_156 __annonCompField50 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   pgtable_t pmd_huge_pte ;
};
#line 131 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_157 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};
#line 131 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/uprobes.h"
struct page {
   unsigned long flags ;
   union __anonunion____missing_field_name_148 __annonCompField43 ;
   struct __anonstruct____missing_field_name_149 __annonCompField49 ;
   union __anonunion____missing_field_name_155 __annonCompField51 ;
   union __anonunion____missing_field_name_157 __annonCompField52 ;
   unsigned long debug_flags ;
};
#line 187 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};
#line 239 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/mm_types.h"
struct __anonstruct_linear_159 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};
#line 239 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/mm_types.h"
union __anonunion_shared_158 {
   struct __anonstruct_linear_159 linear ;
   struct list_head nonlinear ;
};
#line 239
struct anon_vma;
#line 239
struct mempolicy;
#line 239 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   union __anonunion_shared_158 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct  const  *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};
#line 311 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};
#line 317 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};
#line 330 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};
#line 338 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};
#line 343
struct kioctx_table;
#line 344
struct linux_binfmt;
#line 344
struct mmu_notifier_mm;
#line 344 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file * , unsigned long  , unsigned long  ,
                                      unsigned long  , unsigned long  ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
};
#line 4 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sem.h"
struct sem_undo_list;
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_160 {
   unsigned long sig[1U] ;
};
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_160 sigset_t;
#line 25
struct siginfo;
#line 17 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int  );
#line 18 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);
#line 21 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;
#line 34 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};
#line 10 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_162 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_163 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_164 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_165 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_166 {
   void *_addr ;
   short _addr_lsb ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_167 {
   long _band ;
   int _fd ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_168 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_161 {
   int _pad[28U] ;
   struct __anonstruct__kill_162 _kill ;
   struct __anonstruct__timer_163 _timer ;
   struct __anonstruct__rt_164 _rt ;
   struct __anonstruct__sigchld_165 _sigchld ;
   struct __anonstruct__sigfault_166 _sigfault ;
   struct __anonstruct__sigpoll_167 _sigpoll ;
   struct __anonstruct__sigsys_168 _sigsys ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_161 _sifields ;
};
#line 109 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/signal.h"
struct user_struct;
#line 21 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};
#line 251 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};
#line 265 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};
#line 448
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
} ;
#line 455
struct pid_namespace;
#line 455 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};
#line 56 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};
#line 68 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};
#line 174 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/pid.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};
#line 46 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/seccomp.h"
struct seccomp_filter;
#line 47 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};
#line 40 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/rtmutex.h"
struct rt_mutex_waiter;
#line 41 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/resource.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};
#line 45 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};
#line 39 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/latencytop.h"
struct assoc_array_ptr;
#line 39 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};
#line 31 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/key.h"
typedef int32_t key_serial_t;
#line 34 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/key.h"
typedef uint32_t key_perm_t;
#line 35
struct key;
#line 36
struct signal_struct;
#line 37
struct key_type;
#line 41 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const   *description ;
   size_t desc_len ;
};
#line 123 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/key.h"
union __anonunion____missing_field_name_171 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};
#line 123
struct key_user;
#line 123 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/key.h"
union __anonunion____missing_field_name_172 {
   time_t expiry ;
   time_t revoked_at ;
};
#line 123 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/key.h"
struct __anonstruct____missing_field_name_174 {
   struct key_type *type ;
   char *description ;
};
#line 123 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/key.h"
union __anonunion____missing_field_name_173 {
   struct keyring_index_key index_key ;
   struct __anonstruct____missing_field_name_174 __annonCompField55 ;
};
#line 123 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/key.h"
union __anonunion_type_data_175 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};
#line 123 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/key.h"
union __anonunion_payload_177 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};
#line 123 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/key.h"
union __anonunion____missing_field_name_176 {
   union __anonunion_payload_177 payload ;
   struct assoc_array keys ;
};
#line 123 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion____missing_field_name_171 __annonCompField53 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion____missing_field_name_172 __annonCompField54 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion____missing_field_name_173 __annonCompField56 ;
   union __anonunion_type_data_175 type_data ;
   union __anonunion____missing_field_name_176 __annonCompField57 ;
};
#line 345
struct audit_context;
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};
#line 78 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};
#line 125 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sched.h"
struct futex_pi_state;
#line 126
struct robust_list_head;
#line 127
struct bio_list;
#line 128
struct fs_struct;
#line 129
struct perf_event_context;
#line 130
struct blk_plug;
#line 186
struct cfs_rq;
#line 187
struct task_group;
#line 432 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};
#line 471 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};
#line 479 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};
#line 486 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};
#line 498 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};
#line 518 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime cputime ;
   int running ;
   raw_spinlock_t lock ;
};
#line 560
struct autogroup;
#line 561
struct tty_struct;
#line 561
struct taskstats;
#line 561
struct tty_audit_buf;
#line 561 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int is_child_subreaper : 1 ;
   unsigned int has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};
#line 741 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t files ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};
#line 785
struct backing_dev_info;
#line 786
struct reclaim_state;
#line 787 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};
#line 801 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   struct timespec blkio_start ;
   struct timespec blkio_end ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   struct timespec freepages_start ;
   struct timespec freepages_end ;
   u64 freepages_delay ;
   u32 freepages_count ;
};
#line 987
struct io_context;
#line 1015
struct pipe_inode_info;
#line 1016
struct uts_namespace;
#line 1017 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};
#line 1024 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sched.h"
struct sched_avg {
   u32 runnable_avg_sum ;
   u32 runnable_avg_period ;
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
};
#line 1036 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};
#line 1071 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};
#line 1103
struct rt_rq;
#line 1103 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};
#line 1119 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};
#line 1177 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sched.h"
struct memcg_batch_info {
   int do_batch ;
   struct mem_cgroup *memcg ;
   unsigned long nr_pages ;
   unsigned long memsw_nr_pages ;
};
#line 1598 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int may_oom : 1 ;
};
#line 1605
struct sched_class;
#line 1605
struct files_struct;
#line 1605
struct css_set;
#line 1605
struct compat_robust_list_head;
#line 1605
struct numa_group;
#line 1605
struct ftrace_ret_stack;
#line 1605 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sched.h"
struct task_struct {
   long volatile   state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class  const  *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   unsigned int brk_randomized : 1 ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned int jobctl ;
   unsigned int personality ;
   unsigned int in_execve : 1 ;
   unsigned int in_iowait : 1 ;
   unsigned int no_new_privs : 1 ;
   unsigned int sched_reset_on_fork : 1 ;
   unsigned int sched_contributes_to_load : 1 ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   struct timespec start_time ;
   struct timespec real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred  const  *real_cred ;
   struct cred  const  *cred ;
   char comm[16U] ;
   int link_count ;
   int total_link_count ;
   struct sysv_sem sysvsem ;
   unsigned long last_switch_count ;
   struct thread_struct thread ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void * ) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct task_struct *pi_top_task ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults_memory ;
   unsigned long total_numa_faults ;
   unsigned long *numa_faults_buffer_memory ;
   unsigned long *numa_faults_cpu ;
   unsigned long *numa_faults_buffer_cpu ;
   unsigned long numa_faults_locality[2U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_batch_info memcg_batch ;
   unsigned int memcg_kmem_skip_account ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
};
#line 242 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/freezer.h"
struct w1_reg_num {
   __u64 family : 8 ;
   __u64 id : 48 ;
   __u64 crc : 8 ;
};
#line 39 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.h"
struct w1_slave;
#line 40 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.h"
struct w1_family_ops {
   int (*add_slave)(struct w1_slave * ) ;
   void (*remove_slave)(struct w1_slave * ) ;
   struct attribute_group  const  **groups ;
};
#line 63 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_family.h"
struct w1_family {
   struct list_head family_entry ;
   u8 fid ;
   struct w1_family_ops *fops ;
   atomic_t refcnt ;
};
#line 88
struct w1_master;
#line 88 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_family.h"
struct w1_slave {
   struct module *owner ;
   unsigned char name[32U] ;
   struct list_head w1_slave_entry ;
   struct w1_reg_num reg_num ;
   atomic_t refcnt ;
   int ttl ;
   unsigned long flags ;
   struct w1_master *master ;
   struct w1_family *family ;
   void *family_data ;
   struct device dev ;
};
#line 103 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.h"
struct w1_bus_master {
   void *data ;
   u8 (*read_bit)(void * ) ;
   void (*write_bit)(void * , u8  ) ;
   u8 (*touch_bit)(void * , u8  ) ;
   u8 (*read_byte)(void * ) ;
   void (*write_byte)(void * , u8  ) ;
   u8 (*read_block)(void * , u8 * , int  ) ;
   void (*write_block)(void * , u8 const   * , int  ) ;
   u8 (*triplet)(void * , u8  ) ;
   u8 (*reset_bus)(void * ) ;
   u8 (*set_pullup)(void * , int  ) ;
   void (*search)(void * , struct w1_master * , u8  , void (*)(struct w1_master * ,
                                                               u64  ) ) ;
};
#line 181 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.h"
struct w1_master {
   struct list_head w1_master_entry ;
   struct module *owner ;
   unsigned char name[32U] ;
   struct mutex list_mutex ;
   struct list_head slist ;
   struct list_head async_list ;
   int max_slave_count ;
   int slave_count ;
   unsigned long attempts ;
   int slave_ttl ;
   int initialized ;
   u32 id ;
   int search_count ;
   u64 search_id ;
   atomic_t refcnt ;
   void *priv ;
   int priv_size ;
   int enable_pullup ;
   int pullup_duration ;
   long flags ;
   struct task_struct *thread ;
   struct mutex mutex ;
   struct mutex bus_mutex ;
   struct device_driver *driver ;
   struct device dev ;
   struct w1_bus_master *bus_master ;
   u32 seq ;
   u32 portid ;
};
#line 269 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.h"
struct w1_async_cmd {
   struct list_head async_entry ;
   void (*cb)(struct w1_master * , struct w1_async_cmd * ) ;
};
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_int.h"
struct hlist_nulls_node;
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_int.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/list_nulls.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};
#line 84 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/miscdevice.h"
struct pm_qos_request {
   struct plist_node node ;
   int pm_qos_class ;
   struct delayed_work work ;
};
#line 48 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/pm_qos.h"
struct pm_qos_flags_request {
   struct list_head node ;
   s32 flags ;
};
#line 53
enum dev_pm_qos_req_type {
    DEV_PM_QOS_RESUME_LATENCY = 1,
    DEV_PM_QOS_LATENCY_TOLERANCE = 2,
    DEV_PM_QOS_FLAGS = 3
} ;
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/pm_qos.h"
union __anonunion_data_179 {
   struct plist_node pnode ;
   struct pm_qos_flags_request flr ;
};
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/pm_qos.h"
struct dev_pm_qos_request {
   enum dev_pm_qos_req_type type ;
   union __anonunion_data_179 data ;
   struct device *dev ;
};
#line 68
enum pm_qos_type {
    PM_QOS_UNITIALIZED = 0,
    PM_QOS_MAX = 1,
    PM_QOS_MIN = 2
} ;
#line 74 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/pm_qos.h"
struct pm_qos_constraints {
   struct plist_head list ;
   s32 target_value ;
   s32 default_value ;
   s32 no_constraint_value ;
   enum pm_qos_type type ;
   struct blocking_notifier_head *notifiers ;
};
#line 88 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/pm_qos.h"
struct pm_qos_flags {
   struct list_head list ;
   s32 effective_flags ;
};
#line 93 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/pm_qos.h"
struct dev_pm_qos {
   struct pm_qos_constraints resume_latency ;
   struct pm_qos_constraints latency_tolerance ;
   struct pm_qos_flags flags ;
   struct dev_pm_qos_request *resume_latency_req ;
   struct dev_pm_qos_request *latency_tolerance_req ;
   struct dev_pm_qos_request *flags_req ;
};
#line 220 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/pm_qos.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};
#line 93 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/bit_spinlock.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   nodemask_t nodes_to_scan ;
   int nid ;
};
#line 26 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker * , struct shrink_control * ) ;
   unsigned long (*scan_objects)(struct shrinker * , struct shrink_control * ) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};
#line 71
struct file_ra_state;
#line 72
struct writeback_control;
#line 188 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};
#line 221 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct * ) ;
   void (*close)(struct vm_area_struct * ) ;
   int (*fault)(struct vm_area_struct * , struct vm_fault * ) ;
   void (*map_pages)(struct vm_area_struct * , struct vm_fault * ) ;
   int (*page_mkwrite)(struct vm_area_struct * , struct vm_fault * ) ;
   int (*access)(struct vm_area_struct * , unsigned long  , void * , int  , int  ) ;
   int (*set_policy)(struct vm_area_struct * , struct mempolicy * ) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct * , unsigned long  ) ;
   int (*migrate)(struct vm_area_struct * , nodemask_t const   * , nodemask_t const   * ,
                  unsigned long  ) ;
   int (*remap_pages)(struct vm_area_struct * , unsigned long  , unsigned long  ,
                      unsigned long  ) ;
};
#line 2099 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};
#line 17 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/asm-generic/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};
#line 38 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/dmaengine.h"
typedef s32 dma_cookie_t;
#line 1153 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/dmaengine.h"
struct dql {
   unsigned int num_queued ;
   unsigned int adj_limit ;
   unsigned int last_obj_cnt ;
   unsigned int limit ;
   unsigned int num_completed ;
   unsigned int prev_ovlimit ;
   unsigned int prev_num_queued ;
   unsigned int prev_last_obj_cnt ;
   unsigned int lowest_slack ;
   unsigned long slack_start_time ;
   unsigned int max_limit ;
   unsigned int min_limit ;
   unsigned int slack_hold_time ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/socket.h"
typedef unsigned short __kernel_sa_family_t;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/socket.h"
typedef __kernel_sa_family_t sa_family_t;
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};
#line 38 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/socket.h"
struct msghdr {
   void *msg_name ;
   int msg_namelen ;
   struct iovec *msg_iov ;
   __kernel_size_t msg_iovlen ;
   void *msg_control ;
   __kernel_size_t msg_controllen ;
   unsigned int msg_flags ;
};
#line 43 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_181 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};
#line 43 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_181 sync_serial_settings;
#line 50 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_182 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};
#line 50 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_182 te1_settings;
#line 55 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_183 {
   unsigned short encoding ;
   unsigned short parity ;
};
#line 55 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_183 raw_hdlc_proto;
#line 65 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_184 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};
#line 65 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_184 fr_proto;
#line 69 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_185 {
   unsigned int dlci ;
};
#line 69 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_185 fr_proto_pvc;
#line 74 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_186 {
   unsigned int dlci ;
   char master[16U] ;
};
#line 74 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_186 fr_proto_pvc_info;
#line 79 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_187 {
   unsigned int interval ;
   unsigned int timeout ;
};
#line 79 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_187 cisco_proto;
#line 117 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};
#line 177 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/if.h"
union __anonunion_ifs_ifsu_188 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};
#line 177 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_188 ifs_ifsu ;
};
#line 195 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/if.h"
union __anonunion_ifr_ifrn_189 {
   char ifrn_name[16U] ;
};
#line 195 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/if.h"
union __anonunion_ifr_ifru_190 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};
#line 195 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_189 ifr_ifrn ;
   union __anonunion_ifr_ifru_190 ifr_ifru ;
};
#line 91 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kdev_t.h"
struct hlist_bl_node;
#line 91 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kdev_t.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};
#line 36 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};
#line 114 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/rculist_bl.h"
struct __anonstruct____missing_field_name_193 {
   spinlock_t lock ;
   unsigned int count ;
};
#line 114 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/rculist_bl.h"
union __anonunion____missing_field_name_192 {
   struct __anonstruct____missing_field_name_193 __annonCompField59 ;
};
#line 114 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion____missing_field_name_192 __annonCompField60 ;
};
#line 49 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/lockref.h"
struct nameidata;
#line 50
struct vfsmount;
#line 51 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/lockref.h"
struct __anonstruct____missing_field_name_195 {
   u32 hash ;
   u32 len ;
};
#line 51 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/lockref.h"
union __anonunion____missing_field_name_194 {
   struct __anonstruct____missing_field_name_195 __annonCompField61 ;
   u64 hash_len ;
};
#line 51 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/lockref.h"
struct qstr {
   union __anonunion____missing_field_name_194 __annonCompField62 ;
   unsigned char const   *name ;
};
#line 90 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/dcache.h"
struct dentry_operations;
#line 90 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/dcache.h"
union __anonunion_d_u_196 {
   struct list_head d_child ;
   struct callback_head d_rcu ;
};
#line 90 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations  const  *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   union __anonunion_d_u_196 d_u ;
   struct list_head d_subdirs ;
   struct hlist_node d_alias ;
};
#line 142 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry * , unsigned int  ) ;
   int (*d_weak_revalidate)(struct dentry * , unsigned int  ) ;
   int (*d_hash)(struct dentry  const  * , struct qstr * ) ;
   int (*d_compare)(struct dentry  const  * , struct dentry  const  * , unsigned int  ,
                    char const   * , struct qstr  const  * ) ;
   int (*d_delete)(struct dentry  const  * ) ;
   void (*d_release)(struct dentry * ) ;
   void (*d_prune)(struct dentry * ) ;
   void (*d_iput)(struct dentry * , struct inode * ) ;
   char *(*d_dname)(struct dentry * , char * , int  ) ;
   struct vfsmount *(*d_automount)(struct path * ) ;
   int (*d_manage)(struct dentry * , bool  ) ;
};
#line 477 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/path.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_head list ;
   long nr_items ;
};
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   nodemask_t active_nodes ;
};
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/radix-tree.h"
struct __anonstruct____missing_field_name_198 {
   struct radix_tree_node *parent ;
   void *private_data ;
};
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/radix-tree.h"
union __anonunion____missing_field_name_197 {
   struct __anonstruct____missing_field_name_198 __annonCompField63 ;
   struct callback_head callback_head ;
};
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion____missing_field_name_197 __annonCompField64 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};
#line 105 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};
#line 45 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};
#line 38 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/fiemap.h"
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
} ;
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/percpu-rwsem.h"
struct block_device;
#line 31
struct cgroup_subsys_state;
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/fs.h"
struct export_operations;
#line 61
struct kiocb;
#line 62
struct poll_table_struct;
#line 63
struct kstatfs;
#line 64
struct swap_info_struct;
#line 69 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};
#line 249 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/fs.h"
struct fs_disk_quota {
   __s8 d_version ;
   __s8 d_flags ;
   __u16 d_fieldmask ;
   __u32 d_id ;
   __u64 d_blk_hardlimit ;
   __u64 d_blk_softlimit ;
   __u64 d_ino_hardlimit ;
   __u64 d_ino_softlimit ;
   __u64 d_bcount ;
   __u64 d_icount ;
   __s32 d_itimer ;
   __s32 d_btimer ;
   __u16 d_iwarns ;
   __u16 d_bwarns ;
   __s32 d_padding2 ;
   __u64 d_rtb_hardlimit ;
   __u64 d_rtb_softlimit ;
   __u64 d_rtbcount ;
   __s32 d_rtbtimer ;
   __u16 d_rtbwarns ;
   __s16 d_padding3 ;
   char d_padding4[8U] ;
};
#line 76 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/dqblk_xfs.h"
struct fs_qfilestat {
   __u64 qfs_ino ;
   __u64 qfs_nblks ;
   __u32 qfs_nextents ;
};
#line 151 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/dqblk_xfs.h"
typedef struct fs_qfilestat fs_qfilestat_t;
#line 152 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/dqblk_xfs.h"
struct fs_quota_stat {
   __s8 qs_version ;
   __u16 qs_flags ;
   __s8 qs_pad ;
   fs_qfilestat_t qs_uquota ;
   fs_qfilestat_t qs_gquota ;
   __u32 qs_incoredqs ;
   __s32 qs_btimelimit ;
   __s32 qs_itimelimit ;
   __s32 qs_rtbtimelimit ;
   __u16 qs_bwarnlimit ;
   __u16 qs_iwarnlimit ;
};
#line 166 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/dqblk_xfs.h"
struct fs_qfilestatv {
   __u64 qfs_ino ;
   __u64 qfs_nblks ;
   __u32 qfs_nextents ;
   __u32 qfs_pad ;
};
#line 196 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/dqblk_xfs.h"
struct fs_quota_statv {
   __s8 qs_version ;
   __u8 qs_pad1 ;
   __u16 qs_flags ;
   __u32 qs_incoredqs ;
   struct fs_qfilestatv qs_uquota ;
   struct fs_qfilestatv qs_gquota ;
   struct fs_qfilestatv qs_pquota ;
   __s32 qs_btimelimit ;
   __s32 qs_itimelimit ;
   __s32 qs_rtbtimelimit ;
   __u16 qs_bwarnlimit ;
   __u16 qs_iwarnlimit ;
   __u64 qs_pad2[8U] ;
};
#line 212
struct dquot;
#line 19 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/projid.h"
struct __anonstruct_kprojid_t_199 {
   projid_t val ;
};
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_199 kprojid_t;
#line 119 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/quota.h"
struct if_dqinfo {
   __u64 dqi_bgrace ;
   __u64 dqi_igrace ;
   __u32 dqi_flags ;
   __u32 dqi_valid ;
};
#line 152
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
} ;
#line 60 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/quota.h"
typedef long long qsize_t;
#line 61 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/quota.h"
union __anonunion____missing_field_name_200 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};
#line 61 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/quota.h"
struct kqid {
   union __anonunion____missing_field_name_200 __annonCompField65 ;
   enum quota_type type ;
};
#line 178 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};
#line 200
struct quota_format_type;
#line 201 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_maxblimit ;
   qsize_t dqi_maxilimit ;
   void *dqi_priv ;
};
#line 264 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};
#line 291 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block * , int  ) ;
   int (*read_file_info)(struct super_block * , int  ) ;
   int (*write_file_info)(struct super_block * , int  ) ;
   int (*free_file_info)(struct super_block * , int  ) ;
   int (*read_dqblk)(struct dquot * ) ;
   int (*commit_dqblk)(struct dquot * ) ;
   int (*release_dqblk)(struct dquot * ) ;
};
#line 302 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot * ) ;
   struct dquot *(*alloc_dquot)(struct super_block * , int  ) ;
   void (*destroy_dquot)(struct dquot * ) ;
   int (*acquire_dquot)(struct dquot * ) ;
   int (*release_dquot)(struct dquot * ) ;
   int (*mark_dirty)(struct dquot * ) ;
   int (*write_info)(struct super_block * , int  ) ;
   qsize_t *(*get_reserved_space)(struct inode * ) ;
};
#line 316 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block * , int  , int  , struct path * ) ;
   int (*quota_on_meta)(struct super_block * , int  , int  ) ;
   int (*quota_off)(struct super_block * , int  ) ;
   int (*quota_sync)(struct super_block * , int  ) ;
   int (*get_info)(struct super_block * , int  , struct if_dqinfo * ) ;
   int (*set_info)(struct super_block * , int  , struct if_dqinfo * ) ;
   int (*get_dqblk)(struct super_block * , struct kqid  , struct fs_disk_quota * ) ;
   int (*set_dqblk)(struct super_block * , struct kqid  , struct fs_disk_quota * ) ;
   int (*get_xstate)(struct super_block * , struct fs_quota_stat * ) ;
   int (*set_xstate)(struct super_block * , unsigned int  , int  ) ;
   int (*get_xstatev)(struct super_block * , struct fs_quota_statv * ) ;
};
#line 333 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops  const  *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};
#line 379 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct rw_semaphore dqptr_sem ;
   struct inode *files[2U] ;
   struct mem_dqinfo info[2U] ;
   struct quota_format_ops  const  *ops[2U] ;
};
#line 319 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page * , struct writeback_control * ) ;
   int (*readpage)(struct file * , struct page * ) ;
   int (*writepages)(struct address_space * , struct writeback_control * ) ;
   int (*set_page_dirty)(struct page * ) ;
   int (*readpages)(struct file * , struct address_space * , struct list_head * ,
                    unsigned int  ) ;
   int (*write_begin)(struct file * , struct address_space * , loff_t  , unsigned int  ,
                      unsigned int  , struct page ** , void ** ) ;
   int (*write_end)(struct file * , struct address_space * , loff_t  , unsigned int  ,
                    unsigned int  , struct page * , void * ) ;
   sector_t (*bmap)(struct address_space * , sector_t  ) ;
   void (*invalidatepage)(struct page * , unsigned int  , unsigned int  ) ;
   int (*releasepage)(struct page * , gfp_t  ) ;
   void (*freepage)(struct page * ) ;
   ssize_t (*direct_IO)(int  , struct kiocb * , struct iovec  const  * , loff_t  ,
                        unsigned long  ) ;
   int (*get_xip_mem)(struct address_space * , unsigned long  , int  , void ** , unsigned long * ) ;
   int (*migratepage)(struct address_space * , struct page * , struct page * , enum migrate_mode  ) ;
   int (*launder_page)(struct page * ) ;
   int (*is_partially_uptodate)(struct page * , unsigned long  , unsigned long  ) ;
   void (*is_dirty_writeback)(struct page * , bool * , bool * ) ;
   int (*error_remove_page)(struct address_space * , struct page * ) ;
   int (*swap_activate)(struct swap_info_struct * , struct file * , sector_t * ) ;
   void (*swap_deactivate)(struct file * ) ;
};
#line 379 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   unsigned int i_mmap_writable ;
   struct rb_root i_mmap ;
   struct list_head i_mmap_nonlinear ;
   struct mutex i_mmap_mutex ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations  const  *a_ops ;
   unsigned long flags ;
   struct backing_dev_info *backing_dev_info ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};
#line 402
struct request_queue;
#line 403
struct hd_struct;
#line 403
struct gendisk;
#line 403 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};
#line 475
struct posix_acl;
#line 476
struct inode_operations;
#line 476 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/fs.h"
union __anonunion____missing_field_name_203 {
   unsigned int const   i_nlink ;
   unsigned int __i_nlink ;
};
#line 476 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/fs.h"
union __anonunion____missing_field_name_204 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};
#line 476
struct file_lock;
#line 476
struct cdev;
#line 476 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/fs.h"
union __anonunion____missing_field_name_205 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
};
#line 476 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations  const  *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion____missing_field_name_203 __annonCompField66 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion____missing_field_name_204 __annonCompField67 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations  const  *i_fop ;
   struct file_lock *i_flock ;
   struct address_space i_data ;
   struct dquot *i_dquot[2U] ;
   struct list_head i_devices ;
   union __anonunion____missing_field_name_205 __annonCompField68 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};
#line 712 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};
#line 720 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};
#line 743 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/fs.h"
union __anonunion_f_u_206 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};
#line 743 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/fs.h"
struct file {
   union __anonunion_f_u_206 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations  const  *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred  const  *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};
#line 833 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/fs.h"
typedef struct files_struct *fl_owner_t;
#line 834 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock * , struct file_lock * ) ;
   void (*fl_release_private)(struct file_lock * ) ;
};
#line 839 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock * , struct file_lock * ) ;
   unsigned long (*lm_owner_key)(struct file_lock * ) ;
   void (*lm_notify)(struct file_lock * ) ;
   int (*lm_grant)(struct file_lock * , struct file_lock * , int  ) ;
   void (*lm_break)(struct file_lock * ) ;
   int (*lm_change)(struct file_lock ** , int  ) ;
};
#line 852
struct net;
#line 857
struct nlm_lockowner;
#line 858 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};
#line 14 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;
#line 15 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};
#line 19
struct fasync_struct;
#line 19 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_208 {
   struct list_head link ;
   int state ;
};
#line 19 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_207 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_208 afs ;
};
#line 19 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations  const  *fl_ops ;
   struct lock_manager_operations  const  *fl_lmops ;
   union __anonunion_fl_u_207 fl_u ;
};
#line 960 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};
#line 1154 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};
#line 1170
struct super_operations;
#line 1170
struct xattr_handler;
#line 1170
struct mtd_info;
#line 1170 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations  const  *s_op ;
   struct dquot_operations  const  *dq_op ;
   struct quotactl_ops  const  *s_qcop ;
   struct export_operations  const  *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler  const  **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations  const  *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
};
#line 1400 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};
#line 1438 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/fs.h"
struct dir_context {
   int (*actor)(void * , char const   * , int  , loff_t  , u64  , unsigned int  ) ;
   loff_t pos ;
};
#line 1443 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file * , loff_t  , int  ) ;
   ssize_t (*read)(struct file * , char * , size_t  , loff_t * ) ;
   ssize_t (*write)(struct file * , char const   * , size_t  , loff_t * ) ;
   ssize_t (*aio_read)(struct kiocb * , struct iovec  const  * , unsigned long  ,
                       loff_t  ) ;
   ssize_t (*aio_write)(struct kiocb * , struct iovec  const  * , unsigned long  ,
                        loff_t  ) ;
   int (*iterate)(struct file * , struct dir_context * ) ;
   unsigned int (*poll)(struct file * , struct poll_table_struct * ) ;
   long (*unlocked_ioctl)(struct file * , unsigned int  , unsigned long  ) ;
   long (*compat_ioctl)(struct file * , unsigned int  , unsigned long  ) ;
   int (*mmap)(struct file * , struct vm_area_struct * ) ;
   int (*open)(struct inode * , struct file * ) ;
   int (*flush)(struct file * , fl_owner_t  ) ;
   int (*release)(struct inode * , struct file * ) ;
   int (*fsync)(struct file * , loff_t  , loff_t  , int  ) ;
   int (*aio_fsync)(struct kiocb * , int  ) ;
   int (*fasync)(int  , struct file * , int  ) ;
   int (*lock)(struct file * , int  , struct file_lock * ) ;
   ssize_t (*sendpage)(struct file * , struct page * , int  , size_t  , loff_t * ,
                       int  ) ;
   unsigned long (*get_unmapped_area)(struct file * , unsigned long  , unsigned long  ,
                                      unsigned long  , unsigned long  ) ;
   int (*check_flags)(int  ) ;
   int (*flock)(struct file * , int  , struct file_lock * ) ;
   ssize_t (*splice_write)(struct pipe_inode_info * , struct file * , loff_t * , size_t  ,
                           unsigned int  ) ;
   ssize_t (*splice_read)(struct file * , loff_t * , struct pipe_inode_info * , size_t  ,
                          unsigned int  ) ;
   int (*setlease)(struct file * , long  , struct file_lock ** ) ;
   long (*fallocate)(struct file * , int  , loff_t  , loff_t  ) ;
   int (*show_fdinfo)(struct seq_file * , struct file * ) ;
};
#line 1481 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode * , struct dentry * , unsigned int  ) ;
   void *(*follow_link)(struct dentry * , struct nameidata * ) ;
   int (*permission)(struct inode * , int  ) ;
   struct posix_acl *(*get_acl)(struct inode * , int  ) ;
   int (*readlink)(struct dentry * , char * , int  ) ;
   void (*put_link)(struct dentry * , struct nameidata * , void * ) ;
   int (*create)(struct inode * , struct dentry * , umode_t  , bool  ) ;
   int (*link)(struct dentry * , struct inode * , struct dentry * ) ;
   int (*unlink)(struct inode * , struct dentry * ) ;
   int (*symlink)(struct inode * , struct dentry * , char const   * ) ;
   int (*mkdir)(struct inode * , struct dentry * , umode_t  ) ;
   int (*rmdir)(struct inode * , struct dentry * ) ;
   int (*mknod)(struct inode * , struct dentry * , umode_t  , dev_t  ) ;
   int (*rename)(struct inode * , struct dentry * , struct inode * , struct dentry * ) ;
   int (*rename2)(struct inode * , struct dentry * , struct inode * , struct dentry * ,
                  unsigned int  ) ;
   int (*setattr)(struct dentry * , struct iattr * ) ;
   int (*getattr)(struct vfsmount * , struct dentry * , struct kstat * ) ;
   int (*setxattr)(struct dentry * , char const   * , void const   * , size_t  , int  ) ;
   ssize_t (*getxattr)(struct dentry * , char const   * , void * , size_t  ) ;
   ssize_t (*listxattr)(struct dentry * , char * , size_t  ) ;
   int (*removexattr)(struct dentry * , char const   * ) ;
   int (*fiemap)(struct inode * , struct fiemap_extent_info * , u64  , u64  ) ;
   int (*update_time)(struct inode * , struct timespec * , int  ) ;
   int (*atomic_open)(struct inode * , struct dentry * , struct file * , unsigned int  ,
                      umode_t  , int * ) ;
   int (*tmpfile)(struct inode * , struct dentry * , umode_t  ) ;
   int (*set_acl)(struct inode * , struct posix_acl * , int  ) ;
};
#line 1528 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block * ) ;
   void (*destroy_inode)(struct inode * ) ;
   void (*dirty_inode)(struct inode * , int  ) ;
   int (*write_inode)(struct inode * , struct writeback_control * ) ;
   int (*drop_inode)(struct inode * ) ;
   void (*evict_inode)(struct inode * ) ;
   void (*put_super)(struct super_block * ) ;
   int (*sync_fs)(struct super_block * , int  ) ;
   int (*freeze_fs)(struct super_block * ) ;
   int (*unfreeze_fs)(struct super_block * ) ;
   int (*statfs)(struct dentry * , struct kstatfs * ) ;
   int (*remount_fs)(struct super_block * , int * , char * ) ;
   void (*umount_begin)(struct super_block * ) ;
   int (*show_options)(struct seq_file * , struct dentry * ) ;
   int (*show_devname)(struct seq_file * , struct dentry * ) ;
   int (*show_path)(struct seq_file * , struct dentry * ) ;
   int (*show_stats)(struct seq_file * , struct dentry * ) ;
   ssize_t (*quota_read)(struct super_block * , int  , char * , size_t  , loff_t  ) ;
   ssize_t (*quota_write)(struct super_block * , int  , char const   * , size_t  ,
                          loff_t  ) ;
   int (*bdev_try_to_free_page)(struct super_block * , struct page * , gfp_t  ) ;
   long (*nr_cached_objects)(struct super_block * , int  ) ;
   long (*free_cached_objects)(struct super_block * , long  , int  ) ;
};
#line 1742 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/fs.h"
struct file_system_type {
   char const   *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type * , int  , char const   * , void * ) ;
   void (*kill_sb)(struct super_block * ) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};
#line 39 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/compat.h"
typedef s32 compat_long_t;
#line 44 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/compat.h"
typedef u32 compat_uptr_t;
#line 276 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/compat.h"
struct compat_robust_list {
   compat_uptr_t next ;
};
#line 280 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/compat.h"
struct compat_robust_list_head {
   struct compat_robust_list list ;
   compat_long_t futex_offset ;
   compat_uptr_t list_op_pending ;
};
#line 114 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/random.h"
enum ldv_24220 {
    SS_FREE = 0,
    SS_UNCONNECTED = 1,
    SS_CONNECTING = 2,
    SS_CONNECTED = 3,
    SS_DISCONNECTING = 4
} ;
#line 53 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/net.h"
typedef enum ldv_24220 socket_state;
#line 70 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/net.h"
struct socket_wq {
   wait_queue_head_t wait ;
   struct fasync_struct *fasync_list ;
   struct callback_head rcu ;
};
#line 94 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/net.h"
struct proto_ops;
#line 94 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/net.h"
struct socket {
   socket_state state ;
   short type ;
   unsigned long flags ;
   struct socket_wq *wq ;
   struct file *file ;
   struct sock *sk ;
   struct proto_ops  const  *ops ;
};
#line 120 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/net.h"
struct proto_ops {
   int family ;
   struct module *owner ;
   int (*release)(struct socket * ) ;
   int (*bind)(struct socket * , struct sockaddr * , int  ) ;
   int (*connect)(struct socket * , struct sockaddr * , int  , int  ) ;
   int (*socketpair)(struct socket * , struct socket * ) ;
   int (*accept)(struct socket * , struct socket * , int  ) ;
   int (*getname)(struct socket * , struct sockaddr * , int * , int  ) ;
   unsigned int (*poll)(struct file * , struct socket * , struct poll_table_struct * ) ;
   int (*ioctl)(struct socket * , unsigned int  , unsigned long  ) ;
   int (*compat_ioctl)(struct socket * , unsigned int  , unsigned long  ) ;
   int (*listen)(struct socket * , int  ) ;
   int (*shutdown)(struct socket * , int  ) ;
   int (*setsockopt)(struct socket * , int  , int  , char * , unsigned int  ) ;
   int (*getsockopt)(struct socket * , int  , int  , char * , int * ) ;
   int (*compat_setsockopt)(struct socket * , int  , int  , char * , unsigned int  ) ;
   int (*compat_getsockopt)(struct socket * , int  , int  , char * , int * ) ;
   int (*sendmsg)(struct kiocb * , struct socket * , struct msghdr * , size_t  ) ;
   int (*recvmsg)(struct kiocb * , struct socket * , struct msghdr * , size_t  , int  ) ;
   int (*mmap)(struct file * , struct socket * , struct vm_area_struct * ) ;
   ssize_t (*sendpage)(struct socket * , struct page * , int  , size_t  , int  ) ;
   ssize_t (*splice_read)(struct socket * , loff_t * , struct pipe_inode_info * ,
                          size_t  , unsigned int  ) ;
   int (*set_peek_off)(struct sock * , int  ) ;
};
#line 161 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/checksum_64.h"
struct in6_addr;
#line 138 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/checksum.h"
struct sk_buff;
#line 164 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/checksum.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};
#line 70 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
} ;
#line 77 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/dma-attrs.h"
struct dma_map_ops {
   void *(*alloc)(struct device * , size_t  , dma_addr_t * , gfp_t  , struct dma_attrs * ) ;
   void (*free)(struct device * , size_t  , void * , dma_addr_t  , struct dma_attrs * ) ;
   int (*mmap)(struct device * , struct vm_area_struct * , void * , dma_addr_t  ,
               size_t  , struct dma_attrs * ) ;
   int (*get_sgtable)(struct device * , struct sg_table * , void * , dma_addr_t  ,
                      size_t  , struct dma_attrs * ) ;
   dma_addr_t (*map_page)(struct device * , struct page * , unsigned long  , size_t  ,
                          enum dma_data_direction  , struct dma_attrs * ) ;
   void (*unmap_page)(struct device * , dma_addr_t  , size_t  , enum dma_data_direction  ,
                      struct dma_attrs * ) ;
   int (*map_sg)(struct device * , struct scatterlist * , int  , enum dma_data_direction  ,
                 struct dma_attrs * ) ;
   void (*unmap_sg)(struct device * , struct scatterlist * , int  , enum dma_data_direction  ,
                    struct dma_attrs * ) ;
   void (*sync_single_for_cpu)(struct device * , dma_addr_t  , size_t  , enum dma_data_direction  ) ;
   void (*sync_single_for_device)(struct device * , dma_addr_t  , size_t  , enum dma_data_direction  ) ;
   void (*sync_sg_for_cpu)(struct device * , struct scatterlist * , int  , enum dma_data_direction  ) ;
   void (*sync_sg_for_device)(struct device * , struct scatterlist * , int  , enum dma_data_direction  ) ;
   int (*mapping_error)(struct device * , dma_addr_t  ) ;
   int (*dma_supported)(struct device * , u64  ) ;
   int (*set_dma_mask)(struct device * , u64  ) ;
   int is_phys ;
};
#line 15 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/netdev_features.h"
typedef u64 netdev_features_t;
#line 18 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/flow_keys.h"
struct nf_conntrack {
   atomic_t use ;
};
#line 137 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   unsigned int mask ;
   struct net_device *physindev ;
   struct net_device *physoutdev ;
   unsigned long data[4U] ;
};
#line 147 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/skbuff.h"
struct sk_buff_head {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   __u32 qlen ;
   spinlock_t lock ;
};
#line 355 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;
#line 356 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/skbuff.h"
struct __anonstruct____missing_field_name_226 {
   u32 stamp_us ;
   u32 stamp_jiffies ;
};
#line 356 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/skbuff.h"
union __anonunion____missing_field_name_225 {
   u64 v64 ;
   struct __anonstruct____missing_field_name_226 __annonCompField70 ;
};
#line 356 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/skbuff.h"
struct skb_mstamp {
   union __anonunion____missing_field_name_225 __annonCompField71 ;
};
#line 409 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/skbuff.h"
union __anonunion____missing_field_name_227 {
   ktime_t tstamp ;
   struct skb_mstamp skb_mstamp ;
};
#line 409
struct sec_path;
#line 409 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/skbuff.h"
struct __anonstruct____missing_field_name_229 {
   __u16 csum_start ;
   __u16 csum_offset ;
};
#line 409 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/skbuff.h"
union __anonunion____missing_field_name_228 {
   __wsum csum ;
   struct __anonstruct____missing_field_name_229 __annonCompField73 ;
};
#line 409 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/skbuff.h"
union __anonunion____missing_field_name_230 {
   unsigned int napi_id ;
   dma_cookie_t dma_cookie ;
};
#line 409 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/skbuff.h"
union __anonunion____missing_field_name_231 {
   __u32 mark ;
   __u32 dropcount ;
   __u32 reserved_tailroom ;
};
#line 409 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/skbuff.h"
struct sk_buff {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   union __anonunion____missing_field_name_227 __annonCompField72 ;
   struct sock *sk ;
   struct net_device *dev ;
   char cb[48U] ;
   unsigned long _skb_refdst ;
   struct sec_path *sp ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   union __anonunion____missing_field_name_228 __annonCompField74 ;
   __u32 priority ;
   __u8 local_df : 1 ;
   __u8 cloned : 1 ;
   __u8 ip_summed : 2 ;
   __u8 nohdr : 1 ;
   __u8 nfctinfo : 3 ;
   __u8 pkt_type : 3 ;
   __u8 fclone : 2 ;
   __u8 ipvs_property : 1 ;
   __u8 peeked : 1 ;
   __u8 nf_trace : 1 ;
   __be16 protocol ;
   void (*destructor)(struct sk_buff * ) ;
   struct nf_conntrack *nfct ;
   struct nf_bridge_info *nf_bridge ;
   int skb_iif ;
   __u32 hash ;
   __be16 vlan_proto ;
   __u16 vlan_tci ;
   __u16 tc_index ;
   __u16 tc_verd ;
   __u16 queue_mapping ;
   __u8 ndisc_nodetype : 2 ;
   __u8 pfmemalloc : 1 ;
   __u8 ooo_okay : 1 ;
   __u8 l4_hash : 1 ;
   __u8 wifi_acked_valid : 1 ;
   __u8 wifi_acked : 1 ;
   __u8 no_fcs : 1 ;
   __u8 head_frag : 1 ;
   __u8 encapsulation : 1 ;
   union __anonunion____missing_field_name_230 __annonCompField75 ;
   __u32 secmark ;
   union __anonunion____missing_field_name_231 __annonCompField76 ;
   __be16 inner_protocol ;
   __u16 inner_transport_header ;
   __u16 inner_network_header ;
   __u16 inner_mac_header ;
   __u16 transport_header ;
   __u16 network_header ;
   __u16 mac_header ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};
#line 633
struct dst_entry;
#line 701
struct rtable;
#line 3007 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/skbuff.h"
struct ethhdr {
   unsigned char h_dest[6U] ;
   unsigned char h_source[6U] ;
   __be16 h_proto ;
};
#line 34 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/if_ether.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 eth_tp_mdix_ctrl ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};
#line 125 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char reserved1[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};
#line 187 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};
#line 211 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 233 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 259 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/ethtool.h"
struct ethtool_eee {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertised ;
   __u32 lp_advertised ;
   __u32 eee_active ;
   __u32 eee_enabled ;
   __u32 tx_lpi_enabled ;
   __u32 tx_lpi_timer ;
   __u32 reserved[2U] ;
};
#line 288 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/ethtool.h"
struct ethtool_modinfo {
   __u32 cmd ;
   __u32 type ;
   __u32 eeprom_len ;
   __u32 reserved[8U] ;
};
#line 305 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};
#line 404 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};
#line 441 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/ethtool.h"
struct ethtool_channels {
   __u32 cmd ;
   __u32 max_rx ;
   __u32 max_tx ;
   __u32 max_other ;
   __u32 max_combined ;
   __u32 rx_count ;
   __u32 tx_count ;
   __u32 other_count ;
   __u32 combined_count ;
};
#line 469 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};
#line 568 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};
#line 600 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};
#line 642 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};
#line 675 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};
#line 691 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};
#line 711 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/ethtool.h"
union ethtool_flow_union {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   struct ethhdr ether_spec ;
   __u8 hdata[52U] ;
};
#line 722 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/ethtool.h"
struct ethtool_flow_ext {
   __u8 padding[2U] ;
   unsigned char h_dest[6U] ;
   __be16 vlan_etype ;
   __be16 vlan_tci ;
   __be32 data[2U] ;
};
#line 741 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union ethtool_flow_union h_u ;
   struct ethtool_flow_ext h_ext ;
   union ethtool_flow_union m_u ;
   struct ethtool_flow_ext m_ext ;
   __u64 ring_cookie ;
   __u32 location ;
};
#line 767 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};
#line 901 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/ethtool.h"
struct ethtool_flash {
   __u32 cmd ;
   __u32 region ;
   char data[128U] ;
};
#line 909 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/ethtool.h"
struct ethtool_dump {
   __u32 cmd ;
   __u32 version ;
   __u32 flag ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 985 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/ethtool.h"
struct ethtool_ts_info {
   __u32 cmd ;
   __u32 so_timestamping ;
   __s32 phc_index ;
   __u32 tx_types ;
   __u32 tx_reserved[3U] ;
   __u32 rx_filters ;
   __u32 rx_reserved[3U] ;
};
#line 44 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/ethtool.h"
enum ethtool_phys_id_state {
    ETHTOOL_ID_INACTIVE = 0,
    ETHTOOL_ID_ACTIVE = 1,
    ETHTOOL_ID_ON = 2,
    ETHTOOL_ID_OFF = 3
} ;
#line 79 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device * , struct ethtool_cmd * ) ;
   int (*set_settings)(struct net_device * , struct ethtool_cmd * ) ;
   void (*get_drvinfo)(struct net_device * , struct ethtool_drvinfo * ) ;
   int (*get_regs_len)(struct net_device * ) ;
   void (*get_regs)(struct net_device * , struct ethtool_regs * , void * ) ;
   void (*get_wol)(struct net_device * , struct ethtool_wolinfo * ) ;
   int (*set_wol)(struct net_device * , struct ethtool_wolinfo * ) ;
   u32 (*get_msglevel)(struct net_device * ) ;
   void (*set_msglevel)(struct net_device * , u32  ) ;
   int (*nway_reset)(struct net_device * ) ;
   u32 (*get_link)(struct net_device * ) ;
   int (*get_eeprom_len)(struct net_device * ) ;
   int (*get_eeprom)(struct net_device * , struct ethtool_eeprom * , u8 * ) ;
   int (*set_eeprom)(struct net_device * , struct ethtool_eeprom * , u8 * ) ;
   int (*get_coalesce)(struct net_device * , struct ethtool_coalesce * ) ;
   int (*set_coalesce)(struct net_device * , struct ethtool_coalesce * ) ;
   void (*get_ringparam)(struct net_device * , struct ethtool_ringparam * ) ;
   int (*set_ringparam)(struct net_device * , struct ethtool_ringparam * ) ;
   void (*get_pauseparam)(struct net_device * , struct ethtool_pauseparam * ) ;
   int (*set_pauseparam)(struct net_device * , struct ethtool_pauseparam * ) ;
   void (*self_test)(struct net_device * , struct ethtool_test * , u64 * ) ;
   void (*get_strings)(struct net_device * , u32  , u8 * ) ;
   int (*set_phys_id)(struct net_device * , enum ethtool_phys_id_state  ) ;
   void (*get_ethtool_stats)(struct net_device * , struct ethtool_stats * , u64 * ) ;
   int (*begin)(struct net_device * ) ;
   void (*complete)(struct net_device * ) ;
   u32 (*get_priv_flags)(struct net_device * ) ;
   int (*set_priv_flags)(struct net_device * , u32  ) ;
   int (*get_sset_count)(struct net_device * , int  ) ;
   int (*get_rxnfc)(struct net_device * , struct ethtool_rxnfc * , u32 * ) ;
   int (*set_rxnfc)(struct net_device * , struct ethtool_rxnfc * ) ;
   int (*flash_device)(struct net_device * , struct ethtool_flash * ) ;
   int (*reset)(struct net_device * , u32 * ) ;
   u32 (*get_rxfh_indir_size)(struct net_device * ) ;
   int (*get_rxfh_indir)(struct net_device * , u32 * ) ;
   int (*set_rxfh_indir)(struct net_device * , u32 const   * ) ;
   void (*get_channels)(struct net_device * , struct ethtool_channels * ) ;
   int (*set_channels)(struct net_device * , struct ethtool_channels * ) ;
   int (*get_dump_flag)(struct net_device * , struct ethtool_dump * ) ;
   int (*get_dump_data)(struct net_device * , struct ethtool_dump * , void * ) ;
   int (*set_dump)(struct net_device * , struct ethtool_dump * ) ;
   int (*get_ts_info)(struct net_device * , struct ethtool_ts_info * ) ;
   int (*get_module_info)(struct net_device * , struct ethtool_modinfo * ) ;
   int (*get_module_eeprom)(struct net_device * , struct ethtool_eeprom * , u8 * ) ;
   int (*get_eee)(struct net_device * , struct ethtool_eee * ) ;
   int (*set_eee)(struct net_device * , struct ethtool_eee * ) ;
};
#line 252 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/ethtool.h"
union __anonunion_in6_u_234 {
   __u8 u6_addr8[16U] ;
   __be16 u6_addr16[8U] ;
   __be32 u6_addr32[4U] ;
};
#line 252 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/ethtool.h"
struct in6_addr {
   union __anonunion_in6_u_234 in6_u ;
};
#line 235 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/flow.h"
struct prot_inuse;
#line 236 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/flow.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};
#line 38 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/snmp.h"
struct u64_stats_sync {

};
#line 145 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/u64_stats_sync.h"
struct ipstats_mib {
   u64 mibs[36U] ;
   struct u64_stats_sync syncp ;
};
#line 61 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};
#line 67 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/snmp.h"
struct icmpmsg_mib {
   atomic_long_t mibs[512U] ;
};
#line 72 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[6U] ;
};
#line 83 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/snmp.h"
struct icmpv6msg_mib {
   atomic_long_t mibs[512U] ;
};
#line 93 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[16U] ;
};
#line 100 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[8U] ;
};
#line 106 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[103U] ;
};
#line 112 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[29U] ;
};
#line 118 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics[1U] ;
   struct ipstats_mib *ip_statistics[1U] ;
   struct linux_mib *net_statistics[1U] ;
   struct udp_mib *udp_statistics[1U] ;
   struct udp_mib *udplite_statistics[1U] ;
   struct icmp_mib *icmp_statistics[1U] ;
   struct icmpmsg_mib *icmpmsg_statistics ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6[1U] ;
   struct udp_mib *udplite_stats_in6[1U] ;
   struct ipstats_mib *ipv6_statistics[1U] ;
   struct icmpv6_mib *icmpv6_statistics[1U] ;
   struct icmpv6msg_mib *icmpv6msg_statistics ;
   struct linux_xfrm_mib *xfrm_statistics[1U] ;
};
#line 26 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};
#line 12 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/netns/unix.h"
struct netns_packet {
   struct mutex sklist_lock ;
   struct hlist_head sklist ;
};
#line 14 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/netns/packet.h"
struct netns_frags {
   int nqueues ;
   struct list_head lru_list ;
   spinlock_t lru_lock ;
   struct percpu_counter mem ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};
#line 180 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/inet_frag.h"
struct tcpm_hash_bucket;
#line 181
struct ipv4_devconf;
#line 182
struct fib_rules_ops;
#line 183
struct fib_table;
#line 184 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/inet_frag.h"
struct local_ports {
   seqlock_t lock ;
   int range[2U] ;
};
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/netns/ipv4.h"
struct ping_group_range {
   seqlock_t lock ;
   kgid_t range[2U] ;
};
#line 27
struct inet_peer_base;
#line 27
struct xt_table;
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/netns/ipv4.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *xfrm4_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   bool fib_has_custom_rules ;
   struct fib_table *fib_local ;
   struct fib_table *fib_main ;
   struct fib_table *fib_default ;
   int fib_num_tclassid_users ;
   struct hlist_head *fib_table_hash ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct inet_peer_base *peers ;
   struct tcpm_hash_bucket *tcp_metrics_hash ;
   unsigned int tcp_metrics_hash_log ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   struct local_ports ip_local_ports ;
   int sysctl_tcp_ecn ;
   int sysctl_ip_no_pmtu_disc ;
   int sysctl_ip_fwd_use_pmtu ;
   struct ping_group_range ping_group_range ;
   atomic_t dev_addr_genid ;
   struct list_head mr_tables ;
   struct fib_rules_ops *mr_rules_ops ;
   atomic_t rt_genid ;
};
#line 95
struct neighbour;
#line 95 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/netns/ipv4.h"
struct dst_ops {
   unsigned short family ;
   __be16 protocol ;
   unsigned int gc_thresh ;
   int (*gc)(struct dst_ops * ) ;
   struct dst_entry *(*check)(struct dst_entry * , __u32  ) ;
   unsigned int (*default_advmss)(struct dst_entry  const  * ) ;
   unsigned int (*mtu)(struct dst_entry  const  * ) ;
   u32 *(*cow_metrics)(struct dst_entry * , unsigned long  ) ;
   void (*destroy)(struct dst_entry * ) ;
   void (*ifdown)(struct dst_entry * , struct net_device * , int  ) ;
   struct dst_entry *(*negative_advice)(struct dst_entry * ) ;
   void (*link_failure)(struct sk_buff * ) ;
   void (*update_pmtu)(struct dst_entry * , struct sock * , struct sk_buff * , u32  ) ;
   void (*redirect)(struct dst_entry * , struct sock * , struct sk_buff * ) ;
   int (*local_out)(struct sk_buff * ) ;
   struct neighbour *(*neigh_lookup)(struct dst_entry  const  * , struct sk_buff * ,
                                     void const   * ) ;
   struct kmem_cache *kmem_cachep ;
   struct percpu_counter pcpuc_entries ;
};
#line 73 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/dst_ops.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *hdr ;
   struct ctl_table_header *route_hdr ;
   struct ctl_table_header *icmp_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *xfrm6_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int flowlabel_consistency ;
   int icmpv6_time ;
   int anycast_src_echo_reply ;
};
#line 34 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/netns/ipv6.h"
struct ipv6_devconf;
#line 34
struct rt6_info;
#line 34
struct rt6_statistics;
#line 34
struct fib6_table;
#line 34 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct inet_peer_base *peers ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct xt_table *ip6table_nat ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct list_head mr6_tables ;
   struct fib_rules_ops *mr6_rules_ops ;
   atomic_t dev_addr_genid ;
   atomic_t rt_genid ;
};
#line 79 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/netns/ipv6.h"
struct netns_nf_frag {
   struct netns_sysctl_ipv6 sysctl ;
   struct netns_frags frags ;
};
#line 85 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/netns/ipv6.h"
struct netns_sysctl_lowpan {
   struct ctl_table_header *frags_hdr ;
};
#line 14 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/netns/ieee802154_6lowpan.h"
struct netns_ieee802154_lowpan {
   struct netns_sysctl_lowpan sysctl ;
   struct netns_frags frags ;
   u16 max_dsize ;
};
#line 21
struct sctp_mib;
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/netns/ieee802154_6lowpan.h"
struct netns_sctp {
   struct sctp_mib *sctp_statistics[1U] ;
   struct proc_dir_entry *proc_net_sctp ;
   struct ctl_table_header *sysctl_header ;
   struct sock *ctl_sock ;
   struct list_head local_addr_list ;
   struct list_head addr_waitq ;
   struct timer_list addr_wq_timer ;
   struct list_head auto_asconf_splist ;
   spinlock_t addr_wq_lock ;
   spinlock_t local_addr_lock ;
   unsigned int rto_initial ;
   unsigned int rto_min ;
   unsigned int rto_max ;
   int rto_alpha ;
   int rto_beta ;
   int max_burst ;
   int cookie_preserve_enable ;
   char *sctp_hmac_alg ;
   unsigned int valid_cookie_life ;
   unsigned int sack_timeout ;
   unsigned int hb_interval ;
   int max_retrans_association ;
   int max_retrans_path ;
   int max_retrans_init ;
   int pf_retrans ;
   int sndbuf_policy ;
   int rcvbuf_policy ;
   int default_auto_asconf ;
   int addip_enable ;
   int addip_noauth ;
   int prsctp_enable ;
   int auth_enable ;
   int scope_policy ;
   int rwnd_upd_shift ;
   unsigned long max_autoclose ;
};
#line 133 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/netns/sctp.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};
#line 324 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/netfilter.h"
struct nlattr;
#line 337
struct nf_logger;
#line 338 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/netfilter.h"
struct netns_nf {
   struct proc_dir_entry *proc_netfilter ;
   struct nf_logger  const  *nf_loggers[13U] ;
   struct ctl_table_header *nf_log_dir_header ;
};
#line 17 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/netns/netfilter.h"
struct ebt_table;
#line 18 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/netns/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   bool notrack_deprecated_warning ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
   bool ulog_warn_deprecated ;
   bool ebt_ulog_warn_deprecated ;
};
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/netfilter/nf_conntrack_tcp.h"
struct nf_proto_net {
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
   struct ctl_table_header *ctl_compat_header ;
   struct ctl_table *ctl_compat_table ;
   unsigned int users ;
};
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/netns/conntrack.h"
struct nf_generic_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};
#line 29 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/netns/conntrack.h"
struct nf_tcp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[14U] ;
   unsigned int tcp_loose ;
   unsigned int tcp_be_liberal ;
   unsigned int tcp_max_retrans ;
};
#line 43 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/netns/conntrack.h"
struct nf_udp_net {
   struct nf_proto_net pn ;
   unsigned int timeouts[2U] ;
};
#line 48 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/netns/conntrack.h"
struct nf_icmp_net {
   struct nf_proto_net pn ;
   unsigned int timeout ;
};
#line 53 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/netns/conntrack.h"
struct nf_ip_net {
   struct nf_generic_net generic ;
   struct nf_tcp_net tcp ;
   struct nf_udp_net udp ;
   struct nf_icmp_net icmp ;
   struct nf_icmp_net icmpv6 ;
   struct ctl_table_header *ctl_table_header ;
   struct ctl_table *ctl_table ;
};
#line 64 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/netns/conntrack.h"
struct ct_pcpu {
   spinlock_t lock ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
   struct hlist_nulls_head tmpl ;
};
#line 72
struct ip_conntrack_stat;
#line 72
struct nf_ct_event_notifier;
#line 72
struct nf_exp_event_notifier;
#line 72 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/netns/conntrack.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *tstamp_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   struct ctl_table_header *helper_sysctl_header ;
   char *slabname ;
   unsigned int sysctl_log_invalid ;
   unsigned int sysctl_events_retry_timeout ;
   int sysctl_events ;
   int sysctl_acct ;
   int sysctl_auto_assign_helper ;
   bool auto_assign_helper_warned ;
   int sysctl_tstamp ;
   int sysctl_checksum ;
   unsigned int htable_size ;
   seqcount_t generation ;
   struct kmem_cache *nf_conntrack_cachep ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct ct_pcpu *pcpu_lists ;
   struct ip_conntrack_stat *stat ;
   struct nf_ct_event_notifier *nf_conntrack_event_cb ;
   struct nf_exp_event_notifier *nf_expect_event_cb ;
   struct nf_ip_net nf_ct_proto ;
   unsigned int labels_used ;
   u8 label_words ;
   struct hlist_head *nat_bysource ;
   unsigned int nat_htable_size ;
};
#line 111
struct nft_af_info;
#line 112 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/netns/conntrack.h"
struct netns_nftables {
   struct list_head af_info ;
   struct list_head commit_list ;
   struct nft_af_info *ipv4 ;
   struct nft_af_info *ipv6 ;
   struct nft_af_info *inet ;
   struct nft_af_info *arp ;
   struct nft_af_info *bridge ;
   u8 gencursor ;
   u8 genctr ;
};
#line 499 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/xfrm.h"
struct flow_cache_percpu {
   struct hlist_head *hash_table ;
   int hash_count ;
   u32 hash_rnd ;
   int hash_rnd_recalc ;
   struct tasklet_struct flush_tasklet ;
};
#line 16 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/flowcache.h"
struct flow_cache {
   u32 hash_shift ;
   struct flow_cache_percpu *percpu ;
   struct notifier_block hotcpu_notifier ;
   int low_watermark ;
   int high_watermark ;
   struct timer_list rnd_timer ;
};
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/flowcache.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
};
#line 17 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[6U] ;
   struct xfrm_policy_hash policy_bydst[6U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct sock *nlsk ;
   struct sock *nlsk_stash ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
   struct dst_ops xfrm4_dst_ops ;
   struct dst_ops xfrm6_dst_ops ;
   spinlock_t xfrm_state_lock ;
   rwlock_t xfrm_policy_lock ;
   struct mutex xfrm_cfg_mutex ;
   struct flow_cache flow_cache_global ;
   atomic_t flow_cache_genid ;
   struct list_head flow_cache_gc_list ;
   spinlock_t flow_cache_gc_lock ;
   struct work_struct flow_cache_gc_work ;
   struct work_struct flow_cache_flush_work ;
   struct mutex flow_flush_sem ;
};
#line 74
struct net_generic;
#line 75
struct netns_ipvs;
#line 76 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/netns/xfrm.h"
struct net {
   atomic_t passive ;
   atomic_t count ;
   spinlock_t rules_mod_lock ;
   struct list_head list ;
   struct list_head cleanup_list ;
   struct list_head exit_list ;
   struct user_namespace *user_ns ;
   unsigned int proc_inum ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct sock *rtnl ;
   struct sock *genl_sock ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   unsigned int dev_base_seq ;
   int ifindex ;
   unsigned int dev_unreg_count ;
   struct list_head rules_ops ;
   struct net_device *loopback_dev ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_ieee802154_lowpan ieee802154_lowpan ;
   struct netns_sctp sctp ;
   struct netns_dccp dccp ;
   struct netns_nf nf ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_nftables nft ;
   struct netns_nf_frag nf_frag ;
   struct sock *nfnl ;
   struct sock *nfnl_stash ;
   struct sk_buff_head wext_nlevents ;
   struct net_generic *gen ;
   struct netns_xfrm xfrm ;
   struct netns_ipvs *ipvs ;
   struct sock *diag_nlsk ;
   atomic_t fnhe_genid ;
};
#line 392 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/net_namespace.h"
struct dsa_chip_data {
   struct device *mii_bus ;
   int sw_addr ;
   char *port_names[12U] ;
   s8 *rtable ;
};
#line 46 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/dsa.h"
struct dsa_platform_data {
   struct device *netdev ;
   int nr_chips ;
   struct dsa_chip_data *chip ;
};
#line 61
struct dsa_switch;
#line 61 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/dsa.h"
struct dsa_switch_tree {
   struct dsa_platform_data *pd ;
   struct net_device *master_netdev ;
   __be16 tag_protocol ;
   s8 cpu_switch ;
   s8 cpu_port ;
   int link_poll_needed ;
   struct work_struct link_poll_work ;
   struct timer_list link_poll_timer ;
   struct dsa_switch *ds[4U] ;
};
#line 94
struct dsa_switch_driver;
#line 94
struct mii_bus;
#line 94 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/dsa.h"
struct dsa_switch {
   struct dsa_switch_tree *dst ;
   int index ;
   struct dsa_chip_data *pd ;
   struct dsa_switch_driver *drv ;
   struct mii_bus *master_mii_bus ;
   u32 dsa_port_mask ;
   u32 phys_port_mask ;
   struct mii_bus *slave_mii_bus ;
   struct net_device *ports[12U] ;
};
#line 146 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/dsa.h"
struct dsa_switch_driver {
   struct list_head list ;
   __be16 tag_protocol ;
   int priv_size ;
   char *(*probe)(struct mii_bus * , int  ) ;
   int (*setup)(struct dsa_switch * ) ;
   int (*set_addr)(struct dsa_switch * , u8 * ) ;
   int (*phy_read)(struct dsa_switch * , int  , int  ) ;
   int (*phy_write)(struct dsa_switch * , int  , int  , u16  ) ;
   void (*poll_link)(struct dsa_switch * ) ;
   void (*get_strings)(struct dsa_switch * , int  , uint8_t * ) ;
   void (*get_ethtool_stats)(struct dsa_switch * , int  , uint64_t * ) ;
   int (*get_sset_count)(struct dsa_switch * ) ;
};
#line 200 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/dsa.h"
struct ieee_ets {
   __u8 willing ;
   __u8 ets_cap ;
   __u8 cbs ;
   __u8 tc_tx_bw[8U] ;
   __u8 tc_rx_bw[8U] ;
   __u8 tc_tsa[8U] ;
   __u8 prio_tc[8U] ;
   __u8 tc_reco_bw[8U] ;
   __u8 tc_reco_tsa[8U] ;
   __u8 reco_prio_tc[8U] ;
};
#line 69 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/dcbnl.h"
struct ieee_maxrate {
   __u64 tc_maxrate[8U] ;
};
#line 80 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/dcbnl.h"
struct ieee_pfc {
   __u8 pfc_cap ;
   __u8 pfc_en ;
   __u8 mbc ;
   __u16 delay ;
   __u64 requests[8U] ;
   __u64 indications[8U] ;
};
#line 100 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/dcbnl.h"
struct cee_pg {
   __u8 willing ;
   __u8 error ;
   __u8 pg_en ;
   __u8 tcs_supported ;
   __u8 pg_bw[8U] ;
   __u8 prio_pg[8U] ;
};
#line 123 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/dcbnl.h"
struct cee_pfc {
   __u8 willing ;
   __u8 error ;
   __u8 pfc_en ;
   __u8 tcs_supported ;
};
#line 138 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/dcbnl.h"
struct dcb_app {
   __u8 selector ;
   __u8 priority ;
   __u16 protocol ;
};
#line 167 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/dcbnl.h"
struct dcb_peer_app_info {
   __u8 willing ;
   __u8 error ;
};
#line 40 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/dcbnl.h"
struct dcbnl_rtnl_ops {
   int (*ieee_getets)(struct net_device * , struct ieee_ets * ) ;
   int (*ieee_setets)(struct net_device * , struct ieee_ets * ) ;
   int (*ieee_getmaxrate)(struct net_device * , struct ieee_maxrate * ) ;
   int (*ieee_setmaxrate)(struct net_device * , struct ieee_maxrate * ) ;
   int (*ieee_getpfc)(struct net_device * , struct ieee_pfc * ) ;
   int (*ieee_setpfc)(struct net_device * , struct ieee_pfc * ) ;
   int (*ieee_getapp)(struct net_device * , struct dcb_app * ) ;
   int (*ieee_setapp)(struct net_device * , struct dcb_app * ) ;
   int (*ieee_delapp)(struct net_device * , struct dcb_app * ) ;
   int (*ieee_peer_getets)(struct net_device * , struct ieee_ets * ) ;
   int (*ieee_peer_getpfc)(struct net_device * , struct ieee_pfc * ) ;
   u8 (*getstate)(struct net_device * ) ;
   u8 (*setstate)(struct net_device * , u8  ) ;
   void (*getpermhwaddr)(struct net_device * , u8 * ) ;
   void (*setpgtccfgtx)(struct net_device * , int  , u8  , u8  , u8  , u8  ) ;
   void (*setpgbwgcfgtx)(struct net_device * , int  , u8  ) ;
   void (*setpgtccfgrx)(struct net_device * , int  , u8  , u8  , u8  , u8  ) ;
   void (*setpgbwgcfgrx)(struct net_device * , int  , u8  ) ;
   void (*getpgtccfgtx)(struct net_device * , int  , u8 * , u8 * , u8 * , u8 * ) ;
   void (*getpgbwgcfgtx)(struct net_device * , int  , u8 * ) ;
   void (*getpgtccfgrx)(struct net_device * , int  , u8 * , u8 * , u8 * , u8 * ) ;
   void (*getpgbwgcfgrx)(struct net_device * , int  , u8 * ) ;
   void (*setpfccfg)(struct net_device * , int  , u8  ) ;
   void (*getpfccfg)(struct net_device * , int  , u8 * ) ;
   u8 (*setall)(struct net_device * ) ;
   u8 (*getcap)(struct net_device * , int  , u8 * ) ;
   int (*getnumtcs)(struct net_device * , int  , u8 * ) ;
   int (*setnumtcs)(struct net_device * , int  , u8  ) ;
   u8 (*getpfcstate)(struct net_device * ) ;
   void (*setpfcstate)(struct net_device * , u8  ) ;
   void (*getbcncfg)(struct net_device * , int  , u32 * ) ;
   void (*setbcncfg)(struct net_device * , int  , u32  ) ;
   void (*getbcnrp)(struct net_device * , int  , u8 * ) ;
   void (*setbcnrp)(struct net_device * , int  , u8  ) ;
   u8 (*setapp)(struct net_device * , u8  , u16  , u8  ) ;
   u8 (*getapp)(struct net_device * , u8  , u16  ) ;
   u8 (*getfeatcfg)(struct net_device * , int  , u8 * ) ;
   u8 (*setfeatcfg)(struct net_device * , int  , u8  ) ;
   u8 (*getdcbx)(struct net_device * ) ;
   u8 (*setdcbx)(struct net_device * , u8  ) ;
   int (*peer_getappinfo)(struct net_device * , struct dcb_peer_app_info * , u16 * ) ;
   int (*peer_getapptable)(struct net_device * , struct dcb_app * ) ;
   int (*cee_peer_getpg)(struct net_device * , struct cee_pg * ) ;
   int (*cee_peer_getpfc)(struct net_device * , struct cee_pfc * ) ;
};
#line 102 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/dcbnl.h"
struct taskstats {
   __u16 version ;
   __u32 ac_exitcode ;
   __u8 ac_flag ;
   __u8 ac_nice ;
   __u64 cpu_count ;
   __u64 cpu_delay_total ;
   __u64 blkio_count ;
   __u64 blkio_delay_total ;
   __u64 swapin_count ;
   __u64 swapin_delay_total ;
   __u64 cpu_run_real_total ;
   __u64 cpu_run_virtual_total ;
   char ac_comm[32U] ;
   __u8 ac_sched ;
   __u8 ac_pad[3U] ;
   __u32 ac_uid ;
   __u32 ac_gid ;
   __u32 ac_pid ;
   __u32 ac_ppid ;
   __u32 ac_btime ;
   __u64 ac_etime ;
   __u64 ac_utime ;
   __u64 ac_stime ;
   __u64 ac_minflt ;
   __u64 ac_majflt ;
   __u64 coremem ;
   __u64 virtmem ;
   __u64 hiwater_rss ;
   __u64 hiwater_vm ;
   __u64 read_char ;
   __u64 write_char ;
   __u64 read_syscalls ;
   __u64 write_syscalls ;
   __u64 read_bytes ;
   __u64 write_bytes ;
   __u64 cancelled_write_bytes ;
   __u64 nvcsw ;
   __u64 nivcsw ;
   __u64 ac_utimescaled ;
   __u64 ac_stimescaled ;
   __u64 cpu_scaled_run_real_total ;
   __u64 freepages_count ;
   __u64 freepages_delay_total ;
};
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/cgroupstats.h"
struct percpu_ref;
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/percpu-refcount.h"
typedef void percpu_ref_func_t(struct percpu_ref * );
#line 55 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/percpu-refcount.h"
struct percpu_ref {
   atomic_t count ;
   unsigned int *pcpu_count ;
   percpu_ref_func_t *release ;
   percpu_ref_func_t *confirm_kill ;
   struct callback_head rcu ;
};
#line 173
struct cgroup_root;
#line 174
struct cgroup_subsys;
#line 175
struct cgroup;
#line 57 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/cgroup.h"
struct cgroup_subsys_state {
   struct cgroup *cgroup ;
   struct cgroup_subsys *ss ;
   struct percpu_ref refcnt ;
   struct cgroup_subsys_state *parent ;
   unsigned long flags ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};
#line 126 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/cgroup.h"
struct cgroup {
   unsigned long flags ;
   int id ;
   int nr_css ;
   atomic_t refcnt ;
   struct list_head sibling ;
   struct list_head children ;
   struct cgroup *parent ;
   struct kernfs_node *kn ;
   u64 serial_nr ;
   unsigned long subsys_mask ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct cgroup_root *root ;
   struct list_head cset_links ;
   struct list_head release_list ;
   struct list_head pidlists ;
   struct mutex pidlist_mutex ;
   struct cgroup_subsys_state dummy_css ;
   struct callback_head callback_head ;
   struct work_struct destroy_work ;
};
#line 218 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/cgroup.h"
struct cgroup_root {
   struct kernfs_root *kf_root ;
   int hierarchy_id ;
   struct cgroup cgrp ;
   atomic_t nr_cgrps ;
   struct list_head root_list ;
   unsigned long flags ;
   struct idr cgroup_idr ;
   char release_agent_path[4096U] ;
   char name[64U] ;
};
#line 309 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/cgroup.h"
struct css_set {
   atomic_t refcount ;
   struct hlist_node hlist ;
   struct list_head tasks ;
   struct list_head mg_tasks ;
   struct list_head cgrp_links ;
   struct cgroup_subsys_state *subsys[12U] ;
   struct list_head mg_preload_node ;
   struct list_head mg_node ;
   struct cgroup *mg_src_cgrp ;
   struct css_set *mg_dst_cset ;
   struct callback_head callback_head ;
};
#line 380 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/cgroup.h"
struct cftype {
   char name[64U] ;
   int private ;
   umode_t mode ;
   size_t max_write_len ;
   unsigned int flags ;
   struct cgroup_subsys *ss ;
   struct list_head node ;
   struct kernfs_ops *kf_ops ;
   u64 (*read_u64)(struct cgroup_subsys_state * , struct cftype * ) ;
   s64 (*read_s64)(struct cgroup_subsys_state * , struct cftype * ) ;
   int (*seq_show)(struct seq_file * , void * ) ;
   void *(*seq_start)(struct seq_file * , loff_t * ) ;
   void *(*seq_next)(struct seq_file * , void * , loff_t * ) ;
   void (*seq_stop)(struct seq_file * , void * ) ;
   int (*write_u64)(struct cgroup_subsys_state * , struct cftype * , u64  ) ;
   int (*write_s64)(struct cgroup_subsys_state * , struct cftype * , s64  ) ;
   int (*write_string)(struct cgroup_subsys_state * , struct cftype * , char * ) ;
   int (*trigger)(struct cgroup_subsys_state * , unsigned int  ) ;
   struct lock_class_key lockdep_key ;
};
#line 548
struct cgroup_taskset;
#line 556 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/cgroup.h"
struct cgroup_subsys {
   struct cgroup_subsys_state *(*css_alloc)(struct cgroup_subsys_state * ) ;
   int (*css_online)(struct cgroup_subsys_state * ) ;
   void (*css_offline)(struct cgroup_subsys_state * ) ;
   void (*css_free)(struct cgroup_subsys_state * ) ;
   int (*can_attach)(struct cgroup_subsys_state * , struct cgroup_taskset * ) ;
   void (*cancel_attach)(struct cgroup_subsys_state * , struct cgroup_taskset * ) ;
   void (*attach)(struct cgroup_subsys_state * , struct cgroup_taskset * ) ;
   void (*fork)(struct task_struct * ) ;
   void (*exit)(struct cgroup_subsys_state * , struct cgroup_subsys_state * , struct task_struct * ) ;
   void (*bind)(struct cgroup_subsys_state * ) ;
   int disabled ;
   int early_init ;
   bool broken_hierarchy ;
   bool warned_broken_hierarchy ;
   int id ;
   char const   *name ;
   struct cgroup_root *root ;
   struct list_head cfts ;
   struct cftype *base_cftypes ;
};
#line 853 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/cgroup.h"
struct netprio_map {
   struct callback_head rcu ;
   u32 priomap_len ;
   u32 priomap[] ;
};
#line 103 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/security.h"
struct xfrm_policy;
#line 104
struct xfrm_state;
#line 3161
struct mnt_namespace;
#line 3162
struct ipc_namespace;
#line 3163 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/security.h"
struct nsproxy {
   atomic_t count ;
   struct uts_namespace *uts_ns ;
   struct ipc_namespace *ipc_ns ;
   struct mnt_namespace *mnt_ns ;
   struct pid_namespace *pid_ns_for_children ;
   struct net *net_ns ;
};
#line 41 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/netlink.h"
struct nlmsghdr {
   __u32 nlmsg_len ;
   __u16 nlmsg_type ;
   __u16 nlmsg_flags ;
   __u32 nlmsg_seq ;
   __u32 nlmsg_pid ;
};
#line 145 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/netlink.h"
struct nlattr {
   __u16 nla_len ;
   __u16 nla_type ;
};
#line 103 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/netlink.h"
struct netlink_callback {
   struct sk_buff *skb ;
   struct nlmsghdr  const  *nlh ;
   int (*dump)(struct sk_buff * , struct netlink_callback * ) ;
   int (*done)(struct netlink_callback * ) ;
   void *data ;
   struct module *module ;
   u16 family ;
   u16 min_dump_alloc ;
   unsigned int prev_seq ;
   unsigned int seq ;
   long args[6U] ;
};
#line 179 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/netlink.h"
struct ndmsg {
   __u8 ndm_family ;
   __u8 ndm_pad1 ;
   __u16 ndm_pad2 ;
   __s32 ndm_ifindex ;
   __u16 ndm_state ;
   __u8 ndm_flags ;
   __u8 ndm_type ;
};
#line 39 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/if_link.h"
struct rtnl_link_stats64 {
   __u64 rx_packets ;
   __u64 tx_packets ;
   __u64 rx_bytes ;
   __u64 tx_bytes ;
   __u64 rx_errors ;
   __u64 tx_errors ;
   __u64 rx_dropped ;
   __u64 tx_dropped ;
   __u64 multicast ;
   __u64 collisions ;
   __u64 rx_length_errors ;
   __u64 rx_over_errors ;
   __u64 rx_crc_errors ;
   __u64 rx_frame_errors ;
   __u64 rx_fifo_errors ;
   __u64 rx_missed_errors ;
   __u64 tx_aborted_errors ;
   __u64 tx_carrier_errors ;
   __u64 tx_fifo_errors ;
   __u64 tx_heartbeat_errors ;
   __u64 tx_window_errors ;
   __u64 rx_compressed ;
   __u64 tx_compressed ;
};
#line 537 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/if_link.h"
struct ifla_vf_info {
   __u32 vf ;
   __u8 mac[32U] ;
   __u32 vlan ;
   __u32 qos ;
   __u32 tx_rate ;
   __u32 spoofchk ;
   __u32 linkstate ;
};
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/if_link.h"
struct netpoll_info;
#line 28
struct phy_device;
#line 29
struct wireless_dev;
#line 64 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/netdevice.h"
enum netdev_tx {
    __NETDEV_TX_MIN = (-0x7FFFFFFF-1),
    NETDEV_TX_OK = 0,
    NETDEV_TX_BUSY = 16,
    NETDEV_TX_LOCKED = 32
} ;
#line 109 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/netdevice.h"
typedef enum netdev_tx netdev_tx_t;
#line 128 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/netdevice.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};
#line 189
struct neigh_parms;
#line 210 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};
#line 215 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/netdevice.h"
struct hh_cache {
   u16 hh_len ;
   u16 __pad ;
   seqlock_t hh_lock ;
   unsigned long hh_data[16U] ;
};
#line 244 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff * , struct net_device * , unsigned short  , void const   * ,
                 void const   * , unsigned int  ) ;
   int (*parse)(struct sk_buff  const  * , unsigned char * ) ;
   int (*rebuild)(struct sk_buff * ) ;
   int (*cache)(struct neighbour  const  * , struct hh_cache * , __be16  ) ;
   void (*cache_update)(struct hh_cache * , struct net_device  const  * , unsigned char const   * ) ;
};
#line 295 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/netdevice.h"
struct napi_struct {
   struct list_head poll_list ;
   unsigned long state ;
   int weight ;
   unsigned int gro_count ;
   int (*poll)(struct napi_struct * , int  ) ;
   spinlock_t poll_lock ;
   int poll_owner ;
   struct net_device *dev ;
   struct sk_buff *gro_list ;
   struct sk_buff *skb ;
   struct list_head dev_list ;
   struct hlist_node napi_hash_node ;
   unsigned int napi_id ;
};
#line 339
enum rx_handler_result {
    RX_HANDLER_CONSUMED = 0,
    RX_HANDLER_ANOTHER = 1,
    RX_HANDLER_EXACT = 2,
    RX_HANDLER_PASS = 3
} ;
#line 387 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/netdevice.h"
typedef enum rx_handler_result rx_handler_result_t;
#line 388 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/netdevice.h"
typedef rx_handler_result_t rx_handler_func_t(struct sk_buff ** );
#line 525
struct Qdisc;
#line 525 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   struct Qdisc *qdisc_sleeping ;
   struct kobject kobj ;
   int numa_node ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long trans_timeout ;
   unsigned long state ;
   struct dql dql ;
};
#line 594 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/netdevice.h"
struct rps_map {
   unsigned int len ;
   struct callback_head rcu ;
   u16 cpus[0U] ;
};
#line 606 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/netdevice.h"
struct rps_dev_flow {
   u16 cpu ;
   u16 filter ;
   unsigned int last_qtail ;
};
#line 618 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/netdevice.h"
struct rps_dev_flow_table {
   unsigned int mask ;
   struct callback_head rcu ;
   struct rps_dev_flow flows[0U] ;
};
#line 669 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/netdevice.h"
struct netdev_rx_queue {
   struct rps_map *rps_map ;
   struct rps_dev_flow_table *rps_flow_table ;
   struct kobject kobj ;
   struct net_device *dev ;
};
#line 692 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/netdevice.h"
struct xps_map {
   unsigned int len ;
   unsigned int alloc_len ;
   struct callback_head rcu ;
   u16 queues[0U] ;
};
#line 705 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/netdevice.h"
struct xps_dev_maps {
   struct callback_head rcu ;
   struct xps_map *cpu_map[0U] ;
};
#line 716 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/netdevice.h"
struct netdev_tc_txq {
   u16 count ;
   u16 offset ;
};
#line 727 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/netdevice.h"
struct netdev_fcoe_hbainfo {
   char manufacturer[64U] ;
   char serial_number[64U] ;
   char hardware_version[64U] ;
   char driver_version[64U] ;
   char optionrom_version[64U] ;
   char firmware_version[64U] ;
   char model[256U] ;
   char model_description[256U] ;
};
#line 743 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/netdevice.h"
struct netdev_phys_port_id {
   unsigned char id[32U] ;
   unsigned char id_len ;
};
#line 756 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device * ) ;
   void (*ndo_uninit)(struct net_device * ) ;
   int (*ndo_open)(struct net_device * ) ;
   int (*ndo_stop)(struct net_device * ) ;
   netdev_tx_t (*ndo_start_xmit)(struct sk_buff * , struct net_device * ) ;
   u16 (*ndo_select_queue)(struct net_device * , struct sk_buff * , void * , u16 (*)(struct net_device * ,
                                                                                     struct sk_buff * ) ) ;
   void (*ndo_change_rx_flags)(struct net_device * , int  ) ;
   void (*ndo_set_rx_mode)(struct net_device * ) ;
   int (*ndo_set_mac_address)(struct net_device * , void * ) ;
   int (*ndo_validate_addr)(struct net_device * ) ;
   int (*ndo_do_ioctl)(struct net_device * , struct ifreq * , int  ) ;
   int (*ndo_set_config)(struct net_device * , struct ifmap * ) ;
   int (*ndo_change_mtu)(struct net_device * , int  ) ;
   int (*ndo_neigh_setup)(struct net_device * , struct neigh_parms * ) ;
   void (*ndo_tx_timeout)(struct net_device * ) ;
   struct rtnl_link_stats64 *(*ndo_get_stats64)(struct net_device * , struct rtnl_link_stats64 * ) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device * ) ;
   int (*ndo_vlan_rx_add_vid)(struct net_device * , __be16  , u16  ) ;
   int (*ndo_vlan_rx_kill_vid)(struct net_device * , __be16  , u16  ) ;
   void (*ndo_poll_controller)(struct net_device * ) ;
   int (*ndo_netpoll_setup)(struct net_device * , struct netpoll_info * ) ;
   void (*ndo_netpoll_cleanup)(struct net_device * ) ;
   int (*ndo_busy_poll)(struct napi_struct * ) ;
   int (*ndo_set_vf_mac)(struct net_device * , int  , u8 * ) ;
   int (*ndo_set_vf_vlan)(struct net_device * , int  , u16  , u8  ) ;
   int (*ndo_set_vf_tx_rate)(struct net_device * , int  , int  ) ;
   int (*ndo_set_vf_spoofchk)(struct net_device * , int  , bool  ) ;
   int (*ndo_get_vf_config)(struct net_device * , int  , struct ifla_vf_info * ) ;
   int (*ndo_set_vf_link_state)(struct net_device * , int  , int  ) ;
   int (*ndo_set_vf_port)(struct net_device * , int  , struct nlattr ** ) ;
   int (*ndo_get_vf_port)(struct net_device * , int  , struct sk_buff * ) ;
   int (*ndo_setup_tc)(struct net_device * , u8  ) ;
   int (*ndo_fcoe_enable)(struct net_device * ) ;
   int (*ndo_fcoe_disable)(struct net_device * ) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device * , u16  , struct scatterlist * , unsigned int  ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device * , u16  ) ;
   int (*ndo_fcoe_ddp_target)(struct net_device * , u16  , struct scatterlist * ,
                              unsigned int  ) ;
   int (*ndo_fcoe_get_hbainfo)(struct net_device * , struct netdev_fcoe_hbainfo * ) ;
   int (*ndo_fcoe_get_wwn)(struct net_device * , u64 * , int  ) ;
   int (*ndo_rx_flow_steer)(struct net_device * , struct sk_buff  const  * , u16  ,
                            u32  ) ;
   int (*ndo_add_slave)(struct net_device * , struct net_device * ) ;
   int (*ndo_del_slave)(struct net_device * , struct net_device * ) ;
   netdev_features_t (*ndo_fix_features)(struct net_device * , netdev_features_t  ) ;
   int (*ndo_set_features)(struct net_device * , netdev_features_t  ) ;
   int (*ndo_neigh_construct)(struct neighbour * ) ;
   void (*ndo_neigh_destroy)(struct neighbour * ) ;
   int (*ndo_fdb_add)(struct ndmsg * , struct nlattr ** , struct net_device * , unsigned char const   * ,
                      u16  ) ;
   int (*ndo_fdb_del)(struct ndmsg * , struct nlattr ** , struct net_device * , unsigned char const   * ) ;
   int (*ndo_fdb_dump)(struct sk_buff * , struct netlink_callback * , struct net_device * ,
                       int  ) ;
   int (*ndo_bridge_setlink)(struct net_device * , struct nlmsghdr * ) ;
   int (*ndo_bridge_getlink)(struct sk_buff * , u32  , u32  , struct net_device * ,
                             u32  ) ;
   int (*ndo_bridge_dellink)(struct net_device * , struct nlmsghdr * ) ;
   int (*ndo_change_carrier)(struct net_device * , bool  ) ;
   int (*ndo_get_phys_port_id)(struct net_device * , struct netdev_phys_port_id * ) ;
   void (*ndo_add_vxlan_port)(struct net_device * , sa_family_t  , __be16  ) ;
   void (*ndo_del_vxlan_port)(struct net_device * , sa_family_t  , __be16  ) ;
   void *(*ndo_dfwd_add_station)(struct net_device * , struct net_device * ) ;
   void (*ndo_dfwd_del_station)(struct net_device * , void * ) ;
   netdev_tx_t (*ndo_dfwd_start_xmit)(struct sk_buff * , struct net_device * , void * ) ;
   int (*ndo_get_lock_subclass)(struct net_device * ) ;
};
#line 1174
enum ldv_29108 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
} ;
#line 1183
enum ldv_29109 {
    RTNL_LINK_INITIALIZED = 0,
    RTNL_LINK_INITIALIZING = 1
} ;
#line 1188 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/netdevice.h"
struct __anonstruct_adj_list_243 {
   struct list_head upper ;
   struct list_head lower ;
};
#line 1188 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/netdevice.h"
struct __anonstruct_all_adj_list_244 {
   struct list_head upper ;
   struct list_head lower ;
};
#line 1188
struct iw_handler_def;
#line 1188
struct iw_public_data;
#line 1188
struct forwarding_accel_ops;
#line 1188
struct vlan_info;
#line 1188
struct tipc_bearer;
#line 1188
struct in_device;
#line 1188
struct dn_dev;
#line 1188
struct inet6_dev;
#line 1188
struct cpu_rmap;
#line 1188
struct pcpu_lstats;
#line 1188
struct pcpu_sw_netstats;
#line 1188
struct pcpu_dstats;
#line 1188
struct pcpu_vstats;
#line 1188 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/netdevice.h"
union __anonunion____missing_field_name_245 {
   void *ml_priv ;
   struct pcpu_lstats *lstats ;
   struct pcpu_sw_netstats *tstats ;
   struct pcpu_dstats *dstats ;
   struct pcpu_vstats *vstats ;
};
#line 1188
struct garp_port;
#line 1188
struct mrp_port;
#line 1188
struct rtnl_link_ops;
#line 1188 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   int irq ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   struct list_head unreg_list ;
   struct list_head close_list ;
   struct __anonstruct_adj_list_243 adj_list ;
   struct __anonstruct_all_adj_list_244 all_adj_list ;
   netdev_features_t features ;
   netdev_features_t hw_features ;
   netdev_features_t wanted_features ;
   netdev_features_t vlan_features ;
   netdev_features_t hw_enc_features ;
   netdev_features_t mpls_features ;
   int ifindex ;
   int iflink ;
   struct net_device_stats stats ;
   atomic_long_t rx_dropped ;
   atomic_long_t tx_dropped ;
   atomic_t carrier_changes ;
   struct iw_handler_def  const  *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops  const  *netdev_ops ;
   struct ethtool_ops  const  *ethtool_ops ;
   struct forwarding_accel_ops  const  *fwd_ops ;
   struct header_ops  const  *header_ops ;
   unsigned int flags ;
   unsigned int priv_flags ;
   unsigned short gflags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_assign_type ;
   unsigned char addr_len ;
   unsigned short neigh_priv_len ;
   unsigned short dev_id ;
   unsigned short dev_port ;
   spinlock_t addr_list_lock ;
   struct netdev_hw_addr_list uc ;
   struct netdev_hw_addr_list mc ;
   struct netdev_hw_addr_list dev_addrs ;
   struct kset *queues_kset ;
   bool uc_promisc ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   struct vlan_info *vlan_info ;
   struct dsa_switch_tree *dsa_ptr ;
   struct tipc_bearer *tipc_ptr ;
   void *atalk_ptr ;
   struct in_device *ip_ptr ;
   struct dn_dev *dn_ptr ;
   struct inet6_dev *ip6_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_rx_queue *_rx ;
   unsigned int num_rx_queues ;
   unsigned int real_num_rx_queues ;
   rx_handler_func_t *rx_handler ;
   void *rx_handler_data ;
   struct netdev_queue *ingress_queue ;
   unsigned char broadcast[32U] ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   struct Qdisc *qdisc ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   struct xps_dev_maps *xps_maps ;
   struct cpu_rmap *rx_cpu_rmap ;
   unsigned long trans_start ;
   int watchdog_timeo ;
   struct timer_list watchdog_timer ;
   int *pcpu_refcnt ;
   struct list_head todo_list ;
   struct hlist_node index_hlist ;
   struct list_head link_watch_list ;
   enum ldv_29108 reg_state : 8 ;
   bool dismantle ;
   enum ldv_29109 rtnl_link_state : 16 ;
   void (*destructor)(struct net_device * ) ;
   struct netpoll_info *npinfo ;
   struct net *nd_net ;
   union __anonunion____missing_field_name_245 __annonCompField79 ;
   struct garp_port *garp_port ;
   struct mrp_port *mrp_port ;
   struct device dev ;
   struct attribute_group  const  *sysfs_groups[4U] ;
   struct attribute_group  const  *sysfs_rx_queue_group ;
   struct rtnl_link_ops  const  *rtnl_link_ops ;
   unsigned int gso_max_size ;
   u16 gso_max_segs ;
   struct dcbnl_rtnl_ops  const  *dcbnl_ops ;
   u8 num_tc ;
   struct netdev_tc_txq tc_to_txq[16U] ;
   u8 prio_tc_map[16U] ;
   unsigned int fcoe_ddp_xid ;
   struct netprio_map *priomap ;
   struct phy_device *phydev ;
   struct lock_class_key *qdisc_tx_busylock ;
   int group ;
   struct pm_qos_request pm_qos_req ;
};
#line 1807 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/netdevice.h"
struct pcpu_sw_netstats {
   u64 rx_packets ;
   u64 rx_bytes ;
   u64 tx_packets ;
   u64 tx_bytes ;
   struct u64_stats_sync syncp ;
};
#line 612 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/memcontrol.h"
struct res_counter {
   unsigned long long usage ;
   unsigned long long max_usage ;
   unsigned long long limit ;
   unsigned long long soft_limit ;
   unsigned long long failcnt ;
   spinlock_t lock ;
   struct res_counter *parent ;
};
#line 222 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/res_counter.h"
struct kioctx;
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/aio.h"
typedef int kiocb_cancel_fn(struct kiocb * );
#line 31 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/aio.h"
union __anonunion_ki_obj_246 {
   void *user ;
   struct task_struct *tsk ;
};
#line 31
struct eventfd_ctx;
#line 31 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/aio.h"
struct kiocb {
   struct file *ki_filp ;
   struct kioctx *ki_ctx ;
   kiocb_cancel_fn *ki_cancel ;
   void *private ;
   union __anonunion_ki_obj_246 ki_obj ;
   __u64 ki_user_data ;
   loff_t ki_pos ;
   size_t ki_nbytes ;
   struct list_head ki_list ;
   struct eventfd_ctx *ki_eventfd ;
};
#line 100 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/aio.h"
struct sock_filter {
   __u16 code ;
   __u8 jt ;
   __u8 jf ;
   __u32 k ;
};
#line 34 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/filter.h"
struct sock_filter_int {
   __u8 code ;
   __u8 a_reg : 4 ;
   __u8 x_reg : 4 ;
   __s16 off ;
   __s32 imm ;
};
#line 65 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/filter.h"
struct sock_fprog_kern {
   u16 len ;
   struct sock_filter *filter ;
};
#line 71 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/filter.h"
union __anonunion____missing_field_name_247 {
   struct sock_filter insns[0U] ;
   struct sock_filter_int insnsi[0U] ;
   struct work_struct work ;
};
#line 71 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/filter.h"
struct sk_filter {
   atomic_t refcnt ;
   u32 jited : 1 ;
   u32 len : 31 ;
   struct sock_fprog_kern *orig_prog ;
   struct callback_head rcu ;
   unsigned int (*bpf_func)(struct sk_buff  const  * , struct sock_filter_int  const  * ) ;
   union __anonunion____missing_field_name_247 __annonCompField80 ;
};
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/poll.h"
struct poll_table_struct {
   void (*_qproc)(struct file * , wait_queue_head_t * , struct poll_table_struct * ) ;
   unsigned long _key ;
};
#line 113 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/rtnetlink.h"
struct nla_policy {
   u16 type ;
   u16 len ;
};
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/rtnetlink.h"
struct rtnl_link_ops {
   struct list_head list ;
   char const   *kind ;
   size_t priv_size ;
   void (*setup)(struct net_device * ) ;
   int maxtype ;
   struct nla_policy  const  *policy ;
   int (*validate)(struct nlattr ** , struct nlattr ** ) ;
   int (*newlink)(struct net * , struct net_device * , struct nlattr ** , struct nlattr ** ) ;
   int (*changelink)(struct net_device * , struct nlattr ** , struct nlattr ** ) ;
   void (*dellink)(struct net_device * , struct list_head * ) ;
   size_t (*get_size)(struct net_device  const  * ) ;
   int (*fill_info)(struct sk_buff * , struct net_device  const  * ) ;
   size_t (*get_xstats_size)(struct net_device  const  * ) ;
   int (*fill_xstats)(struct sk_buff * , struct net_device  const  * ) ;
   unsigned int (*get_num_tx_queues)(void) ;
   unsigned int (*get_num_rx_queues)(void) ;
   int slave_maxtype ;
   struct nla_policy  const  *slave_policy ;
   int (*slave_validate)(struct nlattr ** , struct nlattr ** ) ;
   int (*slave_changelink)(struct net_device * , struct net_device * , struct nlattr ** ,
                           struct nlattr ** ) ;
   size_t (*get_slave_size)(struct net_device  const  * , struct net_device  const  * ) ;
   int (*fill_slave_info)(struct sk_buff * , struct net_device  const  * , struct net_device  const  * ) ;
};
#line 167
struct neigh_table;
#line 167 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/rtnetlink.h"
struct neigh_parms {
   struct net *net ;
   struct net_device *dev ;
   struct neigh_parms *next ;
   int (*neigh_setup)(struct neighbour * ) ;
   void (*neigh_cleanup)(struct neighbour * ) ;
   struct neigh_table *tbl ;
   void *sysctl_table ;
   int dead ;
   atomic_t refcnt ;
   struct callback_head callback_head ;
   int reachable_time ;
   int data[12U] ;
   unsigned long data_state[1U] ;
};
#line 111 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/neighbour.h"
struct neigh_statistics {
   unsigned long allocs ;
   unsigned long destroys ;
   unsigned long hash_grows ;
   unsigned long res_failed ;
   unsigned long lookups ;
   unsigned long hits ;
   unsigned long rcv_probes_mcast ;
   unsigned long rcv_probes_ucast ;
   unsigned long periodic_gc_runs ;
   unsigned long forced_gc_runs ;
   unsigned long unres_discards ;
};
#line 130
struct neigh_ops;
#line 130 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/neighbour.h"
struct neighbour {
   struct neighbour *next ;
   struct neigh_table *tbl ;
   struct neigh_parms *parms ;
   unsigned long confirmed ;
   unsigned long updated ;
   rwlock_t lock ;
   atomic_t refcnt ;
   struct sk_buff_head arp_queue ;
   unsigned int arp_queue_len_bytes ;
   struct timer_list timer ;
   unsigned long used ;
   atomic_t probes ;
   __u8 flags ;
   __u8 nud_state ;
   __u8 type ;
   __u8 dead ;
   seqlock_t ha_lock ;
   unsigned char ha[32U] ;
   struct hh_cache hh ;
   int (*output)(struct neighbour * , struct sk_buff * ) ;
   struct neigh_ops  const  *ops ;
   struct callback_head rcu ;
   struct net_device *dev ;
   u8 primary_key[0U] ;
};
#line 159 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/neighbour.h"
struct neigh_ops {
   int family ;
   void (*solicit)(struct neighbour * , struct sk_buff * ) ;
   void (*error_report)(struct neighbour * , struct sk_buff * ) ;
   int (*output)(struct neighbour * , struct sk_buff * ) ;
   int (*connected_output)(struct neighbour * , struct sk_buff * ) ;
};
#line 167 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/neighbour.h"
struct pneigh_entry {
   struct pneigh_entry *next ;
   struct net *net ;
   struct net_device *dev ;
   u8 flags ;
   u8 key[0U] ;
};
#line 177 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/neighbour.h"
struct neigh_hash_table {
   struct neighbour **hash_buckets ;
   unsigned int hash_shift ;
   __u32 hash_rnd[4U] ;
   struct callback_head rcu ;
};
#line 190 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/neighbour.h"
struct neigh_table {
   struct neigh_table *next ;
   int family ;
   int entry_size ;
   int key_len ;
   __u32 (*hash)(void const   * , struct net_device  const  * , __u32 * ) ;
   int (*constructor)(struct neighbour * ) ;
   int (*pconstructor)(struct pneigh_entry * ) ;
   void (*pdestructor)(struct pneigh_entry * ) ;
   void (*proxy_redo)(struct sk_buff * ) ;
   char *id ;
   struct neigh_parms parms ;
   int gc_interval ;
   int gc_thresh1 ;
   int gc_thresh2 ;
   int gc_thresh3 ;
   unsigned long last_flush ;
   struct delayed_work gc_work ;
   struct timer_list proxy_timer ;
   struct sk_buff_head proxy_queue ;
   atomic_t entries ;
   rwlock_t lock ;
   unsigned long last_rand ;
   struct neigh_statistics *stats ;
   struct neigh_hash_table *nht ;
   struct pneigh_entry **phash_buckets ;
};
#line 462
struct dn_route;
#line 462 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/neighbour.h"
union __anonunion____missing_field_name_252 {
   struct dst_entry *next ;
   struct rtable *rt_next ;
   struct rt6_info *rt6_next ;
   struct dn_route *dn_next ;
};
#line 462 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/neighbour.h"
struct dst_entry {
   struct callback_head callback_head ;
   struct dst_entry *child ;
   struct net_device *dev ;
   struct dst_ops *ops ;
   unsigned long _metrics ;
   unsigned long expires ;
   struct dst_entry *path ;
   struct dst_entry *from ;
   struct xfrm_state *xfrm ;
   int (*input)(struct sk_buff * ) ;
   int (*output)(struct sock * , struct sk_buff * ) ;
   unsigned short flags ;
   unsigned short pending_confirm ;
   short error ;
   short obsolete ;
   unsigned short header_len ;
   unsigned short trailer_len ;
   __u32 tclassid ;
   long __pad_to_align_refcnt[2U] ;
   atomic_t __refcnt ;
   int __use ;
   unsigned long lastuse ;
   union __anonunion____missing_field_name_252 __annonCompField81 ;
};
#line 123 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/sock.h"
struct __anonstruct_socket_lock_t_253 {
   spinlock_t slock ;
   int owned ;
   wait_queue_head_t wq ;
   struct lockdep_map dep_map ;
};
#line 123 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/sock.h"
typedef struct __anonstruct_socket_lock_t_253 socket_lock_t;
#line 123
struct proto;
#line 129 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/sock.h"
typedef __u32 __portpair;
#line 130 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/sock.h"
typedef __u64 __addrpair;
#line 131 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/sock.h"
struct __anonstruct____missing_field_name_255 {
   __be32 skc_daddr ;
   __be32 skc_rcv_saddr ;
};
#line 131 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/sock.h"
union __anonunion____missing_field_name_254 {
   __addrpair skc_addrpair ;
   struct __anonstruct____missing_field_name_255 __annonCompField82 ;
};
#line 131 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/sock.h"
union __anonunion____missing_field_name_256 {
   unsigned int skc_hash ;
   __u16 skc_u16hashes[2U] ;
};
#line 131 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/sock.h"
struct __anonstruct____missing_field_name_258 {
   __be16 skc_dport ;
   __u16 skc_num ;
};
#line 131 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/sock.h"
union __anonunion____missing_field_name_257 {
   __portpair skc_portpair ;
   struct __anonstruct____missing_field_name_258 __annonCompField85 ;
};
#line 131 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/sock.h"
union __anonunion____missing_field_name_259 {
   struct hlist_node skc_bind_node ;
   struct hlist_nulls_node skc_portaddr_node ;
};
#line 131 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/sock.h"
union __anonunion____missing_field_name_260 {
   struct hlist_node skc_node ;
   struct hlist_nulls_node skc_nulls_node ;
};
#line 131 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/sock.h"
struct sock_common {
   union __anonunion____missing_field_name_254 __annonCompField83 ;
   union __anonunion____missing_field_name_256 __annonCompField84 ;
   union __anonunion____missing_field_name_257 __annonCompField86 ;
   unsigned short skc_family ;
   unsigned char volatile   skc_state ;
   unsigned char skc_reuse : 4 ;
   unsigned char skc_reuseport : 4 ;
   int skc_bound_dev_if ;
   union __anonunion____missing_field_name_259 __annonCompField87 ;
   struct proto *skc_prot ;
   struct net *skc_net ;
   struct in6_addr skc_v6_daddr ;
   struct in6_addr skc_v6_rcv_saddr ;
   int skc_dontcopy_begin[0U] ;
   union __anonunion____missing_field_name_260 __annonCompField88 ;
   int skc_tx_queue_mapping ;
   atomic_t skc_refcnt ;
   int skc_dontcopy_end[0U] ;
};
#line 216
struct cg_proto;
#line 217 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/sock.h"
struct __anonstruct_sk_backlog_261 {
   atomic_t rmem_alloc ;
   int len ;
   struct sk_buff *head ;
   struct sk_buff *tail ;
};
#line 217 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/sock.h"
struct sock {
   struct sock_common __sk_common ;
   socket_lock_t sk_lock ;
   struct sk_buff_head sk_receive_queue ;
   struct __anonstruct_sk_backlog_261 sk_backlog ;
   int sk_forward_alloc ;
   __u32 sk_rxhash ;
   unsigned int sk_napi_id ;
   unsigned int sk_ll_usec ;
   atomic_t sk_drops ;
   int sk_rcvbuf ;
   struct sk_filter *sk_filter ;
   struct socket_wq *sk_wq ;
   struct xfrm_policy *sk_policy[2U] ;
   unsigned long sk_flags ;
   struct dst_entry *sk_rx_dst ;
   struct dst_entry *sk_dst_cache ;
   spinlock_t sk_dst_lock ;
   atomic_t sk_wmem_alloc ;
   atomic_t sk_omem_alloc ;
   int sk_sndbuf ;
   struct sk_buff_head sk_write_queue ;
   unsigned int sk_shutdown : 2 ;
   unsigned int sk_no_check : 2 ;
   unsigned int sk_userlocks : 4 ;
   unsigned int sk_protocol : 8 ;
   unsigned int sk_type : 16 ;
   int sk_wmem_queued ;
   gfp_t sk_allocation ;
   u32 sk_pacing_rate ;
   u32 sk_max_pacing_rate ;
   netdev_features_t sk_route_caps ;
   netdev_features_t sk_route_nocaps ;
   int sk_gso_type ;
   unsigned int sk_gso_max_size ;
   u16 sk_gso_max_segs ;
   int sk_rcvlowat ;
   unsigned long sk_lingertime ;
   struct sk_buff_head sk_error_queue ;
   struct proto *sk_prot_creator ;
   rwlock_t sk_callback_lock ;
   int sk_err ;
   int sk_err_soft ;
   unsigned short sk_ack_backlog ;
   unsigned short sk_max_ack_backlog ;
   __u32 sk_priority ;
   __u32 sk_cgrp_prioidx ;
   struct pid *sk_peer_pid ;
   struct cred  const  *sk_peer_cred ;
   long sk_rcvtimeo ;
   long sk_sndtimeo ;
   void *sk_protinfo ;
   struct timer_list sk_timer ;
   ktime_t sk_stamp ;
   struct socket *sk_socket ;
   void *sk_user_data ;
   struct page_frag sk_frag ;
   struct sk_buff *sk_send_head ;
   __s32 sk_peek_off ;
   int sk_write_pending ;
   void *sk_security ;
   __u32 sk_mark ;
   u32 sk_classid ;
   struct cg_proto *sk_cgrp ;
   void (*sk_state_change)(struct sock * ) ;
   void (*sk_data_ready)(struct sock * ) ;
   void (*sk_write_space)(struct sock * ) ;
   void (*sk_error_report)(struct sock * ) ;
   int (*sk_backlog_rcv)(struct sock * , struct sk_buff * ) ;
   void (*sk_destruct)(struct sock * ) ;
};
#line 901
struct request_sock_ops;
#line 902
struct timewait_sock_ops;
#line 903
struct inet_hashinfo;
#line 904
struct raw_hashinfo;
#line 919
struct udp_table;
#line 919 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/sock.h"
union __anonunion_h_262 {
   struct inet_hashinfo *hashinfo ;
   struct udp_table *udp_table ;
   struct raw_hashinfo *raw_hash ;
};
#line 919 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/sock.h"
struct proto {
   void (*close)(struct sock * , long  ) ;
   int (*connect)(struct sock * , struct sockaddr * , int  ) ;
   int (*disconnect)(struct sock * , int  ) ;
   struct sock *(*accept)(struct sock * , int  , int * ) ;
   int (*ioctl)(struct sock * , int  , unsigned long  ) ;
   int (*init)(struct sock * ) ;
   void (*destroy)(struct sock * ) ;
   void (*shutdown)(struct sock * , int  ) ;
   int (*setsockopt)(struct sock * , int  , int  , char * , unsigned int  ) ;
   int (*getsockopt)(struct sock * , int  , int  , char * , int * ) ;
   int (*compat_setsockopt)(struct sock * , int  , int  , char * , unsigned int  ) ;
   int (*compat_getsockopt)(struct sock * , int  , int  , char * , int * ) ;
   int (*compat_ioctl)(struct sock * , unsigned int  , unsigned long  ) ;
   int (*sendmsg)(struct kiocb * , struct sock * , struct msghdr * , size_t  ) ;
   int (*recvmsg)(struct kiocb * , struct sock * , struct msghdr * , size_t  , int  ,
                  int  , int * ) ;
   int (*sendpage)(struct sock * , struct page * , int  , size_t  , int  ) ;
   int (*bind)(struct sock * , struct sockaddr * , int  ) ;
   int (*backlog_rcv)(struct sock * , struct sk_buff * ) ;
   void (*release_cb)(struct sock * ) ;
   void (*mtu_reduced)(struct sock * ) ;
   void (*hash)(struct sock * ) ;
   void (*unhash)(struct sock * ) ;
   void (*rehash)(struct sock * ) ;
   int (*get_port)(struct sock * , unsigned short  ) ;
   void (*clear_sk)(struct sock * , int  ) ;
   unsigned int inuse_idx ;
   bool (*stream_memory_free)(struct sock  const  * ) ;
   void (*enter_memory_pressure)(struct sock * ) ;
   atomic_long_t *memory_allocated ;
   struct percpu_counter *sockets_allocated ;
   int *memory_pressure ;
   long *sysctl_mem ;
   int *sysctl_wmem ;
   int *sysctl_rmem ;
   int max_header ;
   bool no_autobind ;
   struct kmem_cache *slab ;
   unsigned int obj_size ;
   int slab_flags ;
   struct percpu_counter *orphan_count ;
   struct request_sock_ops *rsk_prot ;
   struct timewait_sock_ops *twsk_prot ;
   union __anonunion_h_262 h ;
   struct module *owner ;
   char name[32U] ;
   struct list_head node ;
   int (*init_cgroup)(struct mem_cgroup * , struct cgroup_subsys * ) ;
   void (*destroy_cgroup)(struct mem_cgroup * ) ;
   struct cg_proto *(*proto_cgroup)(struct mem_cgroup * ) ;
};
#line 1044 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/sock.h"
struct cg_proto {
   struct res_counter memory_allocated ;
   struct percpu_counter sockets_allocated ;
   int memory_pressure ;
   long sysctl_mem[3U] ;
   unsigned long flags ;
   struct mem_cgroup *memcg ;
};
#line 96 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/connector.h"
struct w1_mst {
   __u32 id ;
   __u32 res ;
};
#line 63 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_netlink.h"
union __anonunion_id_263 {
   __u8 id[8U] ;
   struct w1_mst mst ;
};
#line 63 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_netlink.h"
struct w1_netlink_msg {
   __u8 type ;
   __u8 status ;
   __u16 len ;
   union __anonunion_id_263 id ;
   __u8 data[0U] ;
};
#line 1226 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
struct ldv_struct_insmod_4 {
   int signal_pending ;
};
#line 94 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
struct ldv_struct_random_containerless_scenario_2 {
   struct device_driver *arg0 ;
   int signal_pending ;
};
#line 255 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/timer.h"
enum hrtimer_restart;
#line 255
enum hrtimer_restart;
#line 255
enum hrtimer_restart;
#line 88 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/nsproxy.h"
struct scm_creds {
   u32 pid ;
   kuid_t uid ;
   kgid_t gid ;
};
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/netlink.h"
struct netlink_skb_parms {
   struct scm_creds creds ;
   __u32 portid ;
   __u32 dst_group ;
   __u32 flags ;
   struct sock *sk ;
};
#line 2280 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/net/sock.h"
struct cb_id {
   __u32 idx ;
   __u32 val ;
};
#line 68 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/connector.h"
struct cn_msg {
   struct cb_id id ;
   __u32 seq ;
   __u32 ack ;
   __u16 len ;
   __u16 flags ;
   __u8 data[0U] ;
};
#line 79 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_netlink.h"
struct w1_netlink_cmd {
   __u8 cmd ;
   __u8 res ;
   __u16 len ;
   __u8 data[0U] ;
};
#line 376 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_netlink.c"
struct w1_cb_block {
   atomic_t refcnt ;
   u32 portid ;
   struct cn_msg msg ;
};
#line 385 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_netlink.c"
struct w1_cb_node {
   struct w1_async_cmd async ;
   struct w1_cb_block *block ;
   struct w1_netlink_msg *m ;
   struct w1_slave *sl ;
   struct w1_master *dev ;
};
#line 391 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/pgtable_types.h"
struct paravirt_callee_save {
   void *func ;
};
#line 196 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/paravirt_types.h"
struct pv_irq_ops {
   struct paravirt_callee_save save_fl ;
   struct paravirt_callee_save restore_fl ;
   struct paravirt_callee_save irq_disable ;
   struct paravirt_callee_save irq_enable ;
   void (*safe_halt)(void) ;
   void (*halt)(void) ;
   void (*adjust_exception_frame)(void) ;
};
#line 255 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/timer.h"
enum hrtimer_restart;
#line 13 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;
#line 186 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
};
#line 219 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const   *data ;
};
#line 414 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/mod_devicetable.h"
struct i2c_device_id {
   char name[20U] ;
   kernel_ulong_t driver_data ;
};
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/rtmutex.h"
struct rt_mutex {
   raw_spinlock_t wait_lock ;
   struct rb_root waiters ;
   struct rb_node *waiters_leftmost ;
   struct task_struct *owner ;
   int save_state ;
   char const   *name ;
   char const   *file ;
   int line ;
   void *magic ;
};
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/of.h"
typedef u32 phandle;
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};
#line 42 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/of.h"
struct device_node {
   char const   *name ;
   char const   *type ;
   phandle phandle ;
   char const   *full_name ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct device_node *next ;
   struct device_node *allnext ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};
#line 759 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/of.h"
struct i2c_msg {
   __u16 addr ;
   __u16 flags ;
   __u16 len ;
   __u8 *buf ;
};
#line 82 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/uapi/linux/i2c.h"
union i2c_smbus_data {
   __u8 byte ;
   __u16 word ;
   __u8 block[34U] ;
};
#line 39 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/i2c.h"
struct i2c_algorithm;
#line 40
struct i2c_adapter;
#line 41
struct i2c_client;
#line 42
struct i2c_driver;
#line 43
struct i2c_board_info;
#line 120 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/i2c.h"
struct i2c_driver {
   unsigned int class ;
   int (*attach_adapter)(struct i2c_adapter * ) ;
   int (*probe)(struct i2c_client * , struct i2c_device_id  const  * ) ;
   int (*remove)(struct i2c_client * ) ;
   void (*shutdown)(struct i2c_client * ) ;
   int (*suspend)(struct i2c_client * , pm_message_t  ) ;
   int (*resume)(struct i2c_client * ) ;
   void (*alert)(struct i2c_client * , unsigned int  ) ;
   int (*command)(struct i2c_client * , unsigned int  , void * ) ;
   struct device_driver driver ;
   struct i2c_device_id  const  *id_table ;
   int (*detect)(struct i2c_client * , struct i2c_board_info * ) ;
   unsigned short const   *address_list ;
   struct list_head clients ;
};
#line 198 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/i2c.h"
struct i2c_client {
   unsigned short flags ;
   unsigned short addr ;
   char name[20U] ;
   struct i2c_adapter *adapter ;
   struct device dev ;
   int irq ;
   struct list_head detected ;
};
#line 248 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/i2c.h"
struct i2c_board_info {
   char type[20U] ;
   unsigned short flags ;
   unsigned short addr ;
   void *platform_data ;
   struct dev_archdata *archdata ;
   struct device_node *of_node ;
   struct acpi_dev_node acpi_node ;
   int irq ;
};
#line 335 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/i2c.h"
struct i2c_algorithm {
   int (*master_xfer)(struct i2c_adapter * , struct i2c_msg * , int  ) ;
   int (*smbus_xfer)(struct i2c_adapter * , u16  , unsigned short  , char  , u8  ,
                     int  , union i2c_smbus_data * ) ;
   u32 (*functionality)(struct i2c_adapter * ) ;
};
#line 381 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/i2c.h"
struct i2c_bus_recovery_info {
   int (*recover_bus)(struct i2c_adapter * ) ;
   int (*get_scl)(struct i2c_adapter * ) ;
   void (*set_scl)(struct i2c_adapter * , int  ) ;
   int (*get_sda)(struct i2c_adapter * ) ;
   void (*prepare_recovery)(struct i2c_bus_recovery_info * ) ;
   void (*unprepare_recovery)(struct i2c_bus_recovery_info * ) ;
   int scl_gpio ;
   int sda_gpio ;
};
#line 420 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/i2c.h"
struct i2c_adapter {
   struct module *owner ;
   unsigned int class ;
   struct i2c_algorithm  const  *algo ;
   void *algo_data ;
   struct rt_mutex bus_lock ;
   int timeout ;
   int retries ;
   struct device dev ;
   int nr ;
   char name[48U] ;
   struct completion dev_released ;
   struct mutex userspace_clients_lock ;
   struct list_head userspace_clients ;
   struct i2c_bus_recovery_info *bus_recovery_info ;
};
#line 105 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/masters/ds2482.c"
struct ds2482_data;
#line 106 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/masters/ds2482.c"
struct ds2482_w1_chan {
   struct ds2482_data *pdev ;
   u8 channel ;
   struct w1_bus_master w1_bm ;
};
#line 118 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/masters/ds2482.c"
struct ds2482_data {
   struct i2c_client *client ;
   struct mutex access_lock ;
   int w1_count ;
   struct ds2482_w1_chan w1_ch[8U] ;
   u8 channel ;
   u8 read_prt ;
   u8 reg_config ;
};
#line 89 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_ds2482.c.aux"
struct ldv_struct_partially_ordered_scenario_3 {
   struct i2c_driver *arg0 ;
   int signal_pending ;
};
#line 40 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};
#line 255 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/timer.h"
enum hrtimer_restart;
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kthread.h"
struct kthread_work;
#line 65 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};
#line 72 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work * ) ;
   wait_queue_head_t done ;
   struct kthread_worker *worker ;
};
#line 351 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/scatterlist.h"
struct dma_chan;
#line 36 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/spi/spi.h"
struct spi_master;
#line 36 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};
#line 155
struct spi_message;
#line 156
struct spi_transfer;
#line 213 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device * ) ;
   int (*transfer)(struct spi_device * , struct spi_message * ) ;
   void (*cleanup)(struct spi_device * ) ;
   bool (*can_dma)(struct spi_master * , struct spi_device * , struct spi_transfer * ) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master * ) ;
   int (*transfer_one_message)(struct spi_master * , struct spi_message * ) ;
   int (*unprepare_transfer_hardware)(struct spi_master * ) ;
   int (*prepare_message)(struct spi_master * , struct spi_message * ) ;
   int (*unprepare_message)(struct spi_master * , struct spi_message * ) ;
   void (*set_cs)(struct spi_device * , bool  ) ;
   int (*transfer_one)(struct spi_master * , struct spi_device * , struct spi_transfer * ) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};
#line 502 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/spi/spi.h"
struct spi_transfer {
   void const   *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int cs_change : 1 ;
   unsigned int tx_nbits : 3 ;
   unsigned int rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};
#line 626 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int is_dma_mapped : 1 ;
   void (*complete)(void * ) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/set.h"
typedef _Bool ldv_set;
#line 1 "<compiler builtins>"
long __builtin_expect(long exp , long c ) ;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size , gfp_t flags ) ;
#line 31 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_14(struct mutex *ldv_func_arg1 ) ;
#line 35
static void ldv_mutex_lock_16(struct mutex *ldv_func_arg1 ) ;
#line 39
static void ldv_mutex_lock_18(struct mutex *ldv_func_arg1 ) ;
#line 43
static void ldv_mutex_lock_20(struct mutex *ldv_func_arg1 ) ;
#line 47
static void ldv_mutex_lock_22(struct mutex *ldv_func_arg1 ) ;
#line 51
static void ldv_mutex_lock_24(struct mutex *ldv_func_arg1 ) ;
#line 55
static void ldv_mutex_lock_26(struct mutex *ldv_func_arg1 ) ;
#line 59
static void ldv_mutex_lock_28(struct mutex *ldv_func_arg1 ) ;
#line 63
static void ldv_mutex_lock_30(struct mutex *ldv_func_arg1 ) ;
#line 67
static void ldv_mutex_lock_32(struct mutex *ldv_func_arg1 ) ;
#line 71
static void ldv_mutex_lock_34(struct mutex *ldv_func_arg1 ) ;
#line 75
static void ldv_mutex_lock_36(struct mutex *ldv_func_arg1 ) ;
#line 79
static void ldv_mutex_lock_38(struct mutex *ldv_func_arg1 ) ;
#line 83
static void ldv_mutex_lock_40(struct mutex *ldv_func_arg1 ) ;
#line 87
static void ldv_mutex_lock_43(struct mutex *ldv_func_arg1 ) ;
#line 91
static void ldv_mutex_lock_45(struct mutex *ldv_func_arg1 ) ;
#line 95
static void ldv_mutex_lock_47(struct mutex *ldv_func_arg1 ) ;
#line 99
static void ldv_mutex_lock_50(struct mutex *ldv_func_arg1 ) ;
#line 103
static void ldv_mutex_lock_51(struct mutex *ldv_func_arg1 ) ;
#line 107
static void ldv_mutex_lock_53(struct mutex *ldv_func_arg1 ) ;
#line 111
static void ldv_mutex_lock_55(struct mutex *ldv_func_arg1 ) ;
#line 115
static void ldv_mutex_lock_57(struct mutex *ldv_func_arg1 ) ;
#line 119
static void ldv_mutex_lock_58(struct mutex *ldv_func_arg1 ) ;
#line 123
static void ldv_mutex_lock_61(struct mutex *ldv_func_arg1 ) ;
#line 127
static void ldv_mutex_lock_62(struct mutex *ldv_func_arg1 ) ;
#line 131
static void ldv_mutex_lock_63(struct mutex *ldv_func_arg1 ) ;
#line 135
static void ldv_mutex_lock_65(struct mutex *ldv_func_arg1 ) ;
#line 139
static void ldv_mutex_lock_69(struct mutex *ldv_func_arg1 ) ;
#line 143
static void ldv_mutex_lock_74(struct mutex *ldv_func_arg1 ) ;
#line 147
static void ldv_mutex_lock_76(struct mutex *ldv_func_arg1 ) ;
#line 151
static void ldv_mutex_lock_78(struct mutex *ldv_func_arg1 ) ;
#line 155
static void ldv_mutex_lock_81(struct mutex *ldv_func_arg1 ) ;
#line 159
static void ldv_mutex_lock_82(struct mutex *ldv_func_arg1 ) ;
#line 163
static void ldv_mutex_lock_84(struct mutex *ldv_func_arg1 ) ;
#line 178
void ldv_mutex_lock_bus_mutex_of_w1_master(struct mutex *lock ) ;
#line 182
void ldv_mutex_unlock_bus_mutex_of_w1_master(struct mutex *lock ) ;
#line 192
void ldv_mutex_lock_list_mutex_of_w1_master(struct mutex *lock ) ;
#line 196
void ldv_mutex_unlock_list_mutex_of_w1_master(struct mutex *lock ) ;
#line 213
void ldv_mutex_lock_mutex_of_w1_master(struct mutex *lock ) ;
#line 217
void ldv_mutex_unlock_mutex_of_w1_master(struct mutex *lock ) ;
#line 220
void ldv_mutex_lock_w1_mlock(struct mutex *lock ) ;
#line 224
void ldv_mutex_unlock_w1_mlock(struct mutex *lock ) ;
#line 62 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.h"
void ldv_initialize(void) ;
#line 76
void ldv_check_final_state(void) ;
#line 113
int ldv_post_init(int init_ret_val ) ;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/common.h"
extern void __VERIFIER_assume(int  ) ;
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.h"
int ldv_undef_int(void) ;
#line 33
int ldv_undef_int_negative(void) ;
#line 26 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.h"
void ldv_free(void *s ) ;
#line 28
void *ldv_xmalloc(size_t size ) ;
#line 41
void *ldv_xmalloc_unknown_size(size_t size ) ;
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/export.h"
extern struct module __this_module ;
#line 71 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr , unsigned long volatile   *addr ) 
{ 


  {
#line 79
  __asm__  volatile   (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; bts %1,%0": "+m" (*((long volatile   *)addr)): "Ir" (nr): "memory");
#line 81
  return;
}
}
#line 109 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/bitops.h"
__inline static void clear_bit(long nr , unsigned long volatile   *addr ) 
{ 


  {
#line 116
  __asm__  volatile   (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; btr %1,%0": "+m" (*((long volatile   *)addr)): "Ir" (nr));
#line 118
  return;
}
}
#line 310 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/bitops.h"
__inline static int constant_test_bit(long nr , unsigned long const volatile   *addr ) 
{ 


  {
#line 312
  return ((int )((unsigned long )*(addr + (unsigned long )(nr >> 6)) >> ((int )nr & 63)) & 1);
}
}
#line 128 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/printk.h"
extern int printk(char const   *  , ...) ;
#line 53 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/dynamic_debug.h"
extern int __dynamic_dev_dbg(struct _ddebug * , struct device  const  * , char const   * 
                             , ...) ;
#line 165 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kernel.h"
extern void __might_sleep(char const   * , int  , int  ) ;
#line 254
extern int kstrtoll(char const   * , unsigned int  , long long * ) ;
#line 301 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kernel.h"
__inline static int kstrtol(char const   *s , unsigned int base , long *res ) 
{ 
  int tmp ;

  {
  {
#line 309
  tmp = kstrtoll(s, base, (long long *)res);
  }
#line 309
  return (tmp);
}
}
#line 315
extern int kstrtoint(char const   * , unsigned int  , int * ) ;
#line 388
extern int sprintf(char * , char const   *  , ...) ;
#line 391
extern int snprintf(char * , size_t  , char const   *  , ...) ;
#line 403
extern int sscanf(char const   * , char const   *  , ...) ;
#line 47 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/list.h"
extern void __list_add(struct list_head * , struct list_head * , struct list_head * ) ;
#line 74 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/list.h"
__inline static void list_add_tail(struct list_head *new , struct list_head *head ) 
{ 


  {
  {
#line 76
  __list_add(new, head->prev, head);
  }
#line 77
  return;
}
}
#line 112
extern void list_del(struct list_head * ) ;
#line 186 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/list.h"
__inline static int list_empty(struct list_head  const  *head ) 
{ 


  {
#line 188
  return ((unsigned long )((struct list_head  const  *)head->next) == (unsigned long )head);
}
}
#line 88 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/percpu.h"
extern void __bad_percpu_size(void) ;
#line 10 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/current.h"
extern struct task_struct *current_task ;
#line 12 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/current.h"
__inline static struct task_struct *get_current(void) 
{ 
  struct task_struct *pfo_ret__ ;

  {
  {
#line 14
  if (8UL == 1UL) {
#line 14
    goto case_1;
  } else {

  }
#line 14
  if (8UL == 2UL) {
#line 14
    goto case_2;
  } else {

  }
#line 14
  if (8UL == 4UL) {
#line 14
    goto case_4;
  } else {

  }
#line 14
  if (8UL == 8UL) {
#line 14
    goto case_8;
  } else {

  }
#line 14
  goto switch_default;
  case_1: /* CIL Label */ 
#line 14
  __asm__  ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
#line 14
  goto ldv_3502;
  case_2: /* CIL Label */ 
#line 14
  __asm__  ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
#line 14
  goto ldv_3502;
  case_4: /* CIL Label */ 
#line 14
  __asm__  ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
#line 14
  goto ldv_3502;
  case_8: /* CIL Label */ 
#line 14
  __asm__  ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
#line 14
  goto ldv_3502;
  switch_default: /* CIL Label */ 
  {
#line 14
  __bad_percpu_size();
  }
  switch_break: /* CIL Label */ ;
  }
  ldv_3502: ;
#line 14
  return (pfo_ret__);
}
}
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/string_64.h"
extern void *memcpy(void * , void const   * , size_t  ) ;
#line 55
extern void *memset(void * , int  , size_t  ) ;
#line 15 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/cmpxchg.h"
extern void __xadd_wrong_size(void) ;
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/atomic.h"
__inline static int atomic_read(atomic_t const   *v ) 
{ 


  {
#line 26
  return ((int )*((int volatile   *)(& v->counter)));
}
}
#line 36 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/atomic.h"
__inline static void atomic_set(atomic_t *v , int i ) 
{ 


  {
#line 38
  v->counter = i;
#line 39
  return;
}
}
#line 89 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/atomic.h"
__inline static void atomic_inc(atomic_t *v ) 
{ 


  {
#line 91
  __asm__  volatile   (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; incl %0": "+m" (v->counter));
#line 93
  return;
}
}
#line 101 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/atomic.h"
__inline static void atomic_dec(atomic_t *v ) 
{ 


  {
#line 103
  __asm__  volatile   (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; decl %0": "+m" (v->counter));
#line 105
  return;
}
}
#line 154 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/atomic.h"
__inline static int atomic_add_return(int i , atomic_t *v ) 
{ 
  int __ret ;

  {
#line 156
  __ret = i;
  {
#line 156
  if (4UL == 1UL) {
#line 156
    goto case_1;
  } else {

  }
#line 156
  if (4UL == 2UL) {
#line 156
    goto case_2;
  } else {

  }
#line 156
  if (4UL == 4UL) {
#line 156
    goto case_4;
  } else {

  }
#line 156
  if (4UL == 8UL) {
#line 156
    goto case_8;
  } else {

  }
#line 156
  goto switch_default;
  case_1: /* CIL Label */ 
#line 156
  __asm__  volatile   (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc");
#line 156
  goto ldv_5965;
  case_2: /* CIL Label */ 
#line 156
  __asm__  volatile   (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
#line 156
  goto ldv_5965;
  case_4: /* CIL Label */ 
#line 156
  __asm__  volatile   (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddl %0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
#line 156
  goto ldv_5965;
  case_8: /* CIL Label */ 
#line 156
  __asm__  volatile   (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
#line 156
  goto ldv_5965;
  switch_default: /* CIL Label */ 
  {
#line 156
  __xadd_wrong_size();
  }
  switch_break: /* CIL Label */ ;
  }
  ldv_5965: ;
#line 156
  return (i + __ret);
}
}
#line 166 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/atomic.h"
__inline static int atomic_sub_return(int i , atomic_t *v ) 
{ 
  int tmp ;

  {
  {
#line 168
  tmp = atomic_add_return(- i, v);
  }
#line 168
  return (tmp);
}
}
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/debug_locks.h"
extern void debug_check_no_locks_held(void) ;
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/spinlock_api_smp.h"
extern void _raw_spin_lock(raw_spinlock_t * ) ;
#line 39
extern void _raw_spin_unlock(raw_spinlock_t * ) ;
#line 301 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/spinlock.h"
__inline static void spin_lock(spinlock_t *lock ) 
{ 


  {
  {
#line 303
  _raw_spin_lock(& lock->__annonCompField20.rlock);
  }
#line 304
  return;
}
}
#line 341 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/spinlock.h"
__inline static void spin_unlock(spinlock_t *lock ) 
{ 


  {
  {
#line 343
  _raw_spin_unlock(& lock->__annonCompField20.rlock);
  }
#line 344
  return;
}
}
#line 194 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/mutex.h"
static void ldv_mutex_unlock_15(struct mutex *ldv_func_arg1 ) ;
#line 198
static void ldv_mutex_unlock_17(struct mutex *ldv_func_arg1 ) ;
#line 202
static void ldv_mutex_unlock_19(struct mutex *ldv_func_arg1 ) ;
#line 206
static void ldv_mutex_unlock_21(struct mutex *ldv_func_arg1 ) ;
#line 210
static void ldv_mutex_unlock_23(struct mutex *ldv_func_arg1 ) ;
#line 214
static void ldv_mutex_unlock_25(struct mutex *ldv_func_arg1 ) ;
#line 218
static void ldv_mutex_unlock_27(struct mutex *ldv_func_arg1 ) ;
#line 222
static void ldv_mutex_unlock_29(struct mutex *ldv_func_arg1 ) ;
#line 226
static void ldv_mutex_unlock_31(struct mutex *ldv_func_arg1 ) ;
#line 230
static void ldv_mutex_unlock_33(struct mutex *ldv_func_arg1 ) ;
#line 234
static void ldv_mutex_unlock_35(struct mutex *ldv_func_arg1 ) ;
#line 238
static void ldv_mutex_unlock_37(struct mutex *ldv_func_arg1 ) ;
#line 242
static void ldv_mutex_unlock_39(struct mutex *ldv_func_arg1 ) ;
#line 246
static void ldv_mutex_unlock_41(struct mutex *ldv_func_arg1 ) ;
#line 250
static void ldv_mutex_unlock_42(struct mutex *ldv_func_arg1 ) ;
#line 254
static void ldv_mutex_unlock_44(struct mutex *ldv_func_arg1 ) ;
#line 258
static void ldv_mutex_unlock_46(struct mutex *ldv_func_arg1 ) ;
#line 262
static void ldv_mutex_unlock_48(struct mutex *ldv_func_arg1 ) ;
#line 266
static void ldv_mutex_unlock_49(struct mutex *ldv_func_arg1 ) ;
#line 270
static void ldv_mutex_unlock_52(struct mutex *ldv_func_arg1 ) ;
#line 274
static void ldv_mutex_unlock_54(struct mutex *ldv_func_arg1 ) ;
#line 278
static void ldv_mutex_unlock_56(struct mutex *ldv_func_arg1 ) ;
#line 282
static void ldv_mutex_unlock_59(struct mutex *ldv_func_arg1 ) ;
#line 286
static void ldv_mutex_unlock_60(struct mutex *ldv_func_arg1 ) ;
#line 290
static void ldv_mutex_unlock_64(struct mutex *ldv_func_arg1 ) ;
#line 294
static void ldv_mutex_unlock_66(struct mutex *ldv_func_arg1 ) ;
#line 298
static void ldv_mutex_unlock_67(struct mutex *ldv_func_arg1 ) ;
#line 302
static void ldv_mutex_unlock_68(struct mutex *ldv_func_arg1 ) ;
#line 306
static void ldv_mutex_unlock_70(struct mutex *ldv_func_arg1 ) ;
#line 310
static void ldv_mutex_unlock_71(struct mutex *ldv_func_arg1 ) ;
#line 314
static void ldv_mutex_unlock_72(struct mutex *ldv_func_arg1 ) ;
#line 318
static void ldv_mutex_unlock_73(struct mutex *ldv_func_arg1 ) ;
#line 322
static void ldv_mutex_unlock_75(struct mutex *ldv_func_arg1 ) ;
#line 326
static void ldv_mutex_unlock_77(struct mutex *ldv_func_arg1 ) ;
#line 330
static void ldv_mutex_unlock_79(struct mutex *ldv_func_arg1 ) ;
#line 334
static void ldv_mutex_unlock_80(struct mutex *ldv_func_arg1 ) ;
#line 338
static void ldv_mutex_unlock_83(struct mutex *ldv_func_arg1 ) ;
#line 342
static void ldv_mutex_unlock_85(struct mutex *ldv_func_arg1 ) ;
#line 303 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/jiffies.h"
extern unsigned long msecs_to_jiffies(unsigned int const    ) ;
#line 36 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kmod.h"
extern int __request_module(bool  , char const   *  , ...) ;
#line 221 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sysfs.h"
extern int sysfs_create_group(struct kobject * , struct attribute_group  const  * ) ;
#line 223
extern int sysfs_create_groups(struct kobject * , struct attribute_group  const  ** ) ;
#line 227
extern void sysfs_remove_group(struct kobject * , struct attribute_group  const  * ) ;
#line 229
extern void sysfs_remove_groups(struct kobject * , struct attribute_group  const  ** ) ;
#line 84 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kobject.h"
__inline static char const   *kobject_name(struct kobject  const  *kobj ) 
{ 


  {
#line 86
  return ((char const   *)kobj->name);
}
}
#line 212
extern int kobject_uevent(struct kobject * , enum kobject_action  ) ;
#line 217
extern int add_uevent_var(struct kobj_uevent_env * , char const   *  , ...) ;
#line 133 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/device.h"
extern int bus_register(struct bus_type * ) ;
#line 135
extern void bus_unregister(struct bus_type * ) ;
#line 256
static int ldv_driver_register_86(struct device_driver *ldv_func_arg1 ) ;
#line 260
static int ldv_driver_register_87(struct device_driver *ldv_func_arg1 ) ;
#line 265
static void ldv_driver_unregister_88(struct device_driver *ldv_func_arg1 ) ;
#line 269
static void ldv_driver_unregister_89(struct device_driver *ldv_func_arg1 ) ;
#line 273
static void ldv_driver_unregister_90(struct device_driver *ldv_func_arg1 ) ;
#line 795 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/device.h"
__inline static char const   *dev_name(struct device  const  *dev ) 
{ 
  char const   *tmp ;

  {
#line 798
  if ((unsigned long )dev->init_name != (unsigned long )((char const   */* const  */)0)) {
#line 799
    return ((char const   *)dev->init_name);
  } else {

  }
  {
#line 801
  tmp = kobject_name(& dev->kobj);
  }
#line 801
  return (tmp);
}
}
#line 805
extern int dev_set_name(struct device * , char const   *  , ...) ;
#line 836 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/device.h"
__inline static void dev_set_uevent_suppress(struct device *dev , int val ) 
{ 


  {
#line 838
  dev->kobj.uevent_suppress = (unsigned char )val;
#line 839
  return;
}
}
#line 895
extern int device_register(struct device * ) ;
#line 896
extern void device_unregister(struct device * ) ;
#line 1023
extern int dev_err(struct device  const  * , char const   *  , ...) ;
#line 1029
extern int _dev_info(struct device  const  * , char const   *  , ...) ;
#line 142 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/slab.h"
extern void kfree(void const   * ) ;
#line 649
__inline static void *kzalloc(size_t size , gfp_t flags ) ;
#line 383 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sched.h"
extern long schedule_timeout(long  ) ;
#line 387
extern void schedule(void) ;
#line 2225
extern int wake_up_process(struct task_struct * ) ;
#line 42 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kthread.h"
extern bool kthread_should_stop(void) ;
#line 12 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/freezer.h"
extern atomic_t system_freezing_cnt ;
#line 29
extern bool freezing_slow_path(struct task_struct * ) ;
#line 34 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/freezer.h"
__inline static bool freezing(struct task_struct *p ) 
{ 
  int tmp ;
  long tmp___0 ;
  bool tmp___1 ;

  {
  {
#line 36
  tmp = atomic_read((atomic_t const   *)(& system_freezing_cnt));
#line 36
  tmp___0 = __builtin_expect(tmp == 0, 1L);
  }
#line 36
  if (tmp___0 != 0L) {
#line 37
    return (0);
  } else {

  }
  {
#line 38
  tmp___1 = freezing_slow_path(p);
  }
#line 38
  return (tmp___1);
}
}
#line 44
extern bool __refrigerator(bool  ) ;
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/freezer.h"
__inline static bool try_to_freeze_unsafe(void) 
{ 
  struct task_struct *tmp ;
  bool tmp___0 ;
  int tmp___1 ;
  long tmp___2 ;
  bool tmp___3 ;

  {
  {
#line 56
  __might_sleep("include/linux/freezer.h", 56, 0);
#line 57
  tmp = get_current();
#line 57
  tmp___0 = freezing(tmp);
  }
#line 57
  if (tmp___0) {
#line 57
    tmp___1 = 0;
  } else {
#line 57
    tmp___1 = 1;
  }
  {
#line 57
  tmp___2 = __builtin_expect((long )tmp___1, 1L);
  }
#line 57
  if (tmp___2 != 0L) {
#line 58
    return (0);
  } else {

  }
  {
#line 59
  tmp___3 = __refrigerator(0);
  }
#line 59
  return (tmp___3);
}
}
#line 62 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/freezer.h"
__inline static bool try_to_freeze(void) 
{ 
  struct task_struct *tmp ;
  bool tmp___0 ;

  {
  {
#line 64
  tmp = get_current();
  }
#line 64
  if ((tmp->flags & 32768U) == 0U) {
    {
#line 65
    debug_check_no_locks_held();
    }
  } else {

  }
  {
#line 66
  tmp___0 = try_to_freeze_unsafe();
  }
#line 66
  return (tmp___0);
}
}
#line 81 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_family.h"
spinlock_t w1_flock ;
#line 83
void w1_family_put(struct w1_family *f ) ;
#line 84
void __w1_family_get(struct w1_family *f ) ;
#line 85
struct w1_family *w1_family_registered(u8 fid ) ;
#line 284 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.h"
int w1_create_master_attributes(struct w1_master *master ) ;
#line 285
void w1_destroy_master_attributes(struct w1_master *master ) ;
#line 286
void w1_search(struct w1_master *dev , u8 search_type , void (*cb)(struct w1_master * ,
                                                                   u64  ) ) ;
#line 287
void w1_search_devices(struct w1_master *dev , u8 search_type , void (*cb)(struct w1_master * ,
                                                                           u64  ) ) ;
#line 289
struct w1_slave *w1_search_slave(struct w1_reg_num *id ) ;
#line 292
int w1_unref_slave(struct w1_slave *sl ) ;
#line 293
void w1_slave_found(struct w1_master *dev , u64 rn ) ;
#line 294
void w1_search_process_cb(struct w1_master *dev , u8 search_type , void (*cb)(struct w1_master * ,
                                                                              u64  ) ) ;
#line 296
struct w1_slave *w1_slave_search_device(struct w1_master *dev , struct w1_reg_num *rn ) ;
#line 298
struct w1_master *w1_search_master_id(u32 id ) ;
#line 305
void w1_reconnect_slaves(struct w1_family *f , int attach ) ;
#line 306
int w1_attach_slave_device(struct w1_master *dev , struct w1_reg_num *rn ) ;
#line 308
int w1_slave_detach(struct w1_slave *sl ) ;
#line 310
u8 w1_triplet(struct w1_master *dev , int bdir ) ;
#line 311
void w1_write_8(struct w1_master *dev , u8 byte ) ;
#line 313
int w1_reset_bus(struct w1_master *dev ) ;
#line 314
u8 w1_calc_crc8(u8 *data , int len ) ;
#line 315
void w1_write_block(struct w1_master *dev , u8 const   *buf , int len ) ;
#line 317
u8 w1_read_block(struct w1_master *dev , u8 *buf , int len ) ;
#line 318
int w1_reset_select_slave(struct w1_slave *sl ) ;
#line 322 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.h"
__inline static struct w1_slave *dev_to_w1_slave(struct device *dev ) 
{ 
  struct device  const  *__mptr ;

  {
#line 324
  __mptr = (struct device  const  *)dev;
#line 324
  return ((struct w1_slave *)((char *)__mptr + 0xffffffffffffff98UL));
}
}
#line 327 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.h"
__inline static struct w1_slave *kobj_to_w1_slave(struct kobject *kobj ) 
{ 
  struct kobject  const  *__mptr ;
  struct w1_slave *tmp ;

  {
  {
#line 329
  __mptr = (struct kobject  const  *)kobj;
#line 329
  tmp = dev_to_w1_slave((struct device *)((char *)__mptr + 0xfffffffffffffff0UL));
  }
#line 329
  return (tmp);
}
}
#line 332 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.h"
__inline static struct w1_master *dev_to_w1_master(struct device *dev ) 
{ 
  struct device  const  *__mptr ;

  {
#line 334
  __mptr = (struct device  const  *)dev;
#line 334
  return ((struct w1_master *)((char *)__mptr + 0xfffffffffffffd50UL));
}
}
#line 337
struct device_driver w1_master_driver ;
#line 338
struct device w1_master_device ;
#line 339
int w1_max_slave_count ;
#line 340
int w1_max_slave_ttl ;
#line 341
struct list_head w1_masters ;
#line 342
struct mutex w1_mlock ;
#line 344
int w1_process_callbacks(struct w1_master *dev ) ;
#line 345
int w1_process(void *data ) ;
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_int.h"
void __w1_remove_master_device(struct w1_master *dev ) ;
#line 106 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_netlink.h"
void w1_netlink_send(struct w1_master *dev , struct w1_netlink_msg *msg ) ;
#line 107
int w1_init_netlink(void) ;
#line 108
void w1_fini_netlink(void) ;
#line 48 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static int w1_timeout  =    10;
#line 49 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
int w1_max_slave_count  =    64;
#line 50 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
int w1_max_slave_ttl  =    10;
#line 69 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
struct mutex w1_mlock  =    {{1}, {{{{{0U}}, 3735899821U, 4294967295U, (void *)-1, {0, {0, 0}, "w1_mlock.wait_lock",
                                                           0, 0UL}}}}, {& w1_mlock.wait_list,
                                                                        & w1_mlock.wait_list},
    0, 0, (void *)(& w1_mlock), {0, {0, 0}, "w1_mlock", 0, 0UL}};
#line 70 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
struct list_head w1_masters  =    {& w1_masters, & w1_masters};
#line 72 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static int w1_master_match(struct device *dev , struct device_driver *drv ) 
{ 


  {
#line 74
  return (1);
}
}
#line 77 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static int w1_master_probe(struct device *dev ) 
{ 


  {
#line 79
  return (-19);
}
}
#line 82 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static void w1_master_release(struct device *dev ) 
{ 
  struct w1_master *md ;
  struct w1_master *tmp ;
  struct _ddebug descriptor ;
  long tmp___0 ;

  {
  {
#line 84
  tmp = dev_to_w1_master(dev);
#line 84
  md = tmp;
#line 86
  descriptor.modname = "wire";
#line 86
  descriptor.function = "w1_master_release";
#line 86
  descriptor.filename = "drivers/w1/w1.c";
#line 86
  descriptor.format = "%s: Releasing %s.\n";
#line 86
  descriptor.lineno = 86U;
#line 86
  descriptor.flags = 0U;
#line 86
  tmp___0 = __builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 86
  if (tmp___0 != 0L) {
    {
#line 86
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)dev, "%s: Releasing %s.\n",
                      "w1_master_release", (unsigned char *)(& md->name));
    }
  } else {

  }
  {
#line 87
  memset((void *)md, 0, 2192UL);
#line 88
  kfree((void const   *)md);
  }
#line 89
  return;
}
}
#line 91 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static void w1_slave_release(struct device *dev ) 
{ 
  struct w1_slave *sl ;
  struct w1_slave *tmp ;
  struct _ddebug descriptor ;
  long tmp___0 ;

  {
  {
#line 93
  tmp = dev_to_w1_slave(dev);
#line 93
  sl = tmp;
#line 95
  descriptor.modname = "wire";
#line 95
  descriptor.function = "w1_slave_release";
#line 95
  descriptor.filename = "drivers/w1/w1.c";
#line 95
  descriptor.format = "%s: Releasing %s [%p]\n";
#line 95
  descriptor.lineno = 95U;
#line 95
  descriptor.flags = 0U;
#line 95
  tmp___0 = __builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 95
  if (tmp___0 != 0L) {
    {
#line 95
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)dev, "%s: Releasing %s [%p]\n",
                      "w1_slave_release", (unsigned char *)(& sl->name), sl);
    }
  } else {

  }
  {
#line 97
  w1_family_put(sl->family);
#line 98
  (sl->master)->slave_count = (sl->master)->slave_count - 1;
  }
#line 99
  return;
}
}
#line 101 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static ssize_t name_show(struct device *dev , struct device_attribute *attr , char *buf ) 
{ 
  struct w1_slave *sl ;
  struct w1_slave *tmp ;
  int tmp___0 ;

  {
  {
#line 103
  tmp = dev_to_w1_slave(dev);
#line 103
  sl = tmp;
#line 105
  tmp___0 = sprintf(buf, "%s\n", (unsigned char *)(& sl->name));
  }
#line 105
  return ((ssize_t )tmp___0);
}
}
#line 107 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static struct device_attribute dev_attr_name  =    {{"name", 292U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0}, {(char)0},
                                  {(char)0}, {(char)0}, {(char)0}}}}, & name_show,
    0};
#line 109 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static ssize_t id_show(struct device *dev , struct device_attribute *attr , char *buf ) 
{ 
  struct w1_slave *sl ;
  struct w1_slave *tmp ;
  ssize_t count ;

  {
  {
#line 112
  tmp = dev_to_w1_slave(dev);
#line 112
  sl = tmp;
#line 113
  count = 8L;
#line 115
  memcpy((void *)buf, (void const   *)(& sl->reg_num), (size_t )count);
  }
#line 116
  return (count);
}
}
#line 118 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static struct device_attribute dev_attr_id  =    {{"id", 292U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0}, {(char)0},
                                {(char)0}, {(char)0}, {(char)0}}}}, & id_show, 0};
#line 120 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static struct attribute *w1_slave_attrs[3U]  = {      & dev_attr_name.attr,      & dev_attr_id.attr,      (struct attribute *)0};
#line 125 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static struct attribute_group  const  w1_slave_group  =    {0, 0, (struct attribute **)(& w1_slave_attrs), 0};
#line 125 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static struct attribute_group  const  *w1_slave_groups[2U]  = {      & w1_slave_group,      (struct attribute_group  const  *)0};
#line 129 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static ssize_t rw_write(struct file *filp , struct kobject *kobj , struct bin_attribute *bin_attr ,
                        char *buf , loff_t off , size_t count ) 
{ 
  struct w1_slave *sl ;
  struct w1_slave *tmp ;
  int tmp___0 ;

  {
  {
#line 133
  tmp = kobj_to_w1_slave(kobj);
#line 133
  sl = tmp;
#line 135
  ldv_mutex_lock_14(& (sl->master)->mutex);
#line 136
  tmp___0 = w1_reset_select_slave(sl);
  }
#line 136
  if (tmp___0 != 0) {
#line 137
    count = 0UL;
#line 138
    goto out_up;
  } else {

  }
  {
#line 141
  w1_write_block(sl->master, (u8 const   *)buf, (int )count);
  }
  out_up: 
  {
#line 144
  ldv_mutex_unlock_15(& (sl->master)->mutex);
  }
#line 145
  return ((ssize_t )count);
}
}
#line 148 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static ssize_t rw_read(struct file *filp , struct kobject *kobj , struct bin_attribute *bin_attr ,
                       char *buf , loff_t off , size_t count ) 
{ 
  struct w1_slave *sl ;
  struct w1_slave *tmp ;

  {
  {
#line 152
  tmp = kobj_to_w1_slave(kobj);
#line 152
  sl = tmp;
#line 154
  ldv_mutex_lock_16(& (sl->master)->mutex);
#line 155
  w1_read_block(sl->master, (u8 *)buf, (int )count);
#line 156
  ldv_mutex_unlock_17(& (sl->master)->mutex);
  }
#line 157
  return ((ssize_t )count);
}
}
#line 160 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static struct bin_attribute bin_attr_rw  =    {{"rw", 420U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0}, {(char)0},
                                {(char)0}, {(char)0}, {(char)0}}}}, 4096UL, 0, & rw_read,
    & rw_write, 0};
#line 162 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static struct bin_attribute *w1_slave_bin_attrs[2U]  = {      & bin_attr_rw,      (struct bin_attribute *)0};
#line 167 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static struct attribute_group  const  w1_slave_default_group  =    {0, 0, 0, (struct bin_attribute **)(& w1_slave_bin_attrs)};
#line 171 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static struct attribute_group  const  *w1_slave_default_groups[2U]  = {      & w1_slave_default_group,      (struct attribute_group  const  *)0};
#line 176 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static struct w1_family_ops w1_default_fops  =    {0, 0, (struct attribute_group  const  **)(& w1_slave_default_groups)};
#line 180 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static struct w1_family w1_default_family  =    {{0, 0}, (unsigned char)0, & w1_default_fops, {0}};
#line 184
static int w1_uevent(struct device *dev , struct kobj_uevent_env *env ) ;
#line 186 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static struct bus_type w1_bus_type  = 
#line 186
     {"w1", 0, 0, 0, 0, 0, 0, & w1_master_match, & w1_uevent, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0}, {(char)0}, {(char)0}, {(char)0},
            {(char)0}}}};
#line 192 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
struct device_driver w1_master_driver  = 
#line 192
     {"w1_master_driver", & w1_bus_type, 0, 0, (_Bool)0, 0, 0, & w1_master_probe, 0,
    0, 0, 0, 0, 0, 0};
#line 198 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
struct device w1_master_device  = 
#line 198
     {(struct device *)0, 0, {0, {0, 0}, 0, 0, 0, 0, {{0}}, {{{0L}, {0, 0}, 0, {0, {0,
                                                                                  0},
                                                                              0, 0,
                                                                              0UL}},
                                                           {{0, 0}, 0UL, 0, 0, 0UL,
                                                            0, 0, 0, {(char)0, (char)0,
                                                                      (char)0, (char)0,
                                                                      (char)0, (char)0,
                                                                      (char)0, (char)0,
                                                                      (char)0, (char)0,
                                                                      (char)0, (char)0,
                                                                      (char)0, (char)0,
                                                                      (char)0, (char)0},
                                                            {0, {0, 0}, 0, 0, 0UL}},
                                                           0, 0}, 0U, 0U, 0U, 0U,
                            0U}, "w1 bus master", 0, {{0}, {{{{{0U}}, 0U, 0U, 0, {0,
                                                                                  {0,
                                                                                   0},
                                                                                  0,
                                                                                  0,
                                                                                  0UL}}}},
                                                      {0, 0}, 0, 0, 0, {0, {0, 0},
                                                                        0, 0, 0UL}},
    & w1_bus_type, & w1_master_driver, 0, {{0}, 0U, 0U, (_Bool)0, (_Bool)0, (_Bool)0,
                                           (_Bool)0, (_Bool)0, (_Bool)0, {{{{{0U}},
                                                                            0U, 0U,
                                                                            0, {0,
                                                                                {0,
                                                                                 0},
                                                                                0,
                                                                                0,
                                                                                0UL}}}},
                                           {0, 0}, {0U, {{{{{{0U}}, 0U, 0U, 0, {0,
                                                                                {0,
                                                                                 0},
                                                                                0,
                                                                                0,
                                                                                0UL}}}},
                                                         {0, 0}}}, 0, (_Bool)0, (_Bool)0,
                                           {{0, 0}, 0UL, 0, 0, 0UL, 0, 0, 0, {(char)0,
                                                                              (char)0,
                                                                              (char)0,
                                                                              (char)0,
                                                                              (char)0,
                                                                              (char)0,
                                                                              (char)0,
                                                                              (char)0,
                                                                              (char)0,
                                                                              (char)0,
                                                                              (char)0,
                                                                              (char)0,
                                                                              (char)0,
                                                                              (char)0,
                                                                              (char)0,
                                                                              (char)0},
                                            {0, {0, 0}, 0, 0, 0UL}}, 0UL, {{0L}, {0,
                                                                                  0},
                                                                           0, {0,
                                                                               {0,
                                                                                0},
                                                                               0,
                                                                               0,
                                                                               0UL}},
                                           {{{{{{0U}}, 0U, 0U, 0, {0, {0, 0}, 0, 0,
                                                                   0UL}}}}, {0, 0}},
                                           {0}, {0}, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U,
                                           0U, 0U, 0U, 0, 0, 0, 0, 0UL, 0UL, 0UL,
                                           0UL, 0, 0, 0}, 0, 0, 0, 0, 0ULL, 0, {0,
                                                                                0},
    0, {0, 0}, 0, {0}, 0U, 0U, {{{{{0U}}, 0U, 0U, 0, {0, {0, 0}, 0, 0, 0UL}}}}, {0,
                                                                                 0},
    {0, {0, 0}, {{0}}}, 0, 0, & w1_master_release, 0, (_Bool)0, (_Bool)0};
#line 206 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static struct device_driver w1_slave_driver  = 
#line 206
     {"w1_slave_driver", & w1_bus_type, 0, 0, (_Bool)0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
#line 221 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static ssize_t w1_master_attribute_show_name(struct device *dev , struct device_attribute *attr ,
                                             char *buf ) 
{ 
  struct w1_master *md ;
  struct w1_master *tmp ;
  ssize_t count ;
  int tmp___0 ;

  {
  {
#line 223
  tmp = dev_to_w1_master(dev);
#line 223
  md = tmp;
#line 226
  ldv_mutex_lock_18(& md->mutex);
#line 227
  tmp___0 = sprintf(buf, "%s\n", (unsigned char *)(& md->name));
#line 227
  count = (ssize_t )tmp___0;
#line 228
  ldv_mutex_unlock_19(& md->mutex);
  }
#line 230
  return (count);
}
}
#line 233 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static ssize_t w1_master_attribute_store_search(struct device *dev , struct device_attribute *attr ,
                                                char const   *buf , size_t count ) 
{ 
  long tmp ;
  struct w1_master *md ;
  struct w1_master *tmp___0 ;
  int ret ;

  {
  {
#line 238
  tmp___0 = dev_to_w1_master(dev);
#line 238
  md = tmp___0;
#line 241
  ret = kstrtol(buf, 0U, & tmp);
  }
#line 242
  if (ret != 0) {
#line 243
    return ((ssize_t )ret);
  } else {

  }
  {
#line 245
  ldv_mutex_lock_20(& md->mutex);
#line 246
  md->search_count = (int )tmp;
#line 247
  ldv_mutex_unlock_21(& md->mutex);
  }
#line 249
  if (tmp != 0L) {
    {
#line 250
    wake_up_process(md->thread);
    }
  } else {

  }
#line 252
  return ((ssize_t )count);
}
}
#line 255 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static ssize_t w1_master_attribute_show_search(struct device *dev , struct device_attribute *attr ,
                                               char *buf ) 
{ 
  struct w1_master *md ;
  struct w1_master *tmp ;
  ssize_t count ;
  int tmp___0 ;

  {
  {
#line 259
  tmp = dev_to_w1_master(dev);
#line 259
  md = tmp;
#line 262
  ldv_mutex_lock_22(& md->mutex);
#line 263
  tmp___0 = sprintf(buf, "%d\n", md->search_count);
#line 263
  count = (ssize_t )tmp___0;
#line 264
  ldv_mutex_unlock_23(& md->mutex);
  }
#line 266
  return (count);
}
}
#line 269 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static ssize_t w1_master_attribute_store_pullup(struct device *dev , struct device_attribute *attr ,
                                                char const   *buf , size_t count ) 
{ 
  long tmp ;
  struct w1_master *md ;
  struct w1_master *tmp___0 ;
  int ret ;

  {
  {
#line 274
  tmp___0 = dev_to_w1_master(dev);
#line 274
  md = tmp___0;
#line 277
  ret = kstrtol(buf, 0U, & tmp);
  }
#line 278
  if (ret != 0) {
#line 279
    return ((ssize_t )ret);
  } else {

  }
  {
#line 281
  ldv_mutex_lock_24(& md->mutex);
#line 282
  md->enable_pullup = (int )tmp;
#line 283
  ldv_mutex_unlock_25(& md->mutex);
  }
#line 285
  return ((ssize_t )count);
}
}
#line 288 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static ssize_t w1_master_attribute_show_pullup(struct device *dev , struct device_attribute *attr ,
                                               char *buf ) 
{ 
  struct w1_master *md ;
  struct w1_master *tmp ;
  ssize_t count ;
  int tmp___0 ;

  {
  {
#line 292
  tmp = dev_to_w1_master(dev);
#line 292
  md = tmp;
#line 295
  ldv_mutex_lock_26(& md->mutex);
#line 296
  tmp___0 = sprintf(buf, "%d\n", md->enable_pullup);
#line 296
  count = (ssize_t )tmp___0;
#line 297
  ldv_mutex_unlock_27(& md->mutex);
  }
#line 299
  return (count);
}
}
#line 302 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static ssize_t w1_master_attribute_show_pointer(struct device *dev , struct device_attribute *attr ,
                                                char *buf ) 
{ 
  struct w1_master *md ;
  struct w1_master *tmp ;
  ssize_t count ;
  int tmp___0 ;

  {
  {
#line 304
  tmp = dev_to_w1_master(dev);
#line 304
  md = tmp;
#line 307
  ldv_mutex_lock_28(& md->mutex);
#line 308
  tmp___0 = sprintf(buf, "0x%p\n", md->bus_master);
#line 308
  count = (ssize_t )tmp___0;
#line 309
  ldv_mutex_unlock_29(& md->mutex);
  }
#line 310
  return (count);
}
}
#line 313 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static ssize_t w1_master_attribute_show_timeout(struct device *dev , struct device_attribute *attr ,
                                                char *buf ) 
{ 
  ssize_t count ;
  int tmp ;

  {
  {
#line 316
  tmp = sprintf(buf, "%d\n", w1_timeout);
#line 316
  count = (ssize_t )tmp;
  }
#line 317
  return (count);
}
}
#line 320 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static ssize_t w1_master_attribute_store_max_slave_count(struct device *dev , struct device_attribute *attr ,
                                                         char const   *buf , size_t count ) 
{ 
  int tmp ;
  struct w1_master *md ;
  struct w1_master *tmp___0 ;
  int tmp___1 ;

  {
  {
#line 324
  tmp___0 = dev_to_w1_master(dev);
#line 324
  md = tmp___0;
#line 326
  tmp___1 = kstrtoint(buf, 0U, & tmp);
  }
#line 326
  if (tmp___1 == -22 || tmp <= 0) {
#line 327
    return (-22L);
  } else {

  }
  {
#line 329
  ldv_mutex_lock_30(& md->mutex);
#line 330
  md->max_slave_count = tmp;
#line 332
  clear_bit(1L, (unsigned long volatile   *)(& md->flags));
#line 333
  ldv_mutex_unlock_31(& md->mutex);
  }
#line 335
  return ((ssize_t )count);
}
}
#line 338 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static ssize_t w1_master_attribute_show_max_slave_count(struct device *dev , struct device_attribute *attr ,
                                                        char *buf ) 
{ 
  struct w1_master *md ;
  struct w1_master *tmp ;
  ssize_t count ;
  int tmp___0 ;

  {
  {
#line 340
  tmp = dev_to_w1_master(dev);
#line 340
  md = tmp;
#line 343
  ldv_mutex_lock_32(& md->mutex);
#line 344
  tmp___0 = sprintf(buf, "%d\n", md->max_slave_count);
#line 344
  count = (ssize_t )tmp___0;
#line 345
  ldv_mutex_unlock_33(& md->mutex);
  }
#line 346
  return (count);
}
}
#line 349 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static ssize_t w1_master_attribute_show_attempts(struct device *dev , struct device_attribute *attr ,
                                                 char *buf ) 
{ 
  struct w1_master *md ;
  struct w1_master *tmp ;
  ssize_t count ;
  int tmp___0 ;

  {
  {
#line 351
  tmp = dev_to_w1_master(dev);
#line 351
  md = tmp;
#line 354
  ldv_mutex_lock_34(& md->mutex);
#line 355
  tmp___0 = sprintf(buf, "%lu\n", md->attempts);
#line 355
  count = (ssize_t )tmp___0;
#line 356
  ldv_mutex_unlock_35(& md->mutex);
  }
#line 357
  return (count);
}
}
#line 360 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static ssize_t w1_master_attribute_show_slave_count(struct device *dev , struct device_attribute *attr ,
                                                    char *buf ) 
{ 
  struct w1_master *md ;
  struct w1_master *tmp ;
  ssize_t count ;
  int tmp___0 ;

  {
  {
#line 362
  tmp = dev_to_w1_master(dev);
#line 362
  md = tmp;
#line 365
  ldv_mutex_lock_36(& md->mutex);
#line 366
  tmp___0 = sprintf(buf, "%d\n", md->slave_count);
#line 366
  count = (ssize_t )tmp___0;
#line 367
  ldv_mutex_unlock_37(& md->mutex);
  }
#line 368
  return (count);
}
}
#line 371 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static ssize_t w1_master_attribute_show_slaves(struct device *dev , struct device_attribute *attr ,
                                               char *buf ) 
{ 
  struct w1_master *md ;
  struct w1_master *tmp ;
  int c ;
  struct list_head *ent ;
  struct list_head *n ;
  struct w1_slave *sl ;
  struct list_head  const  *__mptr ;
  int tmp___0 ;
  int tmp___1 ;

  {
  {
#line 374
  tmp = dev_to_w1_master(dev);
#line 374
  md = tmp;
#line 375
  c = 4096;
#line 377
  sl = (struct w1_slave *)0;
#line 379
  ldv_mutex_lock_38(& md->list_mutex);
#line 381
  ent = md->slist.next;
#line 381
  n = ent->next;
  }
#line 381
  goto ldv_45306;
  ldv_45305: 
  {
#line 382
  __mptr = (struct list_head  const  *)ent;
#line 382
  sl = (struct w1_slave *)((char *)__mptr + 0xffffffffffffffd8UL);
#line 384
  tmp___0 = snprintf(buf + (4096UL - (unsigned long )c), (size_t )c, "%s\n", (unsigned char *)(& sl->name));
#line 384
  c = c - tmp___0;
#line 381
  ent = n;
#line 381
  n = ent->next;
  }
  ldv_45306: ;
#line 381
  if ((unsigned long )ent != (unsigned long )(& md->slist)) {
#line 383
    goto ldv_45305;
  } else {

  }

#line 386
  if ((unsigned long )sl == (unsigned long )((struct w1_slave *)0)) {
    {
#line 387
    tmp___1 = snprintf(buf + (4096UL - (unsigned long )c), (size_t )c, "not found.\n");
#line 387
    c = c - tmp___1;
    }
  } else {

  }
  {
#line 389
  ldv_mutex_unlock_39(& md->list_mutex);
  }
#line 391
  return ((ssize_t )(4096UL - (unsigned long )c));
}
}
#line 394 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static ssize_t w1_master_attribute_show_add(struct device *dev , struct device_attribute *attr ,
                                            char *buf ) 
{ 
  int c ;
  int tmp ;

  {
  {
#line 397
  c = 4096;
#line 398
  tmp = snprintf(buf + (4096UL - (unsigned long )c), (size_t )c, "write device id xx-xxxxxxxxxxxx to add slave\n");
#line 398
  c = c - tmp;
  }
#line 400
  return ((ssize_t )(4096UL - (unsigned long )c));
}
}
#line 403 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static int w1_atoreg_num(struct device *dev , char const   *buf , size_t count , struct w1_reg_num *rn ) 
{ 
  unsigned int family ;
  unsigned long long id ;
  int i ;
  u64 rn64_le ;
  char const   *error_msg ;
  u8 tmp ;

  {
#line 416
  error_msg = "bad slave string format, expecting ff-dddddddddddd\n";
#line 419
  if ((int )((signed char )*(buf + 2UL)) != 45) {
    {
#line 420
    dev_err((struct device  const  *)dev, "%s", error_msg);
    }
#line 421
    return (-22);
  } else {

  }
  {
#line 423
  i = sscanf(buf, "%02x-%012llx", & family, & id);
  }
#line 424
  if (i != 2) {
    {
#line 425
    dev_err((struct device  const  *)dev, "%s", error_msg);
    }
#line 426
    return (-22);
  } else {

  }
  {
#line 428
  rn->family = (unsigned char )family;
#line 429
  rn->id = (unsigned long )id;
#line 431
  rn64_le = *((u64 *)rn);
#line 432
  tmp = w1_calc_crc8((u8 *)(& rn64_le), 7);
#line 432
  rn->crc = tmp;
  }
#line 439
  return (0);
}
}
#line 445 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
struct w1_slave *w1_slave_search_device(struct w1_master *dev , struct w1_reg_num *rn ) 
{ 
  struct w1_slave *sl ;
  struct list_head  const  *__mptr ;
  struct list_head  const  *__mptr___0 ;

  {
  {
#line 449
  ldv_mutex_lock_40(& dev->list_mutex);
#line 450
  __mptr = (struct list_head  const  *)dev->slist.next;
#line 450
  sl = (struct w1_slave *)((char *)__mptr + 0xffffffffffffffd8UL);
  }
#line 450
  goto ldv_45335;
  ldv_45334: ;
#line 451
  if (*((unsigned long *)sl + 7UL) == *((unsigned long *)rn + 0UL)) {
    {
#line 454
    ldv_mutex_unlock_41(& dev->list_mutex);
    }
#line 455
    return (sl);
  } else {

  }
#line 450
  __mptr___0 = (struct list_head  const  *)sl->w1_slave_entry.next;
#line 450
  sl = (struct w1_slave *)((char *)__mptr___0 + 0xffffffffffffffd8UL);
  ldv_45335: ;
#line 450
  if ((unsigned long )(& sl->w1_slave_entry) != (unsigned long )(& dev->slist)) {
#line 452
    goto ldv_45334;
  } else {

  }
  {
#line 458
  ldv_mutex_unlock_42(& dev->list_mutex);
  }
#line 459
  return ((struct w1_slave *)0);
}
}
#line 462 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static ssize_t w1_master_attribute_store_add(struct device *dev , struct device_attribute *attr ,
                                             char const   *buf , size_t count ) 
{ 
  struct w1_master *md ;
  struct w1_master *tmp ;
  struct w1_reg_num rn ;
  struct w1_slave *sl ;
  ssize_t result ;
  int tmp___0 ;

  {
  {
#line 466
  tmp = dev_to_w1_master(dev);
#line 466
  md = tmp;
#line 469
  result = (ssize_t )count;
#line 471
  tmp___0 = w1_atoreg_num(dev, buf, count, & rn);
  }
#line 471
  if (tmp___0 != 0) {
#line 472
    return (-22L);
  } else {

  }
  {
#line 474
  ldv_mutex_lock_43(& md->mutex);
#line 475
  sl = w1_slave_search_device(md, & rn);
  }
#line 480
  if ((unsigned long )sl != (unsigned long )((struct w1_slave *)0)) {
    {
#line 481
    _dev_info((struct device  const  *)dev, "Device %s already exists\n", (unsigned char *)(& sl->name));
#line 482
    result = -22L;
    }
  } else {
    {
#line 484
    w1_attach_slave_device(md, & rn);
    }
  }
  {
#line 486
  ldv_mutex_unlock_44(& md->mutex);
  }
#line 488
  return (result);
}
}
#line 491 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static ssize_t w1_master_attribute_show_remove(struct device *dev , struct device_attribute *attr ,
                                               char *buf ) 
{ 
  int c ;
  int tmp ;

  {
  {
#line 494
  c = 4096;
#line 495
  tmp = snprintf(buf + (4096UL - (unsigned long )c), (size_t )c, "write device id xx-xxxxxxxxxxxx to remove slave\n");
#line 495
  c = c - tmp;
  }
#line 497
  return ((ssize_t )(4096UL - (unsigned long )c));
}
}
#line 500 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static ssize_t w1_master_attribute_store_remove(struct device *dev , struct device_attribute *attr ,
                                                char const   *buf , size_t count ) 
{ 
  struct w1_master *md ;
  struct w1_master *tmp ;
  struct w1_reg_num rn ;
  struct w1_slave *sl ;
  ssize_t result ;
  int tmp___0 ;
  int tmp___1 ;

  {
  {
#line 504
  tmp = dev_to_w1_master(dev);
#line 504
  md = tmp;
#line 507
  result = (ssize_t )count;
#line 509
  tmp___0 = w1_atoreg_num(dev, buf, count, & rn);
  }
#line 509
  if (tmp___0 != 0) {
#line 510
    return (-22L);
  } else {

  }
  {
#line 512
  ldv_mutex_lock_45(& md->mutex);
#line 513
  sl = w1_slave_search_device(md, & rn);
  }
#line 514
  if ((unsigned long )sl != (unsigned long )((struct w1_slave *)0)) {
    {
#line 515
    tmp___1 = w1_slave_detach(sl);
#line 515
    result = (ssize_t )tmp___1;
    }
#line 517
    if (result == 0L) {
#line 518
      result = (ssize_t )count;
    } else {

    }
  } else {
    {
#line 520
    _dev_info((struct device  const  *)dev, "Device %02x-%012llx doesn\'t exists\n",
              (int )rn.family, rn.id);
#line 522
    result = -22L;
    }
  }
  {
#line 524
  ldv_mutex_unlock_46(& md->mutex);
  }
#line 526
  return (result);
}
}
#line 540 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static struct device_attribute w1_master_attribute_name  =    {{"w1_master_name", 292U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0},
                                            {(char)0}, {(char)0}, {(char)0}, {(char)0}}}},
    & w1_master_attribute_show_name, (ssize_t (*)(struct device * , struct device_attribute * ,
                                                  char const   * , size_t  ))0};
#line 541 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static struct device_attribute w1_master_attribute_slaves  =    {{"w1_master_slaves", 292U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0},
                                              {(char)0}, {(char)0}, {(char)0}, {(char)0}}}},
    & w1_master_attribute_show_slaves, (ssize_t (*)(struct device * , struct device_attribute * ,
                                                    char const   * , size_t  ))0};
#line 542 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static struct device_attribute w1_master_attribute_slave_count  =    {{"w1_master_slave_count", 292U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0},
                                                   {(char)0}, {(char)0}, {(char)0},
                                                   {(char)0}, {(char)0}}}}, & w1_master_attribute_show_slave_count,
    (ssize_t (*)(struct device * , struct device_attribute * , char const   * , size_t  ))0};
#line 543 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static struct device_attribute w1_master_attribute_max_slave_count  =    {{"w1_master_max_slave_count", 436U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0},
                                                       {(char)0}, {(char)0}, {(char)0},
                                                       {(char)0}, {(char)0}}}}, & w1_master_attribute_show_max_slave_count,
    & w1_master_attribute_store_max_slave_count};
#line 544 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static struct device_attribute w1_master_attribute_attempts  =    {{"w1_master_attempts", 292U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0},
                                                {(char)0}, {(char)0}, {(char)0}, {(char)0}}}},
    & w1_master_attribute_show_attempts, (ssize_t (*)(struct device * , struct device_attribute * ,
                                                      char const   * , size_t  ))0};
#line 545 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static struct device_attribute w1_master_attribute_timeout  =    {{"w1_master_timeout", 292U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0},
                                               {(char)0}, {(char)0}, {(char)0}, {(char)0}}}},
    & w1_master_attribute_show_timeout, (ssize_t (*)(struct device * , struct device_attribute * ,
                                                     char const   * , size_t  ))0};
#line 546 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static struct device_attribute w1_master_attribute_pointer  =    {{"w1_master_pointer", 292U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0},
                                               {(char)0}, {(char)0}, {(char)0}, {(char)0}}}},
    & w1_master_attribute_show_pointer, (ssize_t (*)(struct device * , struct device_attribute * ,
                                                     char const   * , size_t  ))0};
#line 547 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static struct device_attribute w1_master_attribute_search  =    {{"w1_master_search", 436U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0},
                                              {(char)0}, {(char)0}, {(char)0}, {(char)0}}}},
    & w1_master_attribute_show_search, & w1_master_attribute_store_search};
#line 548 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static struct device_attribute w1_master_attribute_pullup  =    {{"w1_master_pullup", 436U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0},
                                              {(char)0}, {(char)0}, {(char)0}, {(char)0}}}},
    & w1_master_attribute_show_pullup, & w1_master_attribute_store_pullup};
#line 549 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static struct device_attribute w1_master_attribute_add  =    {{"w1_master_add", 436U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0},
                                           {(char)0}, {(char)0}, {(char)0}, {(char)0}}}},
    & w1_master_attribute_show_add, & w1_master_attribute_store_add};
#line 550 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static struct device_attribute w1_master_attribute_remove  =    {{"w1_master_remove", 436U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0},
                                              {(char)0}, {(char)0}, {(char)0}, {(char)0}}}},
    & w1_master_attribute_show_remove, & w1_master_attribute_store_remove};
#line 552 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static struct attribute *w1_master_default_attrs[12U]  = 
#line 552
  {      & w1_master_attribute_name.attr,      & w1_master_attribute_slaves.attr,      & w1_master_attribute_slave_count.attr,      & w1_master_attribute_max_slave_count.attr, 
        & w1_master_attribute_attempts.attr,      & w1_master_attribute_timeout.attr,      & w1_master_attribute_pointer.attr,      & w1_master_attribute_search.attr, 
        & w1_master_attribute_pullup.attr,      & w1_master_attribute_add.attr,      & w1_master_attribute_remove.attr,      (struct attribute *)0};
#line 567 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static struct attribute_group w1_master_defattr_group  =    {0, 0, (struct attribute **)(& w1_master_default_attrs), 0};
#line 571 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
int w1_create_master_attributes(struct w1_master *master ) 
{ 
  int tmp ;

  {
  {
#line 573
  tmp = sysfs_create_group(& master->dev.kobj, (struct attribute_group  const  *)(& w1_master_defattr_group));
  }
#line 573
  return (tmp);
}
}
#line 576 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
void w1_destroy_master_attributes(struct w1_master *master ) 
{ 


  {
  {
#line 578
  sysfs_remove_group(& master->dev.kobj, (struct attribute_group  const  *)(& w1_master_defattr_group));
  }
#line 579
  return;
}
}
#line 581 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static int w1_uevent(struct device *dev , struct kobj_uevent_env *env ) 
{ 
  struct w1_master *md ;
  struct w1_slave *sl ;
  char *event_owner ;
  char *name ;
  int err ;
  struct device  const  *__mptr ;
  struct device  const  *__mptr___0 ;
  struct _ddebug descriptor ;
  long tmp ;
  struct _ddebug descriptor___0 ;
  char const   *tmp___0 ;
  long tmp___1 ;

  {
#line 583
  md = (struct w1_master *)0;
#line 584
  sl = (struct w1_slave *)0;
#line 586
  err = 0;
#line 588
  if ((unsigned long )dev->driver == (unsigned long )(& w1_master_driver)) {
#line 589
    __mptr = (struct device  const  *)dev;
#line 589
    md = (struct w1_master *)((char *)__mptr + 0xfffffffffffffd50UL);
#line 590
    event_owner = (char *)"master";
#line 591
    name = (char *)(& md->name);
  } else
#line 592
  if ((unsigned long )dev->driver == (unsigned long )(& w1_slave_driver)) {
#line 593
    __mptr___0 = (struct device  const  *)dev;
#line 593
    sl = (struct w1_slave *)((char *)__mptr___0 + 0xffffffffffffff98UL);
#line 594
    event_owner = (char *)"slave";
#line 595
    name = (char *)(& sl->name);
  } else {
    {
#line 597
    descriptor.modname = "wire";
#line 597
    descriptor.function = "w1_uevent";
#line 597
    descriptor.filename = "drivers/w1/w1.c";
#line 597
    descriptor.format = "Unknown event.\n";
#line 597
    descriptor.lineno = 597U;
#line 597
    descriptor.flags = 0U;
#line 597
    tmp = __builtin_expect((long )descriptor.flags & 1L, 0L);
    }
#line 597
    if (tmp != 0L) {
      {
#line 597
      __dynamic_dev_dbg(& descriptor, (struct device  const  *)dev, "Unknown event.\n");
      }
    } else {

    }
#line 598
    return (-22);
  }
  {
#line 601
  descriptor___0.modname = "wire";
#line 601
  descriptor___0.function = "w1_uevent";
#line 601
  descriptor___0.filename = "drivers/w1/w1.c";
#line 601
  descriptor___0.format = "Hotplug event for %s %s, bus_id=%s.\n";
#line 601
  descriptor___0.lineno = 602U;
#line 601
  descriptor___0.flags = 0U;
#line 601
  tmp___1 = __builtin_expect((long )descriptor___0.flags & 1L, 0L);
  }
#line 601
  if (tmp___1 != 0L) {
    {
#line 601
    tmp___0 = dev_name((struct device  const  *)dev);
#line 601
    __dynamic_dev_dbg(& descriptor___0, (struct device  const  *)dev, "Hotplug event for %s %s, bus_id=%s.\n",
                      event_owner, name, tmp___0);
    }
  } else {

  }
#line 604
  if ((unsigned long )dev->driver != (unsigned long )(& w1_slave_driver) || (unsigned long )sl == (unsigned long )((struct w1_slave *)0)) {
#line 605
    goto end;
  } else {

  }
  {
#line 607
  err = add_uevent_var(env, "W1_FID=%02X", (int )sl->reg_num.family);
  }
#line 608
  if (err != 0) {
#line 609
    goto end;
  } else {

  }
  {
#line 611
  err = add_uevent_var(env, "W1_SLAVE_ID=%024LX", sl->reg_num.id);
  }
  end: ;
#line 614
  return (err);
}
}
#line 617 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static int w1_family_notify(unsigned long action , struct w1_slave *sl ) 
{ 
  struct w1_family_ops *fops ;
  int err ;

  {
#line 622
  fops = (sl->family)->fops;
#line 624
  if ((unsigned long )fops == (unsigned long )((struct w1_family_ops *)0)) {
#line 625
    return (0);
  } else {

  }
  {
#line 628
  if (action == 1UL) {
#line 628
    goto case_1;
  } else {

  }
#line 650
  if (action == 2UL) {
#line 650
    goto case_2;
  } else {

  }
#line 627
  goto switch_break;
  case_1: /* CIL Label */ ;
#line 630
  if ((unsigned long )fops->add_slave != (unsigned long )((int (*)(struct w1_slave * ))0)) {
    {
#line 631
    err = (*(fops->add_slave))(sl);
    }
#line 632
    if (err < 0) {
      {
#line 633
      dev_err((struct device  const  *)(& sl->dev), "add_slave() call failed. err=%d\n",
              err);
      }
#line 636
      return (err);
    } else {

    }
  } else {

  }
#line 639
  if ((unsigned long )fops->groups != (unsigned long )((struct attribute_group  const  **)0)) {
    {
#line 640
    err = sysfs_create_groups(& sl->dev.kobj, fops->groups);
    }
#line 641
    if (err != 0) {
      {
#line 642
      dev_err((struct device  const  *)(& sl->dev), "sysfs group creation failed. err=%d\n",
              err);
      }
#line 645
      return (err);
    } else {

    }
  } else {

  }
#line 649
  goto ldv_45494;
  case_2: /* CIL Label */ ;
#line 651
  if ((unsigned long )fops->remove_slave != (unsigned long )((void (*)(struct w1_slave * ))0)) {
    {
#line 652
    (*(((sl->family)->fops)->remove_slave))(sl);
    }
  } else {

  }
#line 653
  if ((unsigned long )fops->groups != (unsigned long )((struct attribute_group  const  **)0)) {
    {
#line 654
    sysfs_remove_groups(& sl->dev.kobj, fops->groups);
    }
  } else {

  }
#line 655
  goto ldv_45494;
  switch_break: /* CIL Label */ ;
  }
  ldv_45494: ;
#line 657
  return (0);
}
}
#line 660 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static int __w1_attach_slave_device(struct w1_slave *sl ) 
{ 
  int err ;
  struct _ddebug descriptor ;
  char const   *tmp ;
  long tmp___0 ;
  char const   *tmp___1 ;

  {
  {
#line 664
  sl->dev.parent = & (sl->master)->dev;
#line 665
  sl->dev.driver = & w1_slave_driver;
#line 666
  sl->dev.bus = & w1_bus_type;
#line 667
  sl->dev.release = & w1_slave_release;
#line 668
  sl->dev.groups = (struct attribute_group  const  **)(& w1_slave_groups);
#line 670
  dev_set_name(& sl->dev, "%02x-%012llx", (unsigned int )sl->reg_num.family, sl->reg_num.id);
#line 673
  snprintf((char *)(& sl->name), 32UL, "%02x-%012llx", (unsigned int )sl->reg_num.family,
           sl->reg_num.id);
#line 678
  descriptor.modname = "wire";
#line 678
  descriptor.function = "__w1_attach_slave_device";
#line 678
  descriptor.filename = "drivers/w1/w1.c";
#line 678
  descriptor.format = "%s: registering %s as %p.\n";
#line 678
  descriptor.lineno = 679U;
#line 678
  descriptor.flags = 0U;
#line 678
  tmp___0 = __builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 678
  if (tmp___0 != 0L) {
    {
#line 678
    tmp = dev_name((struct device  const  *)(& sl->dev));
#line 678
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)(& sl->dev), "%s: registering %s as %p.\n",
                      "__w1_attach_slave_device", tmp, sl);
    }
  } else {

  }
  {
#line 682
  dev_set_uevent_suppress(& sl->dev, 1);
#line 684
  err = device_register(& sl->dev);
  }
#line 685
  if (err < 0) {
    {
#line 686
    tmp___1 = dev_name((struct device  const  *)(& sl->dev));
#line 686
    dev_err((struct device  const  *)(& sl->dev), "Device registration [%s] failed. err=%d\n",
            tmp___1, err);
    }
#line 689
    return (err);
  } else {

  }
  {
#line 691
  w1_family_notify(1UL, sl);
#line 693
  dev_set_uevent_suppress(& sl->dev, 0);
#line 694
  kobject_uevent(& sl->dev.kobj, 0);
#line 696
  ldv_mutex_lock_47(& (sl->master)->list_mutex);
#line 697
  list_add_tail(& sl->w1_slave_entry, & (sl->master)->slist);
#line 698
  ldv_mutex_unlock_48(& (sl->master)->list_mutex);
  }
#line 700
  return (0);
}
}
#line 703 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
int w1_attach_slave_device(struct w1_master *dev , struct w1_reg_num *rn ) 
{ 
  struct w1_slave *sl ;
  struct w1_family *f ;
  int err ;
  struct w1_netlink_msg msg ;
  void *tmp ;

  {
  {
#line 710
  tmp = kzalloc(1496UL, 208U);
#line 710
  sl = (struct w1_slave *)tmp;
  }
#line 711
  if ((unsigned long )sl == (unsigned long )((struct w1_slave *)0)) {
    {
#line 712
    dev_err((struct device  const  *)(& dev->dev), "%s: failed to allocate new slave device.\n",
            "w1_attach_slave_device");
    }
#line 715
    return (-12);
  } else {

  }
  {
#line 719
  sl->owner = & __this_module;
#line 720
  sl->master = dev;
#line 721
  set_bit(0L, (unsigned long volatile   *)(& sl->flags));
#line 723
  memset((void *)(& msg), 0, 12UL);
#line 724
  memcpy((void *)(& sl->reg_num), (void const   *)rn, 8UL);
#line 725
  atomic_set(& sl->refcnt, 1);
#line 726
  atomic_inc(& (sl->master)->refcnt);
#line 729
  ldv_mutex_unlock_49(& dev->mutex);
#line 730
  __request_module(1, "w1-family-0x%0x", (int )rn->family);
#line 731
  ldv_mutex_lock_50(& dev->mutex);
#line 733
  spin_lock(& w1_flock);
#line 734
  f = w1_family_registered((int )rn->family);
  }
#line 735
  if ((unsigned long )f == (unsigned long )((struct w1_family *)0)) {
    {
#line 736
    f = & w1_default_family;
#line 737
    _dev_info((struct device  const  *)(& dev->dev), "Family %x for %02x.%012llx.%02x is not registered.\n",
              (int )rn->family, (int )rn->family, rn->id, (int )rn->crc);
    }
  } else {

  }
  {
#line 741
  __w1_family_get(f);
#line 742
  spin_unlock(& w1_flock);
#line 744
  sl->family = f;
#line 747
  err = __w1_attach_slave_device(sl);
  }
#line 748
  if (err < 0) {
    {
#line 749
    dev_err((struct device  const  *)(& dev->dev), "%s: Attaching %s failed.\n", "w1_attach_slave_device",
            (unsigned char *)(& sl->name));
#line 751
    w1_family_put(sl->family);
#line 752
    kfree((void const   *)sl);
    }
#line 753
    return (err);
  } else {

  }
  {
#line 756
  sl->ttl = dev->slave_ttl;
#line 757
  dev->slave_count = dev->slave_count + 1;
#line 759
  memcpy((void *)(& msg.id.id), (void const   *)rn, 8UL);
#line 760
  msg.type = 0U;
#line 761
  w1_netlink_send(dev, & msg);
  }
#line 763
  return (0);
}
}
#line 766 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
int w1_unref_slave(struct w1_slave *sl ) 
{ 
  struct w1_master *dev ;
  int refcnt ;
  struct w1_netlink_msg msg ;
  struct _ddebug descriptor ;
  long tmp ;

  {
  {
#line 768
  dev = sl->master;
#line 770
  ldv_mutex_lock_51(& dev->list_mutex);
#line 771
  refcnt = atomic_sub_return(1, & sl->refcnt);
  }
#line 772
  if (refcnt == 0) {
    {
#line 775
    descriptor.modname = "wire";
#line 775
    descriptor.function = "w1_unref_slave";
#line 775
    descriptor.filename = "drivers/w1/w1.c";
#line 775
    descriptor.format = "%s: detaching %s [%p].\n";
#line 775
    descriptor.lineno = 776U;
#line 775
    descriptor.flags = 0U;
#line 775
    tmp = __builtin_expect((long )descriptor.flags & 1L, 0L);
    }
#line 775
    if (tmp != 0L) {
      {
#line 775
      __dynamic_dev_dbg(& descriptor, (struct device  const  *)(& sl->dev), "%s: detaching %s [%p].\n",
                        "w1_unref_slave", (unsigned char *)(& sl->name), sl);
      }
    } else {

    }
    {
#line 778
    list_del(& sl->w1_slave_entry);
#line 780
    memset((void *)(& msg), 0, 12UL);
#line 781
    memcpy((void *)(& msg.id.id), (void const   *)(& sl->reg_num), 8UL);
#line 782
    msg.type = 1U;
#line 783
    w1_netlink_send(sl->master, & msg);
#line 785
    w1_family_notify(2UL, sl);
#line 786
    device_unregister(& sl->dev);
#line 788
    memset((void *)sl, 0, 1496UL);
#line 790
    kfree((void const   *)sl);
    }
  } else {

  }
  {
#line 792
  atomic_dec(& dev->refcnt);
#line 793
  ldv_mutex_unlock_52(& dev->list_mutex);
  }
#line 794
  return (refcnt);
}
}
#line 797 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
int w1_slave_detach(struct w1_slave *sl ) 
{ 
  int destroy_now ;
  int tmp ;
  int tmp___0 ;

  {
  {
#line 801
  ldv_mutex_lock_53(& (sl->master)->list_mutex);
#line 802
  tmp = constant_test_bit(1L, (unsigned long const volatile   *)(& sl->flags));
#line 802
  destroy_now = tmp == 0;
#line 803
  set_bit(1L, (unsigned long volatile   *)(& sl->flags));
#line 804
  ldv_mutex_unlock_54(& (sl->master)->list_mutex);
  }
#line 806
  if (destroy_now != 0) {
    {
#line 807
    tmp___0 = w1_unref_slave(sl);
#line 807
    destroy_now = tmp___0 == 0;
    }
  } else {

  }
#line 808
  return (destroy_now != 0 ? 0 : -16);
}
}
#line 811 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
struct w1_master *w1_search_master_id(u32 id ) 
{ 
  struct w1_master *dev ;
  int found ;
  struct list_head  const  *__mptr ;
  struct list_head  const  *__mptr___0 ;

  {
  {
#line 814
  found = 0;
#line 816
  ldv_mutex_lock_55(& w1_mlock);
#line 817
  __mptr = (struct list_head  const  *)w1_masters.next;
#line 817
  dev = (struct w1_master *)__mptr;
  }
#line 817
  goto ldv_45534;
  ldv_45533: ;
#line 818
  if (dev->id == id) {
    {
#line 819
    found = 1;
#line 820
    atomic_inc(& dev->refcnt);
    }
#line 821
    goto ldv_45532;
  } else {

  }
#line 817
  __mptr___0 = (struct list_head  const  *)dev->w1_master_entry.next;
#line 817
  dev = (struct w1_master *)__mptr___0;
  ldv_45534: ;
#line 817
  if ((unsigned long )(& dev->w1_master_entry) != (unsigned long )(& w1_masters)) {
#line 819
    goto ldv_45533;
  } else {

  }
  ldv_45532: 
  {
#line 824
  ldv_mutex_unlock_56(& w1_mlock);
  }
#line 826
  return (found != 0 ? dev : (struct w1_master *)0);
}
}
#line 829 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
struct w1_slave *w1_search_slave(struct w1_reg_num *id ) 
{ 
  struct w1_master *dev ;
  struct w1_slave *sl ;
  int found ;
  struct list_head  const  *__mptr ;
  struct list_head  const  *__mptr___0 ;
  struct list_head  const  *__mptr___1 ;
  struct list_head  const  *__mptr___2 ;

  {
  {
#line 832
  sl = (struct w1_slave *)0;
#line 833
  found = 0;
#line 835
  ldv_mutex_lock_57(& w1_mlock);
#line 836
  __mptr = (struct list_head  const  *)w1_masters.next;
#line 836
  dev = (struct w1_master *)__mptr;
  }
#line 836
  goto ldv_45554;
  ldv_45553: 
  {
#line 837
  ldv_mutex_lock_58(& dev->list_mutex);
#line 838
  __mptr___0 = (struct list_head  const  *)dev->slist.next;
#line 838
  sl = (struct w1_slave *)((char *)__mptr___0 + 0xffffffffffffffd8UL);
  }
#line 838
  goto ldv_45551;
  ldv_45550: ;
#line 839
  if (*((unsigned long *)sl + 7UL) == *((unsigned long *)id + 0UL)) {
    {
#line 842
    found = 1;
#line 843
    atomic_inc(& dev->refcnt);
#line 844
    atomic_inc(& sl->refcnt);
    }
#line 845
    goto ldv_45549;
  } else {

  }
#line 838
  __mptr___1 = (struct list_head  const  *)sl->w1_slave_entry.next;
#line 838
  sl = (struct w1_slave *)((char *)__mptr___1 + 0xffffffffffffffd8UL);
  ldv_45551: ;
#line 838
  if ((unsigned long )(& sl->w1_slave_entry) != (unsigned long )(& dev->slist)) {
#line 840
    goto ldv_45550;
  } else {

  }
  ldv_45549: 
  {
#line 848
  ldv_mutex_unlock_59(& dev->list_mutex);
  }
#line 850
  if (found != 0) {
#line 851
    goto ldv_45552;
  } else {

  }
#line 836
  __mptr___2 = (struct list_head  const  *)dev->w1_master_entry.next;
#line 836
  dev = (struct w1_master *)__mptr___2;
  ldv_45554: ;
#line 836
  if ((unsigned long )(& dev->w1_master_entry) != (unsigned long )(& w1_masters)) {
#line 838
    goto ldv_45553;
  } else {

  }
  ldv_45552: 
  {
#line 853
  ldv_mutex_unlock_60(& w1_mlock);
  }
#line 855
  return (found != 0 ? sl : (struct w1_slave *)0);
}
}
#line 858 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
void w1_reconnect_slaves(struct w1_family *f , int attach ) 
{ 
  struct w1_slave *sl ;
  struct w1_slave *sln ;
  struct w1_master *dev ;
  struct list_head  const  *__mptr ;
  struct _ddebug descriptor ;
  long tmp ;
  struct list_head  const  *__mptr___0 ;
  struct list_head  const  *__mptr___1 ;
  struct w1_reg_num rn ;
  int tmp___0 ;
  struct list_head  const  *__mptr___2 ;
  struct _ddebug descriptor___0 ;
  long tmp___1 ;
  struct list_head  const  *__mptr___3 ;

  {
  {
#line 863
  ldv_mutex_lock_61(& w1_mlock);
#line 864
  __mptr = (struct list_head  const  *)w1_masters.next;
#line 864
  dev = (struct w1_master *)__mptr;
  }
#line 864
  goto ldv_45580;
  ldv_45579: 
  {
#line 865
  descriptor.modname = "wire";
#line 865
  descriptor.function = "w1_reconnect_slaves";
#line 865
  descriptor.filename = "drivers/w1/w1.c";
#line 865
  descriptor.format = "Reconnecting slaves in device %s for family %02x.\n";
#line 865
  descriptor.lineno = 866U;
#line 865
  descriptor.flags = 0U;
#line 865
  tmp = __builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 865
  if (tmp != 0L) {
    {
#line 865
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)(& dev->dev), "Reconnecting slaves in device %s for family %02x.\n",
                      (unsigned char *)(& dev->name), (int )f->fid);
    }
  } else {

  }
  {
#line 867
  ldv_mutex_lock_62(& dev->mutex);
#line 868
  ldv_mutex_lock_63(& dev->list_mutex);
#line 869
  __mptr___0 = (struct list_head  const  *)dev->slist.next;
#line 869
  sl = (struct w1_slave *)((char *)__mptr___0 + 0xffffffffffffffd8UL);
#line 869
  __mptr___1 = (struct list_head  const  *)sl->w1_slave_entry.next;
#line 869
  sln = (struct w1_slave *)((char *)__mptr___1 + 0xffffffffffffffd8UL);
  }
#line 869
  goto ldv_45576;
  ldv_45575: ;
#line 875
  if (((attach != 0 && (unsigned int )(sl->family)->fid == 0U) && sl->reg_num.family == (__u64 )f->fid) || (attach == 0 && (int )(sl->family)->fid == (int )f->fid)) {
    {
#line 880
    ldv_mutex_unlock_64(& dev->list_mutex);
#line 881
    memcpy((void *)(& rn), (void const   *)(& sl->reg_num), 8UL);
#line 885
    tmp___0 = w1_slave_detach(sl);
    }
#line 885
    if (tmp___0 == 0) {
      {
#line 886
      w1_attach_slave_device(dev, & rn);
      }
    } else {

    }
    {
#line 887
    ldv_mutex_lock_65(& dev->list_mutex);
    }
  } else {

  }
#line 869
  sl = sln;
#line 869
  __mptr___2 = (struct list_head  const  *)sln->w1_slave_entry.next;
#line 869
  sln = (struct w1_slave *)((char *)__mptr___2 + 0xffffffffffffffd8UL);
  ldv_45576: ;
#line 869
  if ((unsigned long )(& sl->w1_slave_entry) != (unsigned long )(& dev->slist)) {
#line 871
    goto ldv_45575;
  } else {

  }
  {
#line 890
  descriptor___0.modname = "wire";
#line 890
  descriptor___0.function = "w1_reconnect_slaves";
#line 890
  descriptor___0.filename = "drivers/w1/w1.c";
#line 890
  descriptor___0.format = "Reconnecting slaves in device %s has been finished.\n";
#line 890
  descriptor___0.lineno = 891U;
#line 890
  descriptor___0.flags = 0U;
#line 890
  tmp___1 = __builtin_expect((long )descriptor___0.flags & 1L, 0L);
  }
#line 890
  if (tmp___1 != 0L) {
    {
#line 890
    __dynamic_dev_dbg(& descriptor___0, (struct device  const  *)(& dev->dev), "Reconnecting slaves in device %s has been finished.\n",
                      (unsigned char *)(& dev->name));
    }
  } else {

  }
  {
#line 892
  ldv_mutex_unlock_66(& dev->list_mutex);
#line 893
  ldv_mutex_unlock_67(& dev->mutex);
#line 864
  __mptr___3 = (struct list_head  const  *)dev->w1_master_entry.next;
#line 864
  dev = (struct w1_master *)__mptr___3;
  }
  ldv_45580: ;
#line 864
  if ((unsigned long )(& dev->w1_master_entry) != (unsigned long )(& w1_masters)) {
#line 866
    goto ldv_45579;
  } else {

  }
  {
#line 895
  ldv_mutex_unlock_68(& w1_mlock);
  }
#line 896
  return;
}
}
#line 898 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
void w1_slave_found(struct w1_master *dev , u64 rn ) 
{ 
  struct w1_slave *sl ;
  struct w1_reg_num *tmp ;
  u64 rn_le ;
  u8 tmp___0 ;

  {
  {
#line 902
  rn_le = rn;
#line 904
  atomic_inc(& dev->refcnt);
#line 906
  tmp = (struct w1_reg_num *)(& rn);
#line 908
  sl = w1_slave_search_device(dev, tmp);
  }
#line 909
  if ((unsigned long )sl != (unsigned long )((struct w1_slave *)0)) {
    {
#line 910
    set_bit(0L, (unsigned long volatile   *)(& sl->flags));
    }
  } else
#line 912
  if (rn != 0ULL) {
    {
#line 912
    tmp___0 = w1_calc_crc8((u8 *)(& rn_le), 7);
    }
#line 912
    if (tmp->crc == (__u64 )tmp___0) {
      {
#line 913
      w1_attach_slave_device(dev, tmp);
      }
    } else {

    }
  } else {

  }
  {
#line 916
  atomic_dec(& dev->refcnt);
  }
#line 917
  return;
}
}
#line 936 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
void w1_search(struct w1_master *dev , u8 search_type , void (*cb)(struct w1_master * ,
                                                                   u64  ) ) 
{ 
  u64 last_rn ;
  u64 rn ;
  u64 tmp64 ;
  int i ;
  int slave_count ;
  int last_zero ;
  int last_device ;
  int search_bit ;
  int desc_bit ;
  u8 triplet_ret ;
  struct _ddebug descriptor ;
  long tmp ;
  int tmp___0 ;
  int rv ;
  u8 tmp___1 ;
  struct _ddebug descriptor___0 ;
  long tmp___2 ;
  int tmp___3 ;
  int tmp___4 ;
  int tmp___5 ;

  {
#line 939
  slave_count = 0;
#line 942
  triplet_ret = 0U;
#line 944
  search_bit = 0;
#line 945
  rn = dev->search_id;
#line 946
  last_rn = 0ULL;
#line 947
  last_device = 0;
#line 948
  last_zero = -1;
#line 950
  desc_bit = 64;
#line 952
  goto ldv_45613;
  ldv_45612: 
  {
#line 953
  last_rn = rn;
#line 954
  rn = 0ULL;
#line 962
  ldv_mutex_lock_69(& dev->bus_mutex);
#line 963
  tmp___0 = w1_reset_bus(dev);
  }
#line 963
  if (tmp___0 != 0) {
    {
#line 964
    ldv_mutex_unlock_70(& dev->bus_mutex);
#line 965
    descriptor.modname = "wire";
#line 965
    descriptor.function = "w1_search";
#line 965
    descriptor.filename = "drivers/w1/w1.c";
#line 965
    descriptor.format = "No devices present on the wire.\n";
#line 965
    descriptor.lineno = 965U;
#line 965
    descriptor.flags = 0U;
#line 965
    tmp = __builtin_expect((long )descriptor.flags & 1L, 0L);
    }
#line 965
    if (tmp != 0L) {
      {
#line 965
      __dynamic_dev_dbg(& descriptor, (struct device  const  *)(& dev->dev), "No devices present on the wire.\n");
      }
    } else {

    }
#line 966
    goto ldv_45606;
  } else {

  }
#line 970
  if (dev->max_slave_count == 1) {
    {
#line 972
    w1_write_8(dev, 51);
#line 973
    tmp___1 = w1_read_block(dev, (u8 *)(& rn), 8);
#line 973
    rv = (int )tmp___1;
#line 974
    ldv_mutex_unlock_71(& dev->bus_mutex);
    }
#line 976
    if (rv == 8 && rn != 0ULL) {
      {
#line 977
      (*cb)(dev, rn);
      }
    } else {

    }
#line 979
    goto ldv_45606;
  } else {

  }
  {
#line 983
  w1_write_8(dev, (int )search_type);
#line 984
  i = 0;
  }
#line 984
  goto ldv_45611;
  ldv_45610: ;
#line 986
  if (i == desc_bit) {
#line 987
    search_bit = 1;
  } else
#line 988
  if (i > desc_bit) {
#line 989
    search_bit = 0;
  } else {
#line 991
    search_bit = (int )(last_rn >> i) & 1;
  }
  {
#line 994
  triplet_ret = w1_triplet(dev, search_bit);
  }
#line 997
  if (((int )triplet_ret & 3) == 3) {
#line 998
    goto ldv_45608;
  } else {

  }
#line 1001
  if ((unsigned int )triplet_ret == 0U) {
#line 1002
    last_zero = i;
  } else {

  }
  {
#line 1005
  tmp64 = (u64 )((int )triplet_ret >> 2);
#line 1006
  rn = rn | (tmp64 << i);
#line 1008
  tmp___3 = constant_test_bit(0L, (unsigned long const volatile   *)(& dev->flags));
  }
#line 1008
  if (tmp___3 != 0) {
    {
#line 1009
    ldv_mutex_unlock_72(& dev->bus_mutex);
#line 1010
    descriptor___0.modname = "wire";
#line 1010
    descriptor___0.function = "w1_search";
#line 1010
    descriptor___0.filename = "drivers/w1/w1.c";
#line 1010
    descriptor___0.format = "Abort w1_search\n";
#line 1010
    descriptor___0.lineno = 1010U;
#line 1010
    descriptor___0.flags = 0U;
#line 1010
    tmp___2 = __builtin_expect((long )descriptor___0.flags & 1L, 0L);
    }
#line 1010
    if (tmp___2 != 0L) {
      {
#line 1010
      __dynamic_dev_dbg(& descriptor___0, (struct device  const  *)(& dev->dev), "Abort w1_search\n");
      }
    } else {

    }
#line 1011
    return;
  } else {

  }
#line 984
  i = i + 1;
  ldv_45611: ;
#line 984
  if (i <= 63) {
#line 986
    goto ldv_45610;
  } else {

  }
  ldv_45608: 
  {
#line 1014
  ldv_mutex_unlock_73(& dev->bus_mutex);
  }
#line 1016
  if (((int )triplet_ret & 3) != 3) {
#line 1017
    if (desc_bit == last_zero || last_zero < 0) {
#line 1018
      last_device = 1;
#line 1019
      dev->search_id = 0ULL;
    } else {
#line 1021
      dev->search_id = rn;
    }
    {
#line 1023
    desc_bit = last_zero;
#line 1024
    (*cb)(dev, rn);
    }
  } else {

  }
#line 1027
  if (last_device == 0 && slave_count == dev->max_slave_count) {
    {
#line 1027
    tmp___4 = constant_test_bit(1L, (unsigned long const volatile   *)(& dev->flags));
    }
#line 1027
    if (tmp___4 == 0) {
      {
#line 1036
      _dev_info((struct device  const  *)(& dev->dev), "%s: max_slave_count %d reached, will continue next search.\n",
                "w1_search", dev->max_slave_count);
#line 1039
      set_bit(1L, (unsigned long volatile   *)(& dev->flags));
      }
    } else {

    }
  } else {

  }
  ldv_45613: ;
#line 952
  if (last_device == 0) {
#line 952
    tmp___5 = slave_count;
#line 952
    slave_count = slave_count + 1;
#line 952
    if (tmp___5 < dev->max_slave_count) {
#line 954
      goto ldv_45612;
    } else {
#line 957
      goto ldv_45606;
    }
  } else {

  }
  ldv_45606: ;
#line 959
  return;
}
}
#line 1044 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
void w1_search_process_cb(struct w1_master *dev , u8 search_type , void (*cb)(struct w1_master * ,
                                                                              u64  ) ) 
{ 
  struct w1_slave *sl ;
  struct w1_slave *sln ;
  struct list_head  const  *__mptr ;
  struct list_head  const  *__mptr___0 ;
  struct list_head  const  *__mptr___1 ;
  struct list_head  const  *__mptr___2 ;
  int tmp ;
  int tmp___0 ;
  struct list_head  const  *__mptr___3 ;

  {
  {
#line 1049
  ldv_mutex_lock_74(& dev->list_mutex);
#line 1050
  __mptr = (struct list_head  const  *)dev->slist.next;
#line 1050
  sl = (struct w1_slave *)((char *)__mptr + 0xffffffffffffffd8UL);
  }
#line 1050
  goto ldv_45626;
  ldv_45625: 
  {
#line 1051
  clear_bit(0L, (unsigned long volatile   *)(& sl->flags));
#line 1050
  __mptr___0 = (struct list_head  const  *)sl->w1_slave_entry.next;
#line 1050
  sl = (struct w1_slave *)((char *)__mptr___0 + 0xffffffffffffffd8UL);
  }
  ldv_45626: ;
#line 1050
  if ((unsigned long )(& sl->w1_slave_entry) != (unsigned long )(& dev->slist)) {
#line 1052
    goto ldv_45625;
  } else {

  }
  {
#line 1052
  ldv_mutex_unlock_75(& dev->list_mutex);
#line 1054
  w1_search_devices(dev, (int )search_type, cb);
#line 1056
  ldv_mutex_lock_76(& dev->list_mutex);
#line 1057
  __mptr___1 = (struct list_head  const  *)dev->slist.next;
#line 1057
  sl = (struct w1_slave *)((char *)__mptr___1 + 0xffffffffffffffd8UL);
#line 1057
  __mptr___2 = (struct list_head  const  *)sl->w1_slave_entry.next;
#line 1057
  sln = (struct w1_slave *)((char *)__mptr___2 + 0xffffffffffffffd8UL);
  }
#line 1057
  goto ldv_45635;
  ldv_45634: 
  {
#line 1058
  tmp___0 = constant_test_bit(0L, (unsigned long const volatile   *)(& sl->flags));
  }
#line 1058
  if (tmp___0 == 0) {
#line 1058
    sl->ttl = sl->ttl - 1;
#line 1058
    if (sl->ttl == 0) {
      {
#line 1059
      ldv_mutex_unlock_77(& dev->list_mutex);
#line 1060
      w1_slave_detach(sl);
#line 1061
      ldv_mutex_lock_78(& dev->list_mutex);
      }
    } else {
#line 1058
      goto _L;
    }
  } else {
    _L: /* CIL Label */ 
    {
#line 1063
    tmp = constant_test_bit(0L, (unsigned long const volatile   *)(& sl->flags));
    }
#line 1063
    if (tmp != 0) {
#line 1064
      sl->ttl = dev->slave_ttl;
    } else {

    }
  }
#line 1057
  sl = sln;
#line 1057
  __mptr___3 = (struct list_head  const  *)sln->w1_slave_entry.next;
#line 1057
  sln = (struct w1_slave *)((char *)__mptr___3 + 0xffffffffffffffd8UL);
  ldv_45635: ;
#line 1057
  if ((unsigned long )(& sl->w1_slave_entry) != (unsigned long )(& dev->slist)) {
#line 1059
    goto ldv_45634;
  } else {

  }
  {
#line 1066
  ldv_mutex_unlock_79(& dev->list_mutex);
  }
#line 1068
  if (dev->search_count > 0) {
#line 1069
    dev->search_count = dev->search_count - 1;
  } else {

  }
#line 1070
  return;
}
}
#line 1072 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static void w1_search_process(struct w1_master *dev , u8 search_type ) 
{ 


  {
  {
#line 1074
  w1_search_process_cb(dev, (int )search_type, & w1_slave_found);
  }
#line 1075
  return;
}
}
#line 1085 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
int w1_process_callbacks(struct w1_master *dev ) 
{ 
  int ret ;
  struct w1_async_cmd *async_cmd ;
  struct w1_async_cmd *async_n ;
  struct list_head  const  *__mptr ;
  struct list_head  const  *__mptr___0 ;
  struct list_head  const  *__mptr___1 ;
  int tmp ;

  {
#line 1087
  ret = 0;
#line 1091
  goto ldv_45657;
  ldv_45656: 
#line 1092
  __mptr = (struct list_head  const  *)dev->async_list.next;
#line 1092
  async_cmd = (struct w1_async_cmd *)__mptr;
#line 1092
  __mptr___0 = (struct list_head  const  *)async_cmd->async_entry.next;
#line 1092
  async_n = (struct w1_async_cmd *)__mptr___0;
#line 1092
  goto ldv_45654;
  ldv_45653: 
  {
#line 1096
  ldv_mutex_unlock_80(& dev->list_mutex);
#line 1097
  (*(async_cmd->cb))(dev, async_cmd);
#line 1098
  ret = 1;
#line 1099
  ldv_mutex_lock_81(& dev->list_mutex);
#line 1092
  async_cmd = async_n;
#line 1092
  __mptr___1 = (struct list_head  const  *)async_n->async_entry.next;
#line 1092
  async_n = (struct w1_async_cmd *)__mptr___1;
  }
  ldv_45654: ;
#line 1092
  if ((unsigned long )(& async_cmd->async_entry) != (unsigned long )(& dev->async_list)) {
#line 1094
    goto ldv_45653;
  } else {

  }

  ldv_45657: 
  {
#line 1091
  tmp = list_empty((struct list_head  const  *)(& dev->async_list));
  }
#line 1091
  if (tmp == 0) {
#line 1093
    goto ldv_45656;
  } else {

  }

#line 1102
  return (ret);
}
}
#line 1105 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
int w1_process(void *data ) 
{ 
  struct w1_master *dev ;
  unsigned long jtime ;
  unsigned long tmp ;
  unsigned long jremain ;
  int tmp___0 ;
  struct task_struct *tmp___1 ;
  bool tmp___2 ;
  long tmp___3 ;

  {
  {
#line 1107
  dev = (struct w1_master *)data;
#line 1111
  tmp = msecs_to_jiffies((unsigned int const   )(w1_timeout * 1000));
#line 1111
  jtime = tmp;
#line 1113
  jremain = 0UL;
  }
  ldv_45666: ;
#line 1117
  if (jremain == 0UL && dev->search_count != 0) {
    {
#line 1118
    ldv_mutex_lock_82(& dev->mutex);
#line 1119
    w1_search_process(dev, 240);
#line 1120
    ldv_mutex_unlock_83(& dev->mutex);
    }
  } else {

  }
  {
#line 1123
  ldv_mutex_lock_84(& dev->list_mutex);
#line 1127
  tmp___0 = w1_process_callbacks(dev);
  }
#line 1127
  if (tmp___0 == 0 && jremain != 0UL) {
#line 1132
    jremain = 1UL;
  } else {

  }
  {
#line 1135
  try_to_freeze();
#line 1136
  tmp___1 = get_current();
#line 1136
  tmp___1->state = 1L;
#line 1141
  ldv_mutex_unlock_85(& dev->list_mutex);
#line 1143
  tmp___2 = kthread_should_stop();
  }
#line 1143
  if ((int )tmp___2) {
#line 1144
    goto ldv_45665;
  } else {

  }
#line 1147
  if (dev->search_count != 0) {
#line 1148
    if (jremain == 0UL) {
#line 1149
      jremain = jtime;
    } else {

    }
    {
#line 1150
    tmp___3 = schedule_timeout((long )jremain);
#line 1150
    jremain = (unsigned long )tmp___3;
    }
  } else {
    {
#line 1153
    schedule();
    }
  }
#line 1154
  goto ldv_45666;
  ldv_45665: 
  {
#line 1156
  atomic_dec(& dev->refcnt);
  }
#line 1158
  return (0);
}
}
#line 1161 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static int w1_init(void) 
{ 
  int retval ;

  {
  {
#line 1165
  printk("\016Driver for 1-wire Dallas network protocol.\n");
#line 1167
  w1_init_netlink();
#line 1169
  retval = bus_register(& w1_bus_type);
  }
#line 1170
  if (retval != 0) {
    {
#line 1171
    printk("\vFailed to register bus. err=%d.\n", retval);
    }
#line 1172
    goto err_out_exit_init;
  } else {

  }
  {
#line 1175
  retval = ldv_driver_register_86(& w1_master_driver);
  }
#line 1176
  if (retval != 0) {
    {
#line 1177
    printk("\vFailed to register master driver. err=%d.\n", retval);
    }
#line 1180
    goto err_out_bus_unregister;
  } else {

  }
  {
#line 1183
  retval = ldv_driver_register_87(& w1_slave_driver);
  }
#line 1184
  if (retval != 0) {
    {
#line 1185
    printk("\vFailed to register slave driver. err=%d.\n", retval);
    }
#line 1188
    goto err_out_master_unregister;
  } else {

  }
#line 1191
  return (0);
  err_out_master_unregister: 
  {
#line 1200
  ldv_driver_unregister_88(& w1_master_driver);
  }
  err_out_bus_unregister: 
  {
#line 1203
  bus_unregister(& w1_bus_type);
  }
  err_out_exit_init: ;
#line 1206
  return (retval);
}
}
#line 1209 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.c"
static void w1_fini(void) 
{ 
  struct w1_master *dev ;
  struct list_head  const  *__mptr ;
  struct list_head  const  *__mptr___0 ;

  {
#line 1214
  __mptr = (struct list_head  const  *)w1_masters.next;
#line 1214
  dev = (struct w1_master *)__mptr;
#line 1214
  goto ldv_45683;
  ldv_45682: 
  {
#line 1215
  __w1_remove_master_device(dev);
#line 1214
  __mptr___0 = (struct list_head  const  *)dev->w1_master_entry.next;
#line 1214
  dev = (struct w1_master *)__mptr___0;
  }
  ldv_45683: ;
#line 1214
  if ((unsigned long )(& dev->w1_master_entry) != (unsigned long )(& w1_masters)) {
#line 1216
    goto ldv_45682;
  } else {

  }
  {
#line 1217
  w1_fini_netlink();
#line 1219
  ldv_driver_unregister_89(& w1_slave_driver);
#line 1220
  ldv_driver_unregister_90(& w1_master_driver);
#line 1221
  bus_unregister(& w1_bus_type);
  }
#line 1222
  return;
}
}
#line 101 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
void ldv_dispatch_default_deregister_4_4_4(void) ;
#line 102
void ldv_dispatch_deregister_5_1(struct device_driver *arg0 ) ;
#line 103
void ldv_dispatch_insmod_deregister_8_1(void) ;
#line 104
void ldv_dispatch_insmod_register_8_2(void) ;
#line 105
void ldv_dispatch_register_6_3(struct device_driver *arg0 ) ;
#line 106
int ldv_emg_driver_register(struct device_driver *arg0 ) ;
#line 107
void ldv_emg_driver_unregister(struct device_driver *arg0 ) ;
#line 109
void ldv_insmod_4(void *arg0 ) ;
#line 110
void ldv_insmod_ds2482_driver_exit_4_3(void (*arg0)(void) ) ;
#line 111
int ldv_insmod_ds2482_driver_init_4_10(int (*arg0)(void) ) ;
#line 112
void ldv_insmod_w1_fini_4_13(void (*arg0)(void) ) ;
#line 113
void ldv_insmod_w1_fini_4_2(void (*arg0)(void) ) ;
#line 114
void ldv_insmod_w1_fini_4_8(void (*arg0)(void) ) ;
#line 115
int ldv_insmod_w1_init_4_15(int (*arg0)(void) ) ;
#line 116
void ldv_main_8(void *arg0 ) ;
#line 118
void ldv_random_containerless_scenario_2(void *arg0 ) ;
#line 119
void ldv_random_containerless_scenario_callback_2_3(int (*arg0)(struct device * ) ,
                                                    struct device *arg1 ) ;
#line 120
int main(void) ;
#line 128 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
void ldv_dispatch_default_deregister_4_4_4(void) 
{ 


  {
#line 131
  return;
}
}
#line 135 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
void ldv_dispatch_deregister_5_1(struct device_driver *arg0 ) 
{ 


  {
#line 138
  return;
}
}
#line 142 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
void ldv_dispatch_insmod_deregister_8_1(void) 
{ 


  {
#line 145
  return;
}
}
#line 149 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
void ldv_dispatch_insmod_register_8_2(void) 
{ 
  struct ldv_struct_insmod_4 *cf_arg_4 ;
  void *tmp ;

  {
  {
#line 151
  tmp = ldv_xmalloc(4UL);
#line 151
  cf_arg_4 = (struct ldv_struct_insmod_4 *)tmp;
#line 152
  ldv_insmod_4((void *)cf_arg_4);
  }
#line 153
  return;
}
}
#line 157 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
void ldv_dispatch_register_6_3(struct device_driver *arg0 ) 
{ 
  struct ldv_struct_random_containerless_scenario_2 *cf_arg_2 ;
  void *tmp ;

  {
  {
#line 159
  tmp = ldv_xmalloc(16UL);
#line 159
  cf_arg_2 = (struct ldv_struct_random_containerless_scenario_2 *)tmp;
#line 160
  cf_arg_2->arg0 = arg0;
#line 161
  ldv_random_containerless_scenario_2((void *)cf_arg_2);
  }
#line 162
  return;
}
}
#line 166 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
int ldv_emg_driver_register(struct device_driver *arg0 ) 
{ 
  struct device_driver *ldv_6_device_driver_device_driver ;
  int tmp ;
  int tmp___0 ;

  {
  {
#line 173
  tmp___0 = ldv_undef_int();
  }
#line 173
  if (tmp___0 != 0) {
    {
#line 175
    ldv_6_device_driver_device_driver = arg0;
#line 179
    ldv_dispatch_register_6_3(ldv_6_device_driver_device_driver);
    }
#line 183
    return (0);
  } else {
    {
#line 190
    tmp = ldv_undef_int_negative();
    }
#line 190
    return (tmp);
  }
}
}
#line 200 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
void ldv_emg_driver_unregister(struct device_driver *arg0 ) 
{ 
  struct device_driver *ldv_5_device_driver_device_driver ;

  {
  {
#line 206
  ldv_5_device_driver_device_driver = arg0;
#line 210
  ldv_dispatch_deregister_5_1(ldv_5_device_driver_device_driver);
  }
#line 214
  return;
#line 216
  return;
}
}
#line 221 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
void ldv_insmod_4(void *arg0 ) 
{ 
  void (*ldv_4_ds2482_driver_exit_default)(void) ;
  int (*ldv_4_ds2482_driver_init_default)(void) ;
  int ldv_4_reg_guard_4_default ;
  int ldv_4_ret_default ;
  void (*ldv_4_w1_fini_default)(void) ;
  int (*ldv_4_w1_init_default)(void) ;
  int tmp ;
  int tmp___0 ;

  {
  {
#line 232
  ldv_free(arg0);
#line 237
  ldv_4_ret_default = ldv_insmod_w1_init_4_15(ldv_4_w1_init_default);
#line 239
  ldv_4_ret_default = ldv_post_init(ldv_4_ret_default);
#line 242
  tmp___0 = ldv_undef_int();
  }
#line 242
  if (tmp___0 != 0) {
    {
#line 244
    __VERIFIER_assume(ldv_4_ret_default != 0);
#line 249
    ldv_insmod_w1_fini_4_13(ldv_4_w1_fini_default);
    }
#line 257
    return;
  } else {
    {
#line 261
    __VERIFIER_assume(ldv_4_ret_default == 0);
#line 266
    ldv_4_ret_default = ldv_insmod_ds2482_driver_init_4_10(ldv_4_ds2482_driver_init_default);
#line 268
    ldv_4_ret_default = ldv_post_init(ldv_4_ret_default);
#line 271
    tmp = ldv_undef_int();
    }
#line 271
    if (tmp != 0) {
      {
#line 273
      __VERIFIER_assume(ldv_4_ret_default != 0);
#line 278
      ldv_insmod_w1_fini_4_8(ldv_4_w1_fini_default);
      }
#line 286
      return;
    } else {
      {
#line 290
      __VERIFIER_assume(ldv_4_ret_default == 0);
#line 294
      ldv_4_reg_guard_4_default = ldv_undef_int();
      }
#line 298
      if (ldv_4_reg_guard_4_default != 0) {
        {
#line 299
        ldv_dispatch_default_deregister_4_4_4();
        }
      } else {

      }
      {
#line 305
      ldv_insmod_ds2482_driver_exit_4_3(ldv_4_ds2482_driver_exit_default);
#line 310
      ldv_insmod_w1_fini_4_2(ldv_4_w1_fini_default);
      }
#line 318
      return;
    }
  }
#line 322
  return;
}
}
#line 327 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
void ldv_insmod_w1_fini_4_13(void (*arg0)(void) ) 
{ 


  {
  {
#line 328
  w1_fini();
  }
#line 329
  return;
}
}
#line 332 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
void ldv_insmod_w1_fini_4_2(void (*arg0)(void) ) 
{ 


  {
  {
#line 333
  w1_fini();
  }
#line 334
  return;
}
}
#line 337 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
void ldv_insmod_w1_fini_4_8(void (*arg0)(void) ) 
{ 


  {
  {
#line 338
  w1_fini();
  }
#line 339
  return;
}
}
#line 342 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
int ldv_insmod_w1_init_4_15(int (*arg0)(void) ) 
{ 
  int tmp ;

  {
  {
#line 343
  tmp = w1_init();
  }
#line 343
  return (tmp);
}
}
#line 347 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
void ldv_main_8(void *arg0 ) 
{ 


  {
  {
#line 352
  ldv_dispatch_insmod_register_8_2();
#line 356
  ldv_dispatch_insmod_deregister_8_1();
  }
#line 360
  return;
#line 362
  return;
}
}
#line 367 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
void ldv_random_containerless_scenario_2(void *arg0 ) 
{ 
  int (*ldv_2_callback_probe)(struct device * ) ;
  struct device_driver *ldv_2_container_device_driver ;
  struct device *ldv_2_ldv_param_3_0_default ;
  struct ldv_struct_random_containerless_scenario_2 *data ;
  void *tmp ;
  int tmp___0 ;

  {
#line 374
  data = (struct ldv_struct_random_containerless_scenario_2 *)arg0;
#line 379
  if ((unsigned long )data != (unsigned long )((struct ldv_struct_random_containerless_scenario_2 *)0)) {
    {
#line 380
    ldv_2_container_device_driver = data->arg0;
#line 381
    ldv_free((void *)data);
    }
  } else {

  }
#line 389
  goto ldv_call_2;
#line 391
  return;
  ldv_call_2: 
  {
#line 397
  tmp___0 = ldv_undef_int();
  }
#line 397
  if (tmp___0 != 0) {
    {
#line 399
    tmp = ldv_xmalloc_unknown_size(0UL);
#line 399
    ldv_2_ldv_param_3_0_default = (struct device *)tmp;
#line 404
    ldv_random_containerless_scenario_callback_2_3(ldv_2_callback_probe, ldv_2_ldv_param_3_0_default);
#line 408
    ldv_free((void *)ldv_2_ldv_param_3_0_default);
    }
#line 415
    goto ldv_call_2;
  } else {
#line 423
    return;
  }
#line 426
  return;
}
}
#line 431 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
void ldv_random_containerless_scenario_callback_2_3(int (*arg0)(struct device * ) ,
                                                    struct device *arg1 ) 
{ 


  {
  {
#line 432
  w1_master_probe(arg1);
  }
#line 433
  return;
}
}
#line 436 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
int main(void) 
{ 


  {
  {
#line 439
  ldv_initialize();
#line 442
  ldv_main_8((void *)0);
#line 445
  ldv_check_final_state();
  }
#line 447
  return (0);
}
}
#line 528 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
__inline static void *kzalloc(size_t size , gfp_t flags ) 
{ 
  void *tmp ;

  {
  {
#line 531
  tmp = ldv_kzalloc(size, flags);
  }
#line 531
  return (tmp);
}
}
#line 551 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_14(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 555
  ldv_mutex_lock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 556
  return;
}
}
#line 559 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_15(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 563
  ldv_mutex_unlock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 564
  return;
}
}
#line 567 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_16(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 571
  ldv_mutex_lock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 572
  return;
}
}
#line 575 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_17(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 579
  ldv_mutex_unlock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 580
  return;
}
}
#line 583 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_18(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 587
  ldv_mutex_lock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 588
  return;
}
}
#line 591 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_19(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 595
  ldv_mutex_unlock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 596
  return;
}
}
#line 599 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_20(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 603
  ldv_mutex_lock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 604
  return;
}
}
#line 607 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_21(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 611
  ldv_mutex_unlock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 612
  return;
}
}
#line 615 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_22(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 619
  ldv_mutex_lock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 620
  return;
}
}
#line 623 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_23(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 627
  ldv_mutex_unlock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 628
  return;
}
}
#line 631 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_24(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 635
  ldv_mutex_lock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 636
  return;
}
}
#line 639 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_25(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 643
  ldv_mutex_unlock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 644
  return;
}
}
#line 647 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_26(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 651
  ldv_mutex_lock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 652
  return;
}
}
#line 655 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_27(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 659
  ldv_mutex_unlock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 660
  return;
}
}
#line 663 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_28(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 667
  ldv_mutex_lock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 668
  return;
}
}
#line 671 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_29(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 675
  ldv_mutex_unlock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 676
  return;
}
}
#line 679 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_30(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 683
  ldv_mutex_lock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 684
  return;
}
}
#line 687 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_31(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 691
  ldv_mutex_unlock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 692
  return;
}
}
#line 695 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_32(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 699
  ldv_mutex_lock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 700
  return;
}
}
#line 703 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_33(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 707
  ldv_mutex_unlock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 708
  return;
}
}
#line 711 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_34(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 715
  ldv_mutex_lock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 716
  return;
}
}
#line 719 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_35(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 723
  ldv_mutex_unlock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 724
  return;
}
}
#line 727 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_36(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 731
  ldv_mutex_lock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 732
  return;
}
}
#line 735 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_37(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 739
  ldv_mutex_unlock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 740
  return;
}
}
#line 743 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_38(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 747
  ldv_mutex_lock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 748
  return;
}
}
#line 751 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_39(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 755
  ldv_mutex_unlock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 756
  return;
}
}
#line 759 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_40(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 763
  ldv_mutex_lock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 764
  return;
}
}
#line 767 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_41(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 771
  ldv_mutex_unlock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 772
  return;
}
}
#line 775 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_42(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 779
  ldv_mutex_unlock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 780
  return;
}
}
#line 783 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_43(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 787
  ldv_mutex_lock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 788
  return;
}
}
#line 791 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_44(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 795
  ldv_mutex_unlock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 796
  return;
}
}
#line 799 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_45(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 803
  ldv_mutex_lock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 804
  return;
}
}
#line 807 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_46(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 811
  ldv_mutex_unlock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 812
  return;
}
}
#line 815 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_47(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 819
  ldv_mutex_lock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 820
  return;
}
}
#line 823 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_48(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 827
  ldv_mutex_unlock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 828
  return;
}
}
#line 831 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_49(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 835
  ldv_mutex_unlock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 836
  return;
}
}
#line 839 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_50(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 843
  ldv_mutex_lock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 844
  return;
}
}
#line 847 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_51(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 851
  ldv_mutex_lock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 852
  return;
}
}
#line 855 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_52(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 859
  ldv_mutex_unlock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 860
  return;
}
}
#line 863 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_53(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 867
  ldv_mutex_lock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 868
  return;
}
}
#line 871 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_54(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 875
  ldv_mutex_unlock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 876
  return;
}
}
#line 879 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_55(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 883
  ldv_mutex_lock_w1_mlock(ldv_func_arg1);
  }
#line 884
  return;
}
}
#line 887 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_56(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 891
  ldv_mutex_unlock_w1_mlock(ldv_func_arg1);
  }
#line 892
  return;
}
}
#line 895 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_57(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 899
  ldv_mutex_lock_w1_mlock(ldv_func_arg1);
  }
#line 900
  return;
}
}
#line 903 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_58(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 907
  ldv_mutex_lock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 908
  return;
}
}
#line 911 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_59(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 915
  ldv_mutex_unlock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 916
  return;
}
}
#line 919 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_60(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 923
  ldv_mutex_unlock_w1_mlock(ldv_func_arg1);
  }
#line 924
  return;
}
}
#line 927 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_61(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 931
  ldv_mutex_lock_w1_mlock(ldv_func_arg1);
  }
#line 932
  return;
}
}
#line 935 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_62(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 939
  ldv_mutex_lock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 940
  return;
}
}
#line 943 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_63(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 947
  ldv_mutex_lock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 948
  return;
}
}
#line 951 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_64(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 955
  ldv_mutex_unlock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 956
  return;
}
}
#line 959 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_65(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 963
  ldv_mutex_lock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 964
  return;
}
}
#line 967 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_66(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 971
  ldv_mutex_unlock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 972
  return;
}
}
#line 975 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_67(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 979
  ldv_mutex_unlock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 980
  return;
}
}
#line 983 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_68(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 987
  ldv_mutex_unlock_w1_mlock(ldv_func_arg1);
  }
#line 988
  return;
}
}
#line 991 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_69(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 995
  ldv_mutex_lock_bus_mutex_of_w1_master(ldv_func_arg1);
  }
#line 996
  return;
}
}
#line 999 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_70(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 1003
  ldv_mutex_unlock_bus_mutex_of_w1_master(ldv_func_arg1);
  }
#line 1004
  return;
}
}
#line 1007 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_71(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 1011
  ldv_mutex_unlock_bus_mutex_of_w1_master(ldv_func_arg1);
  }
#line 1012
  return;
}
}
#line 1015 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_72(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 1019
  ldv_mutex_unlock_bus_mutex_of_w1_master(ldv_func_arg1);
  }
#line 1020
  return;
}
}
#line 1023 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_73(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 1027
  ldv_mutex_unlock_bus_mutex_of_w1_master(ldv_func_arg1);
  }
#line 1028
  return;
}
}
#line 1031 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_74(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 1035
  ldv_mutex_lock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 1036
  return;
}
}
#line 1039 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_75(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 1043
  ldv_mutex_unlock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 1044
  return;
}
}
#line 1047 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_76(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 1051
  ldv_mutex_lock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 1052
  return;
}
}
#line 1055 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_77(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 1059
  ldv_mutex_unlock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 1060
  return;
}
}
#line 1063 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_78(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 1067
  ldv_mutex_lock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 1068
  return;
}
}
#line 1071 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_79(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 1075
  ldv_mutex_unlock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 1076
  return;
}
}
#line 1079 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_80(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 1083
  ldv_mutex_unlock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 1084
  return;
}
}
#line 1087 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_81(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 1091
  ldv_mutex_lock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 1092
  return;
}
}
#line 1095 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_82(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 1099
  ldv_mutex_lock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 1100
  return;
}
}
#line 1103 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_83(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 1107
  ldv_mutex_unlock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 1108
  return;
}
}
#line 1111 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_lock_84(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 1115
  ldv_mutex_lock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 1116
  return;
}
}
#line 1119 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_mutex_unlock_85(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 1123
  ldv_mutex_unlock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 1124
  return;
}
}
#line 1127 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static int ldv_driver_register_86(struct device_driver *ldv_func_arg1 ) 
{ 
  int tmp ;

  {
  {
#line 1131
  tmp = ldv_emg_driver_register(ldv_func_arg1);
  }
#line 1131
  return (tmp);
}
}
#line 1135 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static int ldv_driver_register_87(struct device_driver *ldv_func_arg1 ) 
{ 
  int tmp ;

  {
  {
#line 1139
  tmp = ldv_emg_driver_register(ldv_func_arg1);
  }
#line 1139
  return (tmp);
}
}
#line 1143 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_driver_unregister_88(struct device_driver *ldv_func_arg1 ) 
{ 


  {
  {
#line 1147
  ldv_emg_driver_unregister(ldv_func_arg1);
  }
#line 1148
  return;
}
}
#line 1151 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_driver_unregister_89(struct device_driver *ldv_func_arg1 ) 
{ 


  {
  {
#line 1155
  ldv_emg_driver_unregister(ldv_func_arg1);
  }
#line 1156
  return;
}
}
#line 1159 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1.c.aux"
static void ldv_driver_unregister_90(struct device_driver *ldv_func_arg1 ) 
{ 


  {
  {
#line 1163
  ldv_emg_driver_unregister(ldv_func_arg1);
  }
#line 1164
  return;
}
}
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/err.h"
long ldv_ptr_err(void const   *ptr ) ;
#line 31 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_int.c.aux"
static void ldv_mutex_lock_14___0(struct mutex *ldv_func_arg1 ) ;
#line 35
static void ldv_mutex_lock_19(struct mutex *ldv_func_arg1 ) ;
#line 39
static void ldv_mutex_lock_21(struct mutex *ldv_func_arg1 ) ;
#line 43
static void ldv_mutex_lock_22___0(struct mutex *ldv_func_arg1 ) ;
#line 47
static void ldv_mutex_lock_24___0(struct mutex *ldv_func_arg1 ) ;
#line 51
static void ldv_mutex_lock_27(struct mutex *ldv_func_arg1 ) ;
#line 55
static void ldv_mutex_lock_29(struct mutex *ldv_func_arg1 ) ;
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/list.h"
__inline static void INIT_LIST_HEAD(struct list_head *list ) 
{ 


  {
#line 26
  list->next = list;
#line 27
  list->prev = list;
#line 28
  return;
}
}
#line 60 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/list.h"
__inline static void list_add(struct list_head *new , struct list_head *head ) 
{ 


  {
  {
#line 62
  __list_add(new, head, head->next);
  }
#line 63
  return;
}
}
#line 47 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/delay.h"
extern unsigned long msleep_interruptible(unsigned int  ) ;
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/err.h"
__inline static long PTR_ERR(void const   *ptr ) ;
#line 41 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/err.h"
__inline static bool IS_ERR(void const   *ptr ) 
{ 
  long tmp ;

  {
  {
#line 43
  tmp = __builtin_expect((unsigned long )ptr > 0xfffffffffffff000UL, 0L);
  }
#line 43
  return (tmp != 0L);
}
}
#line 12 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/current.h"
__inline static struct task_struct *get_current___0(void) 
{ 
  struct task_struct *pfo_ret__ ;

  {
  {
#line 14
  if (8UL == 1UL) {
#line 14
    goto case_1;
  } else {

  }
#line 14
  if (8UL == 2UL) {
#line 14
    goto case_2;
  } else {

  }
#line 14
  if (8UL == 4UL) {
#line 14
    goto case_4;
  } else {

  }
#line 14
  if (8UL == 8UL) {
#line 14
    goto case_8;
  } else {

  }
#line 14
  goto switch_default;
  case_1: /* CIL Label */ 
#line 14
  __asm__  ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
#line 14
  goto ldv_3526;
  case_2: /* CIL Label */ 
#line 14
  __asm__  ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
#line 14
  goto ldv_3526;
  case_4: /* CIL Label */ 
#line 14
  __asm__  ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
#line 14
  goto ldv_3526;
  case_8: /* CIL Label */ 
#line 14
  __asm__  ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
#line 14
  goto ldv_3526;
  switch_default: /* CIL Label */ 
  {
#line 14
  __bad_percpu_size();
  }
  switch_break: /* CIL Label */ ;
  }
  ldv_3526: ;
#line 14
  return (pfo_ret__);
}
}
#line 120 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/mutex.h"
extern void __mutex_init(struct mutex * , char const   * , struct lock_class_key * ) ;
#line 194
static void ldv_mutex_unlock_15___0(struct mutex *ldv_func_arg1 ) ;
#line 198
static void ldv_mutex_unlock_16(struct mutex *ldv_func_arg1 ) ;
#line 202
static void ldv_mutex_unlock_17___0(struct mutex *ldv_func_arg1 ) ;
#line 206
static void ldv_mutex_unlock_18(struct mutex *ldv_func_arg1 ) ;
#line 210
static void ldv_mutex_unlock_20(struct mutex *ldv_func_arg1 ) ;
#line 214
static void ldv_mutex_unlock_23___0(struct mutex *ldv_func_arg1 ) ;
#line 218
static void ldv_mutex_unlock_25___0(struct mutex *ldv_func_arg1 ) ;
#line 222
static void ldv_mutex_unlock_26(struct mutex *ldv_func_arg1 ) ;
#line 226
static void ldv_mutex_unlock_28(struct mutex *ldv_func_arg1 ) ;
#line 230
static void ldv_mutex_unlock_30(struct mutex *ldv_func_arg1 ) ;
#line 2236 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/sched.h"
extern void flush_signals(struct task_struct * ) ;
#line 8 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/kthread.h"
extern struct task_struct *kthread_create_on_node(int (*)(void * ) , void * , int  ,
                                                  char const   *  , ...) ;
#line 41
extern int kthread_stop(struct task_struct * ) ;
#line 649 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/slab.h"
__inline static void *kzalloc(size_t size , gfp_t flags ) ;
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_int.h"
int w1_add_master_device(struct w1_bus_master *master ) ;
#line 31
void w1_remove_master_device(struct w1_bus_master *bm ) ;
#line 35 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_int.c"
static int w1_search_count  =    -1;
#line 38 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_int.c"
static int w1_enable_pullup  =    1;
#line 41 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_int.c"
static struct w1_master *w1_alloc_dev(u32 id , int slave_count , int slave_ttl , struct device_driver *driver ,
                                      struct device *device ) 
{ 
  struct w1_master *dev ;
  int err ;
  void *tmp ;
  struct lock_class_key __key ;
  struct lock_class_key __key___0 ;
  struct lock_class_key __key___1 ;

  {
  {
#line 51
  tmp = kzalloc(2192UL, 208U);
#line 51
  dev = (struct w1_master *)tmp;
  }
#line 52
  if ((unsigned long )dev == (unsigned long )((struct w1_master *)0)) {
    {
#line 53
    printk("\vFailed to allocate %zd bytes for new w1 device.\n", 2096UL);
    }
#line 56
    return ((struct w1_master *)0);
  } else {

  }
  {
#line 60
  dev->bus_master = (struct w1_bus_master *)(dev + 1UL);
#line 62
  dev->owner = & __this_module;
#line 63
  dev->max_slave_count = slave_count;
#line 64
  dev->slave_count = 0;
#line 65
  dev->attempts = 0UL;
#line 66
  dev->initialized = 0;
#line 67
  dev->id = id;
#line 68
  dev->slave_ttl = slave_ttl;
#line 69
  dev->search_count = w1_search_count;
#line 70
  dev->enable_pullup = w1_enable_pullup;
#line 75
  atomic_set(& dev->refcnt, 2);
#line 77
  INIT_LIST_HEAD(& dev->slist);
#line 78
  INIT_LIST_HEAD(& dev->async_list);
#line 79
  __mutex_init(& dev->mutex, "&dev->mutex", & __key);
#line 80
  __mutex_init(& dev->bus_mutex, "&dev->bus_mutex", & __key___0);
#line 81
  __mutex_init(& dev->list_mutex, "&dev->list_mutex", & __key___1);
#line 83
  memcpy((void *)(& dev->dev), (void const   *)device, 1392UL);
#line 84
  dev_set_name(& dev->dev, "w1_bus_master%u", dev->id);
#line 85
  snprintf((char *)(& dev->name), 32UL, "w1_bus_master%u", dev->id);
#line 86
  dev->dev.init_name = (char const   *)(& dev->name);
#line 88
  dev->driver = driver;
#line 90
  dev->seq = 1U;
#line 92
  err = device_register(& dev->dev);
  }
#line 93
  if (err != 0) {
    {
#line 94
    printk("\vFailed to register master device. err=%d\n", err);
#line 95
    memset((void *)dev, 0, 2096UL);
#line 96
    kfree((void const   *)dev);
#line 97
    dev = (struct w1_master *)0;
    }
  } else {

  }
#line 100
  return (dev);
}
}
#line 103 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_int.c"
static void w1_free_dev(struct w1_master *dev ) 
{ 


  {
  {
#line 105
  device_unregister(& dev->dev);
  }
#line 106
  return;
}
}
#line 112 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_int.c"
int w1_add_master_device(struct w1_bus_master *master ) 
{ 
  struct w1_master *dev ;
  struct w1_master *entry ;
  int retval ;
  struct w1_netlink_msg msg ;
  int id ;
  int found ;
  struct list_head  const  *__mptr ;
  struct list_head  const  *__mptr___0 ;
  struct task_struct *__k ;
  struct task_struct *tmp ;
  bool tmp___0 ;
  int tmp___1 ;
  long tmp___2 ;
  bool tmp___3 ;

  {
#line 115
  retval = 0;
#line 120
  if ((((unsigned long )master->touch_bit == (unsigned long )((u8 (*)(void * , u8  ))0) || (unsigned long )master->reset_bus == (unsigned long )((u8 (*)(void * ))0)) && ((unsigned long )master->write_bit == (unsigned long )((void (*)(void * ,
                                                                                                                                                                                                                                          u8  ))0) || (unsigned long )master->read_bit == (unsigned long )((u8 (*)(void * ))0))) && (((unsigned long )master->write_byte == (unsigned long )((void (*)(void * ,
                                                                                                                                                                                                                                                                                                                                                                                                       u8  ))0) || (unsigned long )master->read_byte == (unsigned long )((u8 (*)(void * ))0)) || (unsigned long )master->reset_bus == (unsigned long )((u8 (*)(void * ))0))) {
    {
#line 123
    printk("\vw1_add_master_device: invalid function set\n");
    }
#line 124
    return (-22);
  } else {

  }
  {
#line 128
  ldv_mutex_lock_14___0(& w1_mlock);
#line 130
  id = 0;
  }
  ldv_44228: 
#line 132
  id = id + 1;
#line 133
  found = 0;
#line 134
  __mptr = (struct list_head  const  *)w1_masters.next;
#line 134
  entry = (struct w1_master *)__mptr;
#line 134
  goto ldv_44227;
  ldv_44226: ;
#line 135
  if (entry->id == (u32 )id) {
#line 136
    found = 1;
#line 137
    goto ldv_44225;
  } else {

  }
#line 134
  __mptr___0 = (struct list_head  const  *)entry->w1_master_entry.next;
#line 134
  entry = (struct w1_master *)__mptr___0;
  ldv_44227: ;
#line 134
  if ((unsigned long )(& entry->w1_master_entry) != (unsigned long )(& w1_masters)) {
#line 136
    goto ldv_44226;
  } else {

  }
  ldv_44225: ;
#line 140
  if (found != 0) {
#line 142
    goto ldv_44228;
  } else {

  }
  {
#line 142
  dev = w1_alloc_dev((u32 )id, w1_max_slave_count, w1_max_slave_ttl, & w1_master_driver,
                     & w1_master_device);
  }
#line 144
  if ((unsigned long )dev == (unsigned long )((struct w1_master *)0)) {
    {
#line 145
    ldv_mutex_unlock_15___0(& w1_mlock);
    }
#line 146
    return (-12);
  } else {

  }
  {
#line 149
  retval = w1_create_master_attributes(dev);
  }
#line 150
  if (retval != 0) {
    {
#line 151
    ldv_mutex_unlock_16(& w1_mlock);
    }
#line 152
    goto err_out_free_dev;
  } else {

  }
  {
#line 155
  memcpy((void *)dev->bus_master, (void const   *)master, 96UL);
#line 157
  dev->initialized = 1;
#line 159
  tmp = kthread_create_on_node(& w1_process, (void *)dev, -1, "%s", (unsigned char *)(& dev->name));
#line 159
  __k = tmp;
#line 159
  tmp___0 = IS_ERR((void const   *)__k);
  }
#line 159
  if (tmp___0) {
#line 159
    tmp___1 = 0;
  } else {
#line 159
    tmp___1 = 1;
  }
#line 159
  if (tmp___1) {
    {
#line 159
    wake_up_process(__k);
    }
  } else {

  }
  {
#line 159
  dev->thread = __k;
#line 160
  tmp___3 = IS_ERR((void const   *)dev->thread);
  }
#line 160
  if ((int )tmp___3) {
    {
#line 161
    tmp___2 = PTR_ERR((void const   *)dev->thread);
#line 161
    retval = (int )tmp___2;
#line 162
    dev_err((struct device  const  *)(& dev->dev), "Failed to create new kernel thread. err=%d\n",
            retval);
#line 165
    ldv_mutex_unlock_17___0(& w1_mlock);
    }
#line 166
    goto err_out_rm_attr;
  } else {

  }
  {
#line 169
  list_add(& dev->w1_master_entry, & w1_masters);
#line 170
  ldv_mutex_unlock_18(& w1_mlock);
#line 172
  memset((void *)(& msg), 0, 12UL);
#line 173
  msg.id.mst.id = dev->id;
#line 174
  msg.type = 2U;
#line 175
  w1_netlink_send(dev, & msg);
  }
#line 177
  return (0);
  err_out_rm_attr: 
  {
#line 185
  w1_destroy_master_attributes(dev);
  }
  err_out_free_dev: 
  {
#line 187
  w1_free_dev(dev);
  }
#line 189
  return (retval);
}
}
#line 192 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_int.c"
void __w1_remove_master_device(struct w1_master *dev ) 
{ 
  struct w1_netlink_msg msg ;
  struct w1_slave *sl ;
  struct w1_slave *sln ;
  struct list_head  const  *__mptr ;
  struct list_head  const  *__mptr___0 ;
  struct list_head  const  *__mptr___1 ;
  int tmp ;
  struct task_struct *tmp___0 ;
  unsigned long tmp___1 ;
  int tmp___2 ;

  {
  {
#line 197
  ldv_mutex_lock_19(& w1_mlock);
#line 198
  list_del(& dev->w1_master_entry);
#line 199
  ldv_mutex_unlock_20(& w1_mlock);
#line 201
  set_bit(0L, (unsigned long volatile   *)(& dev->flags));
#line 202
  kthread_stop(dev->thread);
#line 204
  ldv_mutex_lock_21(& dev->mutex);
#line 205
  ldv_mutex_lock_22___0(& dev->list_mutex);
#line 206
  __mptr = (struct list_head  const  *)dev->slist.next;
#line 206
  sl = (struct w1_slave *)((char *)__mptr + 0xffffffffffffffd8UL);
#line 206
  __mptr___0 = (struct list_head  const  *)sl->w1_slave_entry.next;
#line 206
  sln = (struct w1_slave *)((char *)__mptr___0 + 0xffffffffffffffd8UL);
  }
#line 206
  goto ldv_44247;
  ldv_44246: 
  {
#line 207
  ldv_mutex_unlock_23___0(& dev->list_mutex);
#line 208
  w1_slave_detach(sl);
#line 209
  ldv_mutex_lock_24___0(& dev->list_mutex);
#line 206
  sl = sln;
#line 206
  __mptr___1 = (struct list_head  const  *)sln->w1_slave_entry.next;
#line 206
  sln = (struct w1_slave *)((char *)__mptr___1 + 0xffffffffffffffd8UL);
  }
  ldv_44247: ;
#line 206
  if ((unsigned long )(& sl->w1_slave_entry) != (unsigned long )(& dev->slist)) {
#line 208
    goto ldv_44246;
  } else {

  }
  {
#line 211
  w1_destroy_master_attributes(dev);
#line 212
  ldv_mutex_unlock_25___0(& dev->list_mutex);
#line 213
  ldv_mutex_unlock_26(& dev->mutex);
#line 214
  atomic_dec(& dev->refcnt);
  }
#line 216
  goto ldv_44250;
  ldv_44249: 
  {
#line 217
  tmp = atomic_read((atomic_t const   *)(& dev->refcnt));
#line 217
  _dev_info((struct device  const  *)(& dev->dev), "Waiting for %s to become free: refcnt=%d.\n",
            (unsigned char *)(& dev->name), tmp);
#line 220
  tmp___1 = msleep_interruptible(1000U);
  }
#line 220
  if (tmp___1 != 0UL) {
    {
#line 221
    tmp___0 = get_current___0();
#line 221
    flush_signals(tmp___0);
    }
  } else {

  }
  {
#line 222
  ldv_mutex_lock_27(& dev->list_mutex);
#line 223
  w1_process_callbacks(dev);
#line 224
  ldv_mutex_unlock_28(& dev->list_mutex);
  }
  ldv_44250: 
  {
#line 216
  tmp___2 = atomic_read((atomic_t const   *)(& dev->refcnt));
  }
#line 216
  if (tmp___2 != 0) {
#line 218
    goto ldv_44249;
  } else {

  }
  {
#line 226
  ldv_mutex_lock_29(& dev->list_mutex);
#line 227
  w1_process_callbacks(dev);
#line 228
  ldv_mutex_unlock_30(& dev->list_mutex);
#line 230
  memset((void *)(& msg), 0, 12UL);
#line 231
  msg.id.mst.id = dev->id;
#line 232
  msg.type = 3U;
#line 233
  w1_netlink_send(dev, & msg);
#line 235
  w1_free_dev(dev);
  }
#line 236
  return;
}
}
#line 242 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_int.c"
void w1_remove_master_device(struct w1_bus_master *bm ) 
{ 
  struct w1_master *dev ;
  struct w1_master *found ;
  struct list_head  const  *__mptr ;
  struct list_head  const  *__mptr___0 ;

  {
#line 244
  found = (struct w1_master *)0;
#line 246
  __mptr = (struct list_head  const  *)w1_masters.next;
#line 246
  dev = (struct w1_master *)__mptr;
#line 246
  goto ldv_44264;
  ldv_44263: ;
#line 247
  if (dev->initialized == 0) {
#line 248
    goto ldv_44261;
  } else {

  }
#line 250
  if ((unsigned long )(dev->bus_master)->data == (unsigned long )bm->data) {
#line 251
    found = dev;
#line 252
    goto ldv_44262;
  } else {

  }
  ldv_44261: 
#line 246
  __mptr___0 = (struct list_head  const  *)dev->w1_master_entry.next;
#line 246
  dev = (struct w1_master *)__mptr___0;
  ldv_44264: ;
#line 246
  if ((unsigned long )(& dev->w1_master_entry) != (unsigned long )(& w1_masters)) {
#line 248
    goto ldv_44263;
  } else {

  }
  ldv_44262: ;
#line 256
  if ((unsigned long )found == (unsigned long )((struct w1_master *)0)) {
    {
#line 257
    printk("\vDevice doesn\'t exist.\n");
    }
#line 258
    return;
  } else {

  }
  {
#line 261
  __w1_remove_master_device(found);
  }
#line 262
  return;
}
}
#line 264 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_int.c"
static char const   __kstrtab_w1_add_master_device[21U]  = 
#line 264
  {      'w',      '1',      '_',      'a', 
        'd',      'd',      '_',      'm', 
        'a',      's',      't',      'e', 
        'r',      '_',      'd',      'e', 
        'v',      'i',      'c',      'e', 
        '\000'};
#line 264
struct kernel_symbol  const  __ksymtab_w1_add_master_device ;
#line 264 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_int.c"
struct kernel_symbol  const  __ksymtab_w1_add_master_device  =    {(unsigned long )(& w1_add_master_device), (char const   *)(& __kstrtab_w1_add_master_device)};
#line 265 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_int.c"
static char const   __kstrtab_w1_remove_master_device[24U]  = 
#line 265
  {      'w',      '1',      '_',      'r', 
        'e',      'm',      'o',      'v', 
        'e',      '_',      'm',      'a', 
        's',      't',      'e',      'r', 
        '_',      'd',      'e',      'v', 
        'i',      'c',      'e',      '\000'};
#line 265
struct kernel_symbol  const  __ksymtab_w1_remove_master_device ;
#line 265 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_int.c"
struct kernel_symbol  const  __ksymtab_w1_remove_master_device  =    {(unsigned long )(& w1_remove_master_device), (char const   *)(& __kstrtab_w1_remove_master_device)};
#line 116 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_int.c.aux"
__inline static long PTR_ERR(void const   *ptr ) 
{ 
  long tmp ;

  {
  {
#line 119
  tmp = ldv_ptr_err(ptr);
  }
#line 119
  return (tmp);
}
}
#line 207 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_int.c.aux"
static void ldv_mutex_lock_14___0(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 211
  ldv_mutex_lock_w1_mlock(ldv_func_arg1);
  }
#line 212
  return;
}
}
#line 215 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_int.c.aux"
static void ldv_mutex_unlock_15___0(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 219
  ldv_mutex_unlock_w1_mlock(ldv_func_arg1);
  }
#line 220
  return;
}
}
#line 223 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_int.c.aux"
static void ldv_mutex_unlock_16(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 227
  ldv_mutex_unlock_w1_mlock(ldv_func_arg1);
  }
#line 228
  return;
}
}
#line 231 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_int.c.aux"
static void ldv_mutex_unlock_17___0(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 235
  ldv_mutex_unlock_w1_mlock(ldv_func_arg1);
  }
#line 236
  return;
}
}
#line 239 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_int.c.aux"
static void ldv_mutex_unlock_18(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 243
  ldv_mutex_unlock_w1_mlock(ldv_func_arg1);
  }
#line 244
  return;
}
}
#line 247 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_int.c.aux"
static void ldv_mutex_lock_19(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 251
  ldv_mutex_lock_w1_mlock(ldv_func_arg1);
  }
#line 252
  return;
}
}
#line 255 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_int.c.aux"
static void ldv_mutex_unlock_20(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 259
  ldv_mutex_unlock_w1_mlock(ldv_func_arg1);
  }
#line 260
  return;
}
}
#line 263 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_int.c.aux"
static void ldv_mutex_lock_21(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 267
  ldv_mutex_lock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 268
  return;
}
}
#line 271 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_int.c.aux"
static void ldv_mutex_lock_22___0(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 275
  ldv_mutex_lock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 276
  return;
}
}
#line 279 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_int.c.aux"
static void ldv_mutex_unlock_23___0(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 283
  ldv_mutex_unlock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 284
  return;
}
}
#line 287 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_int.c.aux"
static void ldv_mutex_lock_24___0(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 291
  ldv_mutex_lock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 292
  return;
}
}
#line 295 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_int.c.aux"
static void ldv_mutex_unlock_25___0(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 299
  ldv_mutex_unlock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 300
  return;
}
}
#line 303 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_int.c.aux"
static void ldv_mutex_unlock_26(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 307
  ldv_mutex_unlock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 308
  return;
}
}
#line 311 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_int.c.aux"
static void ldv_mutex_lock_27(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 315
  ldv_mutex_lock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 316
  return;
}
}
#line 319 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_int.c.aux"
static void ldv_mutex_unlock_28(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 323
  ldv_mutex_unlock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 324
  return;
}
}
#line 327 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_int.c.aux"
static void ldv_mutex_lock_29(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 331
  ldv_mutex_lock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 332
  return;
}
}
#line 335 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_int.c.aux"
static void ldv_mutex_unlock_30(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 339
  ldv_mutex_unlock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 340
  return;
}
}
#line 12 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/current.h"
__inline static struct task_struct *get_current___1(void) 
{ 
  struct task_struct *pfo_ret__ ;

  {
  {
#line 14
  if (8UL == 1UL) {
#line 14
    goto case_1;
  } else {

  }
#line 14
  if (8UL == 2UL) {
#line 14
    goto case_2;
  } else {

  }
#line 14
  if (8UL == 4UL) {
#line 14
    goto case_4;
  } else {

  }
#line 14
  if (8UL == 8UL) {
#line 14
    goto case_8;
  } else {

  }
#line 14
  goto switch_default;
  case_1: /* CIL Label */ 
#line 14
  __asm__  ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
#line 14
  goto ldv_3303;
  case_2: /* CIL Label */ 
#line 14
  __asm__  ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
#line 14
  goto ldv_3303;
  case_4: /* CIL Label */ 
#line 14
  __asm__  ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
#line 14
  goto ldv_3303;
  case_8: /* CIL Label */ 
#line 14
  __asm__  ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
#line 14
  goto ldv_3303;
  switch_default: /* CIL Label */ 
  {
#line 14
  __bad_percpu_size();
  }
  switch_break: /* CIL Label */ ;
  }
  ldv_3303: ;
#line 14
  return (pfo_ret__);
}
}
#line 86 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_family.h"
void w1_unregister_family(struct w1_family *fent ) ;
#line 87
int w1_register_family(struct w1_family *newf ) ;
#line 31 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_family.c"
spinlock_t w1_flock  =    {{{{{0U}}, 3735899821U, 4294967295U, (void *)-1, {0, {0, 0}, "w1_flock", 0, 0UL}}}};
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_family.c"
static struct list_head w1_families  =    {& w1_families, & w1_families};
#line 38 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_family.c"
int w1_register_family(struct w1_family *newf ) 
{ 
  struct list_head *ent ;
  struct list_head *n ;
  struct w1_family *f ;
  int ret ;
  struct list_head  const  *__mptr ;

  {
  {
#line 42
  ret = 0;
#line 44
  spin_lock(& w1_flock);
#line 45
  ent = w1_families.next;
#line 45
  n = ent->next;
  }
#line 45
  goto ldv_19422;
  ldv_19421: 
#line 46
  __mptr = (struct list_head  const  *)ent;
#line 46
  f = (struct w1_family *)__mptr;
#line 48
  if ((int )f->fid == (int )newf->fid) {
#line 49
    ret = -17;
#line 50
    goto ldv_19420;
  } else {

  }
#line 45
  ent = n;
#line 45
  n = ent->next;
  ldv_19422: ;
#line 45
  if ((unsigned long )ent != (unsigned long )(& w1_families)) {
#line 47
    goto ldv_19421;
  } else {

  }
  ldv_19420: ;
#line 54
  if (ret == 0) {
    {
#line 55
    atomic_set(& newf->refcnt, 0);
#line 56
    list_add_tail(& newf->family_entry, & w1_families);
    }
  } else {

  }
  {
#line 58
  spin_unlock(& w1_flock);
#line 61
  w1_reconnect_slaves(newf, 1);
  }
#line 63
  return (ret);
}
}
#line 70 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_family.c"
void w1_unregister_family(struct w1_family *fent ) 
{ 
  struct list_head *ent ;
  struct list_head *n ;
  struct w1_family *f ;
  struct list_head  const  *__mptr ;
  int tmp ;
  struct task_struct *tmp___0 ;
  unsigned long tmp___1 ;
  int tmp___2 ;

  {
  {
#line 75
  spin_lock(& w1_flock);
#line 76
  ent = w1_families.next;
#line 76
  n = ent->next;
  }
#line 76
  goto ldv_19433;
  ldv_19432: 
#line 77
  __mptr = (struct list_head  const  *)ent;
#line 77
  f = (struct w1_family *)__mptr;
#line 79
  if ((int )f->fid == (int )fent->fid) {
    {
#line 80
    list_del(& fent->family_entry);
    }
#line 81
    goto ldv_19431;
  } else {

  }
#line 76
  ent = n;
#line 76
  n = ent->next;
  ldv_19433: ;
#line 76
  if ((unsigned long )ent != (unsigned long )(& w1_families)) {
#line 78
    goto ldv_19432;
  } else {

  }
  ldv_19431: 
  {
#line 84
  spin_unlock(& w1_flock);
#line 87
  w1_reconnect_slaves(fent, 0);
  }
#line 89
  goto ldv_19435;
  ldv_19434: 
  {
#line 90
  tmp = atomic_read((atomic_t const   *)(& fent->refcnt));
#line 90
  printk("\016Waiting for family %u to become free: refcnt=%d.\n", (int )fent->fid,
         tmp);
#line 93
  tmp___1 = msleep_interruptible(1000U);
  }
#line 93
  if (tmp___1 != 0UL) {
    {
#line 94
    tmp___0 = get_current___1();
#line 94
    flush_signals(tmp___0);
    }
  } else {

  }
  ldv_19435: 
  {
#line 89
  tmp___2 = atomic_read((atomic_t const   *)(& fent->refcnt));
  }
#line 89
  if (tmp___2 != 0) {
#line 91
    goto ldv_19434;
  } else {

  }

#line 96
  return;
}
}
#line 101 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_family.c"
struct w1_family *w1_family_registered(u8 fid ) 
{ 
  struct list_head *ent ;
  struct list_head *n ;
  struct w1_family *f ;
  int ret ;
  struct list_head  const  *__mptr ;

  {
#line 104
  f = (struct w1_family *)0;
#line 105
  ret = 0;
#line 107
  ent = w1_families.next;
#line 107
  n = ent->next;
#line 107
  goto ldv_19448;
  ldv_19447: 
#line 108
  __mptr = (struct list_head  const  *)ent;
#line 108
  f = (struct w1_family *)__mptr;
#line 110
  if ((int )f->fid == (int )fid) {
#line 111
    ret = 1;
#line 112
    goto ldv_19446;
  } else {

  }
#line 107
  ent = n;
#line 107
  n = ent->next;
  ldv_19448: ;
#line 107
  if ((unsigned long )ent != (unsigned long )(& w1_families)) {
#line 109
    goto ldv_19447;
  } else {

  }
  ldv_19446: ;
#line 116
  return (ret != 0 ? f : (struct w1_family *)0);
}
}
#line 119 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_family.c"
static void __w1_family_put(struct w1_family *f ) 
{ 


  {
  {
#line 121
  atomic_dec(& f->refcnt);
  }
#line 122
  return;
}
}
#line 124 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_family.c"
void w1_family_put(struct w1_family *f ) 
{ 


  {
  {
#line 126
  spin_lock(& w1_flock);
#line 127
  __w1_family_put(f);
#line 128
  spin_unlock(& w1_flock);
  }
#line 129
  return;
}
}
#line 140 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_family.c"
void __w1_family_get(struct w1_family *f ) 
{ 


  {
  {
#line 142
  __asm__  volatile   ("": : : "memory");
#line 143
  atomic_inc(& f->refcnt);
#line 144
  __asm__  volatile   ("": : : "memory");
  }
#line 145
  return;
}
}
#line 147 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_family.c"
static char const   __kstrtab_w1_unregister_family[21U]  = 
#line 147
  {      'w',      '1',      '_',      'u', 
        'n',      'r',      'e',      'g', 
        'i',      's',      't',      'e', 
        'r',      '_',      'f',      'a', 
        'm',      'i',      'l',      'y', 
        '\000'};
#line 147
struct kernel_symbol  const  __ksymtab_w1_unregister_family ;
#line 147 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_family.c"
struct kernel_symbol  const  __ksymtab_w1_unregister_family  =    {(unsigned long )(& w1_unregister_family), (char const   *)(& __kstrtab_w1_unregister_family)};
#line 148 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_family.c"
static char const   __kstrtab_w1_register_family[19U]  = 
#line 148
  {      'w',      '1',      '_',      'r', 
        'e',      'g',      'i',      's', 
        't',      'e',      'r',      '_', 
        'f',      'a',      'm',      'i', 
        'l',      'y',      '\000'};
#line 148
struct kernel_symbol  const  __ksymtab_w1_register_family ;
#line 148 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_family.c"
struct kernel_symbol  const  __ksymtab_w1_register_family  =    {(unsigned long )(& w1_register_family), (char const   *)(& __kstrtab_w1_register_family)};
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/slab.h"
void *ldv_kmalloc(size_t size , gfp_t flags ) ;
#line 31 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_netlink.c.aux"
static void ldv_mutex_lock_14___1(struct mutex *ldv_func_arg1 ) ;
#line 35
static void ldv_mutex_lock_17(struct mutex *ldv_func_arg1 ) ;
#line 39
static void ldv_mutex_lock_19___0(struct mutex *ldv_func_arg1 ) ;
#line 43
static void ldv_mutex_lock_21___0(struct mutex *ldv_func_arg1 ) ;
#line 47
static void ldv_mutex_lock_22___1(struct mutex *ldv_func_arg1 ) ;
#line 51
static void ldv_mutex_lock_24___1(struct mutex *ldv_func_arg1 ) ;
#line 55
static void ldv_mutex_lock_26___0(struct mutex *ldv_func_arg1 ) ;
#line 59
static void ldv_mutex_lock_28___0(struct mutex *ldv_func_arg1 ) ;
#line 154 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/atomic.h"
__inline static int atomic_add_return___0(int i , atomic_t *v ) 
{ 
  int __ret ;

  {
#line 156
  __ret = i;
  {
#line 156
  if (4UL == 1UL) {
#line 156
    goto case_1;
  } else {

  }
#line 156
  if (4UL == 2UL) {
#line 156
    goto case_2;
  } else {

  }
#line 156
  if (4UL == 4UL) {
#line 156
    goto case_4;
  } else {

  }
#line 156
  if (4UL == 8UL) {
#line 156
    goto case_8;
  } else {

  }
#line 156
  goto switch_default;
  case_1: /* CIL Label */ 
#line 156
  __asm__  volatile   (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc");
#line 156
  goto ldv_5809;
  case_2: /* CIL Label */ 
#line 156
  __asm__  volatile   (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
#line 156
  goto ldv_5809;
  case_4: /* CIL Label */ 
#line 156
  __asm__  volatile   (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddl %0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
#line 156
  goto ldv_5809;
  case_8: /* CIL Label */ 
#line 156
  __asm__  volatile   (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
#line 156
  goto ldv_5809;
  switch_default: /* CIL Label */ 
  {
#line 156
  __xadd_wrong_size();
  }
  switch_break: /* CIL Label */ ;
  }
  ldv_5809: ;
#line 156
  return (i + __ret);
}
}
#line 166 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/atomic.h"
__inline static int atomic_sub_return___0(int i , atomic_t *v ) 
{ 
  int tmp ;

  {
  {
#line 168
  tmp = atomic_add_return___0(- i, v);
  }
#line 168
  return (tmp);
}
}
#line 194 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/mutex.h"
static void ldv_mutex_unlock_15___1(struct mutex *ldv_func_arg1 ) ;
#line 198
static void ldv_mutex_unlock_16___0(struct mutex *ldv_func_arg1 ) ;
#line 202
static void ldv_mutex_unlock_18___0(struct mutex *ldv_func_arg1 ) ;
#line 206
static void ldv_mutex_unlock_20___0(struct mutex *ldv_func_arg1 ) ;
#line 210
static void ldv_mutex_unlock_23___1(struct mutex *ldv_func_arg1 ) ;
#line 214
static void ldv_mutex_unlock_25___1(struct mutex *ldv_func_arg1 ) ;
#line 218
static void ldv_mutex_unlock_27___0(struct mutex *ldv_func_arg1 ) ;
#line 222
static void ldv_mutex_unlock_29___0(struct mutex *ldv_func_arg1 ) ;
#line 452 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/slab.h"
__inline static void *kmalloc(size_t size , gfp_t flags ) ;
#line 649
__inline static void *kzalloc(size_t size , gfp_t flags ) ;
#line 71 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/connector.h"
extern int cn_add_callback(struct cb_id * , char const   * , void (*)(struct cn_msg * ,
                                                                      struct netlink_skb_parms * ) ) ;
#line 73
extern void cn_del_callback(struct cb_id * ) ;
#line 74
extern int cn_netlink_send(struct cn_msg * , u32  , u32  , gfp_t  ) ;
#line 316 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.h"
void w1_touch_block(struct w1_master *dev , u8 *buf , int len ) ;
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_netlink.c"
void w1_netlink_send(struct w1_master *dev , struct w1_netlink_msg *msg ) 
{ 
  char buf[32U] ;
  struct cn_msg *m ;
  struct w1_netlink_msg *w ;
  u32 tmp ;

  {
  {
#line 35
  m = (struct cn_msg *)(& buf);
#line 36
  w = (struct w1_netlink_msg *)(m + 1UL);
#line 38
  memset((void *)(& buf), 0, 32UL);
#line 40
  m->id.idx = 3U;
#line 41
  m->id.val = 1U;
#line 43
  tmp = dev->seq;
#line 43
  dev->seq = dev->seq + 1U;
#line 43
  m->seq = tmp;
#line 44
  m->len = 12U;
#line 46
  memcpy((void *)w, (void const   *)msg, 12UL);
#line 48
  cn_netlink_send(m, dev->portid, 0U, 208U);
  }
#line 49
  return;
}
}
#line 51 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_netlink.c"
static void w1_send_slave(struct w1_master *dev , u64 rn ) 
{ 
  struct cn_msg *msg ;
  struct w1_netlink_msg *hdr ;
  struct w1_netlink_cmd *cmd ;
  int avail ;
  u64 *data ;

  {
#line 53
  msg = (struct cn_msg *)dev->priv;
#line 54
  hdr = (struct w1_netlink_msg *)(msg + 1UL);
#line 55
  cmd = (struct w1_netlink_cmd *)(hdr + 1UL);
#line 59
  avail = dev->priv_size - (int )cmd->len;
#line 61
  if (avail <= 7) {
    {
#line 62
    msg->ack = msg->ack + 1U;
#line 63
    cn_netlink_send(msg, dev->portid, 0U, 208U);
#line 65
    msg->len = 16U;
#line 67
    hdr->len = 4U;
#line 68
    cmd->len = 0U;
    }
  } else {

  }
#line 71
  data = (u64 *)(cmd + ((unsigned long )cmd->len + 1UL));
#line 73
  *data = rn;
#line 74
  cmd->len = (unsigned int )cmd->len + 8U;
#line 75
  hdr->len = (unsigned int )hdr->len + 8U;
#line 76
  msg->len = (unsigned int )msg->len + 8U;
#line 77
  return;
}
}
#line 79 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_netlink.c"
static void w1_found_send_slave(struct w1_master *dev , u64 rn ) 
{ 


  {
  {
#line 82
  w1_slave_found(dev, rn);
#line 84
  w1_send_slave(dev, rn);
  }
#line 85
  return;
}
}
#line 88 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_netlink.c"
static int w1_get_slaves(struct w1_master *dev , struct cn_msg *req_msg , struct w1_netlink_msg *req_hdr ,
                         struct w1_netlink_cmd *req_cmd ) 
{ 
  struct cn_msg *msg ;
  struct w1_netlink_msg *hdr ;
  struct w1_netlink_cmd *cmd ;
  struct w1_slave *sl ;
  void *tmp ;
  __u64 rn ;
  struct list_head  const  *__mptr ;
  struct list_head  const  *__mptr___0 ;

  {
  {
#line 97
  tmp = kzalloc(4096UL, 208U);
#line 97
  msg = (struct cn_msg *)tmp;
  }
#line 98
  if ((unsigned long )msg == (unsigned long )((struct cn_msg *)0)) {
#line 99
    return (-12);
  } else {

  }
#line 101
  msg->id = req_msg->id;
#line 102
  msg->seq = req_msg->seq;
#line 103
  msg->ack = 0U;
#line 104
  msg->len = 16U;
#line 107
  hdr = (struct w1_netlink_msg *)(msg + 1UL);
#line 108
  cmd = (struct w1_netlink_cmd *)(hdr + 1UL);
#line 110
  hdr->type = 4U;
#line 111
  hdr->id = req_hdr->id;
#line 112
  hdr->len = 4U;
#line 114
  cmd->cmd = req_cmd->cmd;
#line 115
  cmd->len = 0U;
#line 117
  dev->priv = (void *)msg;
#line 118
  dev->priv_size = (int )(4076U - (unsigned int )msg->len);
#line 120
  if ((unsigned int )req_cmd->cmd == 8U) {
    {
#line 122
    ldv_mutex_lock_14___1(& dev->list_mutex);
#line 123
    __mptr = (struct list_head  const  *)dev->slist.next;
#line 123
    sl = (struct w1_slave *)((char *)__mptr + 0xffffffffffffffd8UL);
    }
#line 123
    goto ldv_43981;
    ldv_43980: 
    {
#line 124
    memcpy((void *)(& rn), (void const   *)(& sl->reg_num), 8UL);
#line 125
    w1_send_slave(dev, rn);
#line 123
    __mptr___0 = (struct list_head  const  *)sl->w1_slave_entry.next;
#line 123
    sl = (struct w1_slave *)((char *)__mptr___0 + 0xffffffffffffffd8UL);
    }
    ldv_43981: ;
#line 123
    if ((unsigned long )(& sl->w1_slave_entry) != (unsigned long )(& dev->slist)) {
#line 125
      goto ldv_43980;
    } else {

    }
    {
#line 127
    ldv_mutex_unlock_15___1(& dev->list_mutex);
    }
  } else {
    {
#line 129
    w1_search_process_cb(dev, (unsigned int )cmd->cmd == 3U ? 236 : 240, & w1_found_send_slave);
    }
  }
  {
#line 133
  msg->ack = 0U;
#line 134
  cn_netlink_send(msg, dev->portid, 0U, 208U);
#line 136
  dev->priv = (void *)0;
#line 137
  dev->priv_size = 0;
#line 139
  kfree((void const   *)msg);
  }
#line 141
  return (0);
}
}
#line 144 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_netlink.c"
static int w1_send_read_reply(struct cn_msg *msg , struct w1_netlink_msg *hdr , struct w1_netlink_cmd *cmd ,
                              u32 portid ) 
{ 
  void *data ;
  struct w1_netlink_msg *h ;
  struct w1_netlink_cmd *c ;
  struct cn_msg *cm ;
  int err ;

  {
  {
#line 153
  data = kzalloc((unsigned long )cmd->len + 36UL, 208U);
  }
#line 157
  if ((unsigned long )data == (unsigned long )((void *)0)) {
#line 158
    return (-12);
  } else {

  }
  {
#line 160
  cm = (struct cn_msg *)data;
#line 161
  h = (struct w1_netlink_msg *)(cm + 1UL);
#line 162
  c = (struct w1_netlink_cmd *)(h + 1UL);
#line 164
  memcpy((void *)cm, (void const   *)msg, 20UL);
#line 165
  memcpy((void *)h, (void const   *)hdr, 12UL);
#line 166
  memcpy((void *)c, (void const   *)cmd, 4UL);
#line 168
  cm->ack = msg->seq + 1U;
#line 169
  cm->len = (unsigned int )cmd->len + 16U;
#line 172
  h->len = (unsigned int )cmd->len + 4U;
#line 174
  memcpy((void *)(& c->data), (void const   *)(& cmd->data), (size_t )c->len);
#line 176
  err = cn_netlink_send(cm, portid, 0U, 208U);
#line 178
  kfree((void const   *)data);
  }
#line 180
  return (err);
}
}
#line 183 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_netlink.c"
static int w1_process_command_io(struct w1_master *dev , struct cn_msg *msg , struct w1_netlink_msg *hdr ,
                                 struct w1_netlink_cmd *cmd ) 
{ 
  int err ;

  {
#line 186
  err = 0;
  {
#line 189
  if ((int )cmd->cmd == 4) {
#line 189
    goto case_4;
  } else {

  }
#line 193
  if ((int )cmd->cmd == 0) {
#line 193
    goto case_0;
  } else {

  }
#line 197
  if ((int )cmd->cmd == 1) {
#line 197
    goto case_1;
  } else {

  }
#line 200
  goto switch_default;
  case_4: /* CIL Label */ 
  {
#line 190
  w1_touch_block(dev, (u8 *)(& cmd->data), (int )cmd->len);
#line 191
  w1_send_read_reply(msg, hdr, cmd, dev->portid);
  }
#line 192
  goto ldv_44002;
  case_0: /* CIL Label */ 
  {
#line 194
  w1_read_block(dev, (u8 *)(& cmd->data), (int )cmd->len);
#line 195
  w1_send_read_reply(msg, hdr, cmd, dev->portid);
  }
#line 196
  goto ldv_44002;
  case_1: /* CIL Label */ 
  {
#line 198
  w1_write_block(dev, (u8 const   *)(& cmd->data), (int )cmd->len);
  }
#line 199
  goto ldv_44002;
  switch_default: /* CIL Label */ 
#line 201
  err = -22;
#line 202
  goto ldv_44002;
  switch_break: /* CIL Label */ ;
  }
  ldv_44002: ;
#line 205
  return (err);
}
}
#line 208 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_netlink.c"
static int w1_process_command_addremove(struct w1_master *dev , struct cn_msg *msg ,
                                        struct w1_netlink_msg *hdr , struct w1_netlink_cmd *cmd ) 
{ 
  struct w1_slave *sl ;
  int err ;
  struct w1_reg_num *id ;

  {
#line 213
  err = 0;
#line 216
  if ((unsigned int )cmd->len != 8U) {
#line 217
    return (-22);
  } else {

  }
  {
#line 219
  id = (struct w1_reg_num *)(& cmd->data);
#line 221
  sl = w1_slave_search_device(dev, id);
  }
  {
#line 223
  if ((int )cmd->cmd == 6) {
#line 223
    goto case_6;
  } else {

  }
#line 229
  if ((int )cmd->cmd == 7) {
#line 229
    goto case_7;
  } else {

  }
#line 235
  goto switch_default;
  case_6: /* CIL Label */ ;
#line 224
  if ((unsigned long )sl != (unsigned long )((struct w1_slave *)0)) {
#line 225
    err = -22;
  } else {
    {
#line 227
    err = w1_attach_slave_device(dev, id);
    }
  }
#line 228
  goto ldv_44016;
  case_7: /* CIL Label */ ;
#line 230
  if ((unsigned long )sl != (unsigned long )((struct w1_slave *)0)) {
    {
#line 231
    w1_slave_detach(sl);
    }
  } else {
#line 233
    err = -22;
  }
#line 234
  goto ldv_44016;
  switch_default: /* CIL Label */ 
#line 236
  err = -22;
#line 237
  goto ldv_44016;
  switch_break: /* CIL Label */ ;
  }
  ldv_44016: ;
#line 240
  return (err);
}
}
#line 243 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_netlink.c"
static int w1_process_command_master(struct w1_master *dev , struct cn_msg *req_msg ,
                                     struct w1_netlink_msg *req_hdr , struct w1_netlink_cmd *req_cmd ) 
{ 
  int err ;

  {
#line 247
  err = -22;
  {
#line 253
  if ((int )req_cmd->cmd == 2) {
#line 253
    goto case_2;
  } else {

  }
#line 254
  if ((int )req_cmd->cmd == 3) {
#line 254
    goto case_3;
  } else {

  }
#line 255
  if ((int )req_cmd->cmd == 8) {
#line 255
    goto case_8;
  } else {

  }
#line 260
  if ((int )req_cmd->cmd == 0) {
#line 260
    goto case_0;
  } else {

  }
#line 261
  if ((int )req_cmd->cmd == 1) {
#line 261
    goto case_1;
  } else {

  }
#line 262
  if ((int )req_cmd->cmd == 4) {
#line 262
    goto case_4;
  } else {

  }
#line 265
  if ((int )req_cmd->cmd == 5) {
#line 265
    goto case_5;
  } else {

  }
#line 268
  if ((int )req_cmd->cmd == 6) {
#line 268
    goto case_6;
  } else {

  }
#line 269
  if ((int )req_cmd->cmd == 7) {
#line 269
    goto case_7;
  } else {

  }
#line 277
  goto switch_default;
  case_2: /* CIL Label */ ;
  case_3: /* CIL Label */ ;
  case_8: /* CIL Label */ 
  {
#line 256
  ldv_mutex_unlock_16___0(& dev->bus_mutex);
#line 257
  err = w1_get_slaves(dev, req_msg, req_hdr, req_cmd);
#line 258
  ldv_mutex_lock_17(& dev->bus_mutex);
  }
#line 259
  goto ldv_44029;
  case_0: /* CIL Label */ ;
  case_1: /* CIL Label */ ;
  case_4: /* CIL Label */ 
  {
#line 263
  err = w1_process_command_io(dev, req_msg, req_hdr, req_cmd);
  }
#line 264
  goto ldv_44029;
  case_5: /* CIL Label */ 
  {
#line 266
  err = w1_reset_bus(dev);
  }
#line 267
  goto ldv_44029;
  case_6: /* CIL Label */ ;
  case_7: /* CIL Label */ 
  {
#line 270
  ldv_mutex_unlock_18___0(& dev->bus_mutex);
#line 271
  ldv_mutex_lock_19___0(& dev->mutex);
#line 272
  err = w1_process_command_addremove(dev, req_msg, req_hdr, req_cmd);
#line 274
  ldv_mutex_unlock_20___0(& dev->mutex);
#line 275
  ldv_mutex_lock_21___0(& dev->bus_mutex);
  }
#line 276
  goto ldv_44029;
  switch_default: /* CIL Label */ 
#line 278
  err = -22;
#line 279
  goto ldv_44029;
  switch_break: /* CIL Label */ ;
  }
  ldv_44029: ;
#line 282
  return (err);
}
}
#line 285 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_netlink.c"
static int w1_process_command_slave(struct w1_slave *sl , struct cn_msg *msg , struct w1_netlink_msg *hdr ,
                                    struct w1_netlink_cmd *cmd ) 
{ 
  struct _ddebug descriptor ;
  long tmp ;
  int tmp___0 ;

  {
  {
#line 288
  descriptor.modname = "wire";
#line 288
  descriptor.function = "w1_process_command_slave";
#line 288
  descriptor.filename = "drivers/w1/w1_netlink.c";
#line 288
  descriptor.format = "%s: %02x.%012llx.%02x: cmd=%02x, len=%u.\n";
#line 288
  descriptor.lineno = 290U;
#line 288
  descriptor.flags = 0U;
#line 288
  tmp = __builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 288
  if (tmp != 0L) {
    {
#line 288
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)(& (sl->master)->dev),
                      "%s: %02x.%012llx.%02x: cmd=%02x, len=%u.\n", "w1_process_command_slave",
                      (int )sl->reg_num.family, sl->reg_num.id, (int )sl->reg_num.crc,
                      (int )cmd->cmd, (int )cmd->len);
    }
  } else {

  }
  {
#line 292
  tmp___0 = w1_process_command_io(sl->master, msg, hdr, cmd);
  }
#line 292
  return (tmp___0);
}
}
#line 295 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_netlink.c"
static int w1_process_command_root(struct cn_msg *msg , struct w1_netlink_msg *mcmd ,
                                   u32 portid ) 
{ 
  struct w1_master *m ;
  struct cn_msg *cn ;
  struct w1_netlink_msg *w ;
  u32 *id ;
  void *tmp ;
  struct list_head  const  *__mptr ;
  struct list_head  const  *__mptr___0 ;

  {
  {
#line 303
  tmp = kmalloc(4096UL, 208U);
#line 303
  cn = (struct cn_msg *)tmp;
  }
#line 304
  if ((unsigned long )cn == (unsigned long )((struct cn_msg *)0)) {
#line 305
    return (-12);
  } else {

  }
  {
#line 307
  cn->id.idx = 3U;
#line 308
  cn->id.val = 1U;
#line 310
  cn->seq = msg->seq;
#line 311
  cn->ack = 1U;
#line 312
  cn->len = 12U;
#line 313
  w = (struct w1_netlink_msg *)(cn + 1UL);
#line 315
  w->type = 6U;
#line 316
  w->status = 0U;
#line 317
  w->len = 0U;
#line 318
  id = (u32 *)(w + 1UL);
#line 320
  ldv_mutex_lock_22___1(& w1_mlock);
#line 321
  __mptr = (struct list_head  const  *)w1_masters.next;
#line 321
  m = (struct w1_master *)__mptr;
  }
#line 321
  goto ldv_44059;
  ldv_44058: ;
#line 322
  if ((unsigned long )cn->len + 4UL > 4076UL) {
    {
#line 323
    cn_netlink_send(cn, portid, 0U, 208U);
#line 324
    cn->ack = cn->ack + 1U;
#line 325
    cn->len = 12U;
#line 326
    w->len = 0U;
#line 327
    id = (u32 *)(w + 1UL);
    }
  } else {

  }
#line 330
  *id = m->id;
#line 331
  w->len = (unsigned int )w->len + 4U;
#line 332
  cn->len = (unsigned int )cn->len + 4U;
#line 333
  id = id + 1;
#line 321
  __mptr___0 = (struct list_head  const  *)m->w1_master_entry.next;
#line 321
  m = (struct w1_master *)__mptr___0;
  ldv_44059: ;
#line 321
  if ((unsigned long )(& m->w1_master_entry) != (unsigned long )(& w1_masters)) {
#line 323
    goto ldv_44058;
  } else {

  }
  {
#line 335
  cn->ack = 0U;
#line 336
  cn_netlink_send(cn, portid, 0U, 208U);
#line 337
  ldv_mutex_unlock_23___1(& w1_mlock);
#line 339
  kfree((void const   *)cn);
  }
#line 340
  return (0);
}
}
#line 343 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_netlink.c"
static int w1_netlink_send_error(struct cn_msg *rcmsg , struct w1_netlink_msg *rmsg ,
                                 struct w1_netlink_cmd *rcmd , int portid , int error ) 
{ 
  struct cn_msg *cmsg ;
  struct w1_netlink_msg *msg ;
  struct w1_netlink_cmd *cmd ;
  void *tmp ;

  {
  {
#line 350
  tmp = kzalloc(36UL, 208U);
#line 350
  cmsg = (struct cn_msg *)tmp;
  }
#line 351
  if ((unsigned long )cmsg == (unsigned long )((struct cn_msg *)0)) {
#line 352
    return (-12);
  } else {

  }
  {
#line 354
  msg = (struct w1_netlink_msg *)(cmsg + 1UL);
#line 355
  cmd = (struct w1_netlink_cmd *)(msg + 1UL);
#line 357
  memcpy((void *)cmsg, (void const   *)rcmsg, 20UL);
#line 358
  cmsg->len = 12U;
#line 360
  memcpy((void *)msg, (void const   *)rmsg, 12UL);
#line 361
  msg->len = 0U;
#line 362
  msg->status = - ((int )((__u8 )error));
  }
#line 364
  if ((unsigned long )rcmd != (unsigned long )((struct w1_netlink_cmd *)0)) {
    {
#line 365
    memcpy((void *)cmd, (void const   *)rcmd, 4UL);
#line 366
    cmd->len = 0U;
#line 367
    msg->len = (unsigned int )msg->len + 4U;
#line 368
    cmsg->len = (unsigned int )cmsg->len + 4U;
    }
  } else {

  }
  {
#line 371
  error = cn_netlink_send(cmsg, (u32 )portid, 0U, 208U);
#line 372
  kfree((void const   *)cmsg);
  }
#line 374
  return (error);
}
}
#line 396 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_netlink.c"
static void w1_process_cb(struct w1_master *dev , struct w1_async_cmd *async_cmd ) 
{ 
  struct w1_cb_node *node ;
  struct w1_async_cmd  const  *__mptr ;
  u16 mlen ;
  u8 *cmd_data ;
  int err ;
  struct w1_slave *sl ;
  struct w1_netlink_cmd *cmd ;
  int tmp ;
  int tmp___0 ;

  {
  {
#line 398
  __mptr = (struct w1_async_cmd  const  *)async_cmd;
#line 398
  node = (struct w1_cb_node *)__mptr;
#line 400
  mlen = (node->m)->len;
#line 401
  cmd_data = (u8 *)(& (node->m)->data);
#line 402
  err = 0;
#line 403
  sl = node->sl;
#line 404
  cmd = (struct w1_netlink_cmd *)0;
#line 406
  ldv_mutex_lock_24___1(& dev->bus_mutex);
#line 407
  dev->portid = (node->block)->portid;
  }
#line 408
  if ((unsigned long )sl != (unsigned long )((struct w1_slave *)0)) {
    {
#line 408
    tmp = w1_reset_select_slave(sl);
    }
#line 408
    if (tmp != 0) {
#line 409
      err = -19;
    } else {

    }
  } else {

  }
#line 411
  goto ldv_44095;
  ldv_44094: 
#line 412
  cmd = (struct w1_netlink_cmd *)cmd_data;
#line 414
  if ((unsigned long )cmd->len + 4UL > (unsigned long )mlen) {
#line 415
    err = -7;
#line 416
    goto ldv_44093;
  } else {

  }
#line 419
  if ((unsigned long )sl != (unsigned long )((struct w1_slave *)0)) {
    {
#line 420
    err = w1_process_command_slave(sl, & (node->block)->msg, node->m, cmd);
    }
  } else {
    {
#line 423
    err = w1_process_command_master(dev, & (node->block)->msg, node->m, cmd);
    }
  }
  {
#line 426
  w1_netlink_send_error(& (node->block)->msg, node->m, cmd, (int )(node->block)->portid,
                        err);
#line 428
  err = 0;
#line 430
  cmd_data = cmd_data + ((unsigned long )cmd->len + 4UL);
#line 431
  mlen = (unsigned int )((int )mlen - (int )cmd->len) - 4U;
  }
  ldv_44095: ;
#line 411
  if ((unsigned int )mlen != 0U && err == 0) {
#line 413
    goto ldv_44094;
  } else {

  }
  ldv_44093: ;
#line 434
  if ((unsigned long )cmd == (unsigned long )((struct w1_netlink_cmd *)0) || err != 0) {
    {
#line 435
    w1_netlink_send_error(& (node->block)->msg, node->m, cmd, (int )(node->block)->portid,
                          err);
    }
  } else {

  }
#line 441
  if ((unsigned long )sl != (unsigned long )((struct w1_slave *)0)) {
    {
#line 442
    w1_unref_slave(sl);
    }
  } else {
    {
#line 444
    atomic_dec(& dev->refcnt);
    }
  }
  {
#line 445
  dev->portid = 0U;
#line 446
  ldv_mutex_unlock_25___1(& dev->bus_mutex);
#line 448
  ldv_mutex_lock_26___0(& dev->list_mutex);
#line 449
  list_del(& async_cmd->async_entry);
#line 450
  ldv_mutex_unlock_27___0(& dev->list_mutex);
#line 452
  tmp___0 = atomic_sub_return___0(1, & (node->block)->refcnt);
  }
#line 452
  if (tmp___0 == 0) {
    {
#line 453
    kfree((void const   *)node->block);
    }
  } else {

  }
#line 454
  return;
}
}
#line 456 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_netlink.c"
static void w1_cn_callback(struct cn_msg *msg , struct netlink_skb_parms *nsp ) 
{ 
  struct w1_netlink_msg *m ;
  struct w1_slave *sl ;
  struct w1_master *dev ;
  u16 msg_len ;
  int err ;
  struct w1_cb_block *block ;
  struct w1_cb_node *node ;
  int node_count ;
  long size ;
  void *tmp ;
  int tmp___0 ;

  {
#line 458
  m = (struct w1_netlink_msg *)(msg + 1UL);
#line 462
  err = 0;
#line 463
  block = (struct w1_cb_block *)0;
#line 464
  node = (struct w1_cb_node *)0;
#line 465
  node_count = 0;
#line 470
  msg_len = msg->len;
#line 471
  goto ldv_44110;
  ldv_44109: ;
#line 472
  if ((unsigned long )m->len + 12UL > (unsigned long )msg_len) {
#line 473
    err = -7;
#line 474
    goto ldv_44108;
  } else {

  }
#line 477
  if ((unsigned int )m->type - 4U <= 1U) {
#line 478
    node_count = node_count + 1;
  } else {

  }
#line 480
  msg_len = (unsigned int )((int )msg_len - (int )m->len) - 12U;
#line 481
  m = (struct w1_netlink_msg *)((u8 *)m + ((unsigned long )m->len + 12UL));
  ldv_44110: ;
#line 471
  if ((unsigned int )msg_len != 0U && err == 0) {
#line 473
    goto ldv_44109;
  } else {

  }
  ldv_44108: 
#line 484
  m = (struct w1_netlink_msg *)(msg + 1UL);
#line 485
  if (node_count != 0) {
    {
#line 487
    size = (long )(((unsigned long )msg->len + (unsigned long )node_count * 56UL) + 28UL);
#line 489
    tmp = kmalloc((size_t )size, 208U);
#line 489
    block = (struct w1_cb_block *)tmp;
    }
#line 490
    if ((unsigned long )block == (unsigned long )((struct w1_cb_block *)0)) {
      {
#line 491
      w1_netlink_send_error(msg, m, (struct w1_netlink_cmd *)0, (int )nsp->portid,
                            -12);
      }
#line 493
      return;
    } else {

    }
    {
#line 495
    atomic_set(& block->refcnt, 1);
#line 496
    block->portid = nsp->portid;
#line 497
    memcpy((void *)(& block->msg), (void const   *)msg, (unsigned long )msg->len + 20UL);
#line 498
    node = (struct w1_cb_node *)((u8 *)(& block->msg.data) + (unsigned long )msg->len);
    }
  } else {

  }
#line 501
  msg_len = msg->len;
#line 502
  goto ldv_44116;
  ldv_44115: 
#line 504
  dev = (struct w1_master *)0;
#line 505
  sl = (struct w1_slave *)0;
#line 507
  if ((unsigned long )m->len + 12UL > (unsigned long )msg_len) {
#line 508
    err = -7;
#line 509
    goto ldv_44112;
  } else {

  }
#line 513
  if ((unsigned int )m->type == 6U) {
    {
#line 514
    err = w1_process_command_root(msg, m, nsp->portid);
    }
#line 515
    goto out_cont;
  } else {

  }
#line 521
  if ((unsigned int )m->len == 0U) {
#line 522
    err = -71;
#line 523
    goto out_cont;
  } else {

  }
#line 527
  if ((unsigned int )m->type == 4U) {
    {
#line 528
    dev = w1_search_master_id(m->id.mst.id);
    }
  } else
#line 529
  if ((unsigned int )m->type == 5U) {
    {
#line 530
    sl = w1_search_slave((struct w1_reg_num *)(& m->id.id));
    }
#line 531
    if ((unsigned long )sl != (unsigned long )((struct w1_slave *)0)) {
#line 532
      dev = sl->master;
    } else {

    }
  } else {
    {
#line 534
    printk("\r%s: msg: %x.%x, wrong type: %u, len: %u.\n", "w1_cn_callback", msg->id.idx,
           msg->id.val, (int )m->type, (int )m->len);
#line 538
    err = -71;
    }
#line 539
    goto out_cont;
  }
#line 542
  if ((unsigned long )dev == (unsigned long )((struct w1_master *)0)) {
#line 543
    err = -19;
#line 544
    goto out_cont;
  } else {

  }
  {
#line 547
  err = 0;
#line 549
  atomic_inc(& block->refcnt);
#line 550
  node->async.cb = & w1_process_cb;
#line 551
  node->block = block;
#line 552
  node->m = (struct w1_netlink_msg *)((u8 *)(& block->msg) + (unsigned long )((long )m - (long )msg));
#line 554
  node->sl = sl;
#line 555
  node->dev = dev;
#line 557
  ldv_mutex_lock_28___0(& dev->list_mutex);
#line 558
  list_add_tail(& node->async.async_entry, & dev->async_list);
#line 559
  wake_up_process(dev->thread);
#line 560
  ldv_mutex_unlock_29___0(& dev->list_mutex);
#line 561
  node = node + 1;
  }
  out_cont: ;
#line 564
  if (err != 0) {
    {
#line 565
    w1_netlink_send_error(msg, m, (struct w1_netlink_cmd *)0, (int )nsp->portid, err);
    }
  } else {

  }
#line 566
  msg_len = (unsigned int )((int )msg_len - (int )m->len) - 12U;
#line 567
  m = (struct w1_netlink_msg *)((u8 *)m + ((unsigned long )m->len + 12UL));
#line 573
  if (err == -19) {
#line 574
    err = 0;
  } else {

  }
  ldv_44116: ;
#line 502
  if ((unsigned int )msg_len != 0U && err == 0) {
#line 504
    goto ldv_44115;
  } else {

  }
  ldv_44112: ;
#line 576
  if ((unsigned long )block != (unsigned long )((struct w1_cb_block *)0)) {
    {
#line 576
    tmp___0 = atomic_sub_return___0(1, & block->refcnt);
    }
#line 576
    if (tmp___0 == 0) {
      {
#line 577
      kfree((void const   *)block);
      }
    } else {

    }
  } else {

  }
#line 578
  return;
}
}
#line 580 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_netlink.c"
int w1_init_netlink(void) 
{ 
  struct cb_id w1_id ;
  int tmp ;

  {
  {
#line 582
  w1_id.idx = 3U;
#line 582
  w1_id.val = 1U;
#line 584
  tmp = cn_add_callback(& w1_id, "w1", & w1_cn_callback);
  }
#line 584
  return (tmp);
}
}
#line 587 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_netlink.c"
void w1_fini_netlink(void) 
{ 
  struct cb_id w1_id ;

  {
  {
#line 589
  w1_id.idx = 3U;
#line 589
  w1_id.val = 1U;
#line 591
  cn_del_callback(& w1_id);
  }
#line 592
  return;
}
}
#line 139 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_netlink.c.aux"
__inline static void *kmalloc(size_t size , gfp_t flags ) 
{ 
  void *tmp ;

  {
  {
#line 142
  tmp = ldv_kmalloc(size, flags);
  }
#line 142
  return (tmp);
}
}
#line 207 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_netlink.c.aux"
static void ldv_mutex_lock_14___1(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 211
  ldv_mutex_lock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 212
  return;
}
}
#line 215 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_netlink.c.aux"
static void ldv_mutex_unlock_15___1(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 219
  ldv_mutex_unlock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 220
  return;
}
}
#line 223 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_netlink.c.aux"
static void ldv_mutex_unlock_16___0(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 227
  ldv_mutex_unlock_bus_mutex_of_w1_master(ldv_func_arg1);
  }
#line 228
  return;
}
}
#line 231 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_netlink.c.aux"
static void ldv_mutex_lock_17(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 235
  ldv_mutex_lock_bus_mutex_of_w1_master(ldv_func_arg1);
  }
#line 236
  return;
}
}
#line 239 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_netlink.c.aux"
static void ldv_mutex_unlock_18___0(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 243
  ldv_mutex_unlock_bus_mutex_of_w1_master(ldv_func_arg1);
  }
#line 244
  return;
}
}
#line 247 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_netlink.c.aux"
static void ldv_mutex_lock_19___0(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 251
  ldv_mutex_lock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 252
  return;
}
}
#line 255 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_netlink.c.aux"
static void ldv_mutex_unlock_20___0(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 259
  ldv_mutex_unlock_mutex_of_w1_master(ldv_func_arg1);
  }
#line 260
  return;
}
}
#line 263 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_netlink.c.aux"
static void ldv_mutex_lock_21___0(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 267
  ldv_mutex_lock_bus_mutex_of_w1_master(ldv_func_arg1);
  }
#line 268
  return;
}
}
#line 271 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_netlink.c.aux"
static void ldv_mutex_lock_22___1(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 275
  ldv_mutex_lock_w1_mlock(ldv_func_arg1);
  }
#line 276
  return;
}
}
#line 279 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_netlink.c.aux"
static void ldv_mutex_unlock_23___1(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 283
  ldv_mutex_unlock_w1_mlock(ldv_func_arg1);
  }
#line 284
  return;
}
}
#line 287 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_netlink.c.aux"
static void ldv_mutex_lock_24___1(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 291
  ldv_mutex_lock_bus_mutex_of_w1_master(ldv_func_arg1);
  }
#line 292
  return;
}
}
#line 295 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_netlink.c.aux"
static void ldv_mutex_unlock_25___1(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 299
  ldv_mutex_unlock_bus_mutex_of_w1_master(ldv_func_arg1);
  }
#line 300
  return;
}
}
#line 303 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_netlink.c.aux"
static void ldv_mutex_lock_26___0(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 307
  ldv_mutex_lock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 308
  return;
}
}
#line 311 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_netlink.c.aux"
static void ldv_mutex_unlock_27___0(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 315
  ldv_mutex_unlock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 316
  return;
}
}
#line 319 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_netlink.c.aux"
static void ldv_mutex_lock_28___0(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 323
  ldv_mutex_lock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 324
  return;
}
}
#line 327 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_w1_netlink.c.aux"
static void ldv_mutex_unlock_29___0(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 331
  ldv_mutex_unlock_list_mutex_of_w1_master(ldv_func_arg1);
  }
#line 332
  return;
}
}
#line 358 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/paravirt_types.h"
extern struct pv_irq_ops pv_irq_ops ;
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/paravirt.h"
extern int ( /* missing proto */  __builtin_unreachable)() ;
#line 802 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/paravirt.h"
__inline static unsigned long arch_local_save_flags(void) 
{ 
  unsigned long __ret ;
  unsigned long __edi ;
  unsigned long __esi ;
  unsigned long __edx ;
  unsigned long __ecx ;
  unsigned long __eax ;
  long tmp ;

  {
  {
#line 804
  __edi = __edi;
#line 804
  __esi = __esi;
#line 804
  __edx = __edx;
#line 804
  __ecx = __ecx;
#line 804
  __eax = __eax;
#line 804
  tmp = __builtin_expect((unsigned long )pv_irq_ops.save_fl.func == (unsigned long )((void *)0),
                         0L);
  }
#line 804
  if (tmp != 0L) {
    {
#line 804
    __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/paravirt.h"),
                         "i" (804), "i" (12UL));
#line 804
    __builtin_unreachable();
    }
  } else {

  }
#line 804
  __asm__  volatile   ("771:\n\tcall *%c2;\n772:\n.pushsection .parainstructions,\"a\"\n .balign 8 \n .quad  771b\n  .byte %c1\n  .byte 772b-771b\n  .short %c3\n.popsection\n": "=a" (__eax): [paravirt_typenum] "i" (44UL),
                       [paravirt_opptr] "i" (& pv_irq_ops.save_fl.func), [paravirt_clobber] "i" (1): "memory",
                       "cc");
#line 804
  __ret = __eax;
#line 804
  return (__ret);
}
}
#line 807 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/paravirt.h"
__inline static void arch_local_irq_restore(unsigned long f ) 
{ 
  unsigned long __edi ;
  unsigned long __esi ;
  unsigned long __edx ;
  unsigned long __ecx ;
  unsigned long __eax ;
  long tmp ;

  {
  {
#line 809
  __edi = __edi;
#line 809
  __esi = __esi;
#line 809
  __edx = __edx;
#line 809
  __ecx = __ecx;
#line 809
  __eax = __eax;
#line 809
  tmp = __builtin_expect((unsigned long )pv_irq_ops.restore_fl.func == (unsigned long )((void *)0),
                         0L);
  }
#line 809
  if (tmp != 0L) {
    {
#line 809
    __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/paravirt.h"),
                         "i" (809), "i" (12UL));
#line 809
    __builtin_unreachable();
    }
  } else {

  }
#line 809
  __asm__  volatile   ("771:\n\tcall *%c2;\n772:\n.pushsection .parainstructions,\"a\"\n .balign 8 \n .quad  771b\n  .byte %c1\n  .byte 772b-771b\n  .short %c3\n.popsection\n": "=a" (__eax): [paravirt_typenum] "i" (45UL),
                       [paravirt_opptr] "i" (& pv_irq_ops.restore_fl.func), [paravirt_clobber] "i" (1),
                       "D" (f): "memory", "cc");
#line 811
  return;
}
}
#line 812 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/paravirt.h"
__inline static void arch_local_irq_disable(void) 
{ 
  unsigned long __edi ;
  unsigned long __esi ;
  unsigned long __edx ;
  unsigned long __ecx ;
  unsigned long __eax ;
  long tmp ;

  {
  {
#line 814
  __edi = __edi;
#line 814
  __esi = __esi;
#line 814
  __edx = __edx;
#line 814
  __ecx = __ecx;
#line 814
  __eax = __eax;
#line 814
  tmp = __builtin_expect((unsigned long )pv_irq_ops.irq_disable.func == (unsigned long )((void *)0),
                         0L);
  }
#line 814
  if (tmp != 0L) {
    {
#line 814
    __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/paravirt.h"),
                         "i" (814), "i" (12UL));
#line 814
    __builtin_unreachable();
    }
  } else {

  }
#line 814
  __asm__  volatile   ("771:\n\tcall *%c2;\n772:\n.pushsection .parainstructions,\"a\"\n .balign 8 \n .quad  771b\n  .byte %c1\n  .byte 772b-771b\n  .short %c3\n.popsection\n": "=a" (__eax): [paravirt_typenum] "i" (46UL),
                       [paravirt_opptr] "i" (& pv_irq_ops.irq_disable.func), [paravirt_clobber] "i" (1): "memory",
                       "cc");
#line 816
  return;
}
}
#line 822 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/paravirt.h"
__inline static unsigned long arch_local_irq_save(void) 
{ 
  unsigned long f ;

  {
  {
#line 826
  f = arch_local_save_flags();
#line 827
  arch_local_irq_disable();
  }
#line 828
  return (f);
}
}
#line 155 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/arch/x86/include/asm/irqflags.h"
__inline static int arch_irqs_disabled_flags(unsigned long flags ) 
{ 


  {
#line 157
  return ((flags & 512UL) == 0UL);
}
}
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/irqflags.h"
extern void trace_hardirqs_on(void) ;
#line 21
extern void trace_hardirqs_off(void) ;
#line 8 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/asm-generic/delay.h"
extern void __udelay(unsigned long  ) ;
#line 46 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/delay.h"
extern void msleep(unsigned int  ) ;
#line 312 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1.h"
u8 w1_read_8(struct w1_master *dev ) ;
#line 319
int w1_reset_resume_command(struct w1_master *dev ) ;
#line 320
void w1_next_pullup(struct w1_master *dev , int delay ) ;
#line 31 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
static int w1_delay_parm  =    1;
#line 34 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
static int w1_disable_irqs  =    0;
#line 37 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
static u8 w1_crc8_table[256U]  = 
#line 37
  {      0U,      94U,      188U,      226U, 
        97U,      63U,      221U,      131U, 
        194U,      156U,      126U,      32U, 
        163U,      253U,      31U,      65U, 
        157U,      195U,      33U,      127U, 
        252U,      162U,      64U,      30U, 
        95U,      1U,      227U,      189U, 
        62U,      96U,      130U,      220U, 
        35U,      125U,      159U,      193U, 
        66U,      28U,      254U,      160U, 
        225U,      191U,      93U,      3U, 
        128U,      222U,      60U,      98U, 
        190U,      224U,      2U,      92U, 
        223U,      129U,      99U,      61U, 
        124U,      34U,      192U,      158U, 
        29U,      67U,      161U,      255U, 
        70U,      24U,      250U,      164U, 
        39U,      121U,      155U,      197U, 
        132U,      218U,      56U,      102U, 
        229U,      187U,      89U,      7U, 
        219U,      133U,      103U,      57U, 
        186U,      228U,      6U,      88U, 
        25U,      71U,      165U,      251U, 
        120U,      38U,      196U,      154U, 
        101U,      59U,      217U,      135U, 
        4U,      90U,      184U,      230U, 
        167U,      249U,      27U,      69U, 
        198U,      152U,      122U,      36U, 
        248U,      166U,      68U,      26U, 
        153U,      199U,      37U,      123U, 
        58U,      100U,      134U,      216U, 
        91U,      5U,      231U,      185U, 
        140U,      210U,      48U,      110U, 
        237U,      179U,      81U,      15U, 
        78U,      16U,      242U,      172U, 
        47U,      113U,      147U,      205U, 
        17U,      79U,      173U,      243U, 
        112U,      46U,      204U,      146U, 
        211U,      141U,      111U,      49U, 
        178U,      236U,      14U,      80U, 
        175U,      241U,      19U,      77U, 
        206U,      144U,      114U,      44U, 
        109U,      51U,      209U,      143U, 
        12U,      82U,      176U,      238U, 
        50U,      108U,      142U,      208U, 
        83U,      13U,      239U,      177U, 
        240U,      174U,      76U,      18U, 
        145U,      207U,      45U,      115U, 
        202U,      148U,      118U,      40U, 
        171U,      245U,      23U,      73U, 
        8U,      86U,      180U,      234U, 
        105U,      55U,      213U,      139U, 
        87U,      9U,      235U,      181U, 
        54U,      104U,      138U,      212U, 
        149U,      203U,      41U,      119U, 
        244U,      170U,      72U,      22U, 
        233U,      183U,      85U,      11U, 
        136U,      214U,      52U,      106U, 
        43U,      117U,      151U,      201U, 
        74U,      20U,      246U,      168U, 
        116U,      42U,      200U,      150U, 
        21U,      75U,      169U,      247U, 
        182U,      232U,      10U,      84U, 
        215U,      137U,      107U,      53U};
#line 56 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
static void w1_delay(unsigned long tm ) 
{ 


  {
  {
#line 58
  __udelay(tm * (unsigned long )w1_delay_parm);
  }
#line 60
  return;
}
}
#line 61
static void w1_write_bit(struct w1_master *dev , int bit ) ;
#line 62
static u8 w1_read_bit(struct w1_master *dev ) ;
#line 69 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
static u8 w1_touch_bit(struct w1_master *dev , int bit ) 
{ 
  u8 tmp ;
  u8 tmp___0 ;

  {
#line 71
  if ((unsigned long )(dev->bus_master)->touch_bit != (unsigned long )((u8 (*)(void * ,
                                                                               u8  ))0)) {
    {
#line 72
    tmp = (*((dev->bus_master)->touch_bit))((dev->bus_master)->data, (int )((u8 )bit));
    }
#line 72
    return (tmp);
  } else
#line 73
  if (bit != 0) {
    {
#line 74
    tmp___0 = w1_read_bit(dev);
    }
#line 74
    return (tmp___0);
  } else {
    {
#line 76
    w1_write_bit(dev, 0);
    }
#line 77
    return (0U);
  }
}
}
#line 88 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
static void w1_write_bit(struct w1_master *dev , int bit ) 
{ 
  unsigned long flags ;
  int tmp ;

  {
#line 90
  flags = 0UL;
#line 92
  if (w1_disable_irqs != 0) {
    {
#line 92
    flags = arch_local_irq_save();
#line 92
    trace_hardirqs_off();
    }
  } else {

  }
#line 94
  if (bit != 0) {
    {
#line 95
    (*((dev->bus_master)->write_bit))((dev->bus_master)->data, 0);
#line 96
    w1_delay(6UL);
#line 97
    (*((dev->bus_master)->write_bit))((dev->bus_master)->data, 1);
#line 98
    w1_delay(64UL);
    }
  } else {
    {
#line 100
    (*((dev->bus_master)->write_bit))((dev->bus_master)->data, 0);
#line 101
    w1_delay(60UL);
#line 102
    (*((dev->bus_master)->write_bit))((dev->bus_master)->data, 1);
#line 103
    w1_delay(10UL);
    }
  }
#line 106
  if (w1_disable_irqs != 0) {
    {
#line 106
    tmp = arch_irqs_disabled_flags(flags);
    }
#line 106
    if (tmp != 0) {
      {
#line 106
      arch_local_irq_restore(flags);
#line 106
      trace_hardirqs_off();
      }
    } else {
      {
#line 106
      trace_hardirqs_on();
#line 106
      arch_local_irq_restore(flags);
      }
    }
  } else {

  }
#line 108
  return;
}
}
#line 117 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
static void w1_pre_write(struct w1_master *dev ) 
{ 


  {
#line 119
  if ((dev->pullup_duration != 0 && dev->enable_pullup != 0) && (unsigned long )(dev->bus_master)->set_pullup != (unsigned long )((u8 (*)(void * ,
                                                                                                                                          int  ))0)) {
    {
#line 121
    (*((dev->bus_master)->set_pullup))((dev->bus_master)->data, dev->pullup_duration);
    }
  } else {

  }
#line 123
  return;
}
}
#line 134 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
static void w1_post_write(struct w1_master *dev ) 
{ 


  {
#line 136
  if (dev->pullup_duration != 0) {
#line 137
    if (dev->enable_pullup != 0 && (unsigned long )(dev->bus_master)->set_pullup != (unsigned long )((u8 (*)(void * ,
                                                                                                             int  ))0)) {
      {
#line 138
      (*((dev->bus_master)->set_pullup))((dev->bus_master)->data, 0);
      }
    } else {
      {
#line 140
      msleep((unsigned int )dev->pullup_duration);
      }
    }
#line 141
    dev->pullup_duration = 0;
  } else {

  }
#line 143
  return;
}
}
#line 150 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
void w1_write_8(struct w1_master *dev , u8 byte ) 
{ 
  int i ;

  {
#line 154
  if ((unsigned long )(dev->bus_master)->write_byte != (unsigned long )((void (*)(void * ,
                                                                                  u8  ))0)) {
    {
#line 155
    w1_pre_write(dev);
#line 156
    (*((dev->bus_master)->write_byte))((dev->bus_master)->data, (int )byte);
    }
  } else {
#line 159
    i = 0;
#line 159
    goto ldv_16894;
    ldv_16893: ;
#line 160
    if (i == 7) {
      {
#line 161
      w1_pre_write(dev);
      }
    } else {

    }
    {
#line 162
    w1_touch_bit(dev, ((int )byte >> i) & 1);
#line 159
    i = i + 1;
    }
    ldv_16894: ;
#line 159
    if (i <= 7) {
#line 161
      goto ldv_16893;
    } else {

    }

  }
  {
#line 164
  w1_post_write(dev);
  }
#line 165
  return;
}
}
#line 166 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
static char const   __kstrtab_w1_write_8[11U]  = 
#line 166
  {      'w',      '1',      '_',      'w', 
        'r',      'i',      't',      'e', 
        '_',      '8',      '\000'};
#line 166
struct kernel_symbol  const  __ksymtab_w1_write_8 ;
#line 166 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
struct kernel_symbol  const  __ksymtab_w1_write_8  =    {(unsigned long )(& w1_write_8), (char const   *)(& __kstrtab_w1_write_8)};
#line 175 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
static u8 w1_read_bit(struct w1_master *dev ) 
{ 
  int result ;
  unsigned long flags ;
  u8 tmp ;
  int tmp___0 ;

  {
  {
#line 178
  flags = 0UL;
#line 181
  flags = arch_local_irq_save();
#line 181
  trace_hardirqs_off();
#line 182
  (*((dev->bus_master)->write_bit))((dev->bus_master)->data, 0);
#line 183
  w1_delay(6UL);
#line 184
  (*((dev->bus_master)->write_bit))((dev->bus_master)->data, 1);
#line 185
  w1_delay(9UL);
#line 187
  tmp = (*((dev->bus_master)->read_bit))((dev->bus_master)->data);
#line 187
  result = (int )tmp;
#line 188
  tmp___0 = arch_irqs_disabled_flags(flags);
  }
#line 188
  if (tmp___0 != 0) {
    {
#line 188
    arch_local_irq_restore(flags);
#line 188
    trace_hardirqs_off();
    }
  } else {
    {
#line 188
    trace_hardirqs_on();
#line 188
    arch_local_irq_restore(flags);
    }
  }
  {
#line 190
  w1_delay(55UL);
  }
#line 192
  return ((unsigned int )((u8 )result) & 1U);
}
}
#line 208 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
u8 w1_triplet(struct w1_master *dev , int bdir ) 
{ 
  u8 tmp ;
  u8 id_bit ;
  u8 tmp___0 ;
  u8 comp_bit ;
  u8 tmp___1 ;
  u8 retval ;

  {
#line 210
  if ((unsigned long )(dev->bus_master)->triplet != (unsigned long )((u8 (*)(void * ,
                                                                             u8  ))0)) {
    {
#line 211
    tmp = (*((dev->bus_master)->triplet))((dev->bus_master)->data, (int )((u8 )bdir));
    }
#line 211
    return (tmp);
  } else {
    {
#line 213
    tmp___0 = w1_touch_bit(dev, 1);
#line 213
    id_bit = tmp___0;
#line 214
    tmp___1 = w1_touch_bit(dev, 1);
#line 214
    comp_bit = tmp___1;
    }
#line 217
    if ((unsigned int )id_bit != 0U && (unsigned int )comp_bit != 0U) {
#line 218
      return (3U);
    } else {

    }
#line 220
    if ((unsigned int )((int )id_bit | (int )comp_bit) == 0U) {
#line 222
      retval = bdir != 0 ? 4U : 0U;
    } else {
#line 225
      bdir = (int )id_bit;
#line 226
      retval = (unsigned int )id_bit != 0U ? 5U : 2U;
    }
#line 229
    if ((unsigned long )(dev->bus_master)->touch_bit != (unsigned long )((u8 (*)(void * ,
                                                                                 u8  ))0)) {
      {
#line 230
      w1_touch_bit(dev, bdir);
      }
    } else {
      {
#line 232
      w1_write_bit(dev, bdir);
      }
    }
#line 233
    return (retval);
  }
}
}
#line 243 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
u8 w1_read_8(struct w1_master *dev ) 
{ 
  int i ;
  u8 res ;
  u8 tmp ;

  {
#line 246
  res = 0U;
#line 248
  if ((unsigned long )(dev->bus_master)->read_byte != (unsigned long )((u8 (*)(void * ))0)) {
    {
#line 249
    res = (*((dev->bus_master)->read_byte))((dev->bus_master)->data);
    }
  } else {
#line 251
    i = 0;
#line 251
    goto ldv_16935;
    ldv_16934: 
    {
#line 252
    tmp = w1_touch_bit(dev, 1);
#line 252
    res = (u8 )((int )((signed char )res) | (int )((signed char )((int )tmp << i)));
#line 251
    i = i + 1;
    }
    ldv_16935: ;
#line 251
    if (i <= 7) {
#line 253
      goto ldv_16934;
    } else {

    }

  }
#line 254
  return (res);
}
}
#line 256 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
static char const   __kstrtab_w1_read_8[10U]  = 
#line 256
  {      'w',      '1',      '_',      'r', 
        'e',      'a',      'd',      '_', 
        '8',      '\000'};
#line 256
struct kernel_symbol  const  __ksymtab_w1_read_8 ;
#line 256 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
struct kernel_symbol  const  __ksymtab_w1_read_8  =    {(unsigned long )(& w1_read_8), (char const   *)(& __kstrtab_w1_read_8)};
#line 264 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
void w1_write_block(struct w1_master *dev , u8 const   *buf , int len ) 
{ 
  int i ;

  {
#line 268
  if ((unsigned long )(dev->bus_master)->write_block != (unsigned long )((void (*)(void * ,
                                                                                   u8 const   * ,
                                                                                   int  ))0)) {
    {
#line 269
    w1_pre_write(dev);
#line 270
    (*((dev->bus_master)->write_block))((dev->bus_master)->data, buf, len);
    }
  } else {
#line 273
    i = 0;
#line 273
    goto ldv_16951;
    ldv_16950: 
    {
#line 274
    w1_write_8(dev, (int )*(buf + (unsigned long )i));
#line 273
    i = i + 1;
    }
    ldv_16951: ;
#line 273
    if (i < len) {
#line 275
      goto ldv_16950;
    } else {

    }

  }
  {
#line 275
  w1_post_write(dev);
  }
#line 276
  return;
}
}
#line 277 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
static char const   __kstrtab_w1_write_block[15U]  = 
#line 277
  {      'w',      '1',      '_',      'w', 
        'r',      'i',      't',      'e', 
        '_',      'b',      'l',      'o', 
        'c',      'k',      '\000'};
#line 277
struct kernel_symbol  const  __ksymtab_w1_write_block ;
#line 277 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
struct kernel_symbol  const  __ksymtab_w1_write_block  =    {(unsigned long )(& w1_write_block), (char const   *)(& __kstrtab_w1_write_block)};
#line 285 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
void w1_touch_block(struct w1_master *dev , u8 *buf , int len ) 
{ 
  int i ;
  int j ;
  u8 tmp ;
  u8 tmp___0 ;

  {
#line 290
  i = 0;
#line 290
  goto ldv_16974;
  ldv_16973: 
#line 291
  tmp = 0U;
#line 292
  j = 0;
#line 292
  goto ldv_16971;
  ldv_16970: ;
#line 293
  if (j == 7) {
    {
#line 294
    w1_pre_write(dev);
    }
  } else {

  }
  {
#line 295
  tmp___0 = w1_touch_bit(dev, ((int )*(buf + (unsigned long )i) >> j) & 1);
#line 295
  tmp = (u8 )((int )((signed char )tmp) | (int )((signed char )((int )tmp___0 << j)));
#line 292
  j = j + 1;
  }
  ldv_16971: ;
#line 292
  if (j <= 7) {
#line 294
    goto ldv_16970;
  } else {

  }
#line 298
  *(buf + (unsigned long )i) = tmp;
#line 290
  i = i + 1;
  ldv_16974: ;
#line 290
  if (i < len) {
#line 292
    goto ldv_16973;
  } else {

  }

#line 297
  return;
}
}
#line 301 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
static char const   __kstrtab_w1_touch_block[15U]  = 
#line 301
  {      'w',      '1',      '_',      't', 
        'o',      'u',      'c',      'h', 
        '_',      'b',      'l',      'o', 
        'c',      'k',      '\000'};
#line 301
struct kernel_symbol  const  __ksymtab_w1_touch_block ;
#line 301 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
struct kernel_symbol  const  __ksymtab_w1_touch_block  =    {(unsigned long )(& w1_touch_block), (char const   *)(& __kstrtab_w1_touch_block)};
#line 310 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
u8 w1_read_block(struct w1_master *dev , u8 *buf , int len ) 
{ 
  int i ;
  u8 ret ;

  {
#line 315
  if ((unsigned long )(dev->bus_master)->read_block != (unsigned long )((u8 (*)(void * ,
                                                                                u8 * ,
                                                                                int  ))0)) {
    {
#line 316
    ret = (*((dev->bus_master)->read_block))((dev->bus_master)->data, buf, len);
    }
  } else {
#line 318
    i = 0;
#line 318
    goto ldv_16993;
    ldv_16992: 
    {
#line 319
    *(buf + (unsigned long )i) = w1_read_8(dev);
#line 318
    i = i + 1;
    }
    ldv_16993: ;
#line 318
    if (i < len) {
#line 320
      goto ldv_16992;
    } else {

    }
#line 320
    ret = (u8 )len;
  }
#line 323
  return (ret);
}
}
#line 325 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
static char const   __kstrtab_w1_read_block[14U]  = 
#line 325
  {      'w',      '1',      '_',      'r', 
        'e',      'a',      'd',      '_', 
        'b',      'l',      'o',      'c', 
        'k',      '\000'};
#line 325
struct kernel_symbol  const  __ksymtab_w1_read_block ;
#line 325 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
struct kernel_symbol  const  __ksymtab_w1_read_block  =    {(unsigned long )(& w1_read_block), (char const   *)(& __kstrtab_w1_read_block)};
#line 332 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
int w1_reset_bus(struct w1_master *dev ) 
{ 
  int result ;
  unsigned long flags ;
  u8 tmp ;
  u8 tmp___0 ;
  int tmp___1 ;

  {
#line 335
  flags = 0UL;
#line 337
  if (w1_disable_irqs != 0) {
    {
#line 337
    flags = arch_local_irq_save();
#line 337
    trace_hardirqs_off();
    }
  } else {

  }
#line 339
  if ((unsigned long )(dev->bus_master)->reset_bus != (unsigned long )((u8 (*)(void * ))0)) {
    {
#line 340
    tmp = (*((dev->bus_master)->reset_bus))((dev->bus_master)->data);
#line 340
    result = (int )tmp & 1;
    }
  } else {
    {
#line 342
    (*((dev->bus_master)->write_bit))((dev->bus_master)->data, 0);
#line 350
    w1_delay(500UL);
#line 351
    (*((dev->bus_master)->write_bit))((dev->bus_master)->data, 1);
#line 352
    w1_delay(70UL);
#line 354
    tmp___0 = (*((dev->bus_master)->read_bit))((dev->bus_master)->data);
#line 354
    result = (int )tmp___0 & 1;
#line 360
    msleep(1U);
    }
  }
#line 363
  if (w1_disable_irqs != 0) {
    {
#line 363
    tmp___1 = arch_irqs_disabled_flags(flags);
    }
#line 363
    if (tmp___1 != 0) {
      {
#line 363
      arch_local_irq_restore(flags);
#line 363
      trace_hardirqs_off();
      }
    } else {
      {
#line 363
      trace_hardirqs_on();
#line 363
      arch_local_irq_restore(flags);
      }
    }
  } else {

  }
#line 365
  return (result);
}
}
#line 367 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
static char const   __kstrtab_w1_reset_bus[13U]  = 
#line 367
  {      'w',      '1',      '_',      'r', 
        'e',      's',      'e',      't', 
        '_',      'b',      'u',      's', 
        '\000'};
#line 367
struct kernel_symbol  const  __ksymtab_w1_reset_bus ;
#line 367 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
struct kernel_symbol  const  __ksymtab_w1_reset_bus  =    {(unsigned long )(& w1_reset_bus), (char const   *)(& __kstrtab_w1_reset_bus)};
#line 369 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
u8 w1_calc_crc8(u8 *data , int len ) 
{ 
  u8 crc ;
  u8 *tmp ;
  int tmp___0 ;

  {
#line 371
  crc = 0U;
#line 373
  goto ldv_17035;
  ldv_17034: 
#line 374
  tmp = data;
#line 374
  data = data + 1;
#line 374
  crc = w1_crc8_table[(int )crc ^ (int )*tmp];
  ldv_17035: 
#line 373
  tmp___0 = len;
#line 373
  len = len - 1;
#line 373
  if (tmp___0 != 0) {
#line 375
    goto ldv_17034;
  } else {

  }

#line 376
  return (crc);
}
}
#line 378 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
static char const   __kstrtab_w1_calc_crc8[13U]  = 
#line 378
  {      'w',      '1',      '_',      'c', 
        'a',      'l',      'c',      '_', 
        'c',      'r',      'c',      '8', 
        '\000'};
#line 378
struct kernel_symbol  const  __ksymtab_w1_calc_crc8 ;
#line 378 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
struct kernel_symbol  const  __ksymtab_w1_calc_crc8  =    {(unsigned long )(& w1_calc_crc8), (char const   *)(& __kstrtab_w1_calc_crc8)};
#line 380 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
void w1_search_devices(struct w1_master *dev , u8 search_type , void (*cb)(struct w1_master * ,
                                                                           u64  ) ) 
{ 


  {
#line 382
  dev->attempts = dev->attempts + 1UL;
#line 383
  if ((unsigned long )(dev->bus_master)->search != (unsigned long )((void (*)(void * ,
                                                                              struct w1_master * ,
                                                                              u8  ,
                                                                              void (*)(struct w1_master * ,
                                                                                       u64  ) ))0)) {
    {
#line 384
    (*((dev->bus_master)->search))((dev->bus_master)->data, dev, (int )search_type,
                                   cb);
    }
  } else {
    {
#line 387
    w1_search(dev, (int )search_type, cb);
    }
  }
#line 388
  return;
}
}
#line 401 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
int w1_reset_select_slave(struct w1_slave *sl ) 
{ 
  int tmp ;
  u8 match[9U] ;
  unsigned int tmp___0 ;
  u64 rn ;

  {
  {
#line 403
  tmp = w1_reset_bus(sl->master);
  }
#line 403
  if (tmp != 0) {
#line 404
    return (-1);
  } else {

  }
#line 406
  if ((sl->master)->slave_count == 1) {
    {
#line 407
    w1_write_8(sl->master, 204);
    }
  } else {
#line 409
    match[0] = 85U;
#line 409
    tmp___0 = 1U;
    {
#line 409
    while (1) {
      while_continue: /* CIL Label */ ;
#line 409
      if (tmp___0 >= 9U) {
#line 409
        goto while_break;
      } else {

      }
#line 409
      match[tmp___0] = (unsigned char)0;
#line 409
      tmp___0 = tmp___0 + 1U;
    }
    while_break: /* CIL Label */ ;
    }
    {
#line 410
    rn = *((u64 *)(& sl->reg_num));
#line 412
    memcpy((void *)((u8 *)(& match) + 1UL), (void const   *)(& rn), 8UL);
#line 413
    w1_write_block(sl->master, (u8 const   *)(& match), 9);
    }
  }
#line 415
  return (0);
}
}
#line 417 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
static char const   __kstrtab_w1_reset_select_slave[22U]  = 
#line 417
  {      'w',      '1',      '_',      'r', 
        'e',      's',      'e',      't', 
        '_',      's',      'e',      'l', 
        'e',      'c',      't',      '_', 
        's',      'l',      'a',      'v', 
        'e',      '\000'};
#line 417
struct kernel_symbol  const  __ksymtab_w1_reset_select_slave ;
#line 417 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
struct kernel_symbol  const  __ksymtab_w1_reset_select_slave  =    {(unsigned long )(& w1_reset_select_slave), (char const   *)(& __kstrtab_w1_reset_select_slave)};
#line 435 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
int w1_reset_resume_command(struct w1_master *dev ) 
{ 
  int tmp ;

  {
  {
#line 437
  tmp = w1_reset_bus(dev);
  }
#line 437
  if (tmp != 0) {
#line 438
    return (-1);
  } else {

  }
  {
#line 441
  w1_write_8(dev, 165);
  }
#line 442
  return (0);
}
}
#line 444 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
static char const   __kstrtab_w1_reset_resume_command[24U]  = 
#line 444
  {      'w',      '1',      '_',      'r', 
        'e',      's',      'e',      't', 
        '_',      'r',      'e',      's', 
        'u',      'm',      'e',      '_', 
        'c',      'o',      'm',      'm', 
        'a',      'n',      'd',      '\000'};
#line 444
struct kernel_symbol  const  __ksymtab_w1_reset_resume_command ;
#line 444 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
struct kernel_symbol  const  __ksymtab_w1_reset_resume_command  =    {(unsigned long )(& w1_reset_resume_command), (char const   *)(& __kstrtab_w1_reset_resume_command)};
#line 460 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
void w1_next_pullup(struct w1_master *dev , int delay ) 
{ 


  {
#line 462
  dev->pullup_duration = delay;
#line 463
  return;
}
}
#line 464 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
static char const   __kstrtab_w1_next_pullup[15U]  = 
#line 464
  {      'w',      '1',      '_',      'n', 
        'e',      'x',      't',      '_', 
        'p',      'u',      'l',      'l', 
        'u',      'p',      '\000'};
#line 464
struct kernel_symbol  const  __ksymtab_w1_next_pullup ;
#line 464 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/w1_io.c"
struct kernel_symbol  const  __ksymtab_w1_next_pullup  =    {(unsigned long )(& w1_next_pullup), (char const   *)(& __kstrtab_w1_next_pullup)};
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device  const  *dev ) ;
#line 24
int ldv_dev_set_drvdata(struct device *dev , void *data ) ;
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_ds2482.c.aux"
static void ldv_mutex_lock_16___0(struct mutex *ldv_func_arg1 ) ;
#line 31
static void ldv_mutex_lock_18___0(struct mutex *ldv_func_arg1 ) ;
#line 35
static void ldv_mutex_lock_20___0(struct mutex *ldv_func_arg1 ) ;
#line 39
static void ldv_mutex_lock_22___2(struct mutex *ldv_func_arg1 ) ;
#line 43
static void ldv_mutex_lock_24___2(struct mutex *ldv_func_arg1 ) ;
#line 51
void ldv_mutex_lock_access_lock_of_ds2482_data(struct mutex *lock ) ;
#line 55
void ldv_mutex_unlock_access_lock_of_ds2482_data(struct mutex *lock ) ;
#line 141 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.h"
int ldv_filter_err_code(int ret_val ) ;
#line 190 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/mutex.h"
static void ldv_mutex_unlock_17___1(struct mutex *ldv_func_arg1 ) ;
#line 194
static void ldv_mutex_unlock_19___0(struct mutex *ldv_func_arg1 ) ;
#line 198
static void ldv_mutex_unlock_21___0(struct mutex *ldv_func_arg1 ) ;
#line 202
static void ldv_mutex_unlock_23___2(struct mutex *ldv_func_arg1 ) ;
#line 206
static void ldv_mutex_unlock_25___2(struct mutex *ldv_func_arg1 ) ;
#line 649 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/slab.h"
__inline static void *kzalloc(size_t size , gfp_t flags ) ;
#line 913 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/device.h"
static void *ldv_dev_get_drvdata_12(struct device  const  *dev ) ;
#line 922
static int ldv_dev_set_drvdata_13(struct device *dev , void *data ) ;
#line 1041
extern int dev_warn(struct device  const  * , char const   *  , ...) ;
#line 85 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/i2c.h"
extern s32 i2c_smbus_read_byte(struct i2c_client  const  * ) ;
#line 86
extern s32 i2c_smbus_write_byte(struct i2c_client  const  * , u8  ) ;
#line 89
extern s32 i2c_smbus_write_byte_data(struct i2c_client  const  * , u8  , u8  ) ;
#line 239 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/i2c.h"
__inline static void *i2c_get_clientdata(struct i2c_client  const  *dev ) 
{ 
  void *tmp ;

  {
  {
#line 241
  tmp = ldv_dev_get_drvdata_12(& dev->dev);
  }
#line 241
  return (tmp);
}
}
#line 244 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/i2c.h"
__inline static void i2c_set_clientdata(struct i2c_client *dev , void *data ) 
{ 


  {
  {
#line 246
  ldv_dev_set_drvdata_13(& dev->dev, data);
  }
#line 247
  return;
}
}
#line 512
static int ldv_i2c_register_driver_26(struct module *ldv_func_arg1 , struct i2c_driver *ldv_func_arg2 ) ;
#line 514
extern void i2c_del_driver(struct i2c_driver * ) ;
#line 533 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/i2c.h"
__inline static u32 i2c_get_functionality(struct i2c_adapter *adap ) 
{ 
  u32 tmp ;

  {
  {
#line 535
  tmp = (*((adap->algo)->functionality))(adap);
  }
#line 535
  return (tmp);
}
}
#line 539 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/linux/i2c.h"
__inline static int i2c_check_functionality(struct i2c_adapter *adap , u32 func ) 
{ 
  u32 tmp ;

  {
  {
#line 541
  tmp = i2c_get_functionality(adap);
  }
#line 541
  return ((func & tmp) == func);
}
}
#line 10 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/include/asm-generic/delay.h"
extern void __const_udelay(unsigned long  ) ;
#line 65 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/masters/ds2482.c"
static u8 const   ds2482_chan_wr[8U]  = 
#line 65 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/masters/ds2482.c"
  {      240U,      225U,      210U,      195U, 
        180U,      165U,      150U,      135U};
#line 67 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/masters/ds2482.c"
static u8 const   ds2482_chan_rd[8U]  = 
#line 67
  {      184U,      177U,      170U,      163U, 
        156U,      149U,      142U,      135U};
#line 84
static int ds2482_probe(struct i2c_client *client , struct i2c_device_id  const  *id ) ;
#line 86
static int ds2482_remove(struct i2c_client *client ) ;
#line 92 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/masters/ds2482.c"
static struct i2c_device_id  const  ds2482_id[2U]  = {      {{'d', 's', '2', '4', '8', '2', '\000'}, 0UL}};
#line 97 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/masters/ds2482.c"
static struct i2c_driver ds2482_driver  = 
#line 97
     {0U, 0, & ds2482_probe, & ds2482_remove, 0, 0, 0, 0, 0, {"ds2482", 0, & __this_module,
                                                            0, (_Bool)0, 0, 0, 0,
                                                            0, 0, 0, 0, 0, 0, 0},
    (struct i2c_device_id  const  *)(& ds2482_id), 0, 0, {0, 0}};
#line 139 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/masters/ds2482.c"
__inline static u8 ds2482_calculate_config(u8 conf ) 
{ 


  {
#line 141
  return ((u8 )((int )((signed char )conf) | (int )((signed char )(~ ((int )conf) << 4))));
}
}
#line 151 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/masters/ds2482.c"
__inline static int ds2482_select_register(struct ds2482_data *pdev , u8 read_ptr ) 
{ 
  s32 tmp ;

  {
#line 153
  if ((int )pdev->read_prt != (int )read_ptr) {
    {
#line 154
    tmp = i2c_smbus_write_byte_data((struct i2c_client  const  *)pdev->client, 225,
                                    (int )read_ptr);
    }
#line 154
    if (tmp < 0) {
#line 157
      return (-1);
    } else {

    }
#line 159
    pdev->read_prt = read_ptr;
  } else {

  }
#line 161
  return (0);
}
}
#line 172 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/masters/ds2482.c"
__inline static int ds2482_send_cmd(struct ds2482_data *pdev , u8 cmd ) 
{ 
  s32 tmp ;

  {
  {
#line 174
  tmp = i2c_smbus_write_byte((struct i2c_client  const  *)pdev->client, (int )cmd);
  }
#line 174
  if (tmp < 0) {
#line 175
    return (-1);
  } else {

  }
#line 177
  pdev->read_prt = 240U;
#line 178
  return (0);
}
}
#line 191 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/masters/ds2482.c"
__inline static int ds2482_send_cmd_data(struct ds2482_data *pdev , u8 cmd , u8 byte ) 
{ 
  s32 tmp ;

  {
  {
#line 194
  tmp = i2c_smbus_write_byte_data((struct i2c_client  const  *)pdev->client, (int )cmd,
                                  (int )byte);
  }
#line 194
  if (tmp < 0) {
#line 195
    return (-1);
  } else {

  }
#line 198
  pdev->read_prt = (unsigned int )cmd != 210U ? 240U : 195U;
#line 200
  return (0);
}
}
#line 216 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/masters/ds2482.c"
static int ds2482_wait_1wire_idle(struct ds2482_data *pdev ) 
{ 
  int temp ;
  int retries ;
  int tmp ;

  {
  {
#line 218
  temp = -1;
#line 219
  retries = 0;
#line 221
  tmp = ds2482_select_register(pdev, 240);
  }
#line 221
  if (tmp == 0) {
    ldv_21360: 
    {
#line 223
    temp = i2c_smbus_read_byte((struct i2c_client  const  *)pdev->client);
    }
#line 225
    if (temp >= 0 && temp & 1) {
#line 225
      retries = retries + 1;
#line 225
      if (retries <= 99) {
#line 227
        goto ldv_21360;
      } else {
#line 230
        goto ldv_21361;
      }
    } else {

    }
    ldv_21361: ;
  } else {

  }
#line 228
  if (retries > 99) {
    {
#line 229
    printk("\v%s: timeout on channel %d\n", "ds2482_wait_1wire_idle", (int )pdev->channel);
    }
  } else {

  }
#line 232
  return (temp);
}
}
#line 243 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/masters/ds2482.c"
static int ds2482_set_channel(struct ds2482_data *pdev , u8 channel ) 
{ 
  s32 tmp ;
  s32 tmp___0 ;

  {
  {
#line 245
  tmp = i2c_smbus_write_byte_data((struct i2c_client  const  *)pdev->client, 195,
                                  (int )ds2482_chan_wr[(int )channel]);
  }
#line 245
  if (tmp < 0) {
#line 247
    return (-1);
  } else {

  }
  {
#line 249
  pdev->read_prt = 210U;
#line 250
  pdev->channel = 255U;
#line 251
  tmp___0 = i2c_smbus_read_byte((struct i2c_client  const  *)pdev->client);
  }
#line 251
  if (tmp___0 == (int )ds2482_chan_rd[(int )channel]) {
#line 252
    pdev->channel = channel;
#line 253
    return (0);
  } else {

  }
#line 255
  return (-1);
}
}
#line 266 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/masters/ds2482.c"
static u8 ds2482_w1_touch_bit(void *data , u8 bit ) 
{ 
  struct ds2482_w1_chan *pchan ;
  struct ds2482_data *pdev ;
  int status ;
  int tmp ;

  {
  {
#line 268
  pchan = (struct ds2482_w1_chan *)data;
#line 269
  pdev = pchan->pdev;
#line 270
  status = -1;
#line 272
  ldv_mutex_lock_16___0(& pdev->access_lock);
#line 275
  ds2482_wait_1wire_idle(pdev);
  }
#line 276
  if (pdev->w1_count > 1) {
    {
#line 277
    ds2482_set_channel(pdev, (int )pchan->channel);
    }
  } else {

  }
  {
#line 280
  tmp = ds2482_send_cmd_data(pdev, 135, (unsigned int )bit != 0U ? 255 : 0);
  }
#line 280
  if (tmp == 0) {
    {
#line 282
    status = ds2482_wait_1wire_idle(pdev);
    }
  } else {

  }
  {
#line 284
  ldv_mutex_unlock_17___1(& pdev->access_lock);
  }
#line 286
  return ((status & 32) != 0);
}
}
#line 298 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/masters/ds2482.c"
static u8 ds2482_w1_triplet(void *data , u8 dbit ) 
{ 
  struct ds2482_w1_chan *pchan ;
  struct ds2482_data *pdev ;
  int status ;
  int tmp ;

  {
  {
#line 300
  pchan = (struct ds2482_w1_chan *)data;
#line 301
  pdev = pchan->pdev;
#line 302
  status = 96;
#line 304
  ldv_mutex_lock_18___0(& pdev->access_lock);
#line 307
  ds2482_wait_1wire_idle(pdev);
  }
#line 308
  if (pdev->w1_count > 1) {
    {
#line 309
    ds2482_set_channel(pdev, (int )pchan->channel);
    }
  } else {

  }
  {
#line 312
  tmp = ds2482_send_cmd_data(pdev, 120, (unsigned int )dbit != 0U ? 255 : 0);
  }
#line 312
  if (tmp == 0) {
    {
#line 314
    status = ds2482_wait_1wire_idle(pdev);
    }
  } else {

  }
  {
#line 316
  ldv_mutex_unlock_19___0(& pdev->access_lock);
  }
#line 319
  return ((u8 )(status >> 5));
}
}
#line 328 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/masters/ds2482.c"
static void ds2482_w1_write_byte(void *data , u8 byte ) 
{ 
  struct ds2482_w1_chan *pchan ;
  struct ds2482_data *pdev ;

  {
  {
#line 330
  pchan = (struct ds2482_w1_chan *)data;
#line 331
  pdev = pchan->pdev;
#line 333
  ldv_mutex_lock_20___0(& pdev->access_lock);
#line 336
  ds2482_wait_1wire_idle(pdev);
  }
#line 337
  if (pdev->w1_count > 1) {
    {
#line 338
    ds2482_set_channel(pdev, (int )pchan->channel);
    }
  } else {

  }
  {
#line 341
  ds2482_send_cmd_data(pdev, 165, (int )byte);
#line 343
  ldv_mutex_unlock_21___0(& pdev->access_lock);
  }
#line 344
  return;
}
}
#line 352 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/masters/ds2482.c"
static u8 ds2482_w1_read_byte(void *data ) 
{ 
  struct ds2482_w1_chan *pchan ;
  struct ds2482_data *pdev ;
  int result ;

  {
  {
#line 354
  pchan = (struct ds2482_w1_chan *)data;
#line 355
  pdev = pchan->pdev;
#line 358
  ldv_mutex_lock_22___2(& pdev->access_lock);
#line 361
  ds2482_wait_1wire_idle(pdev);
  }
#line 362
  if (pdev->w1_count > 1) {
    {
#line 363
    ds2482_set_channel(pdev, (int )pchan->channel);
    }
  } else {

  }
  {
#line 366
  ds2482_send_cmd(pdev, 150);
#line 369
  ds2482_wait_1wire_idle(pdev);
#line 372
  ds2482_select_register(pdev, 225);
#line 375
  result = i2c_smbus_read_byte((struct i2c_client  const  *)pdev->client);
#line 377
  ldv_mutex_unlock_23___2(& pdev->access_lock);
  }
#line 379
  return ((u8 )result);
}
}
#line 389 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/masters/ds2482.c"
static u8 ds2482_w1_reset_bus(void *data ) 
{ 
  struct ds2482_w1_chan *pchan ;
  struct ds2482_data *pdev ;
  int err ;
  u8 retval ;
  u8 tmp ;

  {
  {
#line 391
  pchan = (struct ds2482_w1_chan *)data;
#line 392
  pdev = pchan->pdev;
#line 394
  retval = 1U;
#line 396
  ldv_mutex_lock_24___2(& pdev->access_lock);
#line 399
  ds2482_wait_1wire_idle(pdev);
  }
#line 400
  if (pdev->w1_count > 1) {
    {
#line 401
    ds2482_set_channel(pdev, (int )pchan->channel);
    }
  } else {

  }
  {
#line 404
  err = ds2482_send_cmd(pdev, 180);
  }
#line 405
  if (err >= 0) {
    {
#line 407
    err = ds2482_wait_1wire_idle(pdev);
#line 408
    retval = (err & 2) == 0;
    }
#line 411
    if ((err & 16) != 0) {
      {
#line 412
      tmp = ds2482_calculate_config(0);
#line 412
      ds2482_send_cmd_data(pdev, 210, (int )tmp);
      }
    } else {

    }
  } else {

  }
  {
#line 416
  ldv_mutex_unlock_25___2(& pdev->access_lock);
  }
#line 418
  return (retval);
}
}
#line 421 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/masters/ds2482.c"
static u8 ds2482_w1_set_pullup(void *data , int delay ) 
{ 
  struct ds2482_w1_chan *pchan ;
  struct ds2482_data *pdev ;
  u8 retval ;
  u8 tmp ;
  int tmp___0 ;

  {
#line 423
  pchan = (struct ds2482_w1_chan *)data;
#line 424
  pdev = pchan->pdev;
#line 425
  retval = 1U;
#line 431
  if (delay != 0) {
    {
#line 436
    ds2482_wait_1wire_idle(pdev);
#line 438
    tmp = ds2482_calculate_config(5);
#line 438
    tmp___0 = ds2482_send_cmd_data(pdev, 210, (int )tmp);
#line 438
    retval = (u8 )tmp___0;
#line 441
    ds2482_wait_1wire_idle(pdev);
    }
  } else {

  }
#line 444
  return (retval);
}
}
#line 448 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/masters/ds2482.c"
static int ds2482_probe(struct i2c_client *client , struct i2c_device_id  const  *id ) 
{ 
  struct ds2482_data *data ;
  int err ;
  int temp1 ;
  int idx ;
  int tmp ;
  void *tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  u8 tmp___3 ;
  struct lock_class_key __key ;

  {
  {
#line 452
  err = -19;
#line 456
  tmp = i2c_check_functionality(client->adapter, 1441792U);
  }
#line 456
  if (tmp == 0) {
#line 459
    return (-19);
  } else {

  }
  {
#line 461
  tmp___0 = kzalloc(1088UL, 208U);
#line 461
  data = (struct ds2482_data *)tmp___0;
  }
#line 461
  if ((unsigned long )data == (unsigned long )((struct ds2482_data *)0)) {
#line 462
    err = -12;
#line 463
    goto exit;
  } else {

  }
  {
#line 466
  data->client = client;
#line 467
  i2c_set_clientdata(client, (void *)data);
#line 470
  tmp___1 = ds2482_send_cmd(data, 240);
  }
#line 470
  if (tmp___1 < 0) {
    {
#line 471
    dev_warn((struct device  const  *)(& client->dev), "DS2482 reset failed.\n");
    }
#line 472
    goto exit_free;
  } else {

  }
  {
#line 476
  __const_udelay(2625UL);
#line 479
  temp1 = i2c_smbus_read_byte((struct i2c_client  const  *)client);
  }
#line 480
  if (temp1 != 24) {
    {
#line 481
    dev_warn((struct device  const  *)(& client->dev), "DS2482 reset status 0x%02X - not a DS2482\n",
             temp1);
    }
#line 483
    goto exit_free;
  } else {

  }
  {
#line 487
  data->w1_count = 1;
#line 488
  tmp___2 = ds2482_set_channel(data, 7);
  }
#line 488
  if (tmp___2 == 0) {
#line 489
    data->w1_count = 8;
  } else {

  }
  {
#line 492
  tmp___3 = ds2482_calculate_config(0);
#line 492
  ds2482_send_cmd_data(data, 210, (int )tmp___3);
#line 495
  __mutex_init(& data->access_lock, "&data->access_lock", & __key);
#line 498
  idx = 0;
  }
#line 498
  goto ldv_21420;
  ldv_21419: 
  {
#line 499
  data->w1_ch[idx].pdev = data;
#line 500
  data->w1_ch[idx].channel = (u8 )idx;
#line 503
  data->w1_ch[idx].w1_bm.data = (void *)((struct ds2482_w1_chan *)(& data->w1_ch) + (unsigned long )idx);
#line 504
  data->w1_ch[idx].w1_bm.read_byte = & ds2482_w1_read_byte;
#line 505
  data->w1_ch[idx].w1_bm.write_byte = & ds2482_w1_write_byte;
#line 506
  data->w1_ch[idx].w1_bm.touch_bit = & ds2482_w1_touch_bit;
#line 507
  data->w1_ch[idx].w1_bm.triplet = & ds2482_w1_triplet;
#line 508
  data->w1_ch[idx].w1_bm.reset_bus = & ds2482_w1_reset_bus;
#line 509
  data->w1_ch[idx].w1_bm.set_pullup = & ds2482_w1_set_pullup;
#line 511
  err = w1_add_master_device(& data->w1_ch[idx].w1_bm);
  }
#line 512
  if (err != 0) {
#line 513
    data->w1_ch[idx].pdev = (struct ds2482_data *)0;
#line 514
    goto exit_w1_remove;
  } else {

  }
#line 498
  idx = idx + 1;
  ldv_21420: ;
#line 498
  if (idx < data->w1_count) {
#line 500
    goto ldv_21419;
  } else {

  }

#line 518
  return (0);
  exit_w1_remove: 
#line 521
  idx = 0;
#line 521
  goto ldv_21423;
  ldv_21422: ;
#line 522
  if ((unsigned long )data->w1_ch[idx].pdev != (unsigned long )((struct ds2482_data *)0)) {
    {
#line 523
    w1_remove_master_device(& data->w1_ch[idx].w1_bm);
    }
  } else {

  }
#line 521
  idx = idx + 1;
  ldv_21423: ;
#line 521
  if (idx < data->w1_count) {
#line 523
    goto ldv_21422;
  } else {

  }

  exit_free: 
  {
#line 526
  kfree((void const   *)data);
  }
  exit: ;
#line 528
  return (err);
}
}
#line 531 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/masters/ds2482.c"
static int ds2482_remove(struct i2c_client *client ) 
{ 
  struct ds2482_data *data ;
  void *tmp ;
  int idx ;

  {
  {
#line 533
  tmp = i2c_get_clientdata((struct i2c_client  const  *)client);
#line 533
  data = (struct ds2482_data *)tmp;
#line 537
  idx = 0;
  }
#line 537
  goto ldv_21431;
  ldv_21430: ;
#line 538
  if ((unsigned long )data->w1_ch[idx].pdev != (unsigned long )((struct ds2482_data *)0)) {
    {
#line 539
    w1_remove_master_device(& data->w1_ch[idx].w1_bm);
    }
  } else {

  }
#line 537
  idx = idx + 1;
  ldv_21431: ;
#line 537
  if (idx < data->w1_count) {
#line 539
    goto ldv_21430;
  } else {

  }
  {
#line 543
  kfree((void const   *)data);
  }
#line 544
  return (0);
}
}
#line 547 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/masters/ds2482.c"
static int ds2482_driver_init(void) 
{ 
  int tmp ;

  {
  {
#line 547
  tmp = ldv_i2c_register_driver_26(& __this_module, & ds2482_driver);
  }
#line 547
  return (tmp);
}
}
#line 547 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/lkbce/drivers/w1/masters/ds2482.c"
static void ds2482_driver_exit(void) 
{ 


  {
  {
#line 547
  i2c_del_driver(& ds2482_driver);
  }
#line 548
  return;
}
}
#line 101 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_ds2482.c.aux"
void ldv_dispatch_register_7_3(struct i2c_driver *arg0 ) ;
#line 102
int ldv_emg_i2c_register_driver(struct module *arg0 , struct i2c_driver *arg1 ) ;
#line 105
void ldv_partially_ordered_scenario_3(void *arg0 ) ;
#line 106
int ldv_partially_ordered_scenario_probe_3_11(s32 (*arg0)(struct i2c_client * , struct i2c_device_id * ) ,
                                              struct i2c_client *arg1 , struct i2c_device_id *arg2 ) ;
#line 107
void ldv_partially_ordered_scenario_release_3_2(int (*arg0)(struct i2c_client * ) ,
                                                struct i2c_client *arg1 ) ;
#line 115 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_ds2482.c.aux"
void ldv_dispatch_register_7_3(struct i2c_driver *arg0 ) 
{ 
  struct ldv_struct_partially_ordered_scenario_3 *cf_arg_3 ;
  void *tmp ;

  {
  {
#line 117
  tmp = ldv_xmalloc(16UL);
#line 117
  cf_arg_3 = (struct ldv_struct_partially_ordered_scenario_3 *)tmp;
#line 118
  cf_arg_3->arg0 = arg0;
#line 119
  ldv_partially_ordered_scenario_3((void *)cf_arg_3);
  }
#line 120
  return;
}
}
#line 124 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_ds2482.c.aux"
int ldv_emg_i2c_register_driver(struct module *arg0 , struct i2c_driver *arg1 ) 
{ 
  struct i2c_driver *ldv_7_i2c_driver_i2c_driver ;
  int tmp ;
  int tmp___0 ;

  {
  {
#line 131
  tmp___0 = ldv_undef_int();
  }
#line 131
  if (tmp___0 != 0) {
    {
#line 133
    ldv_7_i2c_driver_i2c_driver = arg1;
#line 137
    ldv_dispatch_register_7_3(ldv_7_i2c_driver_i2c_driver);
    }
#line 141
    return (0);
  } else {
    {
#line 148
    tmp = ldv_undef_int_negative();
    }
#line 148
    return (tmp);
  }
}
}
#line 158 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_ds2482.c.aux"
void ldv_insmod_ds2482_driver_exit_4_3(void (*arg0)(void) ) 
{ 


  {
  {
#line 159
  ds2482_driver_exit();
  }
#line 160
  return;
}
}
#line 163 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_ds2482.c.aux"
int ldv_insmod_ds2482_driver_init_4_10(int (*arg0)(void) ) 
{ 
  int tmp ;

  {
  {
#line 164
  tmp = ds2482_driver_init();
  }
#line 164
  return (tmp);
}
}
#line 168 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_ds2482.c.aux"
void ldv_partially_ordered_scenario_3(void *arg0 ) 
{ 
  struct i2c_driver *ldv_3_container_i2c_driver ;
  struct i2c_device_id *ldv_3_ldv_param_11_1_default ;
  struct i2c_client *ldv_3_resource_client ;
  int ldv_3_ret_default ;
  struct ldv_struct_partially_ordered_scenario_3 *data ;
  void *tmp ;
  void *tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  int tmp___3 ;

  {
  {
#line 176
  data = (struct ldv_struct_partially_ordered_scenario_3 *)arg0;
#line 180
  ldv_3_ret_default = ldv_undef_int();
  }
#line 183
  if ((unsigned long )data != (unsigned long )((struct ldv_struct_partially_ordered_scenario_3 *)0)) {
    {
#line 184
    ldv_3_container_i2c_driver = data->arg0;
#line 185
    ldv_free((void *)data);
    }
  } else {

  }
  {
#line 190
  tmp = ldv_xmalloc(1448UL);
#line 190
  ldv_3_resource_client = (struct i2c_client *)tmp;
  }
#line 197
  goto ldv_main_3;
#line 199
  return;
  ldv_main_3: 
  {
#line 205
  tmp___2 = ldv_undef_int();
  }
#line 205
  if (tmp___2 != 0) {
    {
#line 207
    tmp___0 = ldv_xmalloc_unknown_size(0UL);
#line 207
    ldv_3_ldv_param_11_1_default = (struct i2c_device_id *)tmp___0;
#line 212
    ldv_3_ret_default = ldv_partially_ordered_scenario_probe_3_11((s32 (*)(struct i2c_client * ,
                                                                           struct i2c_device_id * ))ldv_3_container_i2c_driver->probe,
                                                                  ldv_3_resource_client,
                                                                  ldv_3_ldv_param_11_1_default);
#line 214
    ldv_3_ret_default = ldv_filter_err_code(ldv_3_ret_default);
#line 218
    ldv_free((void *)ldv_3_ldv_param_11_1_default);
#line 221
    tmp___1 = ldv_undef_int();
    }
#line 221
    if (tmp___1 != 0) {
      {
#line 223
      __VERIFIER_assume(ldv_3_ret_default == 0);
      }
#line 230
      goto ldv_call_3;
    } else {
      {
#line 234
      __VERIFIER_assume(ldv_3_ret_default != 0);
      }
#line 241
      goto ldv_main_3;
    }
  } else {
    {
#line 246
    ldv_free((void *)ldv_3_resource_client);
    }
#line 254
    return;
  }
#line 257
  return;
  ldv_call_3: 
  {
#line 263
  tmp___3 = ldv_undef_int();
  }
#line 263
  if (tmp___3 != 0) {
#line 272
    goto ldv_call_3;
  } else {
    {
#line 277
    ldv_partially_ordered_scenario_release_3_2(ldv_3_container_i2c_driver->remove,
                                               ldv_3_resource_client);
    }
#line 284
    goto ldv_main_3;
  }
#line 287
  return;
}
}
#line 292 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_ds2482.c.aux"
int ldv_partially_ordered_scenario_probe_3_11(s32 (*arg0)(struct i2c_client * , struct i2c_device_id * ) ,
                                              struct i2c_client *arg1 , struct i2c_device_id *arg2 ) 
{ 
  int tmp ;

  {
  {
#line 293
  tmp = ds2482_probe(arg1, (struct i2c_device_id  const  *)arg2);
  }
#line 293
  return (tmp);
}
}
#line 297 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_ds2482.c.aux"
void ldv_partially_ordered_scenario_release_3_2(int (*arg0)(struct i2c_client * ) ,
                                                struct i2c_client *arg1 ) 
{ 


  {
  {
#line 298
  ds2482_remove(arg1);
  }
#line 299
  return;
}
}
#line 385 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_ds2482.c.aux"
static void *ldv_dev_get_drvdata_12(struct device  const  *dev ) 
{ 
  void *tmp ;

  {
  {
#line 388
  tmp = ldv_dev_get_drvdata(dev);
  }
#line 388
  return (tmp);
}
}
#line 392 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_ds2482.c.aux"
static int ldv_dev_set_drvdata_13(struct device *dev , void *data ) 
{ 
  int tmp ;

  {
  {
#line 395
  tmp = ldv_dev_set_drvdata(dev, data);
  }
#line 395
  return (tmp);
}
}
#line 413 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_ds2482.c.aux"
static void ldv_mutex_lock_16___0(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 417
  ldv_mutex_lock_access_lock_of_ds2482_data(ldv_func_arg1);
  }
#line 418
  return;
}
}
#line 421 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_ds2482.c.aux"
static void ldv_mutex_unlock_17___1(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 425
  ldv_mutex_unlock_access_lock_of_ds2482_data(ldv_func_arg1);
  }
#line 426
  return;
}
}
#line 429 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_ds2482.c.aux"
static void ldv_mutex_lock_18___0(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 433
  ldv_mutex_lock_access_lock_of_ds2482_data(ldv_func_arg1);
  }
#line 434
  return;
}
}
#line 437 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_ds2482.c.aux"
static void ldv_mutex_unlock_19___0(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 441
  ldv_mutex_unlock_access_lock_of_ds2482_data(ldv_func_arg1);
  }
#line 442
  return;
}
}
#line 445 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_ds2482.c.aux"
static void ldv_mutex_lock_20___0(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 449
  ldv_mutex_lock_access_lock_of_ds2482_data(ldv_func_arg1);
  }
#line 450
  return;
}
}
#line 453 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_ds2482.c.aux"
static void ldv_mutex_unlock_21___0(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 457
  ldv_mutex_unlock_access_lock_of_ds2482_data(ldv_func_arg1);
  }
#line 458
  return;
}
}
#line 461 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_ds2482.c.aux"
static void ldv_mutex_lock_22___2(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 465
  ldv_mutex_lock_access_lock_of_ds2482_data(ldv_func_arg1);
  }
#line 466
  return;
}
}
#line 469 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_ds2482.c.aux"
static void ldv_mutex_unlock_23___2(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 473
  ldv_mutex_unlock_access_lock_of_ds2482_data(ldv_func_arg1);
  }
#line 474
  return;
}
}
#line 477 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_ds2482.c.aux"
static void ldv_mutex_lock_24___2(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 481
  ldv_mutex_lock_access_lock_of_ds2482_data(ldv_func_arg1);
  }
#line 482
  return;
}
}
#line 485 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_ds2482.c.aux"
static void ldv_mutex_unlock_25___2(struct mutex *ldv_func_arg1 ) 
{ 


  {
  {
#line 489
  ldv_mutex_unlock_access_lock_of_ds2482_data(ldv_func_arg1);
  }
#line 490
  return;
}
}
#line 493 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/weaver/.tmp_ds2482.c.aux"
static int ldv_i2c_register_driver_26(struct module *ldv_func_arg1 , struct i2c_driver *ldv_func_arg2 ) 
{ 
  int tmp ;

  {
  {
#line 497
  tmp = ldv_emg_i2c_register_driver(ldv_func_arg1, ldv_func_arg2);
  }
#line 497
  return (tmp);
}
}
#line 29 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.h"
void *ldv_xzalloc(size_t size ) ;
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device  const  *dev ) 
{ 


  {
#line 29
  if ((unsigned long )dev != (unsigned long )((struct device  const  *)0) && (unsigned long )dev->p != (unsigned long )((struct device_private */* const  */)0)) {
#line 30
    return ((dev->p)->driver_data);
  } else {

  }
#line 32
  return ((void *)0);
}
}
#line 41 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev , void *data ) 
{ 
  void *tmp ;

  {
  {
#line 43
  tmp = ldv_xzalloc(8UL);
#line 43
  dev->p = (struct device_private *)tmp;
#line 44
  (dev->p)->driver_data = data;
  }
#line 46
  return (0);
}
}
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.h"
void *ldv_zalloc(size_t size ) ;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host , unsigned int size ) 
{ 
  struct spi_master *master ;
  void *tmp ;

  {
  {
#line 27
  tmp = ldv_zalloc((unsigned long )size + 2256UL);
#line 27
  master = (struct spi_master *)tmp;
  }
#line 29
  if ((unsigned long )master == (unsigned long )((struct spi_master *)0)) {
#line 30
    return ((struct spi_master *)0);
  } else {

  }
  {
#line 32
  ldv_dev_set_drvdata(& master->dev, (void *)(master + 1UL));
  }
#line 34
  return (master);
}
}
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/err.h"
long ldv_is_err(void const   *ptr ) ;
#line 28
long ldv_is_err_or_null(void const   *ptr ) ;
#line 29
void *ldv_err_ptr(long error ) ;
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/err.c"
long ldv_is_err(void const   *ptr ) 
{ 


  {
#line 22
  return ((unsigned long )ptr > 4294967295UL);
}
}
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/err.c"
void *ldv_err_ptr(long error ) 
{ 


  {
#line 27
  return ((void *)(4294967295L - error));
}
}
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/err.c"
long ldv_ptr_err(void const   *ptr ) 
{ 


  {
#line 32
  return ((long )(4294967295UL - (unsigned long )ptr));
}
}
#line 35 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/err.c"
long ldv_is_err_or_null(void const   *ptr ) 
{ 
  long tmp ;
  int tmp___0 ;

  {
#line 37
  if ((unsigned long )ptr == (unsigned long )((void const   *)0)) {
#line 37
    tmp___0 = 1;
  } else {
    {
#line 37
    tmp = ldv_is_err(ptr);
    }
#line 37
    if (tmp != 0L) {
#line 37
      tmp___0 = 1;
    } else {
#line 37
      tmp___0 = 0;
    }
  }
#line 37
  return ((long )tmp___0);
}
}
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void) ;
#line 42
void ldv_switch_to_process_context(void) ;
#line 50
bool ldv_in_interrupt_context(void) ;
#line 133
int ldv_post_probe(int probe_ret_val ) ;
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.c"
static bool __ldv_in_interrupt_context  =    0;
#line 28 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void) 
{ 


  {
#line 30
  __ldv_in_interrupt_context = 1;
#line 31
  return;
}
}
#line 34 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.c"
void ldv_switch_to_process_context(void) 
{ 


  {
#line 36
  __ldv_in_interrupt_context = 0;
#line 37
  return;
}
}
#line 39 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.c"
bool ldv_in_interrupt_context(void) 
{ 


  {
#line 41
  return (__ldv_in_interrupt_context);
}
}
#line 44 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.c"
static int ldv_filter_positive_int(int val ) 
{ 


  {
  {
#line 46
  __VERIFIER_assume(val <= 0);
  }
#line 47
  return (val);
}
}
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.c"
int ldv_post_init(int init_ret_val ) 
{ 
  int tmp ;

  {
  {
#line 56
  tmp = ldv_filter_positive_int(init_ret_val);
  }
#line 56
  return (tmp);
}
}
#line 60 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val ) 
{ 
  int tmp ;

  {
  {
#line 62
  tmp = ldv_filter_positive_int(probe_ret_val);
  }
#line 62
  return (tmp);
}
}
#line 66 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val ) 
{ 
  int tmp ;

  {
  {
#line 68
  tmp = ldv_filter_positive_int(ret_val);
  }
#line 68
  return (tmp);
}
}
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/slab.h"
void *ldv_kcalloc(size_t n , size_t size , gfp_t flags ) ;
#line 26
void *ldv_kmalloc_array(size_t n , size_t size , gfp_t flags ) ;
#line 28
extern void ldv_check_alloc_flags(gfp_t  ) ;
#line 29
extern void ldv_after_alloc(void * ) ;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.h"
void *ldv_malloc(size_t size ) ;
#line 24
void *ldv_calloc(size_t nmemb , size_t size ) ;
#line 21 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/mm/slab.c"
void *ldv_kmalloc(size_t size , gfp_t flags ) 
{ 
  void *res ;

  {
  {
#line 25
  ldv_check_alloc_flags(flags);
#line 26
  res = ldv_malloc(size);
#line 27
  ldv_after_alloc(res);
  }
#line 29
  return (res);
}
}
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/mm/slab.c"
void *ldv_kcalloc(size_t n , size_t size , gfp_t flags ) 
{ 
  void *res ;

  {
  {
#line 36
  ldv_check_alloc_flags(flags);
#line 37
  res = ldv_calloc(n, size);
#line 38
  ldv_after_alloc(res);
  }
#line 40
  return (res);
}
}
#line 43 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/mm/slab.c"
void *ldv_kzalloc(size_t size , gfp_t flags ) 
{ 
  void *res ;

  {
  {
#line 47
  ldv_check_alloc_flags(flags);
#line 48
  res = ldv_zalloc(size);
#line 49
  ldv_after_alloc(res);
  }
#line 51
  return (res);
}
}
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n , size_t size , gfp_t flags ) 
{ 
  void *res ;

  {
  {
#line 58
  ldv_check_alloc_flags(flags);
#line 59
  res = ldv_malloc(n * size);
#line 60
  ldv_after_alloc(res);
  }
#line 62
  return (res);
}
}
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/common.h"
extern void __VERIFIER_error(void) ;
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/gcc.c"
long __builtin_expect(long exp , long c ) 
{ 


  {
#line 26
  return (exp);
}
}
#line 35 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/gcc.c"
void __builtin_trap(void) 
{ 


  {
  {
#line 37
  __VERIFIER_error();
  }
#line 38
  return;
}
}
#line 31 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.h"
extern void *external_allocated_data(void) ;
#line 33
void *ldv_malloc_unknown_size(void) ;
#line 34
void *ldv_calloc_unknown_size(void) ;
#line 35
void *ldv_zalloc_unknown_size(void) ;
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
extern void *malloc(size_t  ) ;
#line 25
extern void *calloc(size_t  , size_t  ) ;
#line 26
extern void free(void * ) ;
#line 29 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_malloc(size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;
  int tmp___1 ;

  {
  {
#line 31
  tmp___1 = ldv_undef_int();
  }
#line 31
  if (tmp___1 != 0) {
    {
#line 32
    tmp = malloc(size);
#line 32
    res = tmp;
#line 34
    __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 35
    tmp___0 = ldv_is_err((void const   *)res);
#line 35
    __VERIFIER_assume(tmp___0 == 0L);
    }
#line 37
    return (res);
  } else {
#line 40
    return ((void *)0);
  }
}
}
#line 43 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_calloc(size_t nmemb , size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;
  int tmp___1 ;

  {
  {
#line 45
  tmp___1 = ldv_undef_int();
  }
#line 45
  if (tmp___1 != 0) {
    {
#line 46
    tmp = calloc(nmemb, size);
#line 46
    res = tmp;
#line 48
    __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 49
    tmp___0 = ldv_is_err((void const   *)res);
#line 49
    __VERIFIER_assume(tmp___0 == 0L);
    }
#line 51
    return (res);
  } else {
#line 54
    return ((void *)0);
  }
}
}
#line 57 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_zalloc(size_t size ) 
{ 
  void *tmp ;

  {
  {
#line 59
  tmp = ldv_calloc(1UL, size);
  }
#line 59
  return (tmp);
}
}
#line 62 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void ldv_free(void *s ) 
{ 


  {
  {
#line 64
  free(s);
  }
#line 65
  return;
}
}
#line 67 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_xmalloc(size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;

  {
  {
#line 69
  tmp = malloc(size);
#line 69
  res = tmp;
#line 71
  __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 72
  tmp___0 = ldv_is_err((void const   *)res);
#line 72
  __VERIFIER_assume(tmp___0 == 0L);
  }
#line 74
  return (res);
}
}
#line 77 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_xzalloc(size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;

  {
  {
#line 79
  tmp = calloc(1UL, size);
#line 79
  res = tmp;
#line 81
  __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 82
  tmp___0 = ldv_is_err((void const   *)res);
#line 82
  __VERIFIER_assume(tmp___0 == 0L);
  }
#line 84
  return (res);
}
}
#line 87 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_malloc_unknown_size(void) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;
  int tmp___1 ;

  {
  {
#line 89
  tmp___1 = ldv_undef_int();
  }
#line 89
  if (tmp___1 != 0) {
    {
#line 90
    tmp = external_allocated_data();
#line 90
    res = tmp;
#line 92
    __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 93
    tmp___0 = ldv_is_err((void const   *)res);
#line 93
    __VERIFIER_assume(tmp___0 == 0L);
    }
#line 95
    return (res);
  } else {
#line 98
    return ((void *)0);
  }
}
}
#line 101 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_calloc_unknown_size(void) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;
  int tmp___1 ;

  {
  {
#line 103
  tmp___1 = ldv_undef_int();
  }
#line 103
  if (tmp___1 != 0) {
    {
#line 104
    tmp = external_allocated_data();
#line 104
    res = tmp;
#line 106
    memset(res, 0, 8UL);
#line 107
    __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 108
    tmp___0 = ldv_is_err((void const   *)res);
#line 108
    __VERIFIER_assume(tmp___0 == 0L);
    }
#line 110
    return (res);
  } else {
#line 113
    return ((void *)0);
  }
}
}
#line 116 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_zalloc_unknown_size(void) 
{ 
  void *tmp ;

  {
  {
#line 118
  tmp = ldv_calloc_unknown_size();
  }
#line 118
  return (tmp);
}
}
#line 121 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;

  {
  {
#line 123
  tmp = external_allocated_data();
#line 123
  res = tmp;
#line 125
  __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 126
  tmp___0 = ldv_is_err((void const   *)res);
#line 126
  __VERIFIER_assume(tmp___0 == 0L);
  }
#line 128
  return (res);
}
}
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.h"
int ldv_undef_long(void) ;
#line 24
unsigned int ldv_undef_uint(void) ;
#line 25
unsigned long ldv_undef_ulong(void) ;
#line 26
unsigned long long ldv_undef_ulonglong(void) ;
#line 27
void *ldv_undef_ptr(void) ;
#line 30
int ldv_undef_int_positive(void) ;
#line 36
int ldv_undef_int_nonpositive(void) ;
#line 39
void *ldv_undef_ptr_non_null(void) ;
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
extern int __VERIFIER_nondet_int(void) ;
#line 26
extern long __VERIFIER_nondet_long(void) ;
#line 33
extern unsigned int __VERIFIER_nondet_uint(void) ;
#line 36
extern unsigned long __VERIFIER_nondet_ulong(void) ;
#line 37
extern unsigned long long __VERIFIER_nondet_ulonglong(void) ;
#line 38
extern void *__VERIFIER_nondet_pointer(void) ;
#line 41 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
int ldv_undef_int(void) 
{ 
  int tmp ;

  {
  {
#line 43
  tmp = __VERIFIER_nondet_int();
  }
#line 43
  return (tmp);
}
}
#line 46 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
int ldv_undef_long(void) 
{ 
  long tmp ;

  {
  {
#line 48
  tmp = __VERIFIER_nondet_long();
  }
#line 48
  return ((int )tmp);
}
}
#line 51 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
unsigned int ldv_undef_uint(void) 
{ 
  unsigned int tmp ;

  {
  {
#line 53
  tmp = __VERIFIER_nondet_uint();
  }
#line 53
  return (tmp);
}
}
#line 56 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
void *ldv_undef_ptr(void) 
{ 
  void *tmp ;

  {
  {
#line 58
  tmp = __VERIFIER_nondet_pointer();
  }
#line 58
  return (tmp);
}
}
#line 61 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
unsigned long ldv_undef_ulong(void) 
{ 
  unsigned long tmp ;

  {
  {
#line 63
  tmp = __VERIFIER_nondet_ulong();
  }
#line 63
  return (tmp);
}
}
#line 66 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void) 
{ 
  unsigned long long tmp ;

  {
  {
#line 68
  tmp = __VERIFIER_nondet_ulonglong();
  }
#line 68
  return (tmp);
}
}
#line 71 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
int ldv_undef_int_positive(void) 
{ 
  int ret ;
  int tmp ;

  {
  {
#line 73
  tmp = ldv_undef_int();
#line 73
  ret = tmp;
#line 75
  __VERIFIER_assume(ret > 0);
  }
#line 77
  return (ret);
}
}
#line 80 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
int ldv_undef_int_negative(void) 
{ 
  int ret ;
  int tmp ;

  {
  {
#line 82
  tmp = ldv_undef_int();
#line 82
  ret = tmp;
#line 84
  __VERIFIER_assume(ret < 0);
  }
#line 86
  return (ret);
}
}
#line 89 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
int ldv_undef_int_nonpositive(void) 
{ 
  int ret ;
  int tmp ;

  {
  {
#line 91
  tmp = ldv_undef_int();
#line 91
  ret = tmp;
#line 93
  __VERIFIER_assume(ret <= 0);
  }
#line 95
  return (ret);
}
}
#line 98 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void) 
{ 
  void *ret ;
  int tmp ;

  {
  {
#line 100
  tmp = ldv_undef_int();
#line 100
  ret = (void *)((long )tmp);
#line 102
  __VERIFIER_assume((unsigned long )ret != (unsigned long )((void *)0));
  }
#line 104
  return (ret);
}
}
#line 1 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/rsg/models/mutex.bk.c"
void ldv_assert_linux_kernel_locking_mutex__one_thread_double_lock(int expr ) ;
#line 2
void ldv_assert_linux_kernel_locking_mutex__one_thread_double_lock_try(int expr ) ;
#line 3
void ldv_assert_linux_kernel_locking_mutex__one_thread_double_unlock(int expr ) ;
#line 4
void ldv_assert_linux_kernel_locking_mutex__one_thread_locked_at_exit(int expr ) ;
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
ldv_set LDV_MUTEXES_access_lock_of_ds2482_data  ;
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
void ldv_mutex_lock_access_lock_of_ds2482_data(struct mutex *lock ) 
{ 


  {
  {
#line 33
  ldv_assert_linux_kernel_locking_mutex__one_thread_double_lock(! LDV_MUTEXES_access_lock_of_ds2482_data);
#line 35
  LDV_MUTEXES_access_lock_of_ds2482_data = 1;
  }
#line 36
  return;
}
}
#line 39 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
int ldv_mutex_lock_interruptible_or_killable_access_lock_of_ds2482_data(struct mutex *lock ) 
{ 
  int tmp ;

  {
  {
#line 42
  ldv_assert_linux_kernel_locking_mutex__one_thread_double_lock(! LDV_MUTEXES_access_lock_of_ds2482_data);
#line 44
  tmp = ldv_undef_int();
  }
#line 44
  if (tmp != 0) {
#line 46
    LDV_MUTEXES_access_lock_of_ds2482_data = 1;
#line 48
    return (0);
  } else {
#line 52
    return (-4);
  }
}
}
#line 57 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
int ldv_mutex_is_locked_access_lock_of_ds2482_data(struct mutex *lock ) 
{ 
  int tmp ;

  {
#line 60
  if ((int )LDV_MUTEXES_access_lock_of_ds2482_data) {
#line 62
    return (1);
  } else {
    {
#line 65
    tmp = ldv_undef_int();
    }
#line 65
    if (tmp != 0) {
#line 67
      return (1);
    } else {
#line 71
      return (0);
    }
  }
}
}
#line 76 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
int ldv_mutex_trylock_access_lock_of_ds2482_data(struct mutex *lock ) 
{ 
  int tmp ;

  {
  {
#line 79
  ldv_assert_linux_kernel_locking_mutex__one_thread_double_lock_try(! LDV_MUTEXES_access_lock_of_ds2482_data);
#line 82
  tmp = ldv_mutex_is_locked_access_lock_of_ds2482_data(lock);
  }
#line 82
  if (tmp != 0) {
#line 84
    return (0);
  } else {
#line 88
    LDV_MUTEXES_access_lock_of_ds2482_data = 1;
#line 90
    return (1);
  }
}
}
#line 95 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
int ldv_atomic_dec_and_mutex_lock_access_lock_of_ds2482_data(atomic_t *cnt , struct mutex *lock ) 
{ 


  {
#line 98
  cnt->counter = cnt->counter - 1;
#line 101
  if (cnt->counter != 0) {
#line 103
    return (0);
  } else {
    {
#line 106
    ldv_mutex_lock_access_lock_of_ds2482_data(lock);
    }
#line 108
    return (1);
  }
}
}
#line 113 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
void ldv_mutex_unlock_access_lock_of_ds2482_data(struct mutex *lock ) 
{ 


  {
  {
#line 116
  ldv_assert_linux_kernel_locking_mutex__one_thread_double_unlock((int )LDV_MUTEXES_access_lock_of_ds2482_data);
#line 118
  LDV_MUTEXES_access_lock_of_ds2482_data = 0;
  }
#line 119
  return;
}
}
#line 120 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
ldv_set LDV_MUTEXES_bus_mutex_of_w1_master  ;
#line 123 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
void ldv_mutex_lock_bus_mutex_of_w1_master(struct mutex *lock ) 
{ 


  {
  {
#line 126
  ldv_assert_linux_kernel_locking_mutex__one_thread_double_lock(! LDV_MUTEXES_bus_mutex_of_w1_master);
#line 128
  LDV_MUTEXES_bus_mutex_of_w1_master = 1;
  }
#line 129
  return;
}
}
#line 132 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
int ldv_mutex_lock_interruptible_or_killable_bus_mutex_of_w1_master(struct mutex *lock ) 
{ 
  int tmp ;

  {
  {
#line 135
  ldv_assert_linux_kernel_locking_mutex__one_thread_double_lock(! LDV_MUTEXES_bus_mutex_of_w1_master);
#line 137
  tmp = ldv_undef_int();
  }
#line 137
  if (tmp != 0) {
#line 139
    LDV_MUTEXES_bus_mutex_of_w1_master = 1;
#line 141
    return (0);
  } else {
#line 145
    return (-4);
  }
}
}
#line 150 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
int ldv_mutex_is_locked_bus_mutex_of_w1_master(struct mutex *lock ) 
{ 
  int tmp ;

  {
#line 153
  if ((int )LDV_MUTEXES_bus_mutex_of_w1_master) {
#line 155
    return (1);
  } else {
    {
#line 158
    tmp = ldv_undef_int();
    }
#line 158
    if (tmp != 0) {
#line 160
      return (1);
    } else {
#line 164
      return (0);
    }
  }
}
}
#line 169 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
int ldv_mutex_trylock_bus_mutex_of_w1_master(struct mutex *lock ) 
{ 
  int tmp ;

  {
  {
#line 172
  ldv_assert_linux_kernel_locking_mutex__one_thread_double_lock_try(! LDV_MUTEXES_bus_mutex_of_w1_master);
#line 175
  tmp = ldv_mutex_is_locked_bus_mutex_of_w1_master(lock);
  }
#line 175
  if (tmp != 0) {
#line 177
    return (0);
  } else {
#line 181
    LDV_MUTEXES_bus_mutex_of_w1_master = 1;
#line 183
    return (1);
  }
}
}
#line 188 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
int ldv_atomic_dec_and_mutex_lock_bus_mutex_of_w1_master(atomic_t *cnt , struct mutex *lock ) 
{ 


  {
#line 191
  cnt->counter = cnt->counter - 1;
#line 194
  if (cnt->counter != 0) {
#line 196
    return (0);
  } else {
    {
#line 199
    ldv_mutex_lock_bus_mutex_of_w1_master(lock);
    }
#line 201
    return (1);
  }
}
}
#line 206 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
void ldv_mutex_unlock_bus_mutex_of_w1_master(struct mutex *lock ) 
{ 


  {
  {
#line 209
  ldv_assert_linux_kernel_locking_mutex__one_thread_double_unlock((int )LDV_MUTEXES_bus_mutex_of_w1_master);
#line 211
  LDV_MUTEXES_bus_mutex_of_w1_master = 0;
  }
#line 212
  return;
}
}
#line 213 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
ldv_set LDV_MUTEXES_i_mutex_of_inode  ;
#line 216 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
void ldv_mutex_lock_i_mutex_of_inode(struct mutex *lock ) 
{ 


  {
  {
#line 219
  ldv_assert_linux_kernel_locking_mutex__one_thread_double_lock(! LDV_MUTEXES_i_mutex_of_inode);
#line 221
  LDV_MUTEXES_i_mutex_of_inode = 1;
  }
#line 222
  return;
}
}
#line 225 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
int ldv_mutex_lock_interruptible_or_killable_i_mutex_of_inode(struct mutex *lock ) 
{ 
  int tmp ;

  {
  {
#line 228
  ldv_assert_linux_kernel_locking_mutex__one_thread_double_lock(! LDV_MUTEXES_i_mutex_of_inode);
#line 230
  tmp = ldv_undef_int();
  }
#line 230
  if (tmp != 0) {
#line 232
    LDV_MUTEXES_i_mutex_of_inode = 1;
#line 234
    return (0);
  } else {
#line 238
    return (-4);
  }
}
}
#line 243 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
int ldv_mutex_is_locked_i_mutex_of_inode(struct mutex *lock ) 
{ 
  int tmp ;

  {
#line 246
  if ((int )LDV_MUTEXES_i_mutex_of_inode) {
#line 248
    return (1);
  } else {
    {
#line 251
    tmp = ldv_undef_int();
    }
#line 251
    if (tmp != 0) {
#line 253
      return (1);
    } else {
#line 257
      return (0);
    }
  }
}
}
#line 262 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
int ldv_mutex_trylock_i_mutex_of_inode(struct mutex *lock ) 
{ 
  int tmp ;

  {
  {
#line 265
  ldv_assert_linux_kernel_locking_mutex__one_thread_double_lock_try(! LDV_MUTEXES_i_mutex_of_inode);
#line 268
  tmp = ldv_mutex_is_locked_i_mutex_of_inode(lock);
  }
#line 268
  if (tmp != 0) {
#line 270
    return (0);
  } else {
#line 274
    LDV_MUTEXES_i_mutex_of_inode = 1;
#line 276
    return (1);
  }
}
}
#line 281 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
int ldv_atomic_dec_and_mutex_lock_i_mutex_of_inode(atomic_t *cnt , struct mutex *lock ) 
{ 


  {
#line 284
  cnt->counter = cnt->counter - 1;
#line 287
  if (cnt->counter != 0) {
#line 289
    return (0);
  } else {
    {
#line 292
    ldv_mutex_lock_i_mutex_of_inode(lock);
    }
#line 294
    return (1);
  }
}
}
#line 299 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
void ldv_mutex_unlock_i_mutex_of_inode(struct mutex *lock ) 
{ 


  {
  {
#line 302
  ldv_assert_linux_kernel_locking_mutex__one_thread_double_unlock((int )LDV_MUTEXES_i_mutex_of_inode);
#line 304
  LDV_MUTEXES_i_mutex_of_inode = 0;
  }
#line 305
  return;
}
}
#line 306 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
ldv_set LDV_MUTEXES_list_mutex_of_w1_master  ;
#line 309 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
void ldv_mutex_lock_list_mutex_of_w1_master(struct mutex *lock ) 
{ 


  {
  {
#line 312
  ldv_assert_linux_kernel_locking_mutex__one_thread_double_lock(! LDV_MUTEXES_list_mutex_of_w1_master);
#line 314
  LDV_MUTEXES_list_mutex_of_w1_master = 1;
  }
#line 315
  return;
}
}
#line 318 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
int ldv_mutex_lock_interruptible_or_killable_list_mutex_of_w1_master(struct mutex *lock ) 
{ 
  int tmp ;

  {
  {
#line 321
  ldv_assert_linux_kernel_locking_mutex__one_thread_double_lock(! LDV_MUTEXES_list_mutex_of_w1_master);
#line 323
  tmp = ldv_undef_int();
  }
#line 323
  if (tmp != 0) {
#line 325
    LDV_MUTEXES_list_mutex_of_w1_master = 1;
#line 327
    return (0);
  } else {
#line 331
    return (-4);
  }
}
}
#line 336 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
int ldv_mutex_is_locked_list_mutex_of_w1_master(struct mutex *lock ) 
{ 
  int tmp ;

  {
#line 339
  if ((int )LDV_MUTEXES_list_mutex_of_w1_master) {
#line 341
    return (1);
  } else {
    {
#line 344
    tmp = ldv_undef_int();
    }
#line 344
    if (tmp != 0) {
#line 346
      return (1);
    } else {
#line 350
      return (0);
    }
  }
}
}
#line 355 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
int ldv_mutex_trylock_list_mutex_of_w1_master(struct mutex *lock ) 
{ 
  int tmp ;

  {
  {
#line 358
  ldv_assert_linux_kernel_locking_mutex__one_thread_double_lock_try(! LDV_MUTEXES_list_mutex_of_w1_master);
#line 361
  tmp = ldv_mutex_is_locked_list_mutex_of_w1_master(lock);
  }
#line 361
  if (tmp != 0) {
#line 363
    return (0);
  } else {
#line 367
    LDV_MUTEXES_list_mutex_of_w1_master = 1;
#line 369
    return (1);
  }
}
}
#line 374 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
int ldv_atomic_dec_and_mutex_lock_list_mutex_of_w1_master(atomic_t *cnt , struct mutex *lock ) 
{ 


  {
#line 377
  cnt->counter = cnt->counter - 1;
#line 380
  if (cnt->counter != 0) {
#line 382
    return (0);
  } else {
    {
#line 385
    ldv_mutex_lock_list_mutex_of_w1_master(lock);
    }
#line 387
    return (1);
  }
}
}
#line 392 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
void ldv_mutex_unlock_list_mutex_of_w1_master(struct mutex *lock ) 
{ 


  {
  {
#line 395
  ldv_assert_linux_kernel_locking_mutex__one_thread_double_unlock((int )LDV_MUTEXES_list_mutex_of_w1_master);
#line 397
  LDV_MUTEXES_list_mutex_of_w1_master = 0;
  }
#line 398
  return;
}
}
#line 399 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
ldv_set LDV_MUTEXES_lock  ;
#line 402 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
void ldv_mutex_lock_lock(struct mutex *lock ) 
{ 


  {
  {
#line 405
  ldv_assert_linux_kernel_locking_mutex__one_thread_double_lock(! LDV_MUTEXES_lock);
#line 407
  LDV_MUTEXES_lock = 1;
  }
#line 408
  return;
}
}
#line 411 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
int ldv_mutex_lock_interruptible_or_killable_lock(struct mutex *lock ) 
{ 
  int tmp ;

  {
  {
#line 414
  ldv_assert_linux_kernel_locking_mutex__one_thread_double_lock(! LDV_MUTEXES_lock);
#line 416
  tmp = ldv_undef_int();
  }
#line 416
  if (tmp != 0) {
#line 418
    LDV_MUTEXES_lock = 1;
#line 420
    return (0);
  } else {
#line 424
    return (-4);
  }
}
}
#line 429 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
int ldv_mutex_is_locked_lock(struct mutex *lock ) 
{ 
  int tmp ;

  {
#line 432
  if ((int )LDV_MUTEXES_lock) {
#line 434
    return (1);
  } else {
    {
#line 437
    tmp = ldv_undef_int();
    }
#line 437
    if (tmp != 0) {
#line 439
      return (1);
    } else {
#line 443
      return (0);
    }
  }
}
}
#line 448 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
int ldv_mutex_trylock_lock(struct mutex *lock ) 
{ 
  int tmp ;

  {
  {
#line 451
  ldv_assert_linux_kernel_locking_mutex__one_thread_double_lock_try(! LDV_MUTEXES_lock);
#line 454
  tmp = ldv_mutex_is_locked_lock(lock);
  }
#line 454
  if (tmp != 0) {
#line 456
    return (0);
  } else {
#line 460
    LDV_MUTEXES_lock = 1;
#line 462
    return (1);
  }
}
}
#line 467 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
int ldv_atomic_dec_and_mutex_lock_lock(atomic_t *cnt , struct mutex *lock ) 
{ 


  {
#line 470
  cnt->counter = cnt->counter - 1;
#line 473
  if (cnt->counter != 0) {
#line 475
    return (0);
  } else {
    {
#line 478
    ldv_mutex_lock_lock(lock);
    }
#line 480
    return (1);
  }
}
}
#line 485 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
void ldv_mutex_unlock_lock(struct mutex *lock ) 
{ 


  {
  {
#line 488
  ldv_assert_linux_kernel_locking_mutex__one_thread_double_unlock((int )LDV_MUTEXES_lock);
#line 490
  LDV_MUTEXES_lock = 0;
  }
#line 491
  return;
}
}
#line 492 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
ldv_set LDV_MUTEXES_mutex_of_device  ;
#line 495 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
void ldv_mutex_lock_mutex_of_device(struct mutex *lock ) 
{ 


  {
  {
#line 498
  ldv_assert_linux_kernel_locking_mutex__one_thread_double_lock(! LDV_MUTEXES_mutex_of_device);
#line 500
  LDV_MUTEXES_mutex_of_device = 1;
  }
#line 501
  return;
}
}
#line 504 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
int ldv_mutex_lock_interruptible_or_killable_mutex_of_device(struct mutex *lock ) 
{ 
  int tmp ;

  {
  {
#line 507
  ldv_assert_linux_kernel_locking_mutex__one_thread_double_lock(! LDV_MUTEXES_mutex_of_device);
#line 509
  tmp = ldv_undef_int();
  }
#line 509
  if (tmp != 0) {
#line 511
    LDV_MUTEXES_mutex_of_device = 1;
#line 513
    return (0);
  } else {
#line 517
    return (-4);
  }
}
}
#line 522 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
int ldv_mutex_is_locked_mutex_of_device(struct mutex *lock ) 
{ 
  int tmp ;

  {
#line 525
  if ((int )LDV_MUTEXES_mutex_of_device) {
#line 527
    return (1);
  } else {
    {
#line 530
    tmp = ldv_undef_int();
    }
#line 530
    if (tmp != 0) {
#line 532
      return (1);
    } else {
#line 536
      return (0);
    }
  }
}
}
#line 541 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
int ldv_mutex_trylock_mutex_of_device(struct mutex *lock ) 
{ 
  int tmp ;

  {
  {
#line 544
  ldv_assert_linux_kernel_locking_mutex__one_thread_double_lock_try(! LDV_MUTEXES_mutex_of_device);
#line 547
  tmp = ldv_mutex_is_locked_mutex_of_device(lock);
  }
#line 547
  if (tmp != 0) {
#line 549
    return (0);
  } else {
#line 553
    LDV_MUTEXES_mutex_of_device = 1;
#line 555
    return (1);
  }
}
}
#line 560 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
int ldv_atomic_dec_and_mutex_lock_mutex_of_device(atomic_t *cnt , struct mutex *lock ) 
{ 


  {
#line 563
  cnt->counter = cnt->counter - 1;
#line 566
  if (cnt->counter != 0) {
#line 568
    return (0);
  } else {
    {
#line 571
    ldv_mutex_lock_mutex_of_device(lock);
    }
#line 573
    return (1);
  }
}
}
#line 578 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
void ldv_mutex_unlock_mutex_of_device(struct mutex *lock ) 
{ 


  {
  {
#line 581
  ldv_assert_linux_kernel_locking_mutex__one_thread_double_unlock((int )LDV_MUTEXES_mutex_of_device);
#line 583
  LDV_MUTEXES_mutex_of_device = 0;
  }
#line 584
  return;
}
}
#line 585 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
ldv_set LDV_MUTEXES_mutex_of_w1_master  ;
#line 588 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
void ldv_mutex_lock_mutex_of_w1_master(struct mutex *lock ) 
{ 


  {
  {
#line 591
  ldv_assert_linux_kernel_locking_mutex__one_thread_double_lock(! LDV_MUTEXES_mutex_of_w1_master);
#line 593
  LDV_MUTEXES_mutex_of_w1_master = 1;
  }
#line 594
  return;
}
}
#line 597 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
int ldv_mutex_lock_interruptible_or_killable_mutex_of_w1_master(struct mutex *lock ) 
{ 
  int tmp ;

  {
  {
#line 600
  ldv_assert_linux_kernel_locking_mutex__one_thread_double_lock(! LDV_MUTEXES_mutex_of_w1_master);
#line 602
  tmp = ldv_undef_int();
  }
#line 602
  if (tmp != 0) {
#line 604
    LDV_MUTEXES_mutex_of_w1_master = 1;
#line 606
    return (0);
  } else {
#line 610
    return (-4);
  }
}
}
#line 615 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
int ldv_mutex_is_locked_mutex_of_w1_master(struct mutex *lock ) 
{ 
  int tmp ;

  {
#line 618
  if ((int )LDV_MUTEXES_mutex_of_w1_master) {
#line 620
    return (1);
  } else {
    {
#line 623
    tmp = ldv_undef_int();
    }
#line 623
    if (tmp != 0) {
#line 625
      return (1);
    } else {
#line 629
      return (0);
    }
  }
}
}
#line 634 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
int ldv_mutex_trylock_mutex_of_w1_master(struct mutex *lock ) 
{ 
  int tmp ;

  {
  {
#line 637
  ldv_assert_linux_kernel_locking_mutex__one_thread_double_lock_try(! LDV_MUTEXES_mutex_of_w1_master);
#line 640
  tmp = ldv_mutex_is_locked_mutex_of_w1_master(lock);
  }
#line 640
  if (tmp != 0) {
#line 642
    return (0);
  } else {
#line 646
    LDV_MUTEXES_mutex_of_w1_master = 1;
#line 648
    return (1);
  }
}
}
#line 653 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
int ldv_atomic_dec_and_mutex_lock_mutex_of_w1_master(atomic_t *cnt , struct mutex *lock ) 
{ 


  {
#line 656
  cnt->counter = cnt->counter - 1;
#line 659
  if (cnt->counter != 0) {
#line 661
    return (0);
  } else {
    {
#line 664
    ldv_mutex_lock_mutex_of_w1_master(lock);
    }
#line 666
    return (1);
  }
}
}
#line 671 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
void ldv_mutex_unlock_mutex_of_w1_master(struct mutex *lock ) 
{ 


  {
  {
#line 674
  ldv_assert_linux_kernel_locking_mutex__one_thread_double_unlock((int )LDV_MUTEXES_mutex_of_w1_master);
#line 676
  LDV_MUTEXES_mutex_of_w1_master = 0;
  }
#line 677
  return;
}
}
#line 678 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
ldv_set LDV_MUTEXES_w1_mlock  ;
#line 681 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
void ldv_mutex_lock_w1_mlock(struct mutex *lock ) 
{ 


  {
  {
#line 684
  ldv_assert_linux_kernel_locking_mutex__one_thread_double_lock(! LDV_MUTEXES_w1_mlock);
#line 686
  LDV_MUTEXES_w1_mlock = 1;
  }
#line 687
  return;
}
}
#line 690 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
int ldv_mutex_lock_interruptible_or_killable_w1_mlock(struct mutex *lock ) 
{ 
  int tmp ;

  {
  {
#line 693
  ldv_assert_linux_kernel_locking_mutex__one_thread_double_lock(! LDV_MUTEXES_w1_mlock);
#line 695
  tmp = ldv_undef_int();
  }
#line 695
  if (tmp != 0) {
#line 697
    LDV_MUTEXES_w1_mlock = 1;
#line 699
    return (0);
  } else {
#line 703
    return (-4);
  }
}
}
#line 708 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
int ldv_mutex_is_locked_w1_mlock(struct mutex *lock ) 
{ 
  int tmp ;

  {
#line 711
  if ((int )LDV_MUTEXES_w1_mlock) {
#line 713
    return (1);
  } else {
    {
#line 716
    tmp = ldv_undef_int();
    }
#line 716
    if (tmp != 0) {
#line 718
      return (1);
    } else {
#line 722
      return (0);
    }
  }
}
}
#line 727 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
int ldv_mutex_trylock_w1_mlock(struct mutex *lock ) 
{ 
  int tmp ;

  {
  {
#line 730
  ldv_assert_linux_kernel_locking_mutex__one_thread_double_lock_try(! LDV_MUTEXES_w1_mlock);
#line 733
  tmp = ldv_mutex_is_locked_w1_mlock(lock);
  }
#line 733
  if (tmp != 0) {
#line 735
    return (0);
  } else {
#line 739
    LDV_MUTEXES_w1_mlock = 1;
#line 741
    return (1);
  }
}
}
#line 746 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
int ldv_atomic_dec_and_mutex_lock_w1_mlock(atomic_t *cnt , struct mutex *lock ) 
{ 


  {
#line 749
  cnt->counter = cnt->counter - 1;
#line 752
  if (cnt->counter != 0) {
#line 754
    return (0);
  } else {
    {
#line 757
    ldv_mutex_lock_w1_mlock(lock);
    }
#line 759
    return (1);
  }
}
}
#line 764 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
void ldv_mutex_unlock_w1_mlock(struct mutex *lock ) 
{ 


  {
  {
#line 767
  ldv_assert_linux_kernel_locking_mutex__one_thread_double_unlock((int )LDV_MUTEXES_w1_mlock);
#line 769
  LDV_MUTEXES_w1_mlock = 0;
  }
#line 770
  return;
}
}
#line 772 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
void ldv_initialize(void) 
{ 


  {
#line 775
  LDV_MUTEXES_access_lock_of_ds2482_data = 0;
#line 777
  LDV_MUTEXES_bus_mutex_of_w1_master = 0;
#line 779
  LDV_MUTEXES_i_mutex_of_inode = 0;
#line 781
  LDV_MUTEXES_list_mutex_of_w1_master = 0;
#line 783
  LDV_MUTEXES_lock = 0;
#line 785
  LDV_MUTEXES_mutex_of_device = 0;
#line 787
  LDV_MUTEXES_mutex_of_w1_master = 0;
#line 789
  LDV_MUTEXES_w1_mlock = 0;
#line 790
  return;
}
}
#line 793 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/tr/linux/kernel/locking/mutex.c"
void ldv_check_final_state(void) 
{ 


  {
  {
#line 796
  ldv_assert_linux_kernel_locking_mutex__one_thread_locked_at_exit(! LDV_MUTEXES_access_lock_of_ds2482_data);
#line 798
  ldv_assert_linux_kernel_locking_mutex__one_thread_locked_at_exit(! LDV_MUTEXES_bus_mutex_of_w1_master);
#line 800
  ldv_assert_linux_kernel_locking_mutex__one_thread_locked_at_exit(! LDV_MUTEXES_i_mutex_of_inode);
#line 802
  ldv_assert_linux_kernel_locking_mutex__one_thread_locked_at_exit(! LDV_MUTEXES_list_mutex_of_w1_master);
#line 804
  ldv_assert_linux_kernel_locking_mutex__one_thread_locked_at_exit(! LDV_MUTEXES_lock);
#line 806
  ldv_assert_linux_kernel_locking_mutex__one_thread_locked_at_exit(! LDV_MUTEXES_mutex_of_device);
#line 808
  ldv_assert_linux_kernel_locking_mutex__one_thread_locked_at_exit(! LDV_MUTEXES_mutex_of_w1_master);
#line 810
  ldv_assert_linux_kernel_locking_mutex__one_thread_locked_at_exit(! LDV_MUTEXES_w1_mlock);
  }
#line 811
  return;
}
}
#line 3 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/fvtp/bug kind funcs.c"
void ldv_assert_linux_kernel_locking_mutex__one_thread_double_lock(int expr ) 
{ 


  {
#line 4
  if (! expr) {
    {
#line 5
    __VERIFIER_error();
    }
  } else {

  }
#line 6
  return;
}
}
#line 7 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/fvtp/bug kind funcs.c"
void ldv_assert_linux_kernel_locking_mutex__one_thread_double_lock_try(int expr ) 
{ 


  {
#line 8
  if (! expr) {
    {
#line 9
    __VERIFIER_error();
    }
  } else {

  }
#line 10
  return;
}
}
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/fvtp/bug kind funcs.c"
void ldv_assert_linux_kernel_locking_mutex__one_thread_double_unlock(int expr ) 
{ 


  {
#line 12
  if (! expr) {
    {
#line 13
    __VERIFIER_error();
    }
  } else {

  }
#line 14
  return;
}
}
#line 15 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/13/vtg/drivers/w1/wire.kocec1328ebf02/linux:kernel:locking:mutex/fvtp/bug kind funcs.c"
void ldv_assert_linux_kernel_locking_mutex__one_thread_locked_at_exit(int expr ) 
{ 


  {
#line 16
  if (! expr) {
    {
#line 17
    __VERIFIER_error();
    }
  } else {

  }
#line 18
  return;
}
}
