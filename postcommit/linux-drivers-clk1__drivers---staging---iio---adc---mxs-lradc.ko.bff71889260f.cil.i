/* Generated by CIL v. 1.5.1 */
/* print_CIL_Input is false */

#line 7 ".tmp_mxs-lradc.c"
struct device;
#line 19 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef signed char __s8;
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;
#line 26 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;
#line 29 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef long long __s64;
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;
#line 16 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/asm-generic/int-ll64.h"
typedef unsigned char u8;
#line 18 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/asm-generic/int-ll64.h"
typedef short s16;
#line 19 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/asm-generic/int-ll64.h"
typedef unsigned short u16;
#line 21 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/asm-generic/int-ll64.h"
typedef int s32;
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/asm-generic/int-ll64.h"
typedef unsigned int u32;
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/asm-generic/int-ll64.h"
typedef long long s64;
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;
#line 14 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;
#line 15 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;
#line 48 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;
#line 49 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;
#line 71 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;
#line 72 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;
#line 87 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;
#line 88 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;
#line 89 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;
#line 90 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;
#line 91 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;
#line 12 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
typedef __u32 __kernel_dev_t;
#line 15 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
typedef __kernel_dev_t dev_t;
#line 18 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
typedef unsigned short umode_t;
#line 21 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
typedef __kernel_pid_t pid_t;
#line 26 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;
#line 29 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
typedef _Bool bool;
#line 31 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
typedef __kernel_uid32_t uid_t;
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
typedef __kernel_gid32_t gid_t;
#line 36 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
typedef unsigned long uintptr_t;
#line 45 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
typedef __kernel_loff_t loff_t;
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
typedef __kernel_size_t size_t;
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;
#line 69 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
typedef __kernel_time_t time_t;
#line 102 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
typedef __s32 int32_t;
#line 108 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
typedef __u32 uint32_t;
#line 111 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
typedef __u64 uint64_t;
#line 113 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
typedef __s64 int64_t;
#line 133 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
typedef unsigned long sector_t;
#line 134 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
typedef unsigned long blkcnt_t;
#line 158 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
typedef unsigned int gfp_t;
#line 159 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
typedef unsigned int fmode_t;
#line 160 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
typedef unsigned int oom_flags_t;
#line 163 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
typedef u64 phys_addr_t;
#line 168 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
typedef phys_addr_t resource_size_t;
#line 178 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};
#line 178 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;
#line 183 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};
#line 183 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;
#line 184 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};
#line 189
struct hlist_node;
#line 189 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};
#line 193 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};
#line 204 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head * ) ;
};
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/slab.h"
struct clk;
#line 46 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/thread.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const   *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};
#line 103 "/home/debian/klever-inst/klever-addons/CIF/bin/aspectator-bin/bin/../lib64/gcc/x86_64-unknown-linux-gnu/4.6.0/include/stdarg.h"
struct kernel_symbol {
   unsigned long value ;
   char const   *name ;
};
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/export.h"
struct module;
#line 65 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/ptrace.h"
struct __anonstruct____missing_field_name_9 {
   unsigned int a ;
   unsigned int b ;
};
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/ptrace.h"
struct __anonstruct____missing_field_name_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int base1 : 8 ;
   unsigned int type : 4 ;
   unsigned int s : 1 ;
   unsigned int dpl : 2 ;
   unsigned int p : 1 ;
   unsigned int limit : 4 ;
   unsigned int avl : 1 ;
   unsigned int l : 1 ;
   unsigned int d : 1 ;
   unsigned int g : 1 ;
   unsigned int base2 : 8 ;
};
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/ptrace.h"
union __anonunion____missing_field_name_8 {
   struct __anonstruct____missing_field_name_9 __annonCompField4 ;
   struct __anonstruct____missing_field_name_10 __annonCompField5 ;
};
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion____missing_field_name_8 __annonCompField6 ;
};
#line 15 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;
#line 16 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};
#line 242 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;
#line 244 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};
#line 244 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;
#line 332
struct page;
#line 332 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;
#line 340
struct file;
#line 353
struct seq_file;
#line 390
struct thread_struct;
#line 392
struct mm_struct;
#line 393
struct task_struct;
#line 394
struct cpumask;
#line 327 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/paravirt_types.h"
struct arch_spinlock;
#line 18 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/spinlock_types.h"
typedef u16 __ticket_t;
#line 19 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/spinlock_types.h"
typedef u32 __ticketpair_t;
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/spinlock_types.h"
struct __raw_tickets {
   __ticket_t head ;
   __ticket_t tail ;
};
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/spinlock_types.h"
union __anonunion____missing_field_name_15 {
   __ticketpair_t head_tail ;
   struct __raw_tickets tickets ;
};
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/spinlock_types.h"
struct arch_spinlock {
   union __anonunion____missing_field_name_15 __annonCompField7 ;
};
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/spinlock_types.h"
typedef struct arch_spinlock arch_spinlock_t;
#line 34 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/spinlock_types.h"
struct qrwlock {
   atomic_t cnts ;
   arch_spinlock_t lock ;
};
#line 14 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/asm-generic/qrwlock_types.h"
typedef struct qrwlock arch_rwlock_t;
#line 142 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/init.h"
typedef void (*ctor_fn_t)(void);
#line 222 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/printk.h"
struct _ddebug {
   char const   *modname ;
   char const   *function ;
   char const   *filename ;
   char const   *format ;
   unsigned int lineno : 18 ;
   unsigned int flags : 8 ;
};
#line 403
struct file_operations;
#line 415
struct completion;
#line 416 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/kernel.h"
struct pid;
#line 17 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/current.h"
struct lockdep_map;
#line 127 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};
#line 79 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/vm86.h"
union __anonunion____missing_field_name_16 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};
#line 79 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion____missing_field_name_16 __annonCompField8 ;
};
#line 306 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/bitmap.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};
#line 102 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/bug.h"
struct cpumask {
   unsigned long bits[128U] ;
};
#line 14 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;
#line 671 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;
#line 161 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/processor.h"
struct seq_operations;
#line 293 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/processor.h"
struct i387_fsave_struct {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};
#line 311 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/processor.h"
struct __anonstruct____missing_field_name_21 {
   u64 rip ;
   u64 rdp ;
};
#line 311 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/processor.h"
struct __anonstruct____missing_field_name_22 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};
#line 311 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/processor.h"
union __anonunion____missing_field_name_20 {
   struct __anonstruct____missing_field_name_21 __annonCompField12 ;
   struct __anonstruct____missing_field_name_22 __annonCompField13 ;
};
#line 311 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/processor.h"
union __anonunion____missing_field_name_23 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};
#line 311 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/processor.h"
struct i387_fxsave_struct {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion____missing_field_name_20 __annonCompField14 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion____missing_field_name_23 __annonCompField15 ;
};
#line 345 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/processor.h"
struct i387_soft_struct {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};
#line 366 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/processor.h"
struct ymmh_struct {
   u32 ymmh_space[64U] ;
};
#line 371 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/processor.h"
struct lwp_struct {
   u8 reserved[128U] ;
};
#line 376 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/processor.h"
struct bndregs_struct {
   u64 bndregs[8U] ;
};
#line 380 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/processor.h"
struct bndcsr_struct {
   u64 cfg_reg_u ;
   u64 status_reg ;
};
#line 385 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/processor.h"
struct xsave_hdr_struct {
   u64 xstate_bv ;
   u64 xcomp_bv ;
   u64 reserved[6U] ;
};
#line 391 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/processor.h"
struct xsave_struct {
   struct i387_fxsave_struct i387 ;
   struct xsave_hdr_struct xsave_hdr ;
   struct ymmh_struct ymmh ;
   struct lwp_struct lwp ;
   struct bndregs_struct bndregs ;
   struct bndcsr_struct bndcsr ;
};
#line 400 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/processor.h"
union thread_xstate {
   struct i387_fsave_struct fsave ;
   struct i387_fxsave_struct fxsave ;
   struct i387_soft_struct soft ;
   struct xsave_struct xsave ;
};
#line 408 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/processor.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned int has_fpu ;
   union thread_xstate *state ;
};
#line 464
struct kmem_cache;
#line 465
struct perf_event;
#line 466 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned long usersp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   struct fpu fpu ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   unsigned char fpu_counter ;
};
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;
#line 55 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};
#line 26 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};
#line 53 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const   *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};
#line 144 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const   *name ;
   int cpu ;
   unsigned long ip ;
};
#line 205 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int class_idx : 13 ;
   unsigned int irq_context : 2 ;
   unsigned int trylock : 1 ;
   unsigned int read : 2 ;
   unsigned int check : 1 ;
   unsigned int hardirqs_off : 1 ;
   unsigned int references : 12 ;
};
#line 530 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/spinlock_types.h"
struct __anonstruct____missing_field_name_27 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/spinlock_types.h"
union __anonunion____missing_field_name_26 {
   struct raw_spinlock rlock ;
   struct __anonstruct____missing_field_name_27 __annonCompField17 ;
};
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion____missing_field_name_26 __annonCompField18 ;
};
#line 76 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_28 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_28 rwlock_t;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/rwlock_types.h"
struct optimistic_spin_queue {
   atomic_t tail ;
};
#line 26 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/osq_lock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   char const   *name ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 68 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};
#line 178
struct timespec;
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/jump_label.h"
struct jump_entry;
#line 36 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;
#line 37 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};
#line 412 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/spinlock.h"
struct seqcount {
   unsigned int sequence ;
   struct lockdep_map dep_map ;
};
#line 51 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;
#line 35 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};
#line 40 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;
#line 1029 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/wait.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};
#line 1112 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/rcupdate.h"
union __anonunion____missing_field_name_34 {
   unsigned long bitmap[4U] ;
   struct callback_head callback_head ;
};
#line 1112 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/rcupdate.h"
struct idr_layer {
   int prefix ;
   int layer ;
   struct idr_layer *ary[256U] ;
   int count ;
   union __anonunion____missing_field_name_34 __annonCompField20 ;
};
#line 41 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/idr.h"
struct idr {
   struct idr_layer *hint ;
   struct idr_layer *top ;
   int layers ;
   int cur ;
   spinlock_t lock ;
   int id_free_cnt ;
   struct idr_layer *id_free ;
};
#line 124 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/idr.h"
struct ida_bitmap {
   long nr_busy ;
   unsigned long bitmap[15U] ;
};
#line 153 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/idr.h"
struct ida {
   struct idr idr ;
   struct ida_bitmap *free_bitmap ;
};
#line 185 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/idr.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};
#line 40 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};
#line 87
struct dentry;
#line 88
struct iattr;
#line 89
struct vm_area_struct;
#line 90
struct super_block;
#line 91
struct file_system_type;
#line 92
struct kernfs_open_node;
#line 93
struct kernfs_iattrs;
#line 116
struct kernfs_root;
#line 116 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/rbtree.h"
struct kernfs_elem_dir {
   unsigned long subdirs ;
   struct rb_root children ;
   struct kernfs_root *root ;
};
#line 85 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/kernfs.h"
struct kernfs_node;
#line 85 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/kernfs.h"
struct kernfs_elem_symlink {
   struct kernfs_node *target_kn ;
};
#line 89
struct kernfs_ops;
#line 89 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/kernfs.h"
struct kernfs_elem_attr {
   struct kernfs_ops  const  *ops ;
   struct kernfs_open_node *open ;
   loff_t size ;
   struct kernfs_node *notify_next ;
};
#line 96 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/kernfs.h"
union __anonunion____missing_field_name_35 {
   struct kernfs_elem_dir dir ;
   struct kernfs_elem_symlink symlink ;
   struct kernfs_elem_attr attr ;
};
#line 96 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/kernfs.h"
struct kernfs_node {
   atomic_t count ;
   atomic_t active ;
   struct lockdep_map dep_map ;
   struct kernfs_node *parent ;
   char const   *name ;
   struct rb_node rb ;
   void const   *ns ;
   unsigned int hash ;
   union __anonunion____missing_field_name_35 __annonCompField21 ;
   void *priv ;
   unsigned short flags ;
   umode_t mode ;
   unsigned int ino ;
   struct kernfs_iattrs *iattr ;
};
#line 138 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/kernfs.h"
struct kernfs_syscall_ops {
   int (*remount_fs)(struct kernfs_root * , int * , char * ) ;
   int (*show_options)(struct seq_file * , struct kernfs_root * ) ;
   int (*mkdir)(struct kernfs_node * , char const   * , umode_t  ) ;
   int (*rmdir)(struct kernfs_node * ) ;
   int (*rename)(struct kernfs_node * , struct kernfs_node * , char const   * ) ;
};
#line 155 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/kernfs.h"
struct kernfs_root {
   struct kernfs_node *kn ;
   unsigned int flags ;
   struct ida ino_ida ;
   struct kernfs_syscall_ops *syscall_ops ;
   struct list_head supers ;
   wait_queue_head_t deactivate_waitq ;
};
#line 171
struct vm_operations_struct;
#line 171 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/kernfs.h"
struct kernfs_open_file {
   struct kernfs_node *kn ;
   struct file *file ;
   void *priv ;
   struct mutex mutex ;
   int event ;
   struct list_head list ;
   size_t atomic_write_len ;
   bool mmapped ;
   struct vm_operations_struct  const  *vm_ops ;
};
#line 187 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/kernfs.h"
struct kernfs_ops {
   int (*seq_show)(struct seq_file * , void * ) ;
   void *(*seq_start)(struct seq_file * , loff_t * ) ;
   void *(*seq_next)(struct seq_file * , void * , loff_t * ) ;
   void (*seq_stop)(struct seq_file * , void * ) ;
   ssize_t (*read)(struct kernfs_open_file * , char * , size_t  , loff_t  ) ;
   size_t atomic_write_len ;
   ssize_t (*write)(struct kernfs_open_file * , char * , size_t  , loff_t  ) ;
   int (*mmap)(struct kernfs_open_file * , struct vm_area_struct * ) ;
   struct lock_class_key lockdep_key ;
};
#line 464
struct sock;
#line 465
struct kobject;
#line 466
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
} ;
#line 472 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/kernfs.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const   *(*netlink_ns)(struct sock * ) ;
   void const   *(*initial_ns)(void) ;
   void (*drop_ns)(void * ) ;
};
#line 135 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/uapi/asm/stat.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};
#line 83 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/highuid.h"
struct user_namespace;
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/uidgid.h"
struct __anonstruct_kuid_t_36 {
   uid_t val ;
};
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_36 kuid_t;
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/uidgid.h"
struct __anonstruct_kgid_t_37 {
   gid_t val ;
};
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_37 kgid_t;
#line 127 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/uidgid.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};
#line 36 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/stat.h"
struct bin_attribute;
#line 37 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/stat.h"
struct attribute {
   char const   *name ;
   umode_t mode ;
   bool ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};
#line 37 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/sysfs.h"
struct attribute_group {
   char const   *name ;
   umode_t (*is_visible)(struct kobject * , struct attribute * , int  ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};
#line 67 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file * , struct kobject * , struct bin_attribute * , char * ,
                   loff_t  , size_t  ) ;
   ssize_t (*write)(struct file * , struct kobject * , struct bin_attribute * , char * ,
                    loff_t  , size_t  ) ;
   int (*mmap)(struct file * , struct kobject * , struct bin_attribute * , struct vm_area_struct * ) ;
};
#line 131 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject * , struct attribute * , char * ) ;
   ssize_t (*store)(struct kobject * , struct attribute * , char const   * , size_t  ) ;
};
#line 470 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};
#line 311 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};
#line 41 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/ktime.h"
typedef union ktime ktime_t;
#line 207 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/timekeeping.h"
struct tvec_base;
#line 208 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/timekeeping.h"
struct timer_list {
   struct list_head entry ;
   unsigned long expires ;
   struct tvec_base *base ;
   void (*function)(unsigned long  ) ;
   unsigned long data ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};
#line 254 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/timer.h"
struct hrtimer;
#line 255
enum hrtimer_restart;
#line 266
struct workqueue_struct;
#line 267
struct work_struct;
#line 53 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct * ) ;
   struct lockdep_map lockdep_map ;
};
#line 106 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};
#line 52 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/kobject.h"
struct kset;
#line 52
struct kobj_type;
#line 52 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/kobject.h"
struct kobject {
   char const   *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct kernfs_node *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int state_initialized : 1 ;
   unsigned int state_in_sysfs : 1 ;
   unsigned int state_add_uevent_sent : 1 ;
   unsigned int state_remove_uevent_sent : 1 ;
   unsigned int uevent_suppress : 1 ;
};
#line 114 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject * ) ;
   struct sysfs_ops  const  *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations  const  *(*child_ns_type)(struct kobject * ) ;
   void const   *(*namespace)(struct kobject * ) ;
};
#line 122 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/kobject.h"
struct kobj_uevent_env {
   char *argv[3U] ;
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};
#line 130 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const  filter)(struct kset * , struct kobject * ) ;
   char const   *(* const  name)(struct kset * , struct kobject * ) ;
   int (* const  uevent)(struct kset * , struct kobject * , struct kobj_uevent_env * ) ;
};
#line 147 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops  const  *uevent_ops ;
};
#line 222
struct klist_node;
#line 37 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};
#line 98 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_38 {
   unsigned long bits[16U] ;
};
#line 98 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_38 nodemask_t;
#line 531
struct path;
#line 532
struct inode;
#line 533 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/nodemask.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   size_t pad_until ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations  const  *op ;
   int poll_event ;
   struct user_namespace *user_ns ;
   void *private ;
};
#line 35 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file * , loff_t * ) ;
   void (*stop)(struct seq_file * , void * ) ;
   void *(*next)(struct seq_file * , void * , loff_t * ) ;
   int (*show)(struct seq_file * , void * ) ;
};
#line 196
struct pinctrl;
#line 197
struct pinctrl_state;
#line 194 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/pm.h"
struct pm_message {
   int event ;
};
#line 64 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/pm.h"
typedef struct pm_message pm_message_t;
#line 65 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device * ) ;
   void (*complete)(struct device * ) ;
   int (*suspend)(struct device * ) ;
   int (*resume)(struct device * ) ;
   int (*freeze)(struct device * ) ;
   int (*thaw)(struct device * ) ;
   int (*poweroff)(struct device * ) ;
   int (*restore)(struct device * ) ;
   int (*suspend_late)(struct device * ) ;
   int (*resume_early)(struct device * ) ;
   int (*freeze_late)(struct device * ) ;
   int (*thaw_early)(struct device * ) ;
   int (*poweroff_late)(struct device * ) ;
   int (*restore_early)(struct device * ) ;
   int (*suspend_noirq)(struct device * ) ;
   int (*resume_noirq)(struct device * ) ;
   int (*freeze_noirq)(struct device * ) ;
   int (*thaw_noirq)(struct device * ) ;
   int (*poweroff_noirq)(struct device * ) ;
   int (*restore_noirq)(struct device * ) ;
   int (*runtime_suspend)(struct device * ) ;
   int (*runtime_resume)(struct device * ) ;
   int (*runtime_idle)(struct device * ) ;
};
#line 320
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
} ;
#line 327
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
} ;
#line 335
struct wakeup_source;
#line 546 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};
#line 553
struct dev_pm_qos;
#line 553 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int can_wakeup : 1 ;
   unsigned int async_suspend : 1 ;
   bool is_prepared : 1 ;
   bool is_suspended : 1 ;
   bool is_noirq_suspended : 1 ;
   bool is_late_suspended : 1 ;
   bool ignore_children : 1 ;
   bool early_init : 1 ;
   bool direct_complete : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool wakeup_path : 1 ;
   bool syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int disable_depth : 3 ;
   unsigned int idle_notification : 1 ;
   unsigned int request_pending : 1 ;
   unsigned int deferred_resume : 1 ;
   unsigned int run_wake : 1 ;
   unsigned int runtime_auto : 1 ;
   unsigned int no_callbacks : 1 ;
   unsigned int irq_safe : 1 ;
   unsigned int use_autosuspend : 1 ;
   unsigned int timer_autosuspends : 1 ;
   unsigned int memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   void (*set_latency_tolerance)(struct device * , s32  ) ;
   struct dev_pm_qos *qos ;
};
#line 614 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
};
#line 825 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/mmzone.h"
struct rw_semaphore;
#line 826 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/mmzone.h"
struct rw_semaphore {
   long count ;
   struct list_head wait_list ;
   raw_spinlock_t wait_lock ;
   struct optimistic_spin_queue osq ;
   struct task_struct *owner ;
   struct lockdep_map dep_map ;
};
#line 174 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/x86_init.h"
struct msi_desc;
#line 191
struct irq_data;
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_103 {
   void *ldt ;
   int size ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
};
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_103 mm_context_t;
#line 169 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/io_apic.h"
struct device_node;
#line 170
struct irq_domain;
#line 1304 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/mmzone.h"
struct llist_node;
#line 64 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};
#line 420 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/gfp.h"
struct dma_map_ops;
#line 420 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/gfp.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/device.h"
struct pdev_archdata {

};
#line 14
struct device_private;
#line 15
struct device_driver;
#line 16
struct driver_private;
#line 17
struct class;
#line 18
struct subsys_private;
#line 19
struct bus_type;
#line 20
struct iommu_ops;
#line 21
struct iommu_group;
#line 60 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/device.h"
struct device_attribute;
#line 60 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/device.h"
struct bus_type {
   char const   *name ;
   char const   *dev_name ;
   struct device *dev_root ;
   struct device_attribute *dev_attrs ;
   struct attribute_group  const  **bus_groups ;
   struct attribute_group  const  **dev_groups ;
   struct attribute_group  const  **drv_groups ;
   int (*match)(struct device * , struct device_driver * ) ;
   int (*uevent)(struct device * , struct kobj_uevent_env * ) ;
   int (*probe)(struct device * ) ;
   int (*remove)(struct device * ) ;
   void (*shutdown)(struct device * ) ;
   int (*online)(struct device * ) ;
   int (*offline)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
   struct iommu_ops  const  *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};
#line 138
struct device_type;
#line 195
struct of_device_id;
#line 195
struct acpi_device_id;
#line 195 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/device.h"
struct device_driver {
   char const   *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const   *mod_name ;
   bool suppress_bind_attrs ;
   struct of_device_id  const  *of_match_table ;
   struct acpi_device_id  const  *acpi_match_table ;
   int (*probe)(struct device * ) ;
   int (*remove)(struct device * ) ;
   void (*shutdown)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct attribute_group  const  **groups ;
   struct dev_pm_ops  const  *pm ;
   struct driver_private *p ;
};
#line 321
struct class_attribute;
#line 321 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/device.h"
struct class {
   char const   *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct attribute_group  const  **dev_groups ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device * , struct kobj_uevent_env * ) ;
   char *(*devnode)(struct device * , umode_t * ) ;
   void (*class_release)(struct class * ) ;
   void (*dev_release)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct kobj_ns_type_operations  const  *ns_type ;
   void const   *(*namespace)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
   struct subsys_private *p ;
};
#line 414 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class * , struct class_attribute * , char * ) ;
   ssize_t (*store)(struct class * , struct class_attribute * , char const   * , size_t  ) ;
};
#line 482 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/device.h"
struct device_type {
   char const   *name ;
   struct attribute_group  const  **groups ;
   int (*uevent)(struct device * , struct kobj_uevent_env * ) ;
   char *(*devnode)(struct device * , umode_t * , kuid_t * , kgid_t * ) ;
   void (*release)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
};
#line 510 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device * , struct device_attribute * , char * ) ;
   ssize_t (*store)(struct device * , struct device_attribute * , char const   * ,
                    size_t  ) ;
};
#line 642 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};
#line 651
struct acpi_device;
#line 652 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/device.h"
struct acpi_dev_node {
   struct acpi_device *companion ;
};
#line 658
struct dma_coherent_mem;
#line 658
struct cma;
#line 658 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const   *init_name ;
   struct device_type  const  *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   void *driver_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   unsigned long dma_pfn_offset ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct cma *cma_area ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct acpi_dev_node acpi_node ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group  const  **groups ;
   void (*release)(struct device * ) ;
   struct iommu_group *iommu_group ;
   bool offline_disabled : 1 ;
   bool offline : 1 ;
};
#line 805 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/device.h"
struct wakeup_source {
   char const   *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool active : 1 ;
   bool autosleep_enabled : 1 ;
};
#line 91 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/kdev_t.h"
struct cdev {
   struct kobject kobj ;
   struct module *owner ;
   struct file_operations  const  *ops ;
   struct list_head list ;
   dev_t dev ;
   unsigned int count ;
};
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/cdev.h"
struct backing_dev_info;
#line 34
enum iio_chan_type {
    IIO_VOLTAGE = 0,
    IIO_CURRENT = 1,
    IIO_POWER = 2,
    IIO_ACCEL = 3,
    IIO_ANGL_VEL = 4,
    IIO_MAGN = 5,
    IIO_LIGHT = 6,
    IIO_INTENSITY = 7,
    IIO_PROXIMITY = 8,
    IIO_TEMP = 9,
    IIO_INCLI = 10,
    IIO_ROT = 11,
    IIO_ANGL = 12,
    IIO_TIMESTAMP = 13,
    IIO_CAPACITANCE = 14,
    IIO_ALTVOLTAGE = 15,
    IIO_CCT = 16,
    IIO_PRESSURE = 17,
    IIO_HUMIDITYRELATIVE = 18
} ;
#line 86
enum iio_event_type {
    IIO_EV_TYPE_THRESH = 0,
    IIO_EV_TYPE_MAG = 1,
    IIO_EV_TYPE_ROC = 2,
    IIO_EV_TYPE_THRESH_ADAPTIVE = 3,
    IIO_EV_TYPE_MAG_ADAPTIVE = 4
} ;
#line 94
enum iio_event_info {
    IIO_EV_INFO_ENABLE = 0,
    IIO_EV_INFO_VALUE = 1,
    IIO_EV_INFO_HYSTERESIS = 2,
    IIO_EV_INFO_PERIOD = 3
} ;
#line 101
enum iio_event_direction {
    IIO_EV_DIR_EITHER = 0,
    IIO_EV_DIR_RISING = 1,
    IIO_EV_DIR_FALLING = 2
} ;
#line 127
enum iio_shared_by {
    IIO_SEPARATE = 0,
    IIO_SHARED_BY_TYPE = 1,
    IIO_SHARED_BY_DIR = 2,
    IIO_SHARED_BY_ALL = 3
} ;
#line 134
enum iio_endian {
    IIO_CPU = 0,
    IIO_BE = 1,
    IIO_LE = 2
} ;
#line 140
struct iio_chan_spec;
#line 141
struct iio_dev;
#line 142 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/cdev.h"
struct iio_chan_spec_ext_info {
   char const   *name ;
   enum iio_shared_by shared ;
   ssize_t (*read)(struct iio_dev * , uintptr_t  , struct iio_chan_spec  const  * ,
                   char * ) ;
   ssize_t (*write)(struct iio_dev * , uintptr_t  , struct iio_chan_spec  const  * ,
                    char const   * , size_t  ) ;
   uintptr_t private ;
};
#line 105 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/iio/iio.h"
struct iio_event_spec {
   enum iio_event_type type ;
   enum iio_event_direction dir ;
   unsigned long mask_separate ;
   unsigned long mask_shared_by_type ;
   unsigned long mask_shared_by_dir ;
   unsigned long mask_shared_by_all ;
};
#line 163 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/iio/iio.h"
struct __anonstruct_scan_type_130 {
   char sign ;
   u8 realbits ;
   u8 storagebits ;
   u8 shift ;
   u8 repeat ;
   enum iio_endian endianness ;
};
#line 163 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/iio/iio.h"
struct iio_chan_spec {
   enum iio_chan_type type ;
   int channel ;
   int channel2 ;
   unsigned long address ;
   int scan_index ;
   struct __anonstruct_scan_type_130 scan_type ;
   long info_mask_separate ;
   long info_mask_shared_by_type ;
   long info_mask_shared_by_dir ;
   long info_mask_shared_by_all ;
   struct iio_event_spec  const  *event_spec ;
   unsigned int num_event_specs ;
   struct iio_chan_spec_ext_info  const  *ext_info ;
   char const   *extend_name ;
   char const   *datasheet_name ;
   unsigned int modified : 1 ;
   unsigned int indexed : 1 ;
   unsigned int output : 1 ;
   unsigned int differential : 1 ;
};
#line 282
struct iio_trigger;
#line 283 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/iio/iio.h"
struct iio_info {
   struct module *driver_module ;
   struct attribute_group *event_attrs ;
   struct attribute_group  const  *attrs ;
   int (*read_raw)(struct iio_dev * , struct iio_chan_spec  const  * , int * , int * ,
                   long  ) ;
   int (*read_raw_multi)(struct iio_dev * , struct iio_chan_spec  const  * , int  ,
                         int * , int * , long  ) ;
   int (*write_raw)(struct iio_dev * , struct iio_chan_spec  const  * , int  , int  ,
                    long  ) ;
   int (*write_raw_get_fmt)(struct iio_dev * , struct iio_chan_spec  const  * , long  ) ;
   int (*read_event_config)(struct iio_dev * , struct iio_chan_spec  const  * , enum iio_event_type  ,
                            enum iio_event_direction  ) ;
   int (*write_event_config)(struct iio_dev * , struct iio_chan_spec  const  * , enum iio_event_type  ,
                             enum iio_event_direction  , int  ) ;
   int (*read_event_value)(struct iio_dev * , struct iio_chan_spec  const  * , enum iio_event_type  ,
                           enum iio_event_direction  , enum iio_event_info  , int * ,
                           int * ) ;
   int (*write_event_value)(struct iio_dev * , struct iio_chan_spec  const  * , enum iio_event_type  ,
                            enum iio_event_direction  , enum iio_event_info  , int  ,
                            int  ) ;
   int (*validate_trigger)(struct iio_dev * , struct iio_trigger * ) ;
   int (*update_scan_mode)(struct iio_dev * , unsigned long const   * ) ;
   int (*debugfs_reg_access)(struct iio_dev * , unsigned int  , unsigned int  , unsigned int * ) ;
};
#line 387 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/iio/iio.h"
struct iio_buffer_setup_ops {
   int (*preenable)(struct iio_dev * ) ;
   int (*postenable)(struct iio_dev * ) ;
   int (*predisable)(struct iio_dev * ) ;
   int (*postdisable)(struct iio_dev * ) ;
   bool (*validate_scan_mask)(struct iio_dev * , unsigned long const   * ) ;
};
#line 407
struct iio_event_interface;
#line 407
struct iio_buffer;
#line 407
struct iio_poll_func;
#line 407 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/iio/iio.h"
struct iio_dev {
   int id ;
   int modes ;
   int currentmode ;
   struct device dev ;
   struct iio_event_interface *event_interface ;
   struct iio_buffer *buffer ;
   struct list_head buffer_list ;
   int scan_bytes ;
   struct mutex mlock ;
   unsigned long const   *available_scan_masks ;
   unsigned int masklength ;
   unsigned long const   *active_scan_mask ;
   bool scan_timestamp ;
   unsigned int scan_index_timestamp ;
   struct iio_trigger *trig ;
   struct iio_poll_func *pollfunc ;
   struct iio_chan_spec  const  *channels ;
   int num_channels ;
   struct list_head channel_attr_list ;
   struct attribute_group chan_attr_group ;
   char const   *name ;
   struct iio_info  const  *info ;
   struct mutex info_exist_lock ;
   struct iio_buffer_setup_ops  const  *setup_ops ;
   struct cdev chrdev ;
   struct attribute_group  const  *groups[7U] ;
   int groupcounter ;
   unsigned long flags ;
   struct dentry *debugfs_dentry ;
   unsigned int cached_reg_addr ;
};
#line 13 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;
#line 186 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
};
#line 219 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const   *data ;
};
#line 262 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/mod_devicetable.h"
struct input_device_id {
   kernel_ulong_t flags ;
   __u16 bustype ;
   __u16 vendor ;
   __u16 product ;
   __u16 version ;
   kernel_ulong_t evbit[1U] ;
   kernel_ulong_t keybit[12U] ;
   kernel_ulong_t relbit[1U] ;
   kernel_ulong_t absbit[1U] ;
   kernel_ulong_t mscbit[1U] ;
   kernel_ulong_t ledbit[1U] ;
   kernel_ulong_t sndbit[1U] ;
   kernel_ulong_t ffbit[2U] ;
   kernel_ulong_t swbit[1U] ;
   kernel_ulong_t driver_info ;
};
#line 479 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/mod_devicetable.h"
struct platform_device_id {
   char name[20U] ;
   kernel_ulong_t driver_data ;
};
#line 628
struct mfd_cell;
#line 629 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/mod_devicetable.h"
struct platform_device {
   char const   *name ;
   int id ;
   bool id_auto ;
   struct device dev ;
   u32 num_resources ;
   struct resource *resource ;
   struct platform_device_id  const  *id_entry ;
   char *driver_override ;
   struct mfd_cell *mfd_cell ;
   struct pdev_archdata archdata ;
};
#line 173 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/platform_device.h"
struct platform_driver {
   int (*probe)(struct platform_device * ) ;
   int (*remove)(struct platform_device * ) ;
   void (*shutdown)(struct platform_device * ) ;
   int (*suspend)(struct platform_device * , pm_message_t  ) ;
   int (*resume)(struct platform_device * ) ;
   struct device_driver driver ;
   struct platform_device_id  const  *id_table ;
   bool prevent_deferred_probe ;
};
#line 311
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
} ;
#line 16 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;
#line 64 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/irq.h"
struct irq_chip;
#line 64 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/irq.h"
struct irq_data {
   u32 mask ;
   unsigned int irq ;
   unsigned long hwirq ;
   unsigned int node ;
   unsigned int state_use_accessors ;
   struct irq_chip *chip ;
   struct irq_domain *domain ;
   void *handler_data ;
   void *chip_data ;
   struct msi_desc *msi_desc ;
   cpumask_var_t affinity ;
};
#line 279 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/irq.h"
struct irq_chip {
   char const   *name ;
   unsigned int (*irq_startup)(struct irq_data * ) ;
   void (*irq_shutdown)(struct irq_data * ) ;
   void (*irq_enable)(struct irq_data * ) ;
   void (*irq_disable)(struct irq_data * ) ;
   void (*irq_ack)(struct irq_data * ) ;
   void (*irq_mask)(struct irq_data * ) ;
   void (*irq_mask_ack)(struct irq_data * ) ;
   void (*irq_unmask)(struct irq_data * ) ;
   void (*irq_eoi)(struct irq_data * ) ;
   int (*irq_set_affinity)(struct irq_data * , struct cpumask  const  * , bool  ) ;
   int (*irq_retrigger)(struct irq_data * ) ;
   int (*irq_set_type)(struct irq_data * , unsigned int  ) ;
   int (*irq_set_wake)(struct irq_data * , unsigned int  ) ;
   void (*irq_bus_lock)(struct irq_data * ) ;
   void (*irq_bus_sync_unlock)(struct irq_data * ) ;
   void (*irq_cpu_online)(struct irq_data * ) ;
   void (*irq_cpu_offline)(struct irq_data * ) ;
   void (*irq_suspend)(struct irq_data * ) ;
   void (*irq_resume)(struct irq_data * ) ;
   void (*irq_pm_shutdown)(struct irq_data * ) ;
   void (*irq_calc_mask)(struct irq_data * ) ;
   void (*irq_print_chip)(struct irq_data * , struct seq_file * ) ;
   int (*irq_request_resources)(struct irq_data * ) ;
   void (*irq_release_resources)(struct irq_data * ) ;
   unsigned long flags ;
};
#line 62 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};
#line 61 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/hardirq.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};
#line 12 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};
#line 50
struct hrtimer_clock_base;
#line 51
struct hrtimer_cpu_base;
#line 60
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
} ;
#line 65 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer * ) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};
#line 132 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t resolution ;
   ktime_t (*get_time)(void) ;
   ktime_t softirq_time ;
   ktime_t offset ;
};
#line 163 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   unsigned int cpu ;
   unsigned int active_bases ;
   unsigned int clock_was_set ;
   ktime_t expires_next ;
   int hres_active ;
   int hang_detected ;
   unsigned long nr_events ;
   unsigned long nr_retries ;
   unsigned long nr_hangs ;
   ktime_t max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};
#line 57 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/kmemleak.h"
struct mem_cgroup;
#line 368 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/slab.h"
struct kmem_cache_cpu {
   void **freelist ;
   unsigned long tid ;
   struct page *page ;
   struct page *partial ;
   unsigned int stat[26U] ;
};
#line 48 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/slub_def.h"
struct kmem_cache_order_objects {
   unsigned long x ;
};
#line 58
struct memcg_cache_params;
#line 58
struct kmem_cache_node;
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/slub_def.h"
struct kmem_cache {
   struct kmem_cache_cpu *cpu_slab ;
   unsigned long flags ;
   unsigned long min_partial ;
   int size ;
   int object_size ;
   int offset ;
   int cpu_partial ;
   struct kmem_cache_order_objects oo ;
   struct kmem_cache_order_objects max ;
   struct kmem_cache_order_objects min ;
   gfp_t allocflags ;
   int refcount ;
   void (*ctor)(void * ) ;
   int inuse ;
   int align ;
   int reserved ;
   char const   *name ;
   struct list_head list ;
   struct kobject kobj ;
   struct memcg_cache_params *memcg_params ;
   int max_attr_size ;
   struct kset *memcg_kset ;
   int remote_node_defrag_ratio ;
   struct kmem_cache_node *node[1024U] ;
};
#line 505 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/slab.h"
struct __anonstruct____missing_field_name_137 {
   struct callback_head callback_head ;
   struct kmem_cache *memcg_caches[0U] ;
};
#line 505 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/slab.h"
struct __anonstruct____missing_field_name_138 {
   struct mem_cgroup *memcg ;
   struct list_head list ;
   struct kmem_cache *root_cache ;
   atomic_t nr_pages ;
};
#line 505 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/slab.h"
union __anonunion____missing_field_name_136 {
   struct __anonstruct____missing_field_name_137 __annonCompField33 ;
   struct __anonstruct____missing_field_name_138 __annonCompField34 ;
};
#line 505 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/slab.h"
struct memcg_cache_params {
   bool is_root_cache ;
   union __anonunion____missing_field_name_136 __annonCompField35 ;
};
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/of.h"
typedef u32 phandle;
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
   struct bin_attribute attr ;
};
#line 42 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/of.h"
struct device_node {
   char const   *name ;
   char const   *type ;
   phandle phandle ;
   char const   *full_name ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct device_node *next ;
   struct device_node *allnext ;
   struct kobject kobj ;
   unsigned long _flags ;
   void *data ;
};
#line 836 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/linux/sysctl.h"
struct nsproxy;
#line 37 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/kmod.h"
struct cred;
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};
#line 66
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
} ;
#line 73 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/uprobes.h"
struct __anonstruct____missing_field_name_147 {
   struct arch_uprobe_task autask ;
   unsigned long vaddr ;
};
#line 73 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/uprobes.h"
struct __anonstruct____missing_field_name_148 {
   struct callback_head dup_xol_work ;
   unsigned long dup_xol_addr ;
};
#line 73 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/uprobes.h"
union __anonunion____missing_field_name_146 {
   struct __anonstruct____missing_field_name_147 __annonCompField40 ;
   struct __anonstruct____missing_field_name_148 __annonCompField41 ;
};
#line 73
struct uprobe;
#line 73
struct return_instance;
#line 73 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   union __anonunion____missing_field_name_146 __annonCompField42 ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   struct return_instance *return_instances ;
   unsigned int depth ;
};
#line 94 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/uprobes.h"
struct xol_area;
#line 95 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};
#line 133
struct address_space;
#line 134 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_149 {
   struct address_space *mapping ;
   void *s_mem ;
};
#line 134 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_151 {
   unsigned long index ;
   void *freelist ;
   bool pfmemalloc ;
};
#line 134 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/uprobes.h"
struct __anonstruct____missing_field_name_155 {
   unsigned int inuse : 16 ;
   unsigned int objects : 15 ;
   unsigned int frozen : 1 ;
};
#line 134 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_154 {
   atomic_t _mapcount ;
   struct __anonstruct____missing_field_name_155 __annonCompField45 ;
   int units ;
};
#line 134 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/uprobes.h"
struct __anonstruct____missing_field_name_153 {
   union __anonunion____missing_field_name_154 __annonCompField46 ;
   atomic_t _count ;
};
#line 134 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_152 {
   unsigned long counters ;
   struct __anonstruct____missing_field_name_153 __annonCompField47 ;
   unsigned int active ;
};
#line 134 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/uprobes.h"
struct __anonstruct____missing_field_name_150 {
   union __anonunion____missing_field_name_151 __annonCompField44 ;
   union __anonunion____missing_field_name_152 __annonCompField48 ;
};
#line 134 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/uprobes.h"
struct __anonstruct____missing_field_name_157 {
   struct page *next ;
   int pages ;
   int pobjects ;
};
#line 134
struct slab;
#line 134 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_156 {
   struct list_head lru ;
   struct __anonstruct____missing_field_name_157 __annonCompField50 ;
   struct slab *slab_page ;
   struct callback_head callback_head ;
   pgtable_t pmd_huge_pte ;
};
#line 134 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_158 {
   unsigned long private ;
   spinlock_t *ptl ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};
#line 134 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/uprobes.h"
struct page {
   unsigned long flags ;
   union __anonunion____missing_field_name_149 __annonCompField43 ;
   struct __anonstruct____missing_field_name_150 __annonCompField49 ;
   union __anonunion____missing_field_name_156 __annonCompField51 ;
   union __anonunion____missing_field_name_158 __annonCompField52 ;
   unsigned long debug_flags ;
};
#line 187 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};
#line 239 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/mm_types.h"
struct __anonstruct_linear_160 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};
#line 239 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/mm_types.h"
union __anonunion_shared_159 {
   struct __anonstruct_linear_160 linear ;
   struct list_head nonlinear ;
};
#line 239
struct anon_vma;
#line 239
struct mempolicy;
#line 239 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   union __anonunion_shared_159 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct  const  *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};
#line 311 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};
#line 317 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};
#line 330 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/mm_types.h"
struct task_rss_stat {
   int events ;
   int count[3U] ;
};
#line 338 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};
#line 343
struct kioctx_table;
#line 344
struct linux_binfmt;
#line 344
struct mmu_notifier_mm;
#line 344 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   u32 vmacache_seqnum ;
   unsigned long (*get_unmapped_area)(struct file * , unsigned long  , unsigned long  ,
                                      unsigned long  , unsigned long  ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   atomic_long_t nr_ptes ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
};
#line 15 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;
#line 16 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;
#line 21 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;
#line 190 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};
#line 198 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;
#line 48 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/elf.h"
struct kernel_param;
#line 53 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/elf.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const   * , struct kernel_param  const  * ) ;
   int (*get)(char * , struct kernel_param  const  * ) ;
   void (*free)(void * ) ;
};
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/moduleparam.h"
struct kparam_string;
#line 58
struct kparam_array;
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/moduleparam.h"
union __anonunion____missing_field_name_164 {
   void *arg ;
   struct kparam_string  const  *str ;
   struct kparam_array  const  *arr ;
};
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/moduleparam.h"
struct kernel_param {
   char const   *name ;
   struct kernel_param_ops  const  *ops ;
   u16 perm ;
   s16 level ;
   union __anonunion____missing_field_name_164 __annonCompField53 ;
};
#line 70 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};
#line 76 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops  const  *ops ;
   void *elem ;
};
#line 466 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/moduleparam.h"
struct mod_arch_specific {

};
#line 36 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/module.h"
struct module_param_attrs;
#line 36 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};
#line 46 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute * , struct module_kobject * , char * ) ;
   ssize_t (*store)(struct module_attribute * , struct module_kobject * , char const   * ,
                    size_t  ) ;
   void (*setup)(struct module * , char const   * ) ;
   int (*test)(struct module * ) ;
   void (*free)(struct module * ) ;
};
#line 205
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
} ;
#line 212 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/module.h"
struct module_ref {
   unsigned long incs ;
   unsigned long decs ;
};
#line 226
struct module_sect_attrs;
#line 226
struct module_notes_attrs;
#line 226
struct tracepoint;
#line 226
struct ftrace_event_call;
#line 226 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const   *version ;
   char const   *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol  const  *syms ;
   unsigned long const   *crcs ;
   unsigned int num_syms ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol  const  *gpl_syms ;
   unsigned long const   *gpl_crcs ;
   struct kernel_symbol  const  *unused_syms ;
   unsigned long const   *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol  const  *unused_gpl_syms ;
   unsigned long const   *unused_gpl_crcs ;
   bool sig_ok ;
   struct kernel_symbol  const  *gpl_future_syms ;
   unsigned long const   *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const  *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const   **trace_bprintk_fmt_start ;
   struct ftrace_event_call **trace_events ;
   unsigned int num_trace_events ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   struct list_head source_list ;
   struct list_head target_list ;
   void (*exit)(void) ;
   struct module_ref *refptr ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;
#line 84 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};
#line 4 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/sem.h"
struct sem_undo_list;
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};
#line 78 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/linux/shm.h"
struct user_struct;
#line 26 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/shm.h"
struct sysv_shm {
   struct list_head shm_clist ;
};
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_166 {
   unsigned long sig[1U] ;
};
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_166 sigset_t;
#line 25
struct siginfo;
#line 17 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int  );
#line 18 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);
#line 21 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;
#line 34 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};
#line 10 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_168 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_169 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_170 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_171 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_172 {
   void *_addr ;
   short _addr_lsb ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_173 {
   long _band ;
   int _fd ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_174 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_167 {
   int _pad[28U] ;
   struct __anonstruct__kill_168 _kill ;
   struct __anonstruct__timer_169 _timer ;
   struct __anonstruct__rt_170 _rt ;
   struct __anonstruct__sigchld_171 _sigchld ;
   struct __anonstruct__sigfault_172 _sigfault ;
   struct __anonstruct__sigpoll_173 _sigpoll ;
   struct __anonstruct__sigsys_174 _sigsys ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_167 _sifields ;
};
#line 109 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;
#line 21 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};
#line 246 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};
#line 260 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};
#line 446
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
} ;
#line 453
struct pid_namespace;
#line 453 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};
#line 56 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};
#line 68 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};
#line 174 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/pid.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};
#line 53 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/linux/seccomp.h"
struct seccomp_filter;
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};
#line 40 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/rtmutex.h"
struct rt_mutex_waiter;
#line 41 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/linux/resource.h"
struct rlimit {
   __kernel_ulong_t rlim_cur ;
   __kernel_ulong_t rlim_max ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/resource.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};
#line 45 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};
#line 39 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/latencytop.h"
struct assoc_array_ptr;
#line 39 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/latencytop.h"
struct assoc_array {
   struct assoc_array_ptr *root ;
   unsigned long nr_leaves_on_tree ;
};
#line 31 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/key.h"
typedef int32_t key_serial_t;
#line 34 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/key.h"
typedef uint32_t key_perm_t;
#line 35
struct key;
#line 36
struct signal_struct;
#line 37
struct key_type;
#line 41 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/key.h"
struct keyring_index_key {
   struct key_type *type ;
   char const   *description ;
   size_t desc_len ;
};
#line 123 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/key.h"
union __anonunion____missing_field_name_177 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};
#line 123
struct key_user;
#line 123 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/key.h"
union __anonunion____missing_field_name_178 {
   time_t expiry ;
   time_t revoked_at ;
};
#line 123 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/key.h"
struct __anonstruct____missing_field_name_180 {
   struct key_type *type ;
   char *description ;
};
#line 123 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/key.h"
union __anonunion____missing_field_name_179 {
   struct keyring_index_key index_key ;
   struct __anonstruct____missing_field_name_180 __annonCompField56 ;
};
#line 123 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/key.h"
union __anonunion_type_data_181 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};
#line 123 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/key.h"
union __anonunion_payload_183 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   void *data2[2U] ;
};
#line 123 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/key.h"
union __anonunion____missing_field_name_182 {
   union __anonunion_payload_183 payload ;
   struct assoc_array keys ;
};
#line 123 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion____missing_field_name_177 __annonCompField54 ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion____missing_field_name_178 __annonCompField55 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   union __anonunion____missing_field_name_179 __annonCompField57 ;
   union __anonunion_type_data_181 type_data ;
   union __anonunion____missing_field_name_182 __annonCompField58 ;
};
#line 358
struct audit_context;
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};
#line 78 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};
#line 126 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/sched.h"
struct futex_pi_state;
#line 127
struct robust_list_head;
#line 128
struct bio_list;
#line 129
struct fs_struct;
#line 130
struct perf_event_context;
#line 131
struct blk_plug;
#line 180
struct cfs_rq;
#line 181
struct task_group;
#line 426 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};
#line 465 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};
#line 473 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};
#line 480 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};
#line 492 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};
#line 512 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime cputime ;
   int running ;
   raw_spinlock_t lock ;
};
#line 554
struct autogroup;
#line 555
struct tty_struct;
#line 555
struct taskstats;
#line 555
struct tty_audit_buf;
#line 555 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int is_child_subreaper : 1 ;
   unsigned int has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};
#line 735 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};
#line 778
struct reclaim_state;
#line 779 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};
#line 794 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   u64 blkio_start ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   u64 freepages_start ;
   u64 freepages_delay ;
   u32 freepages_count ;
};
#line 1026
struct io_context;
#line 1060
struct pipe_inode_info;
#line 1062 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   u32 inv_weight ;
};
#line 1069 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/sched.h"
struct sched_avg {
   u32 runnable_avg_sum ;
   u32 runnable_avg_period ;
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
};
#line 1081 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};
#line 1116 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   int depth ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};
#line 1148
struct rt_rq;
#line 1148 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};
#line 1164 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/sched.h"
struct sched_dl_entity {
   struct rb_node rb_node ;
   u64 dl_runtime ;
   u64 dl_deadline ;
   u64 dl_period ;
   u64 dl_bw ;
   s64 runtime ;
   u64 deadline ;
   unsigned int flags ;
   int dl_throttled ;
   int dl_new ;
   int dl_boosted ;
   int dl_yielded ;
   struct hrtimer dl_timer ;
};
#line 1222 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int may_oom : 1 ;
};
#line 1639
struct sched_class;
#line 1639
struct files_struct;
#line 1639
struct css_set;
#line 1639
struct compat_robust_list_head;
#line 1639
struct numa_group;
#line 1639
struct ftrace_ret_stack;
#line 1639 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/sched.h"
struct task_struct {
   long volatile   state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int wake_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class  const  *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct sched_dl_entity dl ;
   struct hlist_head preempt_notifiers ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct rb_node pushable_dl_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   unsigned int brk_randomized : 1 ;
   u32 vmacache_seqnum ;
   struct vm_area_struct *vmacache[4U] ;
   struct task_rss_stat rss_stat ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned int jobctl ;
   unsigned int personality ;
   unsigned int in_execve : 1 ;
   unsigned int in_iowait : 1 ;
   unsigned int sched_reset_on_fork : 1 ;
   unsigned int sched_contributes_to_load : 1 ;
   unsigned long atomic_flags ;
   pid_t pid ;
   pid_t tgid ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   u64 start_time ;
   u64 real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred  const  *real_cred ;
   struct cred  const  *cred ;
   char comm[16U] ;
   int link_count ;
   int total_link_count ;
   struct sysv_sem sysvsem ;
   struct sysv_shm sysvshm ;
   unsigned long last_switch_count ;
   struct thread_struct thread ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void * ) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct rb_root pi_waiters ;
   struct rb_node *pi_waiters_leftmost ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   unsigned int numa_scan_period ;
   unsigned int numa_scan_period_max ;
   int numa_preferred_nid ;
   unsigned long numa_migrate_retry ;
   u64 node_stamp ;
   u64 last_task_numa_placement ;
   u64 last_sum_exec_runtime ;
   struct callback_head numa_work ;
   struct list_head numa_entry ;
   struct numa_group *numa_group ;
   unsigned long *numa_faults_memory ;
   unsigned long total_numa_faults ;
   unsigned long *numa_faults_buffer_memory ;
   unsigned long *numa_faults_cpu ;
   unsigned long *numa_faults_buffer_cpu ;
   unsigned long numa_faults_locality[2U] ;
   unsigned long numa_pages_migrated ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   unsigned int memcg_kmem_skip_account ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
};
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/linux/input.h"
struct input_id {
   __u16 bustype ;
   __u16 vendor ;
   __u16 product ;
   __u16 version ;
};
#line 47 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/linux/input.h"
struct input_absinfo {
   __s32 value ;
   __s32 minimum ;
   __s32 maximum ;
   __s32 fuzz ;
   __s32 flat ;
   __s32 resolution ;
};
#line 75 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/linux/input.h"
struct input_keymap_entry {
   __u8 flags ;
   __u8 len ;
   __u16 index ;
   __u32 keycode ;
   __u8 scancode[32U] ;
};
#line 99 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/linux/input.h"
struct ff_replay {
   __u16 length ;
   __u16 delay ;
};
#line 996 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/linux/input.h"
struct ff_trigger {
   __u16 button ;
   __u16 interval ;
};
#line 1006 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/linux/input.h"
struct ff_envelope {
   __u16 attack_length ;
   __u16 attack_level ;
   __u16 fade_length ;
   __u16 fade_level ;
};
#line 1025 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/linux/input.h"
struct ff_constant_effect {
   __s16 level ;
   struct ff_envelope envelope ;
};
#line 1035 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/linux/input.h"
struct ff_ramp_effect {
   __s16 start_level ;
   __s16 end_level ;
   struct ff_envelope envelope ;
};
#line 1047 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/linux/input.h"
struct ff_condition_effect {
   __u16 right_saturation ;
   __u16 left_saturation ;
   __s16 right_coeff ;
   __s16 left_coeff ;
   __u16 deadband ;
   __s16 center ;
};
#line 1068 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/linux/input.h"
struct ff_periodic_effect {
   __u16 waveform ;
   __u16 period ;
   __s16 magnitude ;
   __s16 offset ;
   __u16 phase ;
   struct ff_envelope envelope ;
   __u32 custom_len ;
   __s16 *custom_data ;
};
#line 1099 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/linux/input.h"
struct ff_rumble_effect {
   __u16 strong_magnitude ;
   __u16 weak_magnitude ;
};
#line 1112 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/linux/input.h"
union __anonunion_u_185 {
   struct ff_constant_effect constant ;
   struct ff_ramp_effect ramp ;
   struct ff_periodic_effect periodic ;
   struct ff_condition_effect condition[2U] ;
   struct ff_rumble_effect rumble ;
};
#line 1112 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/linux/input.h"
struct ff_effect {
   __u16 type ;
   __s16 id ;
   __u16 direction ;
   struct ff_trigger trigger ;
   struct ff_replay replay ;
   union __anonunion_u_185 u ;
};
#line 93 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/bit_spinlock.h"
struct hlist_bl_node;
#line 93 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/bit_spinlock.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};
#line 36 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};
#line 114 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/rculist_bl.h"
struct __anonstruct____missing_field_name_187 {
   spinlock_t lock ;
   unsigned int count ;
};
#line 114 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/rculist_bl.h"
union __anonunion____missing_field_name_186 {
   struct __anonstruct____missing_field_name_187 __annonCompField60 ;
};
#line 114 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/rculist_bl.h"
struct lockref {
   union __anonunion____missing_field_name_186 __annonCompField61 ;
};
#line 49 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/lockref.h"
struct nameidata;
#line 50
struct vfsmount;
#line 51 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/lockref.h"
struct __anonstruct____missing_field_name_189 {
   u32 hash ;
   u32 len ;
};
#line 51 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/lockref.h"
union __anonunion____missing_field_name_188 {
   struct __anonstruct____missing_field_name_189 __annonCompField62 ;
   u64 hash_len ;
};
#line 51 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/lockref.h"
struct qstr {
   union __anonunion____missing_field_name_188 __annonCompField63 ;
   unsigned char const   *name ;
};
#line 91 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/dcache.h"
struct dentry_operations;
#line 91 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/dcache.h"
union __anonunion_d_u_190 {
   struct list_head d_child ;
   struct callback_head d_rcu ;
};
#line 91 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   struct lockref d_lockref ;
   struct dentry_operations  const  *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   union __anonunion_d_u_190 d_u ;
   struct list_head d_subdirs ;
   struct hlist_node d_alias ;
};
#line 143 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry * , unsigned int  ) ;
   int (*d_weak_revalidate)(struct dentry * , unsigned int  ) ;
   int (*d_hash)(struct dentry  const  * , struct qstr * ) ;
   int (*d_compare)(struct dentry  const  * , struct dentry  const  * , unsigned int  ,
                    char const   * , struct qstr  const  * ) ;
   int (*d_delete)(struct dentry  const  * ) ;
   void (*d_release)(struct dentry * ) ;
   void (*d_prune)(struct dentry * ) ;
   void (*d_iput)(struct dentry * , struct inode * ) ;
   char *(*d_dname)(struct dentry * , char * , int  ) ;
   struct vfsmount *(*d_automount)(struct path * ) ;
   int (*d_manage)(struct dentry * , bool  ) ;
};
#line 479 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/path.h"
struct list_lru_node {
   spinlock_t lock ;
   struct list_head list ;
   long nr_items ;
};
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/list_lru.h"
struct list_lru {
   struct list_lru_node *node ;
   nodemask_t active_nodes ;
};
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/radix-tree.h"
struct __anonstruct____missing_field_name_192 {
   struct radix_tree_node *parent ;
   void *private_data ;
};
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/radix-tree.h"
union __anonunion____missing_field_name_191 {
   struct __anonstruct____missing_field_name_192 __annonCompField64 ;
   struct callback_head callback_head ;
};
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/radix-tree.h"
struct radix_tree_node {
   unsigned int path ;
   unsigned int count ;
   union __anonunion____missing_field_name_191 __annonCompField65 ;
   struct list_head private_list ;
   void *slots[64U] ;
   unsigned long tags[3U][1U] ;
};
#line 105 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};
#line 45 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};
#line 38 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/linux/fiemap.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
   nodemask_t nodes_to_scan ;
   int nid ;
};
#line 26 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/shrinker.h"
struct shrinker {
   unsigned long (*count_objects)(struct shrinker * , struct shrink_control * ) ;
   unsigned long (*scan_objects)(struct shrinker * , struct shrink_control * ) ;
   int seeks ;
   long batch ;
   unsigned long flags ;
   struct list_head list ;
   atomic_long_t *nr_deferred ;
};
#line 70
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
} ;
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/percpu-rwsem.h"
struct block_device;
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/linux/fs.h"
struct export_operations;
#line 61
struct iovec;
#line 62
struct kiocb;
#line 63
struct poll_table_struct;
#line 64
struct kstatfs;
#line 65
struct swap_info_struct;
#line 66
struct iov_iter;
#line 69 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};
#line 253 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/fs.h"
struct fs_disk_quota {
   __s8 d_version ;
   __s8 d_flags ;
   __u16 d_fieldmask ;
   __u32 d_id ;
   __u64 d_blk_hardlimit ;
   __u64 d_blk_softlimit ;
   __u64 d_ino_hardlimit ;
   __u64 d_ino_softlimit ;
   __u64 d_bcount ;
   __u64 d_icount ;
   __s32 d_itimer ;
   __s32 d_btimer ;
   __u16 d_iwarns ;
   __u16 d_bwarns ;
   __s32 d_padding2 ;
   __u64 d_rtb_hardlimit ;
   __u64 d_rtb_softlimit ;
   __u64 d_rtbcount ;
   __s32 d_rtbtimer ;
   __u16 d_rtbwarns ;
   __s16 d_padding3 ;
   char d_padding4[8U] ;
};
#line 76 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/linux/dqblk_xfs.h"
struct fs_qfilestat {
   __u64 qfs_ino ;
   __u64 qfs_nblks ;
   __u32 qfs_nextents ;
};
#line 151 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/linux/dqblk_xfs.h"
typedef struct fs_qfilestat fs_qfilestat_t;
#line 152 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/linux/dqblk_xfs.h"
struct fs_quota_stat {
   __s8 qs_version ;
   __u16 qs_flags ;
   __s8 qs_pad ;
   fs_qfilestat_t qs_uquota ;
   fs_qfilestat_t qs_gquota ;
   __u32 qs_incoredqs ;
   __s32 qs_btimelimit ;
   __s32 qs_itimelimit ;
   __s32 qs_rtbtimelimit ;
   __u16 qs_bwarnlimit ;
   __u16 qs_iwarnlimit ;
};
#line 166 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/linux/dqblk_xfs.h"
struct fs_qfilestatv {
   __u64 qfs_ino ;
   __u64 qfs_nblks ;
   __u32 qfs_nextents ;
   __u32 qfs_pad ;
};
#line 196 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/linux/dqblk_xfs.h"
struct fs_quota_statv {
   __s8 qs_version ;
   __u8 qs_pad1 ;
   __u16 qs_flags ;
   __u32 qs_incoredqs ;
   struct fs_qfilestatv qs_uquota ;
   struct fs_qfilestatv qs_gquota ;
   struct fs_qfilestatv qs_pquota ;
   __s32 qs_btimelimit ;
   __s32 qs_itimelimit ;
   __s32 qs_rtbtimelimit ;
   __u16 qs_bwarnlimit ;
   __u16 qs_iwarnlimit ;
   __u64 qs_pad2[8U] ;
};
#line 212
struct dquot;
#line 19 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/projid.h"
struct __anonstruct_kprojid_t_193 {
   projid_t val ;
};
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/projid.h"
typedef struct __anonstruct_kprojid_t_193 kprojid_t;
#line 119 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/uapi/linux/quota.h"
struct if_dqinfo {
   __u64 dqi_bgrace ;
   __u64 dqi_igrace ;
   __u32 dqi_flags ;
   __u32 dqi_valid ;
};
#line 152
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
} ;
#line 60 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/quota.h"
typedef long long qsize_t;
#line 61 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/quota.h"
union __anonunion____missing_field_name_194 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};
#line 61 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/quota.h"
struct kqid {
   union __anonunion____missing_field_name_194 __annonCompField66 ;
   enum quota_type type ;
};
#line 178 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};
#line 200
struct quota_format_type;
#line 201 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_maxblimit ;
   qsize_t dqi_maxilimit ;
   void *dqi_priv ;
};
#line 264 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};
#line 291 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block * , int  ) ;
   int (*read_file_info)(struct super_block * , int  ) ;
   int (*write_file_info)(struct super_block * , int  ) ;
   int (*free_file_info)(struct super_block * , int  ) ;
   int (*read_dqblk)(struct dquot * ) ;
   int (*commit_dqblk)(struct dquot * ) ;
   int (*release_dqblk)(struct dquot * ) ;
};
#line 302 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot * ) ;
   struct dquot *(*alloc_dquot)(struct super_block * , int  ) ;
   void (*destroy_dquot)(struct dquot * ) ;
   int (*acquire_dquot)(struct dquot * ) ;
   int (*release_dquot)(struct dquot * ) ;
   int (*mark_dirty)(struct dquot * ) ;
   int (*write_info)(struct super_block * , int  ) ;
   qsize_t *(*get_reserved_space)(struct inode * ) ;
};
#line 316 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block * , int  , int  , struct path * ) ;
   int (*quota_on_meta)(struct super_block * , int  , int  ) ;
   int (*quota_off)(struct super_block * , int  ) ;
   int (*quota_sync)(struct super_block * , int  ) ;
   int (*get_info)(struct super_block * , int  , struct if_dqinfo * ) ;
   int (*set_info)(struct super_block * , int  , struct if_dqinfo * ) ;
   int (*get_dqblk)(struct super_block * , struct kqid  , struct fs_disk_quota * ) ;
   int (*set_dqblk)(struct super_block * , struct kqid  , struct fs_disk_quota * ) ;
   int (*get_xstate)(struct super_block * , struct fs_quota_stat * ) ;
   int (*set_xstate)(struct super_block * , unsigned int  , int  ) ;
   int (*get_xstatev)(struct super_block * , struct fs_quota_statv * ) ;
   int (*rm_xquota)(struct super_block * , unsigned int  ) ;
};
#line 334 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops  const  *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};
#line 380 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct inode *files[2U] ;
   struct mem_dqinfo info[2U] ;
   struct quota_format_ops  const  *ops[2U] ;
};
#line 410
struct writeback_control;
#line 323 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page * , struct writeback_control * ) ;
   int (*readpage)(struct file * , struct page * ) ;
   int (*writepages)(struct address_space * , struct writeback_control * ) ;
   int (*set_page_dirty)(struct page * ) ;
   int (*readpages)(struct file * , struct address_space * , struct list_head * ,
                    unsigned int  ) ;
   int (*write_begin)(struct file * , struct address_space * , loff_t  , unsigned int  ,
                      unsigned int  , struct page ** , void ** ) ;
   int (*write_end)(struct file * , struct address_space * , loff_t  , unsigned int  ,
                    unsigned int  , struct page * , void * ) ;
   sector_t (*bmap)(struct address_space * , sector_t  ) ;
   void (*invalidatepage)(struct page * , unsigned int  , unsigned int  ) ;
   int (*releasepage)(struct page * , gfp_t  ) ;
   void (*freepage)(struct page * ) ;
   ssize_t (*direct_IO)(int  , struct kiocb * , struct iov_iter * , loff_t  ) ;
   int (*get_xip_mem)(struct address_space * , unsigned long  , int  , void ** , unsigned long * ) ;
   int (*migratepage)(struct address_space * , struct page * , struct page * , enum migrate_mode  ) ;
   int (*launder_page)(struct page * ) ;
   int (*is_partially_uptodate)(struct page * , unsigned long  , unsigned long  ) ;
   void (*is_dirty_writeback)(struct page * , bool * , bool * ) ;
   int (*error_remove_page)(struct address_space * , struct page * ) ;
   int (*swap_activate)(struct swap_info_struct * , struct file * , sector_t * ) ;
   void (*swap_deactivate)(struct file * ) ;
};
#line 382 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   atomic_t i_mmap_writable ;
   struct rb_root i_mmap ;
   struct list_head i_mmap_nonlinear ;
   struct mutex i_mmap_mutex ;
   unsigned long nrpages ;
   unsigned long nrshadows ;
   unsigned long writeback_index ;
   struct address_space_operations  const  *a_ops ;
   unsigned long flags ;
   struct backing_dev_info *backing_dev_info ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};
#line 405
struct request_queue;
#line 406
struct hd_struct;
#line 406
struct gendisk;
#line 406 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};
#line 503
struct posix_acl;
#line 504
struct inode_operations;
#line 504 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/fs.h"
union __anonunion____missing_field_name_197 {
   unsigned int const   i_nlink ;
   unsigned int __i_nlink ;
};
#line 504 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/fs.h"
union __anonunion____missing_field_name_198 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};
#line 504
struct file_lock;
#line 504 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/fs.h"
union __anonunion____missing_field_name_199 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
};
#line 504 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations  const  *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion____missing_field_name_197 __annonCompField67 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion____missing_field_name_198 __annonCompField68 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   atomic_t i_readcount ;
   struct file_operations  const  *i_fop ;
   struct file_lock *i_flock ;
   struct address_space i_data ;
   struct dquot *i_dquot[2U] ;
   struct list_head i_devices ;
   union __anonunion____missing_field_name_199 __annonCompField69 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   void *i_private ;
};
#line 740 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};
#line 748 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};
#line 771 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/fs.h"
union __anonunion_f_u_200 {
   struct llist_node fu_llist ;
   struct callback_head fu_rcuhead ;
};
#line 771 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/fs.h"
struct file {
   union __anonunion_f_u_200 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations  const  *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   struct mutex f_pos_lock ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred  const  *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
};
#line 861 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/fs.h"
typedef void *fl_owner_t;
#line 862 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock * , struct file_lock * ) ;
   void (*fl_release_private)(struct file_lock * ) ;
};
#line 867 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock * , struct file_lock * ) ;
   unsigned long (*lm_owner_key)(struct file_lock * ) ;
   void (*lm_notify)(struct file_lock * ) ;
   int (*lm_grant)(struct file_lock * , struct file_lock * , int  ) ;
   void (*lm_break)(struct file_lock * ) ;
   int (*lm_change)(struct file_lock ** , int  ) ;
};
#line 885
struct nlm_lockowner;
#line 886 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};
#line 14 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;
#line 15 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};
#line 19
struct fasync_struct;
#line 19 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_202 {
   struct list_head link ;
   int state ;
};
#line 19 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_201 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_202 afs ;
};
#line 19 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct hlist_node fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   int fl_link_cpu ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations  const  *fl_ops ;
   struct lock_manager_operations  const  *fl_lmops ;
   union __anonunion_fl_u_201 fl_u ;
};
#line 988 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};
#line 1182 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};
#line 1198
struct super_operations;
#line 1198
struct xattr_handler;
#line 1198
struct mtd_info;
#line 1198 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations  const  *s_op ;
   struct dquot_operations  const  *dq_op ;
   struct quotactl_ops  const  *s_qcop ;
   struct export_operations  const  *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler  const  **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head s_mounts ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations  const  *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
   struct workqueue_struct *s_dio_done_wq ;
   struct hlist_head s_pins ;
   struct list_lru s_dentry_lru ;
   struct list_lru s_inode_lru ;
   struct callback_head rcu ;
};
#line 1429 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};
#line 1467 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/fs.h"
struct dir_context {
   int (*actor)(void * , char const   * , int  , loff_t  , u64  , unsigned int  ) ;
   loff_t pos ;
};
#line 1472 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file * , loff_t  , int  ) ;
   ssize_t (*read)(struct file * , char * , size_t  , loff_t * ) ;
   ssize_t (*write)(struct file * , char const   * , size_t  , loff_t * ) ;
   ssize_t (*aio_read)(struct kiocb * , struct iovec  const  * , unsigned long  ,
                       loff_t  ) ;
   ssize_t (*aio_write)(struct kiocb * , struct iovec  const  * , unsigned long  ,
                        loff_t  ) ;
   ssize_t (*read_iter)(struct kiocb * , struct iov_iter * ) ;
   ssize_t (*write_iter)(struct kiocb * , struct iov_iter * ) ;
   int (*iterate)(struct file * , struct dir_context * ) ;
   unsigned int (*poll)(struct file * , struct poll_table_struct * ) ;
   long (*unlocked_ioctl)(struct file * , unsigned int  , unsigned long  ) ;
   long (*compat_ioctl)(struct file * , unsigned int  , unsigned long  ) ;
   int (*mmap)(struct file * , struct vm_area_struct * ) ;
   int (*open)(struct inode * , struct file * ) ;
   int (*flush)(struct file * , fl_owner_t  ) ;
   int (*release)(struct inode * , struct file * ) ;
   int (*fsync)(struct file * , loff_t  , loff_t  , int  ) ;
   int (*aio_fsync)(struct kiocb * , int  ) ;
   int (*fasync)(int  , struct file * , int  ) ;
   int (*lock)(struct file * , int  , struct file_lock * ) ;
   ssize_t (*sendpage)(struct file * , struct page * , int  , size_t  , loff_t * ,
                       int  ) ;
   unsigned long (*get_unmapped_area)(struct file * , unsigned long  , unsigned long  ,
                                      unsigned long  , unsigned long  ) ;
   int (*check_flags)(int  ) ;
   int (*flock)(struct file * , int  , struct file_lock * ) ;
   ssize_t (*splice_write)(struct pipe_inode_info * , struct file * , loff_t * , size_t  ,
                           unsigned int  ) ;
   ssize_t (*splice_read)(struct file * , loff_t * , struct pipe_inode_info * , size_t  ,
                          unsigned int  ) ;
   int (*setlease)(struct file * , long  , struct file_lock ** ) ;
   long (*fallocate)(struct file * , int  , loff_t  , loff_t  ) ;
   int (*show_fdinfo)(struct seq_file * , struct file * ) ;
};
#line 1514 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode * , struct dentry * , unsigned int  ) ;
   void *(*follow_link)(struct dentry * , struct nameidata * ) ;
   int (*permission)(struct inode * , int  ) ;
   struct posix_acl *(*get_acl)(struct inode * , int  ) ;
   int (*readlink)(struct dentry * , char * , int  ) ;
   void (*put_link)(struct dentry * , struct nameidata * , void * ) ;
   int (*create)(struct inode * , struct dentry * , umode_t  , bool  ) ;
   int (*link)(struct dentry * , struct inode * , struct dentry * ) ;
   int (*unlink)(struct inode * , struct dentry * ) ;
   int (*symlink)(struct inode * , struct dentry * , char const   * ) ;
   int (*mkdir)(struct inode * , struct dentry * , umode_t  ) ;
   int (*rmdir)(struct inode * , struct dentry * ) ;
   int (*mknod)(struct inode * , struct dentry * , umode_t  , dev_t  ) ;
   int (*rename)(struct inode * , struct dentry * , struct inode * , struct dentry * ) ;
   int (*rename2)(struct inode * , struct dentry * , struct inode * , struct dentry * ,
                  unsigned int  ) ;
   int (*setattr)(struct dentry * , struct iattr * ) ;
   int (*getattr)(struct vfsmount * , struct dentry * , struct kstat * ) ;
   int (*setxattr)(struct dentry * , char const   * , void const   * , size_t  , int  ) ;
   ssize_t (*getxattr)(struct dentry * , char const   * , void * , size_t  ) ;
   ssize_t (*listxattr)(struct dentry * , char * , size_t  ) ;
   int (*removexattr)(struct dentry * , char const   * ) ;
   int (*fiemap)(struct inode * , struct fiemap_extent_info * , u64  , u64  ) ;
   int (*update_time)(struct inode * , struct timespec * , int  ) ;
   int (*atomic_open)(struct inode * , struct dentry * , struct file * , unsigned int  ,
                      umode_t  , int * ) ;
   int (*tmpfile)(struct inode * , struct dentry * , umode_t  ) ;
   int (*set_acl)(struct inode * , struct posix_acl * , int  ) ;
};
#line 1561 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block * ) ;
   void (*destroy_inode)(struct inode * ) ;
   void (*dirty_inode)(struct inode * , int  ) ;
   int (*write_inode)(struct inode * , struct writeback_control * ) ;
   int (*drop_inode)(struct inode * ) ;
   void (*evict_inode)(struct inode * ) ;
   void (*put_super)(struct super_block * ) ;
   int (*sync_fs)(struct super_block * , int  ) ;
   int (*freeze_fs)(struct super_block * ) ;
   int (*unfreeze_fs)(struct super_block * ) ;
   int (*statfs)(struct dentry * , struct kstatfs * ) ;
   int (*remount_fs)(struct super_block * , int * , char * ) ;
   void (*umount_begin)(struct super_block * ) ;
   int (*show_options)(struct seq_file * , struct dentry * ) ;
   int (*show_devname)(struct seq_file * , struct dentry * ) ;
   int (*show_path)(struct seq_file * , struct dentry * ) ;
   int (*show_stats)(struct seq_file * , struct dentry * ) ;
   ssize_t (*quota_read)(struct super_block * , int  , char * , size_t  , loff_t  ) ;
   ssize_t (*quota_write)(struct super_block * , int  , char const   * , size_t  ,
                          loff_t  ) ;
   int (*bdev_try_to_free_page)(struct super_block * , struct page * , gfp_t  ) ;
   long (*nr_cached_objects)(struct super_block * , int  ) ;
   long (*free_cached_objects)(struct super_block * , long  , int  ) ;
};
#line 1775 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/fs.h"
struct file_system_type {
   char const   *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type * , int  , char const   * , void * ) ;
   void (*kill_sb)(struct super_block * ) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};
#line 2798 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/fs.h"
struct input_value {
   __u16 type ;
   __u16 code ;
   __s32 value ;
};
#line 38 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/input.h"
struct ff_device;
#line 38
struct input_mt;
#line 38
struct input_handle;
#line 38 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/input.h"
struct input_dev {
   char const   *name ;
   char const   *phys ;
   char const   *uniq ;
   struct input_id id ;
   unsigned long propbit[1U] ;
   unsigned long evbit[1U] ;
   unsigned long keybit[12U] ;
   unsigned long relbit[1U] ;
   unsigned long absbit[1U] ;
   unsigned long mscbit[1U] ;
   unsigned long ledbit[1U] ;
   unsigned long sndbit[1U] ;
   unsigned long ffbit[2U] ;
   unsigned long swbit[1U] ;
   unsigned int hint_events_per_packet ;
   unsigned int keycodemax ;
   unsigned int keycodesize ;
   void *keycode ;
   int (*setkeycode)(struct input_dev * , struct input_keymap_entry  const  * , unsigned int * ) ;
   int (*getkeycode)(struct input_dev * , struct input_keymap_entry * ) ;
   struct ff_device *ff ;
   unsigned int repeat_key ;
   struct timer_list timer ;
   int rep[2U] ;
   struct input_mt *mt ;
   struct input_absinfo *absinfo ;
   unsigned long key[12U] ;
   unsigned long led[1U] ;
   unsigned long snd[1U] ;
   unsigned long sw[1U] ;
   int (*open)(struct input_dev * ) ;
   void (*close)(struct input_dev * ) ;
   int (*flush)(struct input_dev * , struct file * ) ;
   int (*event)(struct input_dev * , unsigned int  , unsigned int  , int  ) ;
   struct input_handle *grab ;
   spinlock_t event_lock ;
   struct mutex mutex ;
   unsigned int users ;
   bool going_away ;
   struct device dev ;
   struct list_head h_list ;
   struct list_head node ;
   unsigned int num_vals ;
   unsigned int max_vals ;
   struct input_value *vals ;
   bool devres_managed ;
};
#line 191 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/input.h"
struct input_handler {
   void *private ;
   void (*event)(struct input_handle * , unsigned int  , unsigned int  , int  ) ;
   void (*events)(struct input_handle * , struct input_value  const  * , unsigned int  ) ;
   bool (*filter)(struct input_handle * , unsigned int  , unsigned int  , int  ) ;
   bool (*match)(struct input_handler * , struct input_dev * ) ;
   int (*connect)(struct input_handler * , struct input_dev * , struct input_device_id  const  * ) ;
   void (*disconnect)(struct input_handle * ) ;
   void (*start)(struct input_handle * ) ;
   bool legacy_minors ;
   int minor ;
   char const   *name ;
   struct input_device_id  const  *id_table ;
   struct list_head h_list ;
   struct list_head node ;
};
#line 306 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/input.h"
struct input_handle {
   void *private ;
   int open ;
   char const   *name ;
   struct input_dev *dev ;
   struct input_handler *handler ;
   struct list_head d_node ;
   struct list_head h_node ;
};
#line 473 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/input.h"
struct ff_device {
   int (*upload)(struct input_dev * , struct ff_effect * , struct ff_effect * ) ;
   int (*erase)(struct input_dev * , int  ) ;
   int (*playback)(struct input_dev * , int  , int  ) ;
   void (*set_gain)(struct input_dev * , u16  ) ;
   void (*set_autocenter)(struct input_dev * , u16  ) ;
   void (*destroy)(struct ff_device * ) ;
   void *private ;
   unsigned long ffbit[2U] ;
   struct mutex mutex ;
   int max_effects ;
   struct ff_effect *effects ;
   struct file *effect_owners[] ;
};
#line 420 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/clk.h"
struct iio_dev_attr {
   struct device_attribute dev_attr ;
   u64 address ;
   struct list_head l ;
   struct iio_chan_spec  const  *c ;
};
#line 47 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/iio/sysfs.h"
struct iio_buffer_access_funcs {
   int (*store_to)(struct iio_buffer * , void const   * ) ;
   int (*read_first_n)(struct iio_buffer * , size_t  , char * ) ;
   bool (*data_available)(struct iio_buffer * ) ;
   int (*request_update)(struct iio_buffer * ) ;
   int (*get_bytes_per_datum)(struct iio_buffer * ) ;
   int (*set_bytes_per_datum)(struct iio_buffer * , size_t  ) ;
   int (*get_length)(struct iio_buffer * ) ;
   int (*set_length)(struct iio_buffer * , int  ) ;
   void (*release)(struct iio_buffer * ) ;
};
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/iio/buffer.h"
struct iio_buffer {
   int length ;
   int bytes_per_datum ;
   struct attribute_group *scan_el_attrs ;
   long *scan_mask ;
   bool scan_timestamp ;
   struct iio_buffer_access_funcs  const  *access ;
   struct list_head scan_el_dev_attr_list ;
   struct attribute_group scan_el_group ;
   wait_queue_head_t pollq ;
   bool stufftoread ;
   struct attribute_group  const  *attrs ;
   struct list_head demux_list ;
   void *demux_bounce ;
   struct list_head buffer_list ;
   struct kref ref ;
};
#line 232 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/iio/buffer.h"
struct iio_subirq {
   bool enabled ;
};
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/iio/trigger.h"
struct iio_trigger_ops {
   struct module *owner ;
   int (*set_trigger_state)(struct iio_trigger * , bool  ) ;
   int (*try_reenable)(struct iio_trigger * ) ;
   int (*validate_device)(struct iio_trigger * , struct iio_dev * ) ;
};
#line 39 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/iio/trigger.h"
struct iio_trigger {
   struct iio_trigger_ops  const  *ops ;
   int id ;
   char const   *name ;
   struct device dev ;
   struct list_head list ;
   struct list_head alloc_list ;
   atomic_t use_count ;
   struct irq_chip subirq_chip ;
   int subirq_base ;
   struct iio_subirq subirqs[2U] ;
   unsigned long pool[1U] ;
   struct mutex pool_lock ;
};
#line 144 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/iio/trigger.h"
struct iio_poll_func {
   struct iio_dev *indio_dev ;
   irqreturn_t (*h)(int  , void * ) ;
   irqreturn_t (*thread)(int  , void * ) ;
   int type ;
   char *name ;
   int irq ;
   s64 timestamp ;
};
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/iio/triggered_buffer.h"
enum mxs_lradc_id {
    IMX23_LRADC = 0,
    IMX28_LRADC = 1
} ;
#line 110 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
struct mxs_lradc_of_config {
   int const   irq_count ;
   char const   * const  *irq_name ;
   uint32_t const   *vref_mv ;
};
#line 168
enum mxs_lradc_ts {
    MXS_LRADC_TOUCHSCREEN_NONE = 0,
    MXS_LRADC_TOUCHSCREEN_4WIRE = 1,
    MXS_LRADC_TOUCHSCREEN_5WIRE = 2
} ;
#line 174
enum lradc_ts_plate {
    LRADC_TOUCH = 0,
    LRADC_SAMPLE_X = 1,
    LRADC_SAMPLE_Y = 2,
    LRADC_SAMPLE_PRESSURE = 3,
    LRADC_SAMPLE_VALID = 4
} ;
#line 187 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
struct mxs_lradc_scale {
   unsigned int integer ;
   unsigned int nano ;
};
#line 197 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
struct mxs_lradc {
   struct device *dev ;
   void *base ;
   int irq[13U] ;
   struct clk *clk ;
   uint32_t *buffer ;
   struct iio_trigger *trig ;
   struct mutex lock ;
   struct completion completion ;
   uint32_t const   *vref_mv ;
   struct mxs_lradc_scale scale_avail[16U][2U] ;
   unsigned long is_divided ;
   enum mxs_lradc_ts use_touchscreen ;
   bool use_touchbutton ;
   struct input_dev *ts_input ;
   enum mxs_lradc_id soc ;
   enum lradc_ts_plate cur_plate ;
   bool ts_valid ;
   unsigned int ts_x_pos ;
   unsigned int ts_y_pos ;
   unsigned int ts_pressure ;
   unsigned int over_sample_cnt ;
   unsigned int over_sample_delay ;
   unsigned int settling_delay ;
};
#line 1690 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
struct ldv_struct_iio_triggered_buffer_cleanup_8 {
   struct iio_dev *arg0 ;
   int signal_pending ;
};
#line 43 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
struct ldv_struct_iio_triggered_buffer_scenario_2 {
   struct iio_dev *arg0 ;
   irqreturn_t (*arg1)(int  , void * ) ;
   irqreturn_t (*arg2)(int  , void * ) ;
   int signal_pending ;
};
#line 50 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
struct ldv_struct_platform_instance_4 {
   struct platform_driver *arg0 ;
   int signal_pending ;
};
#line 40 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};
#line 147 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/types.h"
typedef u64 dma_addr_t;
#line 12 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pteval_t;
#line 18 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/pgtable_64_types.h"
struct __anonstruct_pte_t_11 {
   pteval_t pte ;
};
#line 18 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/pgtable_64_types.h"
typedef struct __anonstruct_pte_t_11 pte_t;
#line 255 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/timer.h"
enum hrtimer_restart;
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/kthread.h"
struct kthread_work;
#line 65 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};
#line 72 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work * ) ;
   struct kthread_worker *worker ;
};
#line 188 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *page ;
   unsigned long max_pgoff ;
   pte_t *pte ;
};
#line 221 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct * ) ;
   void (*close)(struct vm_area_struct * ) ;
   int (*fault)(struct vm_area_struct * , struct vm_fault * ) ;
   void (*map_pages)(struct vm_area_struct * , struct vm_fault * ) ;
   int (*page_mkwrite)(struct vm_area_struct * , struct vm_fault * ) ;
   int (*access)(struct vm_area_struct * , unsigned long  , void * , int  , int  ) ;
   char const   *(*name)(struct vm_area_struct * ) ;
   int (*set_policy)(struct vm_area_struct * , struct mempolicy * ) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct * , unsigned long  ) ;
   int (*migrate)(struct vm_area_struct * , nodemask_t const   * , nodemask_t const   * ,
                  unsigned long  ) ;
   int (*remap_pages)(struct vm_area_struct * , unsigned long  , unsigned long  ,
                      unsigned long  ) ;
};
#line 2139 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};
#line 17 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/asm-generic/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};
#line 351 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/scatterlist.h"
struct dma_chan;
#line 36 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/spi/spi.h"
struct spi_master;
#line 36 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 bits_per_word ;
   u16 mode ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};
#line 155
struct spi_message;
#line 156
struct spi_transfer;
#line 213 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device * ) ;
   int (*transfer)(struct spi_device * , struct spi_message * ) ;
   void (*cleanup)(struct spi_device * ) ;
   bool (*can_dma)(struct spi_master * , struct spi_device * , struct spi_transfer * ) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   bool cur_msg_prepared ;
   bool cur_msg_mapped ;
   struct completion xfer_completion ;
   size_t max_dma_len ;
   int (*prepare_transfer_hardware)(struct spi_master * ) ;
   int (*transfer_one_message)(struct spi_master * , struct spi_message * ) ;
   int (*unprepare_transfer_hardware)(struct spi_master * ) ;
   int (*prepare_message)(struct spi_master * , struct spi_message * ) ;
   int (*unprepare_message)(struct spi_master * , struct spi_message * ) ;
   void (*set_cs)(struct spi_device * , bool  ) ;
   int (*transfer_one)(struct spi_master * , struct spi_device * , struct spi_transfer * ) ;
   int *cs_gpios ;
   struct dma_chan *dma_tx ;
   struct dma_chan *dma_rx ;
   void *dummy_rx ;
   void *dummy_tx ;
};
#line 508 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/spi/spi.h"
struct spi_transfer {
   void const   *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   struct sg_table tx_sg ;
   struct sg_table rx_sg ;
   unsigned int cs_change : 1 ;
   unsigned int tx_nbits : 3 ;
   unsigned int rx_nbits : 3 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};
#line 632 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int is_dma_mapped : 1 ;
   void (*complete)(void * ) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};
#line 1 "<compiler builtins>"
long __builtin_expect(long exp , long c ) ;
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/err.h"
long ldv_ptr_err(void const   *ptr ) ;
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/slab.h"
void *ldv_kmalloc(size_t size , gfp_t flags ) ;
#line 16 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_clk_disable_clk_of_mxs_lradc(struct clk *clk ) ;
#line 17
int ldv_clk_enable_clk_of_mxs_lradc(void) ;
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void) ;
#line 42
void ldv_switch_to_process_context(void) ;
#line 62
extern void ldv_initialize(void) ;
#line 76
void ldv_check_final_state(void) ;
#line 113
int ldv_post_init(int init_ret_val ) ;
#line 124
extern void ldv_pre_probe(void) ;
#line 133
int ldv_post_probe(int probe_ret_val ) ;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/common.h"
extern void __VERIFIER_assume(int  ) ;
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.h"
int ldv_undef_int(void) ;
#line 33
int ldv_undef_int_negative(void) ;
#line 26 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.h"
void ldv_free(void *s ) ;
#line 28
void *ldv_xmalloc(size_t size ) ;
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/export.h"
extern struct module __this_module ;
#line 72 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/bitops.h"
__inline static void set_bit(long nr , unsigned long volatile   *addr ) 
{ 


  {
#line 80
  __asm__  volatile   (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; bts %1,%0": "+m" (*((long volatile   *)addr)): "Ir" (nr): "memory");
#line 82
  return;
}
}
#line 94 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/bitops.h"
__inline static void __set_bit(long nr , unsigned long volatile   *addr ) 
{ 


  {
#line 96
  __asm__  volatile   ("bts %1,%0": "+m" (*((long volatile   *)addr)): "Ir" (nr): "memory");
#line 97
  return;
}
}
#line 110 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/bitops.h"
__inline static void clear_bit(long nr , unsigned long volatile   *addr ) 
{ 


  {
#line 117
  __asm__  volatile   (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; btr %1,%0": "+m" (*((long volatile   *)addr)): "Ir" (nr));
#line 119
  return;
}
}
#line 314 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/bitops.h"
__inline static int variable_test_bit(long nr , unsigned long const volatile   *addr ) 
{ 
  int oldbit ;

  {
#line 318
  __asm__  volatile   ("bt %2,%1\n\tsbb %0,%0": "=r" (oldbit): "m" (*((unsigned long *)addr)),
                       "Ir" (nr));
#line 323
  return (oldbit);
}
}
#line 14 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/asm-generic/bitops/find.h"
extern unsigned long find_next_bit(unsigned long const   * , unsigned long  , unsigned long  ) ;
#line 42
extern unsigned long find_first_bit(unsigned long const   * , unsigned long  ) ;
#line 53 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/dynamic_debug.h"
extern int __dynamic_dev_dbg(struct _ddebug * , struct device  const  * , char const   * 
                             , ...) ;
#line 388 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/kernel.h"
extern int sprintf(char * , char const   *  , ...) ;
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/err.h"
__inline static long PTR_ERR(void const   *ptr ) ;
#line 41 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/err.h"
__inline static bool IS_ERR(void const   *ptr ) 
{ 
  long tmp ;

  {
  {
#line 43
  tmp = __builtin_expect((unsigned long )ptr > 0xfffffffffffff000UL, 0L);
  }
#line 43
  return (tmp != 0L);
}
}
#line 109 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/bitmap.h"
extern int __bitmap_intersects(unsigned long const   * , unsigned long const   * ,
                               unsigned int  ) ;
#line 113
extern int __bitmap_weight(unsigned long const   * , unsigned int  ) ;
#line 115
extern void bitmap_set(unsigned long * , unsigned int  , int  ) ;
#line 242 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/bitmap.h"
__inline static int bitmap_intersects(unsigned long const   *src1 , unsigned long const   *src2 ,
                                      unsigned int nbits ) 
{ 
  int tmp ;

  {
  {
#line 248
  tmp = __bitmap_intersects(src1, src2, nbits);
  }
#line 248
  return (tmp);
}
}
#line 276 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/bitmap.h"
__inline static int bitmap_weight(unsigned long const   *src , unsigned int nbits ) 
{ 
  int tmp___0 ;

  {
  {
#line 280
  tmp___0 = __bitmap_weight(src, nbits);
  }
#line 280
  return (tmp___0);
}
}
#line 120 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/mutex.h"
extern void __mutex_init(struct mutex * , char const   * , struct lock_class_key * ) ;
#line 174
extern int mutex_trylock(struct mutex * ) ;
#line 175
extern void mutex_unlock(struct mutex * ) ;
#line 69 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/wait.h"
extern void __init_waitqueue_head(wait_queue_head_t * , char const   * , struct lock_class_key * ) ;
#line 73 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/completion.h"
__inline static void init_completion(struct completion *x ) 
{ 
  struct lock_class_key __key ;

  {
  {
#line 75
  x->done = 0U;
#line 76
  __init_waitqueue_head(& x->wait, "&x->wait", & __key);
  }
#line 78
  return;
}
}
#line 86 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/completion.h"
__inline static void reinit_completion(struct completion *x ) 
{ 


  {
#line 88
  x->done = 0U;
#line 89
  return;
}
}
#line 101
extern long wait_for_completion_killable_timeout(struct completion * , unsigned long  ) ;
#line 106
extern void complete(struct completion * ) ;
#line 56 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/io.h"
__inline static unsigned int readl(void const volatile   *addr ) 
{ 
  unsigned int ret ;

  {
#line 56
  __asm__  volatile   ("movl %1,%0": "=r" (ret): "m" (*((unsigned int volatile   *)addr)): "memory");
#line 56
  return (ret);
}
}
#line 64 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/arch/x86/include/asm/io.h"
__inline static void writel(unsigned int val , void volatile   *addr ) 
{ 


  {
#line 64
  __asm__  volatile   ("movl %0,%1": : "r" (val), "m" (*((unsigned int volatile   *)addr)): "memory");
#line 65
  return;
}
}
#line 637 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/device.h"
extern void *devm_ioremap_resource(struct device * , struct resource * ) ;
#line 839 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/device.h"
__inline static void *dev_get_drvdata(struct device  const  *dev ) 
{ 


  {
#line 841
  return ((void *)dev->driver_data);
}
}
#line 844 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev , void *data ) 
{ 


  {
#line 846
  dev->driver_data = data;
#line 847
  return;
}
}
#line 1044
extern int dev_err(struct device  const  * , char const   *  , ...) ;
#line 1046
extern int dev_warn(struct device  const  * , char const   *  , ...) ;
#line 492 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/iio/iio.h"
extern int iio_device_register(struct iio_dev * ) ;
#line 493
extern void iio_device_unregister(struct iio_dev * ) ;
#line 516 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/iio/iio.h"
__inline static struct iio_dev *dev_to_iio_dev(struct device *dev ) 
{ 
  struct device  const  *__mptr ;

  {
#line 518
  __mptr = (struct device  const  *)dev;
#line 518
  return ((struct iio_dev *)((char *)__mptr + 0xfffffffffffffff0UL));
}
}
#line 561 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/iio/iio.h"
__inline static void *iio_priv(struct iio_dev  const  *indio_dev ) 
{ 


  {
#line 563
  return ((void *)((char *)indio_dev + 2368UL));
}
}
#line 573
extern struct iio_dev *devm_iio_device_alloc(struct device * , int  ) ;
#line 583 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/iio/iio.h"
__inline static bool iio_buffer_enabled(struct iio_dev *indio_dev ) 
{ 


  {
#line 585
  return ((indio_dev->currentmode & 10) != 0);
}
}
#line 51 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/platform_device.h"
extern struct resource *platform_get_resource(struct platform_device * , unsigned int  ,
                                              unsigned int  ) ;
#line 53
extern int platform_get_irq(struct platform_device * , unsigned int  ) ;
#line 197
static int ldv___platform_driver_register_15(struct platform_driver *ldv_func_arg1 ,
                                             struct module *ldv_func_arg2 ) ;
#line 202
static void ldv_platform_driver_unregister_16(struct platform_driver *ldv_func_arg1 ) ;
#line 211 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/platform_device.h"
__inline static void *platform_get_drvdata(struct platform_device  const  *pdev ) 
{ 
  void *tmp ;

  {
  {
#line 213
  tmp = dev_get_drvdata(& pdev->dev);
  }
#line 213
  return (tmp);
}
}
#line 216 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/platform_device.h"
__inline static void platform_set_drvdata(struct platform_device *pdev , void *data ) 
{ 


  {
  {
#line 219
  dev_set_drvdata(& pdev->dev, data);
  }
#line 220
  return;
}
}
#line 148 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/interrupt.h"
extern int devm_request_threaded_irq(struct device * , unsigned int  , irqreturn_t (*)(int  ,
                                                                                       void * ) ,
                                     irqreturn_t (*)(int  , void * ) , unsigned long  ,
                                     char const   * , void * ) ;
#line 154 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/interrupt.h"
__inline static int devm_request_irq(struct device *dev , unsigned int irq , irqreturn_t (*handler)(int  ,
                                                                                                    void * ) ,
                                     unsigned long irqflags , char const   *devname ,
                                     void *dev_id ) 
{ 
  int tmp ;

  {
  {
#line 157
  tmp = devm_request_threaded_irq(dev, irq, handler, (irqreturn_t (*)(int  , void * ))0,
                                  irqflags, devname, dev_id);
  }
#line 157
  return (tmp);
}
}
#line 144 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/slab.h"
extern void kfree(void const   * ) ;
#line 445
__inline static void *kmalloc(size_t size , gfp_t flags ) ;
#line 475 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/of.h"
__inline static int of_property_read_u32_array(struct device_node  const  *np , char const   *propname ,
                                               u32 *out_values , size_t sz ) 
{ 


  {
#line 479
  return (-38);
}
}
#line 700 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/of.h"
__inline static int of_property_read_u32(struct device_node  const  *np , char const   *propname ,
                                         u32 *out_value ) 
{ 
  int tmp ;

  {
  {
#line 704
  tmp = of_property_read_u32_array(np, propname, out_value, 1UL);
  }
#line 704
  return (tmp);
}
}
#line 81 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/of_device.h"
__inline static struct of_device_id  const  *__of_match_device(struct of_device_id  const  *matches ,
                                                               struct device  const  *dev ) 
{ 


  {
#line 84
  return ((struct of_device_id  const  *)0);
}
}
#line 19 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/stmp_device.h"
extern int stmp_reset_block(void * ) ;
#line 333 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/input.h"
extern struct input_dev *input_allocate_device(void) ;
#line 335
extern void input_free_device(struct input_dev * ) ;
#line 348 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/input.h"
__inline static void *input_get_drvdata(struct input_dev *dev ) 
{ 
  void *tmp ;

  {
  {
#line 350
  tmp = dev_get_drvdata((struct device  const  *)(& dev->dev));
  }
#line 350
  return (tmp);
}
}
#line 353 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/input.h"
__inline static void input_set_drvdata(struct input_dev *dev , void *data ) 
{ 


  {
  {
#line 355
  dev_set_drvdata(& dev->dev, data);
  }
#line 356
  return;
}
}
#line 358
extern int input_register_device(struct input_dev * ) ;
#line 359
extern void input_unregister_device(struct input_dev * ) ;
#line 384
extern void input_event(struct input_dev * , unsigned int  , unsigned int  , int  ) ;
#line 387 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/input.h"
__inline static void input_report_key(struct input_dev *dev , unsigned int code ,
                                      int value ) 
{ 


  {
  {
#line 389
  input_event(dev, 1U, code, value != 0);
  }
#line 390
  return;
}
}
#line 397 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/input.h"
__inline static void input_report_abs(struct input_dev *dev , unsigned int code ,
                                      int value ) 
{ 


  {
  {
#line 399
  input_event(dev, 3U, code, value);
  }
#line 400
  return;
}
}
#line 412 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/input.h"
__inline static void input_sync(struct input_dev *dev ) 
{ 


  {
  {
#line 414
  input_event(dev, 0U, 0U, 0);
  }
#line 415
  return;
}
}
#line 440
extern void input_set_abs_params(struct input_dev * , unsigned int  , int  , int  ,
                                 int  , int  ) ;
#line 190 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/clk.h"
extern struct clk *devm_clk_get(struct device * , char const   * ) ;
#line 379
__inline static int ldv_clk_prepare_enable_9(struct clk *clk ) ;
#line 395
__inline static void ldv_clk_disable_unprepare_12(struct clk *clk ) ;
#line 399
__inline static void ldv_clk_disable_unprepare_12(struct clk *clk ) ;
#line 133 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/iio/buffer.h"
extern int iio_push_to_buffers(struct iio_dev * , void const   * ) ;
#line 149 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/iio/buffer.h"
__inline static int iio_push_to_buffers_with_timestamp(struct iio_dev *indio_dev ,
                                                       void *data , int64_t timestamp ) 
{ 
  size_t ts_offset ;
  int tmp ;

  {
#line 152
  if ((int )indio_dev->scan_timestamp) {
#line 153
    ts_offset = (unsigned long )indio_dev->scan_bytes / 8UL - 1UL;
#line 154
    *((int64_t *)data + ts_offset) = timestamp;
  } else {

  }
  {
#line 157
  tmp = iio_push_to_buffers(indio_dev, (void const   *)data);
  }
#line 157
  return (tmp);
}
}
#line 103 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/iio/trigger.h"
__inline static void iio_trigger_set_drvdata(struct iio_trigger *trig , void *data ) 
{ 


  {
  {
#line 105
  dev_set_drvdata(& trig->dev, data);
  }
#line 106
  return;
}
}
#line 114 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/iio/trigger.h"
__inline static void *iio_trigger_get_drvdata(struct iio_trigger *trig ) 
{ 
  void *tmp ;

  {
  {
#line 116
  tmp = dev_get_drvdata((struct device  const  *)(& trig->dev));
  }
#line 116
  return (tmp);
}
}
#line 123
extern int iio_trigger_register(struct iio_trigger * ) ;
#line 129
extern void iio_trigger_unregister(struct iio_trigger * ) ;
#line 137
extern void iio_trigger_poll(struct iio_trigger * ) ;
#line 142
extern struct iio_trigger *iio_trigger_alloc(char const   *  , ...) ;
#line 143
extern void iio_trigger_free(struct iio_trigger * ) ;
#line 52 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/iio/trigger_consumer.h"
extern irqreturn_t iio_pollfunc_store_time(int  , void * ) ;
#line 54
extern void iio_trigger_notify_done(struct iio_trigger * ) ;
#line 60
extern int iio_triggered_buffer_postenable(struct iio_dev * ) ;
#line 61
extern int iio_triggered_buffer_predisable(struct iio_dev * ) ;
#line 15 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/include/linux/iio/triggered_buffer.h"
static int ldv_iio_triggered_buffer_setup_10(struct iio_dev *ldv_func_arg1 , irqreturn_t (*ldv_func_arg2)(int  ,
                                                                                                          void * ) ,
                                             irqreturn_t (*ldv_func_arg3)(int  , void * ) ,
                                             struct iio_buffer_setup_ops  const  *ldv_func_arg4 ) ;
#line 20
static void ldv_iio_triggered_buffer_cleanup_11(struct iio_dev *ldv_func_arg1 ) ;
#line 24
static void ldv_iio_triggered_buffer_cleanup_13(struct iio_dev *ldv_func_arg1 ) ;
#line 84 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static char const   * const  mx23_lradc_irq_names[9U]  = 
#line 84 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
  {      "mxs-lradc-touchscreen",      "mxs-lradc-channel0",      "mxs-lradc-channel1",      "mxs-lradc-channel2", 
        "mxs-lradc-channel3",      "mxs-lradc-channel4",      "mxs-lradc-channel5",      "mxs-lradc-channel6", 
        "mxs-lradc-channel7"};
#line 96 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static char const   * const  mx28_lradc_irq_names[13U]  = 
#line 96
  {      "mxs-lradc-touchscreen",      "mxs-lradc-thresh0",      "mxs-lradc-thresh1",      "mxs-lradc-channel0", 
        "mxs-lradc-channel1",      "mxs-lradc-channel2",      "mxs-lradc-channel3",      "mxs-lradc-channel4", 
        "mxs-lradc-channel5",      "mxs-lradc-channel6",      "mxs-lradc-channel7",      "mxs-lradc-button0", 
        "mxs-lradc-button1"};
#line 120 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static uint32_t const   mx23_vref_mv[16U]  = 
#line 120
  {      1850U,      1850U,      1850U,      1850U, 
        1850U,      1850U,      3700U,      7400U, 
        1850U,      1850U,      1850U,      1850U, 
        1850U,      1850U,      1850U,      7400U};
#line 139 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static uint32_t const   mx28_vref_mv[16U]  = 
#line 139
  {      1850U,      1850U,      1850U,      1850U, 
        1850U,      1850U,      1850U,      7400U, 
        1850U,      1850U,      3700U,      1850U, 
        3700U,      1850U,      1850U,      7400U};
#line 158 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static struct mxs_lradc_of_config  const  mxs_lradc_of_config[2U]  = {      {9, (char const   * const  *)(& mx23_lradc_irq_names), (uint32_t const   *)(& mx23_vref_mv)}, 
        {13,
      (char const   * const  *)(& mx28_lradc_irq_names), (uint32_t const   *)(& mx28_vref_mv)}};
#line 349 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static void mxs_lradc_reg_set(struct mxs_lradc *lradc , u32 val , u32 reg ) 
{ 


  {
  {
#line 351
  writel(val, (void volatile   *)(lradc->base + ((unsigned long )reg + 4UL)));
  }
#line 352
  return;
}
}
#line 354 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static void mxs_lradc_reg_clear(struct mxs_lradc *lradc , u32 val , u32 reg ) 
{ 


  {
  {
#line 356
  writel(val, (void volatile   *)(lradc->base + ((unsigned long )reg + 8UL)));
  }
#line 357
  return;
}
}
#line 359 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static void mxs_lradc_reg_wrt(struct mxs_lradc *lradc , u32 val , u32 reg ) 
{ 


  {
  {
#line 361
  writel(val, (void volatile   *)(lradc->base + (unsigned long )reg));
  }
#line 362
  return;
}
}
#line 364 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static u32 mxs_lradc_plate_mask(struct mxs_lradc *lradc ) 
{ 


  {
#line 366
  if ((unsigned int )lradc->soc == 0U) {
#line 367
    return (2031616U);
  } else {
#line 369
    return (12517376U);
  }
}
}
#line 372 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static u32 mxs_lradc_irq_en_mask(struct mxs_lradc *lradc ) 
{ 


  {
#line 374
  if ((unsigned int )lradc->soc == 0U) {
#line 375
    return (33488896U);
  } else {
#line 377
    return (536805376U);
  }
}
}
#line 380 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static u32 mxs_lradc_irq_mask(struct mxs_lradc *lradc ) 
{ 


  {
#line 382
  if ((unsigned int )lradc->soc == 0U) {
#line 383
    return (511U);
  } else {
#line 385
    return (8191U);
  }
}
}
#line 388 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static u32 mxs_lradc_touch_detect_bit(struct mxs_lradc *lradc ) 
{ 


  {
#line 390
  if ((unsigned int )lradc->soc == 0U) {
#line 391
    return (1048576U);
  } else {
#line 393
    return (8388608U);
  }
}
}
#line 396 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static u32 mxs_lradc_drive_x_plate(struct mxs_lradc *lradc ) 
{ 


  {
#line 398
  if ((unsigned int )lradc->soc == 0U) {
#line 399
    return (327680U);
  } else {
#line 401
    return (327680U);
  }
}
}
#line 404 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static u32 mxs_lradc_drive_y_plate(struct mxs_lradc *lradc ) 
{ 


  {
#line 406
  if ((unsigned int )lradc->soc == 0U) {
#line 407
    return (655360U);
  } else {
#line 409
    return (2621440U);
  }
}
}
#line 412 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static u32 mxs_lradc_drive_pressure(struct mxs_lradc *lradc ) 
{ 


  {
#line 414
  if ((unsigned int )lradc->soc == 0U) {
#line 415
    return (393216U);
  } else {
#line 417
    return (786432U);
  }
}
}
#line 420 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static bool mxs_lradc_check_touch_event(struct mxs_lradc *lradc ) 
{ 
  unsigned int tmp ;

  {
  {
#line 422
  tmp = readl((void const volatile   *)(lradc->base + 64UL));
  }
#line 422
  return (((int )tmp & 1) != 0);
}
}
#line 426 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static void mxs_lradc_setup_ts_channel(struct mxs_lradc *lradc , unsigned int ch ) 
{ 


  {
  {
#line 436
  mxs_lradc_reg_wrt(lradc, ((lradc->over_sample_cnt - 1U) << 24) | 536870912U, (ch + 5U) * 16U);
#line 444
  mxs_lradc_reg_clear(lradc, 262143U, (ch + 5U) * 16U);
#line 447
  mxs_lradc_reg_wrt(lradc, ((unsigned int )((1 << (int )ch) << 24) | (((lradc->over_sample_cnt - 1U) << 11) & 65535U)) | ((lradc->over_sample_delay - 1U) & 2047U),
                    256U);
#line 453
  mxs_lradc_reg_clear(lradc, 60U, 16U);
#line 458
  mxs_lradc_reg_set(lradc, (u32 )(1 << (int )(ch + 16U)), 16U);
#line 465
  mxs_lradc_reg_wrt(lradc, (lradc->settling_delay & 2047U) | 1572864U, 240U);
  }
#line 468
  return;
}
}
#line 478 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static void mxs_lradc_setup_ts_pressure(struct mxs_lradc *lradc , unsigned int ch1 ,
                                        unsigned int ch2 ) 
{ 
  u32 reg ;

  {
  {
#line 491
  reg = ((lradc->over_sample_cnt - 1U) << 24) | 536870912U;
#line 493
  mxs_lradc_reg_wrt(lradc, reg, (ch1 + 5U) * 16U);
#line 494
  mxs_lradc_reg_wrt(lradc, reg, (ch2 + 5U) * 16U);
#line 500
  mxs_lradc_reg_clear(lradc, 262143U, (ch1 + 5U) * 16U);
#line 501
  mxs_lradc_reg_clear(lradc, 262143U, (ch2 + 5U) * 16U);
#line 504
  mxs_lradc_reg_wrt(lradc, ((unsigned int )(((1 << (int )ch1) << 24) | ((1 << (int )ch2) << 24)) | (((lradc->over_sample_cnt - 1U) << 11) & 65535U)) | ((lradc->over_sample_delay - 1U) & 2047U),
                    256U);
#line 511
  mxs_lradc_reg_clear(lradc, 60U, 16U);
#line 516
  mxs_lradc_reg_set(lradc, (u32 )(1 << (int )(ch2 + 16U)), 16U);
#line 523
  mxs_lradc_reg_wrt(lradc, (lradc->settling_delay & 2047U) | 1572864U, 240U);
  }
#line 526
  return;
}
}
#line 529 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static unsigned int mxs_lradc_read_raw_channel(struct mxs_lradc *lradc , unsigned int channel ) 
{ 
  u32 reg ;
  unsigned int num_samples ;
  unsigned int val ;

  {
  {
#line 535
  reg = readl((void const volatile   *)(lradc->base + (unsigned long )((channel + 5U) * 16U)));
  }
#line 536
  if ((reg & 536870912U) != 0U) {
#line 537
    num_samples = lradc->over_sample_cnt;
  } else {
#line 539
    num_samples = 1U;
  }
#line 541
  val = reg & 262143U;
#line 542
  return (val / num_samples);
}
}
#line 545 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static unsigned int mxs_lradc_read_ts_pressure(struct mxs_lradc *lradc , unsigned int ch1 ,
                                               unsigned int ch2 ) 
{ 
  u32 reg ;
  u32 mask ;
  unsigned int pressure ;
  unsigned int m1 ;
  unsigned int m2 ;
  unsigned int tmp ;
  unsigned int tmp___0 ;
  struct _ddebug descriptor ;
  long tmp___1 ;
  struct _ddebug descriptor___0 ;
  long tmp___2 ;

  {
  {
#line 551
  mask = (u32 )((1 << (int )ch1) | (1 << (int )ch2));
#line 552
  tmp = readl((void const volatile   *)(lradc->base + 16UL));
#line 552
  reg = tmp & mask;
  }
#line 554
  goto ldv_27854;
  ldv_27853: 
  {
#line 555
  tmp___0 = readl((void const volatile   *)(lradc->base + 16UL));
#line 555
  reg = tmp___0 & mask;
#line 556
  descriptor.modname = "mxs_lradc";
#line 556
  descriptor.function = "mxs_lradc_read_ts_pressure";
#line 556
  descriptor.filename = "drivers/staging/iio/adc/mxs-lradc.c";
#line 556
  descriptor.format = "One channel is still busy: %X\n";
#line 556
  descriptor.lineno = 556U;
#line 556
  descriptor.flags = 0U;
#line 556
  tmp___1 = __builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 556
  if (tmp___1 != 0L) {
    {
#line 556
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)lradc->dev, "One channel is still busy: %X\n",
                      reg);
    }
  } else {

  }
  ldv_27854: ;
#line 554
  if (reg != mask) {
#line 556
    goto ldv_27853;
  } else {

  }
  {
#line 559
  m1 = mxs_lradc_read_raw_channel(lradc, ch1);
#line 560
  m2 = mxs_lradc_read_raw_channel(lradc, ch2);
  }
#line 562
  if (m2 == 0U) {
    {
#line 563
    dev_warn((struct device  const  *)lradc->dev, "Cannot calculate pressure\n");
    }
#line 564
    return (2048U);
  } else {

  }
  {
#line 568
  pressure = m1;
#line 569
  pressure = pressure * 4096U;
#line 570
  pressure = pressure / m2;
#line 572
  descriptor___0.modname = "mxs_lradc";
#line 572
  descriptor___0.function = "mxs_lradc_read_ts_pressure";
#line 572
  descriptor___0.filename = "drivers/staging/iio/adc/mxs-lradc.c";
#line 572
  descriptor___0.format = "Pressure = %u\n";
#line 572
  descriptor___0.lineno = 572U;
#line 572
  descriptor___0.flags = 0U;
#line 572
  tmp___2 = __builtin_expect((long )descriptor___0.flags & 1L, 0L);
  }
#line 572
  if (tmp___2 != 0L) {
    {
#line 572
    __dynamic_dev_dbg(& descriptor___0, (struct device  const  *)lradc->dev, "Pressure = %u\n",
                      pressure);
    }
  } else {

  }
#line 573
  return (pressure);
}
}
#line 581 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static int mxs_lradc_read_ts_channel(struct mxs_lradc *lradc ) 
{ 
  u32 reg ;
  int val ;
  unsigned int tmp ;
  unsigned int tmp___0 ;
  unsigned int tmp___1 ;

  {
  {
#line 586
  reg = readl((void const volatile   *)(lradc->base + 16UL));
  }
#line 589
  if ((reg & 8U) != 0U) {
    {
#line 590
    mxs_lradc_reg_clear(lradc, 524296U, 16U);
#line 592
    tmp = mxs_lradc_read_raw_channel(lradc, 3U);
#line 592
    val = (int )tmp;
    }
  } else
#line 593
  if ((reg & 16U) != 0U) {
    {
#line 594
    mxs_lradc_reg_clear(lradc, 1048592U, 16U);
#line 596
    tmp___0 = mxs_lradc_read_raw_channel(lradc, 4U);
#line 596
    val = (int )tmp___0;
    }
  } else
#line 597
  if ((reg & 32U) != 0U) {
    {
#line 598
    mxs_lradc_reg_clear(lradc, 2097184U, 16U);
#line 600
    tmp___1 = mxs_lradc_read_raw_channel(lradc, 5U);
#line 600
    val = (int )tmp___1;
    }
  } else {
#line 602
    return (-5);
  }
  {
#line 605
  mxs_lradc_reg_wrt(lradc, 0U, 240U);
#line 606
  mxs_lradc_reg_wrt(lradc, 0U, 256U);
  }
#line 608
  return (val);
}
}
#line 623 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static void mxs_lradc_setup_touch_detection(struct mxs_lradc *lradc ) 
{ 
  u32 tmp ;
  u32 tmp___0 ;

  {
  {
#line 631
  tmp = mxs_lradc_plate_mask(lradc);
#line 631
  mxs_lradc_reg_clear(lradc, tmp, 0U);
#line 632
  tmp___0 = mxs_lradc_touch_detect_bit(lradc);
#line 632
  mxs_lradc_reg_set(lradc, tmp___0, 0U);
  }
#line 633
  return;
}
}
#line 648 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static void mxs_lradc_prepare_x_pos(struct mxs_lradc *lradc ) 
{ 
  u32 tmp ;
  u32 tmp___0 ;

  {
  {
#line 650
  tmp = mxs_lradc_plate_mask(lradc);
#line 650
  mxs_lradc_reg_clear(lradc, tmp, 0U);
#line 651
  tmp___0 = mxs_lradc_drive_x_plate(lradc);
#line 651
  mxs_lradc_reg_set(lradc, tmp___0, 0U);
#line 653
  lradc->cur_plate = 1;
#line 654
  mxs_lradc_setup_ts_channel(lradc, 3U);
  }
#line 655
  return;
}
}
#line 669 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static void mxs_lradc_prepare_y_pos(struct mxs_lradc *lradc ) 
{ 
  u32 tmp ;
  u32 tmp___0 ;

  {
  {
#line 671
  tmp = mxs_lradc_plate_mask(lradc);
#line 671
  mxs_lradc_reg_clear(lradc, tmp, 0U);
#line 672
  tmp___0 = mxs_lradc_drive_y_plate(lradc);
#line 672
  mxs_lradc_reg_set(lradc, tmp___0, 0U);
#line 674
  lradc->cur_plate = 2;
#line 675
  mxs_lradc_setup_ts_channel(lradc, 4U);
  }
#line 676
  return;
}
}
#line 690 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static void mxs_lradc_prepare_pressure(struct mxs_lradc *lradc ) 
{ 
  u32 tmp ;
  u32 tmp___0 ;

  {
  {
#line 692
  tmp = mxs_lradc_plate_mask(lradc);
#line 692
  mxs_lradc_reg_clear(lradc, tmp, 0U);
#line 693
  tmp___0 = mxs_lradc_drive_pressure(lradc);
#line 693
  mxs_lradc_reg_set(lradc, tmp___0, 0U);
#line 695
  lradc->cur_plate = 3;
#line 696
  mxs_lradc_setup_ts_pressure(lradc, 2U, 5U);
  }
#line 697
  return;
}
}
#line 699 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static void mxs_lradc_enable_touch_detection(struct mxs_lradc *lradc ) 
{ 


  {
  {
#line 701
  mxs_lradc_setup_touch_detection(lradc);
#line 703
  lradc->cur_plate = 0;
#line 704
  mxs_lradc_reg_clear(lradc, 16777472U, 16U);
#line 706
  mxs_lradc_reg_set(lradc, 16777216U, 16U);
  }
#line 707
  return;
}
}
#line 709 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static void mxs_lradc_report_ts_event(struct mxs_lradc *lradc ) 
{ 


  {
  {
#line 711
  input_report_abs(lradc->ts_input, 0U, (int )lradc->ts_x_pos);
#line 712
  input_report_abs(lradc->ts_input, 1U, (int )lradc->ts_y_pos);
#line 713
  input_report_abs(lradc->ts_input, 24U, (int )lradc->ts_pressure);
#line 714
  input_report_key(lradc->ts_input, 330U, 1);
#line 715
  input_sync(lradc->ts_input);
  }
#line 716
  return;
}
}
#line 718 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static void mxs_lradc_complete_touch_event(struct mxs_lradc *lradc ) 
{ 


  {
  {
#line 720
  mxs_lradc_setup_touch_detection(lradc);
#line 721
  lradc->cur_plate = 4;
#line 726
  mxs_lradc_reg_wrt(lradc, 0U, 160U);
#line 727
  mxs_lradc_reg_clear(lradc, 32U, 16U);
#line 728
  mxs_lradc_reg_set(lradc, 2097152U, 16U);
#line 729
  mxs_lradc_reg_wrt(lradc, 537919498U, 240U);
  }
#line 730
  return;
}
}
#line 738 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static void mxs_lradc_finish_touch_event(struct mxs_lradc *lradc , bool valid ) 
{ 
  bool tmp ;
  bool tmp___0 ;

  {
#line 741
  if ((int )valid) {
    {
#line 741
    tmp = mxs_lradc_check_touch_event(lradc);
    }
#line 741
    if ((int )tmp) {
      {
#line 742
      lradc->ts_valid = 1;
#line 743
      mxs_lradc_report_ts_event(lradc);
      }
    } else {

    }
  } else {

  }
  {
#line 747
  tmp___0 = mxs_lradc_check_touch_event(lradc);
  }
#line 747
  if ((int )tmp___0) {
    {
#line 748
    mxs_lradc_prepare_y_pos(lradc);
    }
#line 749
    return;
  } else {

  }
#line 752
  if ((int )lradc->ts_valid) {
    {
#line 754
    lradc->ts_valid = 0;
#line 755
    input_report_key(lradc->ts_input, 330U, 0);
#line 756
    input_sync(lradc->ts_input);
    }
  } else {

  }
  {
#line 760
  lradc->cur_plate = 0;
#line 761
  mxs_lradc_reg_clear(lradc, 256U, 16U);
#line 762
  mxs_lradc_reg_set(lradc, 16777216U, 16U);
  }
#line 763
  return;
}
}
#line 766 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static void mxs_lradc_handle_touch(struct mxs_lradc *lradc ) 
{ 
  int val ;
  bool tmp ;

  {
  {
#line 771
  if ((unsigned int )lradc->cur_plate == 0U) {
#line 771
    goto case_0;
  } else {

  }
#line 786
  if ((unsigned int )lradc->cur_plate == 2U) {
#line 786
    goto case_2;
  } else {

  }
#line 796
  if ((unsigned int )lradc->cur_plate == 1U) {
#line 796
    goto case_1;
  } else {

  }
#line 806
  if ((unsigned int )lradc->cur_plate == 3U) {
#line 806
    goto case_3;
  } else {

  }
#line 812
  if ((unsigned int )lradc->cur_plate == 4U) {
#line 812
    goto case_4;
  } else {

  }
#line 770
  goto switch_break;
  case_0: /* CIL Label */ 
  {
#line 776
  tmp = mxs_lradc_check_touch_event(lradc);
  }
#line 776
  if ((int )tmp) {
    {
#line 777
    mxs_lradc_reg_clear(lradc, 16777216U, 16U);
#line 780
    mxs_lradc_prepare_y_pos(lradc);
    }
  } else {

  }
  {
#line 782
  mxs_lradc_reg_clear(lradc, 256U, 16U);
  }
#line 784
  return;
  case_2: /* CIL Label */ 
  {
#line 787
  val = mxs_lradc_read_ts_channel(lradc);
  }
#line 788
  if (val < 0) {
    {
#line 789
    mxs_lradc_enable_touch_detection(lradc);
    }
#line 790
    return;
  } else {

  }
  {
#line 792
  lradc->ts_y_pos = (unsigned int )val;
#line 793
  mxs_lradc_prepare_x_pos(lradc);
  }
#line 794
  return;
  case_1: /* CIL Label */ 
  {
#line 797
  val = mxs_lradc_read_ts_channel(lradc);
  }
#line 798
  if (val < 0) {
    {
#line 799
    mxs_lradc_enable_touch_detection(lradc);
    }
#line 800
    return;
  } else {

  }
  {
#line 802
  lradc->ts_x_pos = (unsigned int )val;
#line 803
  mxs_lradc_prepare_pressure(lradc);
  }
#line 804
  return;
  case_3: /* CIL Label */ 
  {
#line 807
  lradc->ts_pressure = mxs_lradc_read_ts_pressure(lradc, 2U, 5U);
#line 809
  mxs_lradc_complete_touch_event(lradc);
  }
#line 810
  return;
  case_4: /* CIL Label */ 
  {
#line 813
  val = mxs_lradc_read_ts_channel(lradc);
#line 814
  mxs_lradc_finish_touch_event(lradc, 1);
  }
#line 815
  goto ldv_27896;
  switch_break: /* CIL Label */ ;
  }
  ldv_27896: ;
#line 818
  return;
}
}
#line 822 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static int mxs_lradc_read_single(struct iio_dev *iio_dev , int chan , int *val ) 
{ 
  struct mxs_lradc *lradc ;
  void *tmp ;
  int ret ;
  int tmp___1 ;
  long tmp___2 ;
  unsigned int tmp___3 ;

  {
  {
#line 824
  tmp = iio_priv((struct iio_dev  const  *)iio_dev);
#line 824
  lradc = (struct mxs_lradc *)tmp;
#line 833
  ret = mutex_trylock(& lradc->lock);
  }
#line 834
  if (ret == 0) {
#line 835
    return (-16);
  } else {

  }
  {
#line 837
  reinit_completion(& lradc->completion);
  }
#line 844
  if ((unsigned int )lradc->soc == 1U) {
    {
#line 845
    mxs_lradc_reg_clear(lradc, 536805376U, 16U);
    }
  } else {

  }
  {
#line 847
  mxs_lradc_reg_clear(lradc, 255U, 0U);
#line 850
  tmp___1 = variable_test_bit((long )chan, (unsigned long const volatile   *)(& lradc->is_divided));
  }
#line 850
  if (tmp___1 != 0) {
    {
#line 851
    mxs_lradc_reg_set(lradc, 16777216U, 32U);
    }
  } else {
    {
#line 854
    mxs_lradc_reg_clear(lradc, 16777216U, 32U);
    }
  }
  {
#line 858
  mxs_lradc_reg_clear(lradc, 15U, 320U);
#line 860
  mxs_lradc_reg_set(lradc, (u32 )chan, 320U);
#line 862
  mxs_lradc_reg_wrt(lradc, 0U, 80U);
#line 865
  mxs_lradc_reg_set(lradc, 65536U, 16U);
#line 866
  mxs_lradc_reg_set(lradc, 1U, 0U);
#line 869
  tmp___2 = wait_for_completion_killable_timeout(& lradc->completion, 250UL);
#line 869
  ret = (int )tmp___2;
  }
#line 870
  if (ret == 0) {
#line 871
    ret = -110;
  } else {

  }
#line 872
  if (ret < 0) {
#line 873
    goto err;
  } else {

  }
  {
#line 876
  tmp___3 = readl((void const volatile   *)(lradc->base + 80UL));
#line 876
  *val = (int )tmp___3 & 262143;
#line 877
  ret = 1;
  }
  err: 
  {
#line 880
  mxs_lradc_reg_clear(lradc, 65536U, 16U);
#line 882
  mutex_unlock(& lradc->lock);
  }
#line 884
  return (ret);
}
}
#line 887 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static int mxs_lradc_read_temp(struct iio_dev *iio_dev , int *val ) 
{ 
  int ret ;
  int min ;
  int max ;

  {
  {
#line 891
  ret = mxs_lradc_read_single(iio_dev, 8, & min);
  }
#line 892
  if (ret != 1) {
#line 893
    return (ret);
  } else {

  }
  {
#line 895
  ret = mxs_lradc_read_single(iio_dev, 9, & max);
  }
#line 896
  if (ret != 1) {
#line 897
    return (ret);
  } else {

  }
#line 899
  *val = max - min;
#line 901
  return (1);
}
}
#line 904 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static int mxs_lradc_read_raw(struct iio_dev *iio_dev , struct iio_chan_spec  const  *chan ,
                              int *val , int *val2 , long m ) 
{ 
  struct mxs_lradc *lradc ;
  void *tmp ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___3 ;

  {
  {
#line 908
  tmp = iio_priv((struct iio_dev  const  *)iio_dev);
#line 908
  lradc = (struct mxs_lradc *)tmp;
  }
  {
#line 911
  if (m == 0L) {
#line 911
    goto case_0;
  } else {

  }
#line 917
  if (m == 2L) {
#line 917
    goto case_2;
  } else {

  }
#line 932
  if (m == 3L) {
#line 932
    goto case_3;
  } else {

  }
#line 946
  goto switch_default;
  case_0: /* CIL Label */ ;
#line 912
  if ((unsigned int )chan->type == 9U) {
    {
#line 913
    tmp___0 = mxs_lradc_read_temp(iio_dev, val);
    }
#line 913
    return (tmp___0);
  } else {

  }
  {
#line 915
  tmp___1 = mxs_lradc_read_single(iio_dev, chan->channel, val);
  }
#line 915
  return (tmp___1);
  case_2: /* CIL Label */ ;
#line 918
  if ((unsigned int )chan->type == 9U) {
#line 922
    *val = 0;
#line 923
    *val2 = 253000;
#line 924
    return (2);
  } else {

  }
  {
#line 927
  *val = (int )*(lradc->vref_mv + (unsigned long )chan->channel);
#line 928
  tmp___3 = variable_test_bit((long )chan->channel, (unsigned long const volatile   *)(& lradc->is_divided));
#line 928
  *val2 = (int )chan->scan_type.realbits - tmp___3;
  }
#line 930
  return (11);
  case_3: /* CIL Label */ ;
#line 933
  if ((unsigned int )chan->type == 9U) {
#line 938
    *val = -1075;
#line 939
    *val2 = 691699;
#line 941
    return (2);
  } else {

  }
#line 944
  return (-22);
  switch_default: /* CIL Label */ ;
#line 947
  goto ldv_27924;
  switch_break: /* CIL Label */ ;
  }
  ldv_27924: ;
#line 950
  return (-22);
}
}
#line 953 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static int mxs_lradc_write_raw(struct iio_dev *iio_dev , struct iio_chan_spec  const  *chan ,
                               int val , int val2 , long m ) 
{ 
  struct mxs_lradc *lradc ;
  void *tmp ;
  struct mxs_lradc_scale *scale_avail ;
  int ret ;

  {
  {
#line 957
  tmp = iio_priv((struct iio_dev  const  *)iio_dev);
#line 957
  lradc = (struct mxs_lradc *)tmp;
#line 958
  scale_avail = (struct mxs_lradc_scale *)((struct mxs_lradc_scale (*)[2])(& lradc->scale_avail) + (unsigned long )chan->channel);
#line 962
  ret = mutex_trylock(& lradc->lock);
  }
#line 963
  if (ret == 0) {
#line 964
    return (-16);
  } else {

  }
  {
#line 967
  if (m == 2L) {
#line 967
    goto case_2;
  } else {

  }
#line 982
  goto switch_default;
  case_2: /* CIL Label */ 
#line 968
  ret = -22;
#line 969
  if ((unsigned int )val == scale_avail->integer && (unsigned int )val2 == scale_avail->nano) {
    {
#line 972
    clear_bit((long )chan->channel, (unsigned long volatile   *)(& lradc->is_divided));
#line 973
    ret = 0;
    }
  } else
#line 974
  if ((unsigned int )val == (scale_avail + 1UL)->integer && (unsigned int )val2 == (scale_avail + 1UL)->nano) {
    {
#line 977
    set_bit((long )chan->channel, (unsigned long volatile   *)(& lradc->is_divided));
#line 978
    ret = 0;
    }
  } else {

  }
#line 981
  goto ldv_27936;
  switch_default: /* CIL Label */ 
#line 983
  ret = -22;
#line 984
  goto ldv_27936;
  switch_break: /* CIL Label */ ;
  }
  ldv_27936: 
  {
#line 987
  mutex_unlock(& lradc->lock);
  }
#line 989
  return (ret);
}
}
#line 992 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static int mxs_lradc_write_raw_get_fmt(struct iio_dev *iio_dev , struct iio_chan_spec  const  *chan ,
                                       long m ) 
{ 


  {
#line 996
  return (3);
}
}
#line 999 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static ssize_t mxs_lradc_show_scale_available_ch(struct device *dev , struct device_attribute *attr ,
                                                 char *buf , int ch ) 
{ 
  struct iio_dev *iio ;
  struct iio_dev *tmp ;
  struct mxs_lradc *lradc ;
  void *tmp___0 ;
  int i ;
  int len ;
  int tmp___1 ;
  int tmp___2 ;

  {
  {
#line 1004
  tmp = dev_to_iio_dev(dev);
#line 1004
  iio = tmp;
#line 1005
  tmp___0 = iio_priv((struct iio_dev  const  *)iio);
#line 1005
  lradc = (struct mxs_lradc *)tmp___0;
#line 1006
  len = 0;
#line 1008
  i = 0;
  }
#line 1008
  goto ldv_27956;
  ldv_27955: 
  {
#line 1009
  tmp___1 = sprintf(buf + (unsigned long )len, "%d.%09u ", lradc->scale_avail[ch][i].integer,
                    lradc->scale_avail[ch][i].nano);
#line 1009
  len = len + tmp___1;
#line 1008
  i = i + 1;
  }
  ldv_27956: ;
#line 1008
  if ((unsigned int )i <= 1U) {
#line 1010
    goto ldv_27955;
  } else {

  }
  {
#line 1013
  tmp___2 = sprintf(buf + (unsigned long )len, "\n");
#line 1013
  len = len + tmp___2;
  }
#line 1015
  return ((ssize_t )len);
}
}
#line 1018 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static ssize_t mxs_lradc_show_scale_available(struct device *dev , struct device_attribute *attr ,
                                              char *buf ) 
{ 
  struct iio_dev_attr *iio_attr ;
  struct device_attribute  const  *__mptr ;
  ssize_t tmp ;

  {
  {
#line 1022
  __mptr = (struct device_attribute  const  *)attr;
#line 1022
  iio_attr = (struct iio_dev_attr *)__mptr;
#line 1024
  tmp = mxs_lradc_show_scale_available_ch(dev, attr, buf, (int )iio_attr->address);
  }
#line 1024
  return (tmp);
}
}
#line 1032 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static struct iio_dev_attr iio_dev_attr_in_voltage0_scale_available  =    {{{"in_voltage0_scale_available", 292U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0},
                                                          {(char)0}, {(char)0}, {(char)0},
                                                          {(char)0}, {(char)0}}}},
     & mxs_lradc_show_scale_available, (ssize_t (*)(struct device * , struct device_attribute * ,
                                                    char const   * , size_t  ))0},
    0ULL, {0, 0}, 0};
#line 1033 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static struct iio_dev_attr iio_dev_attr_in_voltage1_scale_available  =    {{{"in_voltage1_scale_available", 292U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0},
                                                          {(char)0}, {(char)0}, {(char)0},
                                                          {(char)0}, {(char)0}}}},
     & mxs_lradc_show_scale_available, (ssize_t (*)(struct device * , struct device_attribute * ,
                                                    char const   * , size_t  ))0},
    1ULL, {0, 0}, 0};
#line 1034 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static struct iio_dev_attr iio_dev_attr_in_voltage2_scale_available  =    {{{"in_voltage2_scale_available", 292U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0},
                                                          {(char)0}, {(char)0}, {(char)0},
                                                          {(char)0}, {(char)0}}}},
     & mxs_lradc_show_scale_available, (ssize_t (*)(struct device * , struct device_attribute * ,
                                                    char const   * , size_t  ))0},
    2ULL, {0, 0}, 0};
#line 1035 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static struct iio_dev_attr iio_dev_attr_in_voltage3_scale_available  =    {{{"in_voltage3_scale_available", 292U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0},
                                                          {(char)0}, {(char)0}, {(char)0},
                                                          {(char)0}, {(char)0}}}},
     & mxs_lradc_show_scale_available, (ssize_t (*)(struct device * , struct device_attribute * ,
                                                    char const   * , size_t  ))0},
    3ULL, {0, 0}, 0};
#line 1036 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static struct iio_dev_attr iio_dev_attr_in_voltage4_scale_available  =    {{{"in_voltage4_scale_available", 292U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0},
                                                          {(char)0}, {(char)0}, {(char)0},
                                                          {(char)0}, {(char)0}}}},
     & mxs_lradc_show_scale_available, (ssize_t (*)(struct device * , struct device_attribute * ,
                                                    char const   * , size_t  ))0},
    4ULL, {0, 0}, 0};
#line 1037 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static struct iio_dev_attr iio_dev_attr_in_voltage5_scale_available  =    {{{"in_voltage5_scale_available", 292U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0},
                                                          {(char)0}, {(char)0}, {(char)0},
                                                          {(char)0}, {(char)0}}}},
     & mxs_lradc_show_scale_available, (ssize_t (*)(struct device * , struct device_attribute * ,
                                                    char const   * , size_t  ))0},
    5ULL, {0, 0}, 0};
#line 1038 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static struct iio_dev_attr iio_dev_attr_in_voltage6_scale_available  =    {{{"in_voltage6_scale_available", 292U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0},
                                                          {(char)0}, {(char)0}, {(char)0},
                                                          {(char)0}, {(char)0}}}},
     & mxs_lradc_show_scale_available, (ssize_t (*)(struct device * , struct device_attribute * ,
                                                    char const   * , size_t  ))0},
    6ULL, {0, 0}, 0};
#line 1039 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static struct iio_dev_attr iio_dev_attr_in_voltage7_scale_available  =    {{{"in_voltage7_scale_available", 292U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0},
                                                          {(char)0}, {(char)0}, {(char)0},
                                                          {(char)0}, {(char)0}}}},
     & mxs_lradc_show_scale_available, (ssize_t (*)(struct device * , struct device_attribute * ,
                                                    char const   * , size_t  ))0},
    7ULL, {0, 0}, 0};
#line 1040 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static struct iio_dev_attr iio_dev_attr_in_voltage10_scale_available  =    {{{"in_voltage10_scale_available", 292U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0},
                                                           {(char)0}, {(char)0}, {(char)0},
                                                           {(char)0}, {(char)0}}}},
     & mxs_lradc_show_scale_available, (ssize_t (*)(struct device * , struct device_attribute * ,
                                                    char const   * , size_t  ))0},
    10ULL, {0, 0}, 0};
#line 1041 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static struct iio_dev_attr iio_dev_attr_in_voltage11_scale_available  =    {{{"in_voltage11_scale_available", 292U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0},
                                                           {(char)0}, {(char)0}, {(char)0},
                                                           {(char)0}, {(char)0}}}},
     & mxs_lradc_show_scale_available, (ssize_t (*)(struct device * , struct device_attribute * ,
                                                    char const   * , size_t  ))0},
    11ULL, {0, 0}, 0};
#line 1042 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static struct iio_dev_attr iio_dev_attr_in_voltage12_scale_available  =    {{{"in_voltage12_scale_available", 292U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0},
                                                           {(char)0}, {(char)0}, {(char)0},
                                                           {(char)0}, {(char)0}}}},
     & mxs_lradc_show_scale_available, (ssize_t (*)(struct device * , struct device_attribute * ,
                                                    char const   * , size_t  ))0},
    12ULL, {0, 0}, 0};
#line 1043 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static struct iio_dev_attr iio_dev_attr_in_voltage13_scale_available  =    {{{"in_voltage13_scale_available", 292U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0},
                                                           {(char)0}, {(char)0}, {(char)0},
                                                           {(char)0}, {(char)0}}}},
     & mxs_lradc_show_scale_available, (ssize_t (*)(struct device * , struct device_attribute * ,
                                                    char const   * , size_t  ))0},
    13ULL, {0, 0}, 0};
#line 1044 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static struct iio_dev_attr iio_dev_attr_in_voltage14_scale_available  =    {{{"in_voltage14_scale_available", 292U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0},
                                                           {(char)0}, {(char)0}, {(char)0},
                                                           {(char)0}, {(char)0}}}},
     & mxs_lradc_show_scale_available, (ssize_t (*)(struct device * , struct device_attribute * ,
                                                    char const   * , size_t  ))0},
    14ULL, {0, 0}, 0};
#line 1045 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static struct iio_dev_attr iio_dev_attr_in_voltage15_scale_available  =    {{{"in_voltage15_scale_available", 292U, (_Bool)0, 0, {{{(char)0}, {(char)0}, {(char)0},
                                                           {(char)0}, {(char)0}, {(char)0},
                                                           {(char)0}, {(char)0}}}},
     & mxs_lradc_show_scale_available, (ssize_t (*)(struct device * , struct device_attribute * ,
                                                    char const   * , size_t  ))0},
    15ULL, {0, 0}, 0};
#line 1047 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static struct attribute *mxs_lradc_attributes[15U]  = 
#line 1047
  {      & iio_dev_attr_in_voltage0_scale_available.dev_attr.attr,      & iio_dev_attr_in_voltage1_scale_available.dev_attr.attr,      & iio_dev_attr_in_voltage2_scale_available.dev_attr.attr,      & iio_dev_attr_in_voltage3_scale_available.dev_attr.attr, 
        & iio_dev_attr_in_voltage4_scale_available.dev_attr.attr,      & iio_dev_attr_in_voltage5_scale_available.dev_attr.attr,      & iio_dev_attr_in_voltage6_scale_available.dev_attr.attr,      & iio_dev_attr_in_voltage7_scale_available.dev_attr.attr, 
        & iio_dev_attr_in_voltage10_scale_available.dev_attr.attr,      & iio_dev_attr_in_voltage11_scale_available.dev_attr.attr,      & iio_dev_attr_in_voltage12_scale_available.dev_attr.attr,      & iio_dev_attr_in_voltage13_scale_available.dev_attr.attr, 
        & iio_dev_attr_in_voltage14_scale_available.dev_attr.attr,      & iio_dev_attr_in_voltage15_scale_available.dev_attr.attr,      (struct attribute *)0};
#line 1065 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static struct attribute_group  const  mxs_lradc_attribute_group  =    {0, 0, (struct attribute **)(& mxs_lradc_attributes), 0};
#line 1069 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static struct iio_info  const  mxs_lradc_iio_info  = 
#line 1069
     {& __this_module, 0, & mxs_lradc_attribute_group, & mxs_lradc_read_raw, 0, & mxs_lradc_write_raw,
    & mxs_lradc_write_raw_get_fmt, 0, 0, 0, 0, 0, 0, 0};
#line 1077 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static int mxs_lradc_ts_open(struct input_dev *dev ) 
{ 
  struct mxs_lradc *lradc ;
  void *tmp ;

  {
  {
#line 1079
  tmp = input_get_drvdata(dev);
#line 1079
  lradc = (struct mxs_lradc *)tmp;
#line 1082
  mxs_lradc_enable_touch_detection(lradc);
  }
#line 1084
  return (0);
}
}
#line 1087 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static void mxs_lradc_disable_ts(struct mxs_lradc *lradc ) 
{ 
  u32 tmp ;

  {
  {
#line 1090
  mxs_lradc_reg_clear(lradc, 20709376U, 16U);
#line 1096
  tmp = mxs_lradc_plate_mask(lradc);
#line 1096
  mxs_lradc_reg_clear(lradc, tmp, 0U);
  }
#line 1097
  return;
}
}
#line 1099 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static void mxs_lradc_ts_close(struct input_dev *dev ) 
{ 
  struct mxs_lradc *lradc ;
  void *tmp ;

  {
  {
#line 1101
  tmp = input_get_drvdata(dev);
#line 1101
  lradc = (struct mxs_lradc *)tmp;
#line 1103
  mxs_lradc_disable_ts(lradc);
  }
#line 1104
  return;
}
}
#line 1106 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static int mxs_lradc_ts_register(struct mxs_lradc *lradc ) 
{ 
  struct input_dev *input ;
  struct device *dev ;
  int ret ;

  {
#line 1109
  dev = lradc->dev;
#line 1112
  if ((unsigned int )lradc->use_touchscreen == 0U) {
#line 1113
    return (0);
  } else {

  }
  {
#line 1115
  input = input_allocate_device();
  }
#line 1116
  if ((unsigned long )input == (unsigned long )((struct input_dev *)0)) {
#line 1117
    return (-12);
  } else {

  }
  {
#line 1119
  input->name = "mxs-lradc";
#line 1120
  input->id.bustype = 25U;
#line 1121
  input->dev.parent = dev;
#line 1122
  input->open = & mxs_lradc_ts_open;
#line 1123
  input->close = & mxs_lradc_ts_close;
#line 1125
  __set_bit(3L, (unsigned long volatile   *)(& input->evbit));
#line 1126
  __set_bit(1L, (unsigned long volatile   *)(& input->evbit));
#line 1127
  __set_bit(330L, (unsigned long volatile   *)(& input->keybit));
#line 1128
  input_set_abs_params(input, 0U, 0, 4095, 0, 0);
#line 1129
  input_set_abs_params(input, 1U, 0, 4095, 0, 0);
#line 1130
  input_set_abs_params(input, 24U, 0, 4095, 0, 0);
#line 1133
  lradc->ts_input = input;
#line 1134
  input_set_drvdata(input, (void *)lradc);
#line 1135
  ret = input_register_device(input);
  }
#line 1136
  if (ret != 0) {
    {
#line 1137
    input_free_device(lradc->ts_input);
    }
  } else {

  }
#line 1139
  return (ret);
}
}
#line 1142 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static void mxs_lradc_ts_unregister(struct mxs_lradc *lradc ) 
{ 


  {
#line 1144
  if ((unsigned int )lradc->use_touchscreen == 0U) {
#line 1145
    return;
  } else {

  }
  {
#line 1147
  mxs_lradc_disable_ts(lradc);
#line 1148
  input_unregister_device(lradc->ts_input);
  }
#line 1149
  return;
}
}
#line 1154 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static irqreturn_t mxs_lradc_handle_irq(int irq , void *data ) 
{ 
  struct iio_dev *iio ;
  struct mxs_lradc *lradc ;
  void *tmp ;
  unsigned long reg ;
  unsigned int tmp___0 ;
  uint32_t ts_irq_mask ;
  u32 tmp___1 ;
  bool tmp___2 ;
  u32 tmp___3 ;

  {
  {
#line 1156
  iio = (struct iio_dev *)data;
#line 1157
  tmp = iio_priv((struct iio_dev  const  *)iio);
#line 1157
  lradc = (struct mxs_lradc *)tmp;
#line 1158
  tmp___0 = readl((void const volatile   *)(lradc->base + 16UL));
#line 1158
  reg = (unsigned long )tmp___0;
#line 1159
  ts_irq_mask = 316U;
#line 1166
  tmp___1 = mxs_lradc_irq_mask(lradc);
  }
#line 1166
  if ((reg & (unsigned long )tmp___1) == 0UL) {
#line 1167
    return (0);
  } else {

  }
#line 1169
  if ((unsigned int )lradc->use_touchscreen != 0U && (reg & 316UL) != 0UL) {
    {
#line 1170
    mxs_lradc_handle_touch(lradc);
    }
  } else {

  }
  {
#line 1172
  tmp___2 = iio_buffer_enabled(iio);
  }
#line 1172
  if ((int )tmp___2) {
    {
#line 1173
    iio_trigger_poll(iio->trig);
    }
  } else
#line 1174
  if ((int )reg & 1) {
    {
#line 1175
    complete(& lradc->completion);
    }
  } else {

  }
  {
#line 1177
  tmp___3 = mxs_lradc_irq_mask(lradc);
#line 1177
  mxs_lradc_reg_clear(lradc, (u32 )reg & tmp___3, 16U);
  }
#line 1180
  return (1);
}
}
#line 1186 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static irqreturn_t mxs_lradc_trigger_handler(int irq , void *p ) 
{ 
  struct iio_poll_func *pf ;
  struct iio_dev *iio ;
  struct mxs_lradc *lradc ;
  void *tmp ;
  uint32_t chan_value ;
  unsigned int i ;
  unsigned int j ;
  unsigned long tmp___0 ;
  unsigned long tmp___1 ;

  {
  {
#line 1188
  pf = (struct iio_poll_func *)p;
#line 1189
  iio = pf->indio_dev;
#line 1190
  tmp = iio_priv((struct iio_dev  const  *)iio);
#line 1190
  lradc = (struct mxs_lradc *)tmp;
#line 1191
  chan_value = 603979776U;
#line 1193
  j = 0U;
#line 1195
  tmp___0 = find_first_bit(iio->active_scan_mask, 16UL);
#line 1195
  i = (unsigned int )tmp___0;
  }
#line 1195
  goto ldv_28162;
  ldv_28161: 
  {
#line 1196
  *(lradc->buffer + (unsigned long )j) = readl((void const volatile   *)(lradc->base + (unsigned long )((j + 5U) * 16U)));
#line 1197
  mxs_lradc_reg_wrt(lradc, chan_value, (j + 5U) * 16U);
#line 1198
  *(lradc->buffer + (unsigned long )j) = *(lradc->buffer + (unsigned long )j) & 262143U;
#line 1199
  *(lradc->buffer + (unsigned long )j) = *(lradc->buffer + (unsigned long )j) / 5U;
#line 1200
  j = j + 1U;
#line 1195
  tmp___1 = find_next_bit(iio->active_scan_mask, 16UL, (unsigned long )(i + 1U));
#line 1195
  i = (unsigned int )tmp___1;
  }
  ldv_28162: ;
#line 1195
  if (i <= 15U) {
#line 1197
    goto ldv_28161;
  } else {

  }
  {
#line 1203
  iio_push_to_buffers_with_timestamp(iio, (void *)lradc->buffer, pf->timestamp);
#line 1205
  iio_trigger_notify_done(iio->trig);
  }
#line 1207
  return (1);
}
}
#line 1210 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static int mxs_lradc_configure_trigger(struct iio_trigger *trig , bool state ) 
{ 
  struct iio_dev *iio ;
  void *tmp ;
  struct mxs_lradc *lradc ;
  void *tmp___0 ;
  uint32_t st ;

  {
  {
#line 1212
  tmp = iio_trigger_get_drvdata(trig);
#line 1212
  iio = (struct iio_dev *)tmp;
#line 1213
  tmp___0 = iio_priv((struct iio_dev  const  *)iio);
#line 1213
  lradc = (struct mxs_lradc *)tmp___0;
#line 1214
  st = (int )state ? 4U : 8U;
#line 1216
  mxs_lradc_reg_wrt(lradc, 1048576U, st + 208U);
  }
#line 1218
  return (0);
}
}
#line 1221 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static struct iio_trigger_ops  const  mxs_lradc_trigger_ops  =    {& __this_module, & mxs_lradc_configure_trigger, 0, 0};
#line 1226 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static int mxs_lradc_trigger_init(struct iio_dev *iio ) 
{ 
  int ret ;
  struct iio_trigger *trig ;
  struct mxs_lradc *lradc ;
  void *tmp ;

  {
  {
#line 1230
  tmp = iio_priv((struct iio_dev  const  *)iio);
#line 1230
  lradc = (struct mxs_lradc *)tmp;
#line 1232
  trig = iio_trigger_alloc("%s-dev%i", iio->name, iio->id);
  }
#line 1233
  if ((unsigned long )trig == (unsigned long )((struct iio_trigger *)0)) {
#line 1234
    return (-12);
  } else {

  }
  {
#line 1236
  trig->dev.parent = lradc->dev;
#line 1237
  iio_trigger_set_drvdata(trig, (void *)iio);
#line 1238
  trig->ops = & mxs_lradc_trigger_ops;
#line 1240
  ret = iio_trigger_register(trig);
  }
#line 1241
  if (ret != 0) {
    {
#line 1242
    iio_trigger_free(trig);
    }
#line 1243
    return (ret);
  } else {

  }
#line 1246
  lradc->trig = trig;
#line 1248
  return (0);
}
}
#line 1251 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static void mxs_lradc_trigger_remove(struct iio_dev *iio ) 
{ 
  struct mxs_lradc *lradc ;
  void *tmp ;

  {
  {
#line 1253
  tmp = iio_priv((struct iio_dev  const  *)iio);
#line 1253
  lradc = (struct mxs_lradc *)tmp;
#line 1255
  iio_trigger_unregister(lradc->trig);
#line 1256
  iio_trigger_free(lradc->trig);
  }
#line 1257
  return;
}
}
#line 1259 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static int mxs_lradc_buffer_preenable(struct iio_dev *iio ) 
{ 
  struct mxs_lradc *lradc ;
  void *tmp ;
  int ret ;
  int chan ;
  int ofs ;
  unsigned long enable ;
  uint32_t ctrl4_set ;
  uint32_t ctrl4_clr ;
  uint32_t ctrl1_irq ;
  uint32_t chan_value ;
  int len ;
  int tmp___0 ;
  void *tmp___1 ;
  unsigned long tmp___2 ;
  unsigned long tmp___3 ;

  {
  {
#line 1261
  tmp = iio_priv((struct iio_dev  const  *)iio);
#line 1261
  lradc = (struct mxs_lradc *)tmp;
#line 1262
  ret = 0;
#line 1262
  ofs = 0;
#line 1263
  enable = 0UL;
#line 1264
  ctrl4_set = 0U;
#line 1265
  ctrl4_clr = 0U;
#line 1266
  ctrl1_irq = 0U;
#line 1267
  chan_value = 603979776U;
#line 1269
  tmp___0 = bitmap_weight(iio->active_scan_mask, 16U);
#line 1269
  len = tmp___0;
  }
#line 1272
  if (len == 0) {
#line 1273
    return (-22);
  } else {

  }
  {
#line 1279
  ret = mutex_trylock(& lradc->lock);
  }
#line 1280
  if (ret == 0) {
#line 1281
    return (-16);
  } else {

  }
  {
#line 1283
  tmp___1 = kmalloc((unsigned long )len * 4UL, 208U);
#line 1283
  lradc->buffer = (uint32_t *)tmp___1;
  }
#line 1284
  if ((unsigned long )lradc->buffer == (unsigned long )((uint32_t *)0U)) {
#line 1285
    ret = -12;
#line 1286
    goto err_mem;
  } else {

  }
#line 1289
  if ((unsigned int )lradc->soc == 1U) {
    {
#line 1290
    mxs_lradc_reg_clear(lradc, 536805376U, 16U);
    }
  } else {

  }
  {
#line 1292
  mxs_lradc_reg_clear(lradc, 255U, 0U);
#line 1294
  tmp___2 = find_first_bit(iio->active_scan_mask, 16UL);
#line 1294
  chan = (int )tmp___2;
  }
#line 1294
  goto ldv_28197;
  ldv_28196: 
  {
#line 1295
  ctrl4_set = ctrl4_set | (uint32_t )(chan << ofs * 4);
#line 1296
  ctrl4_clr = ctrl4_clr | (uint32_t )(15 << ofs * 4);
#line 1297
  ctrl1_irq = ctrl1_irq | (uint32_t )(1 << (ofs + 16));
#line 1298
  mxs_lradc_reg_wrt(lradc, chan_value, (u32 )((ofs + 5) * 16));
#line 1299
  bitmap_set(& enable, (unsigned int )ofs, 1);
#line 1300
  ofs = ofs + 1;
#line 1294
  tmp___3 = find_next_bit(iio->active_scan_mask, 16UL, (unsigned long )(chan + 1));
#line 1294
  chan = (int )tmp___3;
  }
  ldv_28197: ;
#line 1294
  if (chan <= 15) {
#line 1296
    goto ldv_28196;
  } else {

  }
  {
#line 1303
  mxs_lradc_reg_clear(lradc, 4279238656U, 208U);
#line 1305
  mxs_lradc_reg_clear(lradc, ctrl4_clr, 320U);
#line 1306
  mxs_lradc_reg_set(lradc, ctrl4_set, 320U);
#line 1307
  mxs_lradc_reg_set(lradc, ctrl1_irq, 16U);
#line 1308
  mxs_lradc_reg_set(lradc, (u32 )enable << 24U, 208U);
  }
#line 1311
  return (0);
  err_mem: 
  {
#line 1314
  mutex_unlock(& lradc->lock);
  }
#line 1315
  return (ret);
}
}
#line 1318 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static int mxs_lradc_buffer_postdisable(struct iio_dev *iio ) 
{ 
  struct mxs_lradc *lradc ;
  void *tmp ;

  {
  {
#line 1320
  tmp = iio_priv((struct iio_dev  const  *)iio);
#line 1320
  lradc = (struct mxs_lradc *)tmp;
#line 1322
  mxs_lradc_reg_clear(lradc, 4279238656U, 208U);
#line 1325
  mxs_lradc_reg_clear(lradc, 255U, 0U);
  }
#line 1326
  if ((unsigned int )lradc->soc == 1U) {
    {
#line 1327
    mxs_lradc_reg_clear(lradc, 536805376U, 16U);
    }
  } else {

  }
  {
#line 1330
  kfree((void const   *)lradc->buffer);
#line 1331
  mutex_unlock(& lradc->lock);
  }
#line 1333
  return (0);
}
}
#line 1336 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static bool mxs_lradc_validate_scan_mask(struct iio_dev *iio , unsigned long const   *mask ) 
{ 
  struct mxs_lradc *lradc ;
  void *tmp ;
  int map_chans ;
  int tmp___0 ;
  int rsvd_chans ;
  unsigned long rsvd_mask ;
  int tmp___1 ;

  {
  {
#line 1339
  tmp = iio_priv((struct iio_dev  const  *)iio);
#line 1339
  lradc = (struct mxs_lradc *)tmp;
#line 1340
  tmp___0 = bitmap_weight(mask, 16U);
#line 1340
  map_chans = tmp___0;
#line 1341
  rsvd_chans = 0;
#line 1342
  rsvd_mask = 0UL;
  }
#line 1344
  if ((int )lradc->use_touchbutton) {
#line 1345
    rsvd_mask = rsvd_mask | 3UL;
  } else {

  }
#line 1346
  if ((unsigned int )lradc->use_touchscreen == 1U) {
#line 1347
    rsvd_mask = rsvd_mask | 60UL;
  } else {

  }
#line 1348
  if ((unsigned int )lradc->use_touchscreen == 2U) {
#line 1349
    rsvd_mask = rsvd_mask | 124UL;
  } else {

  }
#line 1351
  if ((int )lradc->use_touchbutton) {
#line 1352
    rsvd_chans = rsvd_chans + 1;
  } else {

  }
#line 1353
  if ((unsigned int )lradc->use_touchscreen != 0U) {
#line 1354
    rsvd_chans = rsvd_chans + 1;
  } else {

  }
  {
#line 1357
  tmp___1 = bitmap_intersects(mask, (unsigned long const   *)(& rsvd_mask), 16U);
  }
#line 1357
  if (tmp___1 != 0) {
#line 1358
    return (0);
  } else {

  }
#line 1361
  if (map_chans + rsvd_chans > 8) {
#line 1362
    return (0);
  } else {

  }
#line 1364
  return (1);
}
}
#line 1367 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static struct iio_buffer_setup_ops  const  mxs_lradc_buffer_ops  =    {& mxs_lradc_buffer_preenable, & iio_triggered_buffer_postenable, & iio_triggered_buffer_predisable,
    & mxs_lradc_buffer_postdisable, & mxs_lradc_validate_scan_mask};
#line 1394 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static struct iio_chan_spec  const  mxs_lradc_chan_spec[15U]  = 
#line 1394
  {      {0, 0, 0, 0UL, 0, {117, 12U, 32U, (unsigned char)0, (unsigned char)0, 0}, 5L,
      0L, 0L, 0L, 0, 0U, 0, 0, 0, 0U, 1U, 0U, 0U}, 
        {0, 1, 0, 1UL, 1, {117, 12U, 32U, (unsigned char)0, (unsigned char)0, 0}, 5L,
      0L, 0L, 0L, 0, 0U, 0, 0, 0, 0U, 1U, 0U, 0U}, 
        {0, 2, 0, 2UL, 2, {117, 12U, 32U, (unsigned char)0, (unsigned char)0, 0}, 5L,
      0L, 0L, 0L, 0, 0U, 0, 0, 0, 0U, 1U, 0U, 0U}, 
        {0, 3, 0, 3UL, 3, {117, 12U, 32U, (unsigned char)0, (unsigned char)0, 0}, 5L,
      0L, 0L, 0L, 0, 0U, 0, 0, 0, 0U, 1U, 0U, 0U}, 
        {0, 4, 0, 4UL, 4, {117, 12U, 32U, (unsigned char)0, (unsigned char)0, 0}, 5L,
      0L, 0L, 0L, 0, 0U, 0, 0, 0, 0U, 1U, 0U, 0U}, 
        {0, 5, 0, 5UL, 5, {117, 12U, 32U, (unsigned char)0, (unsigned char)0, 0}, 5L,
      0L, 0L, 0L, 0, 0U, 0, 0, 0, 0U, 1U, 0U, 0U}, 
        {0, 6, 0, 6UL, 6, {117, 12U, 32U, (unsigned char)0, (unsigned char)0, 0}, 5L,
      0L, 0L, 0L, 0, 0U, 0, 0, 0, 0U, 1U, 0U, 0U}, 
        {0, 7, 0, 7UL, 7, {117, 12U, 32U, (unsigned char)0, (unsigned char)0, 0}, 5L,
      0L, 0L, 0L, 0, 0U, 0, 0, 0, 0U, 1U, 0U, 0U}, 
        {9, 8, 0, 0UL, 8, {117, 18U, 32U, (unsigned char)0, (unsigned char)0, 0}, 13L,
      0L, 0L, 0L, 0, 0U, 0, 0, 0, 0U, 1U, 0U, 0U}, 
        {0, 10, 0, 10UL, 10, {117, 12U, 32U, (unsigned char)0, (unsigned char)0, 0},
      5L, 0L, 0L, 0L, 0, 0U, 0, 0, 0, 0U, 1U, 0U, 0U}, 
        {0, 11, 0, 11UL, 11, {117, 12U, 32U, (unsigned char)0, (unsigned char)0, 0},
      5L, 0L, 0L, 0L, 0, 0U, 0, 0, 0, 0U, 1U, 0U, 0U}, 
        {0, 12, 0, 12UL, 12, {117, 12U, 32U, (unsigned char)0, (unsigned char)0, 0},
      5L, 0L, 0L, 0L, 0, 0U, 0, 0, 0, 0U, 1U, 0U, 0U}, 
        {0, 13, 0, 13UL, 13, {117, 12U, 32U, (unsigned char)0, (unsigned char)0, 0},
      5L, 0L, 0L, 0L, 0, 0U, 0, 0, 0, 0U, 1U, 0U, 0U}, 
        {0, 14, 0, 14UL, 14, {117, 12U, 32U, (unsigned char)0, (unsigned char)0, 0},
      5L, 0L, 0L, 0L, 0, 0U, 0, 0, 0, 0U, 1U, 0U, 0U}, 
        {0, 15, 0, 15UL, 15, {117, 12U, 32U, (unsigned char)0, (unsigned char)0, 0},
      5L, 0L, 0L, 0L, 0, 0U, 0, 0, 0, 0U, 1U, 0U, 0U}};
#line 1422 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static int mxs_lradc_hw_init(struct mxs_lradc *lradc ) 
{ 
  uint32_t adc_cfg ;
  int ret ;
  int tmp ;

  {
  {
#line 1425
  adc_cfg = 65736U;
#line 1429
  tmp = stmp_reset_block(lradc->base);
#line 1429
  ret = tmp;
  }
#line 1430
  if (ret != 0) {
#line 1431
    return (ret);
  } else {

  }
  {
#line 1434
  mxs_lradc_reg_wrt(lradc, adc_cfg, 208U);
#line 1437
  mxs_lradc_reg_wrt(lradc, 0U, 224U);
#line 1438
  mxs_lradc_reg_wrt(lradc, 0U, 240U);
#line 1439
  mxs_lradc_reg_wrt(lradc, 0U, 256U);
  }
#line 1442
  if ((unsigned int )lradc->soc == 1U) {
    {
#line 1443
    mxs_lradc_reg_clear(lradc, 4194304U, 0U);
    }
#line 1446
    if ((unsigned int )lradc->use_touchscreen == 2U) {
      {
#line 1447
      mxs_lradc_reg_set(lradc, 4194304U, 0U);
      }
    } else {

    }
  } else {

  }
  {
#line 1452
  mxs_lradc_reg_wrt(lradc, 0U, 32U);
  }
#line 1454
  return (0);
}
}
#line 1457 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static void mxs_lradc_hw_stop(struct mxs_lradc *lradc ) 
{ 
  int i ;
  u32 tmp ;

  {
  {
#line 1461
  tmp = mxs_lradc_irq_en_mask(lradc);
#line 1461
  mxs_lradc_reg_clear(lradc, tmp, 16U);
#line 1463
  i = 0;
  }
#line 1463
  goto ldv_28223;
  ldv_28222: 
  {
#line 1464
  mxs_lradc_reg_wrt(lradc, 0U, (u32 )((i + 13) * 16));
#line 1463
  i = i + 1;
  }
  ldv_28223: ;
#line 1463
  if (i <= 3) {
#line 1465
    goto ldv_28222;
  } else {

  }

#line 1470
  return;
}
}
#line 1467 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static struct of_device_id  const  mxs_lradc_dt_ids[3U]  = {      {{(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
       (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
       (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
       (char)0, (char)0, (char)0, (char)0, (char)0}, {(char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0},
      {'f', 's', 'l', ',', 'i', 'm', 'x', '2', '3', '-', 'l', 'r', 'a', 'd', 'c',
       '\000'}, (void const   *)0}, 
        {{(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
       (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
       (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
       (char)0, (char)0, (char)0, (char)0, (char)0}, {(char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0},
      {'f', 's', 'l', ',', 'i', 'm', 'x', '2', '8', '-', 'l', 'r', 'a', 'd', 'c',
       '\000'}, (void const   *)1}};
#line 1472 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
struct of_device_id  const  __mod_of__mxs_lradc_dt_ids_device_table  ;
#line 1474 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static int mxs_lradc_probe_touchscreen(struct mxs_lradc *lradc , struct device_node *lradc_node ) 
{ 
  int ret ;
  u32 ts_wires ;
  u32 adapt ;

  {
  {
#line 1478
  ts_wires = 0U;
#line 1480
  ret = of_property_read_u32((struct device_node  const  *)lradc_node, "fsl,lradc-touchscreen-wires",
                             & ts_wires);
  }
#line 1482
  if (ret != 0) {
#line 1483
    return (-19);
  } else {

  }
  {
#line 1486
  if (ts_wires == 4U) {
#line 1486
    goto case_4;
  } else {

  }
#line 1489
  if (ts_wires == 5U) {
#line 1489
    goto case_5;
  } else {

  }
#line 1495
  goto switch_default;
  case_4: /* CIL Label */ 
#line 1487
  lradc->use_touchscreen = 1;
#line 1488
  goto ldv_28235;
  case_5: /* CIL Label */ ;
#line 1490
  if ((unsigned int )lradc->soc == 1U) {
#line 1491
    lradc->use_touchscreen = 2;
#line 1492
    goto ldv_28235;
  } else {

  }
  switch_default: /* CIL Label */ 
  {
#line 1496
  dev_err((struct device  const  *)lradc->dev, "Unsupported number of touchscreen wires (%d)\n",
          ts_wires);
  }
#line 1499
  return (-22);
  switch_break: /* CIL Label */ ;
  }
  ldv_28235: 
  {
#line 1502
  lradc->over_sample_cnt = 4U;
#line 1503
  ret = of_property_read_u32((struct device_node  const  *)lradc_node, "fsl,ave-ctrl",
                             & adapt);
  }
#line 1504
  if (ret == 0) {
#line 1505
    lradc->over_sample_cnt = adapt;
  } else {

  }
  {
#line 1507
  lradc->over_sample_delay = 2U;
#line 1508
  ret = of_property_read_u32((struct device_node  const  *)lradc_node, "fsl,ave-delay",
                             & adapt);
  }
#line 1509
  if (ret == 0) {
#line 1510
    lradc->over_sample_delay = adapt;
  } else {

  }
  {
#line 1512
  lradc->settling_delay = 10U;
#line 1513
  ret = of_property_read_u32((struct device_node  const  *)lradc_node, "fsl,settling",
                             & adapt);
  }
#line 1514
  if (ret == 0) {
#line 1515
    lradc->settling_delay = adapt;
  } else {

  }
#line 1517
  return (0);
}
}
#line 1520 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static int mxs_lradc_probe(struct platform_device *pdev ) 
{ 
  struct of_device_id  const  *of_id ;
  struct of_device_id  const  *tmp ;
  struct mxs_lradc_of_config  const  *of_cfg ;
  struct device *dev ;
  struct device_node *node ;
  struct mxs_lradc *lradc ;
  struct iio_dev *iio ;
  struct resource *iores ;
  int ret ;
  int touch_ret ;
  int i ;
  int s ;
  uint64_t scale_uv ;
  void *tmp___0 ;
  long tmp___1 ;
  bool tmp___2 ;
  long tmp___3 ;
  bool tmp___4 ;
  struct lock_class_key __key ;
  uint32_t __base ;
  uint32_t __rem ;

  {
  {
#line 1522
  tmp = __of_match_device((struct of_device_id  const  *)0, (struct device  const  *)(& pdev->dev));
#line 1522
  of_id = tmp;
#line 1524
  of_cfg = (struct mxs_lradc_of_config  const  *)(& mxs_lradc_of_config) + (unsigned long )((unsigned int )((long )of_id->data));
#line 1526
  dev = & pdev->dev;
#line 1527
  node = dev->of_node;
#line 1531
  ret = 0;
#line 1536
  iio = devm_iio_device_alloc(dev, 688);
  }
#line 1537
  if ((unsigned long )iio == (unsigned long )((struct iio_dev *)0)) {
    {
#line 1538
    dev_err((struct device  const  *)dev, "Failed to allocate IIO device\n");
    }
#line 1539
    return (-12);
  } else {

  }
  {
#line 1542
  tmp___0 = iio_priv((struct iio_dev  const  *)iio);
#line 1542
  lradc = (struct mxs_lradc *)tmp___0;
#line 1543
  lradc->soc = (enum mxs_lradc_id )((long )of_id->data);
#line 1546
  iores = platform_get_resource(pdev, 512U, 0U);
#line 1547
  lradc->dev = & pdev->dev;
#line 1548
  lradc->base = devm_ioremap_resource(dev, iores);
#line 1549
  tmp___2 = IS_ERR((void const   *)lradc->base);
  }
#line 1549
  if ((int )tmp___2) {
    {
#line 1550
    tmp___1 = PTR_ERR((void const   *)lradc->base);
    }
#line 1550
    return ((int )tmp___1);
  } else {

  }
  {
#line 1552
  lradc->clk = devm_clk_get(& pdev->dev, (char const   *)0);
#line 1553
  tmp___4 = IS_ERR((void const   *)lradc->clk);
  }
#line 1553
  if ((int )tmp___4) {
    {
#line 1554
    dev_err((struct device  const  *)dev, "Failed to get the delay unit clock\n");
#line 1555
    tmp___3 = PTR_ERR((void const   *)lradc->clk);
    }
#line 1555
    return ((int )tmp___3);
  } else {

  }
  {
#line 1557
  ret = ldv_clk_prepare_enable_9(lradc->clk);
  }
#line 1558
  if (ret != 0) {
    {
#line 1559
    dev_err((struct device  const  *)dev, "Failed to enable the delay unit clock\n");
    }
#line 1560
    return (ret);
  } else {

  }
  {
#line 1563
  touch_ret = mxs_lradc_probe_touchscreen(lradc, node);
#line 1566
  i = 0;
  }
#line 1566
  goto ldv_28255;
  ldv_28254: 
  {
#line 1567
  lradc->irq[i] = platform_get_irq(pdev, (unsigned int )i);
  }
#line 1568
  if (lradc->irq[i] < 0) {
#line 1569
    ret = lradc->irq[i];
#line 1570
    goto err_clk;
  } else {

  }
  {
#line 1573
  ret = devm_request_irq(dev, (unsigned int )lradc->irq[i], & mxs_lradc_handle_irq,
                         0UL, *(of_cfg->irq_name + (unsigned long )i), (void *)iio);
  }
#line 1576
  if (ret != 0) {
#line 1577
    goto err_clk;
  } else {

  }
#line 1566
  i = i + 1;
  ldv_28255: ;
#line 1566
  if (i < (int )of_cfg->irq_count) {
#line 1568
    goto ldv_28254;
  } else {

  }
  {
#line 1580
  lradc->vref_mv = of_cfg->vref_mv;
#line 1582
  platform_set_drvdata(pdev, (void *)iio);
#line 1584
  init_completion(& lradc->completion);
#line 1585
  __mutex_init(& lradc->lock, "&lradc->lock", & __key);
#line 1587
  iio->name = pdev->name;
#line 1588
  iio->dev.parent = & pdev->dev;
#line 1589
  iio->info = & mxs_lradc_iio_info;
#line 1590
  iio->modes = 1;
#line 1591
  iio->channels = (struct iio_chan_spec  const  *)(& mxs_lradc_chan_spec);
#line 1592
  iio->num_channels = 15;
#line 1593
  iio->masklength = 16U;
#line 1595
  ret = ldv_iio_triggered_buffer_setup_10(iio, & iio_pollfunc_store_time, & mxs_lradc_trigger_handler,
                                          & mxs_lradc_buffer_ops);
  }
#line 1598
  if (ret != 0) {
#line 1599
    goto err_clk;
  } else {

  }
  {
#line 1601
  ret = mxs_lradc_trigger_init(iio);
  }
#line 1602
  if (ret != 0) {
#line 1603
    goto err_trig;
  } else {

  }
#line 1606
  i = 0;
#line 1606
  goto ldv_28270;
  ldv_28269: 
#line 1607
  s = 0;
#line 1607
  goto ldv_28267;
  ldv_28266: 
#line 1617
  scale_uv = (unsigned long long )*(lradc->vref_mv + (unsigned long )i) * 100000000ULL >> (12 - s);
#line 1620
  __base = 100000000U;
#line 1620
  __rem = (uint32_t )(scale_uv % (uint64_t )__base);
#line 1620
  scale_uv = scale_uv / (uint64_t )__base;
#line 1620
  lradc->scale_avail[i][s].nano = __rem * 10U;
#line 1621
  lradc->scale_avail[i][s].integer = (unsigned int )scale_uv;
#line 1607
  s = s + 1;
  ldv_28267: ;
#line 1607
  if ((unsigned int )s <= 1U) {
#line 1609
    goto ldv_28266;
  } else {

  }
#line 1606
  i = i + 1;
  ldv_28270: ;
#line 1606
  if (i <= 15) {
#line 1608
    goto ldv_28269;
  } else {

  }
  {
#line 1626
  ret = mxs_lradc_hw_init(lradc);
  }
#line 1627
  if (ret != 0) {
#line 1628
    goto err_dev;
  } else {

  }
#line 1631
  if (touch_ret == 0) {
    {
#line 1632
    ret = mxs_lradc_ts_register(lradc);
    }
#line 1633
    if (ret != 0) {
#line 1634
      goto err_ts_register;
    } else {

    }
  } else {

  }
  {
#line 1638
  ret = iio_device_register(iio);
  }
#line 1639
  if (ret != 0) {
    {
#line 1640
    dev_err((struct device  const  *)dev, "Failed to register IIO device\n");
    }
#line 1641
    goto err_ts;
  } else {

  }
#line 1644
  return (0);
  err_ts: 
  {
#line 1647
  mxs_lradc_ts_unregister(lradc);
  }
  err_ts_register: 
  {
#line 1649
  mxs_lradc_hw_stop(lradc);
  }
  err_dev: 
  {
#line 1651
  mxs_lradc_trigger_remove(iio);
  }
  err_trig: 
  {
#line 1653
  ldv_iio_triggered_buffer_cleanup_11(iio);
  }
  err_clk: 
  {
#line 1655
  ldv_clk_disable_unprepare_12(lradc->clk);
  }
#line 1656
  return (ret);
}
}
#line 1659 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static int mxs_lradc_remove(struct platform_device *pdev ) 
{ 
  struct iio_dev *iio ;
  void *tmp ;
  struct mxs_lradc *lradc ;
  void *tmp___0 ;

  {
  {
#line 1661
  tmp = platform_get_drvdata((struct platform_device  const  *)pdev);
#line 1661
  iio = (struct iio_dev *)tmp;
#line 1662
  tmp___0 = iio_priv((struct iio_dev  const  *)iio);
#line 1662
  lradc = (struct mxs_lradc *)tmp___0;
#line 1664
  iio_device_unregister(iio);
#line 1665
  mxs_lradc_ts_unregister(lradc);
#line 1666
  mxs_lradc_hw_stop(lradc);
#line 1667
  mxs_lradc_trigger_remove(iio);
#line 1668
  ldv_iio_triggered_buffer_cleanup_13(iio);
#line 1670
  ldv_clk_disable_unprepare_12(lradc->clk);
  }
#line 1671
  return (0);
}
}
#line 1674 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static struct platform_driver mxs_lradc_driver  = 
#line 1674
     {& mxs_lradc_probe, & mxs_lradc_remove, 0, 0, 0, {"mxs-lradc", 0, & __this_module,
                                                     0, (_Bool)0, (struct of_device_id  const  *)(& mxs_lradc_dt_ids),
                                                     0, 0, 0, 0, 0, 0, 0, 0, 0}, 0,
    (_Bool)0};
#line 1684 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static int mxs_lradc_driver_init(void) 
{ 
  int tmp ;

  {
  {
#line 1684
  tmp = ldv___platform_driver_register_15(& mxs_lradc_driver, & __this_module);
  }
#line 1684
  return (tmp);
}
}
#line 1684 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/lkbce/drivers/staging/iio/adc/mxs-lradc.c"
static void mxs_lradc_driver_exit(void) 
{ 


  {
  {
#line 1684
  ldv_platform_driver_unregister_16(& mxs_lradc_driver);
  }
#line 1685
  return;
}
}
#line 57 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_dispatch_deregister_11_1(struct platform_driver *arg0 ) ;
#line 58
void ldv_dispatch_insmod_deregister_12_1(void) ;
#line 59
void ldv_dispatch_insmod_register_12_2(void) ;
#line 60
void ldv_dispatch_irq_deregister_8_1(struct iio_dev *arg0 ) ;
#line 61
void ldv_dispatch_irq_register_10_3(struct iio_dev *arg0 , irqreturn_t (*arg1)(int  ,
                                                                               void * ) ,
                                    irqreturn_t (*arg2)(int  , void * ) ) ;
#line 62
void ldv_dispatch_irq_register_9_3(struct iio_dev *arg0 , irqreturn_t (*arg1)(int  ,
                                                                              void * ) ,
                                   irqreturn_t (*arg2)(int  , void * ) ) ;
#line 63
void ldv_dispatch_pm_deregister_4_5(void) ;
#line 64
void ldv_dispatch_pm_register_4_6(void) ;
#line 65
void ldv_dispatch_register_7_3(struct platform_driver *arg0 ) ;
#line 66
int ldv_emg___platform_driver_register(struct platform_driver *arg0 , struct module *arg1 ) ;
#line 67
void ldv_emg_iio_triggered_buffer_cleanup(struct iio_dev *arg0 ) ;
#line 68
int ldv_emg_iio_triggered_buffer_setup(struct iio_dev *arg0 , irqreturn_t (*arg1)(int  ,
                                                                                  void * ) ,
                                       irqreturn_t (*arg2)(int  , void * ) , struct iio_buffer_setup_ops *arg3 ) ;
#line 69
void ldv_emg_platform_driver_unregister(struct platform_driver *arg0 ) ;
#line 70
void ldv_iio_triggered_buffer_scenario_2(void *arg0 ) ;
#line 71
void ldv_iio_triggered_buffer_scenario_3(void *arg0 ) ;
#line 72
enum irqreturn ldv_iio_triggered_buffer_scenario_handler_2_5(irqreturn_t (*arg0)(int  ,
                                                                                 void * ) ,
                                                             int arg1 , void *arg2 ) ;
#line 73
enum irqreturn ldv_iio_triggered_buffer_scenario_handler_3_5(irqreturn_t (*arg0)(int  ,
                                                                                 void * ) ,
                                                             int arg1 , void *arg2 ) ;
#line 74
void ldv_iio_triggered_buffer_scenario_thread_2_3(irqreturn_t (*arg0)(int  , void * ) ,
                                                  int arg1 , void *arg2 ) ;
#line 75
void ldv_iio_triggered_buffer_scenario_thread_3_3(irqreturn_t (*arg0)(int  , void * ) ,
                                                  int arg1 , void *arg2 ) ;
#line 76
void ldv_insmod_6(void *arg0 ) ;
#line 77
void ldv_insmod_mxs_lradc_driver_exit_6_2(void (*arg0)(void) ) ;
#line 78
int ldv_insmod_mxs_lradc_driver_init_6_6(int (*arg0)(void) ) ;
#line 79
void ldv_main_12(void *arg0 ) ;
#line 80
void ldv_platform_instance_4(void *arg0 ) ;
#line 81
int ldv_platform_instance_probe_4_14(int (*arg0)(struct platform_device * ) , struct platform_device *arg1 ) ;
#line 82
void ldv_platform_instance_release_4_3(int (*arg0)(struct platform_device * ) , struct platform_device *arg1 ) ;
#line 83
void ldv_pm_ops_scenario_5(void *arg0 ) ;
#line 84
void ldv_pm_ops_scenario_complete_5_3(void (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 85
void ldv_pm_ops_scenario_freeze_5_15(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 86
void ldv_pm_ops_scenario_freeze_late_5_14(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 87
void ldv_pm_ops_scenario_freeze_noirq_5_12(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 88
void ldv_pm_ops_scenario_poweroff_5_9(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 89
void ldv_pm_ops_scenario_poweroff_late_5_8(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 90
void ldv_pm_ops_scenario_poweroff_noirq_5_6(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 91
void ldv_pm_ops_scenario_prepare_5_22(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 92
void ldv_pm_ops_scenario_restore_5_4(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 93
void ldv_pm_ops_scenario_restore_early_5_7(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 94
void ldv_pm_ops_scenario_restore_noirq_5_5(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 95
void ldv_pm_ops_scenario_resume_5_16(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 96
void ldv_pm_ops_scenario_resume_early_5_17(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 97
void ldv_pm_ops_scenario_resume_noirq_5_19(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 98
void ldv_pm_ops_scenario_runtime_idle_5_27(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 99
void ldv_pm_ops_scenario_runtime_resume_5_24(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 100
void ldv_pm_ops_scenario_runtime_suspend_5_25(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 101
void ldv_pm_ops_scenario_suspend_5_21(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 102
void ldv_pm_ops_scenario_suspend_late_5_18(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 103
void ldv_pm_ops_scenario_suspend_noirq_5_20(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 104
void ldv_pm_ops_scenario_thaw_5_10(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 105
void ldv_pm_ops_scenario_thaw_early_5_13(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 106
void ldv_pm_ops_scenario_thaw_noirq_5_11(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 107
int main(void) ;
#line 115 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_dispatch_deregister_11_1(struct platform_driver *arg0 ) 
{ 


  {
#line 118
  return;
}
}
#line 122 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_dispatch_insmod_deregister_12_1(void) 
{ 


  {
#line 125
  return;
}
}
#line 129 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_dispatch_insmod_register_12_2(void) 
{ 
  struct ldv_struct_platform_instance_4 *cf_arg_6 ;
  void *tmp ;

  {
  {
#line 131
  tmp = ldv_xmalloc(16UL);
#line 131
  cf_arg_6 = (struct ldv_struct_platform_instance_4 *)tmp;
#line 132
  ldv_insmod_6((void *)cf_arg_6);
  }
#line 133
  return;
}
}
#line 137 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_dispatch_irq_deregister_8_1(struct iio_dev *arg0 ) 
{ 
  int tmp ;

  {
  {
#line 140
  tmp = ldv_undef_int();
  }
#line 146
  return;
}
}
#line 150 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_dispatch_irq_register_10_3(struct iio_dev *arg0 , irqreturn_t (*arg1)(int  ,
                                                                               void * ) ,
                                    irqreturn_t (*arg2)(int  , void * ) ) 
{ 
  struct ldv_struct_iio_triggered_buffer_scenario_2 *cf_arg_2 ;
  struct ldv_struct_iio_triggered_buffer_scenario_2 *cf_arg_3 ;
  void *tmp ;
  void *tmp___0 ;
  int tmp___1 ;

  {
  {
#line 153
  tmp___1 = ldv_undef_int();
  }
#line 153
  if (tmp___1 != 0) {
    {
#line 154
    tmp = ldv_xmalloc(32UL);
#line 154
    cf_arg_2 = (struct ldv_struct_iio_triggered_buffer_scenario_2 *)tmp;
#line 155
    cf_arg_2->arg0 = arg0;
#line 156
    cf_arg_2->arg1 = arg1;
#line 157
    cf_arg_2->arg2 = arg2;
#line 158
    ldv_iio_triggered_buffer_scenario_2((void *)cf_arg_2);
    }
  } else {
    {
#line 161
    tmp___0 = ldv_xmalloc(32UL);
#line 161
    cf_arg_3 = (struct ldv_struct_iio_triggered_buffer_scenario_2 *)tmp___0;
#line 162
    cf_arg_3->arg0 = arg0;
#line 163
    cf_arg_3->arg1 = arg1;
#line 164
    cf_arg_3->arg2 = arg2;
#line 165
    ldv_iio_triggered_buffer_scenario_3((void *)cf_arg_3);
    }
  }
#line 167
  return;
}
}
#line 171 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_dispatch_irq_register_9_3(struct iio_dev *arg0 , irqreturn_t (*arg1)(int  ,
                                                                              void * ) ,
                                   irqreturn_t (*arg2)(int  , void * ) ) 
{ 
  struct ldv_struct_iio_triggered_buffer_scenario_2 *cf_arg_2 ;
  struct ldv_struct_iio_triggered_buffer_scenario_2 *cf_arg_3 ;
  void *tmp ;
  void *tmp___0 ;
  int tmp___1 ;

  {
  {
#line 174
  tmp___1 = ldv_undef_int();
  }
#line 174
  if (tmp___1 != 0) {
    {
#line 175
    tmp = ldv_xmalloc(32UL);
#line 175
    cf_arg_2 = (struct ldv_struct_iio_triggered_buffer_scenario_2 *)tmp;
#line 176
    cf_arg_2->arg0 = arg0;
#line 177
    cf_arg_2->arg1 = arg1;
#line 178
    cf_arg_2->arg2 = arg2;
#line 179
    ldv_iio_triggered_buffer_scenario_2((void *)cf_arg_2);
    }
  } else {
    {
#line 182
    tmp___0 = ldv_xmalloc(32UL);
#line 182
    cf_arg_3 = (struct ldv_struct_iio_triggered_buffer_scenario_2 *)tmp___0;
#line 183
    cf_arg_3->arg0 = arg0;
#line 184
    cf_arg_3->arg1 = arg1;
#line 185
    cf_arg_3->arg2 = arg2;
#line 186
    ldv_iio_triggered_buffer_scenario_3((void *)cf_arg_3);
    }
  }
#line 188
  return;
}
}
#line 192 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_dispatch_pm_deregister_4_5(void) 
{ 


  {
#line 195
  return;
}
}
#line 199 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_dispatch_pm_register_4_6(void) 
{ 
  struct ldv_struct_platform_instance_4 *cf_arg_5 ;
  void *tmp ;

  {
  {
#line 201
  tmp = ldv_xmalloc(16UL);
#line 201
  cf_arg_5 = (struct ldv_struct_platform_instance_4 *)tmp;
#line 202
  ldv_pm_ops_scenario_5((void *)cf_arg_5);
  }
#line 203
  return;
}
}
#line 207 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_dispatch_register_7_3(struct platform_driver *arg0 ) 
{ 
  struct ldv_struct_platform_instance_4 *cf_arg_4 ;
  void *tmp ;

  {
  {
#line 209
  tmp = ldv_xmalloc(16UL);
#line 209
  cf_arg_4 = (struct ldv_struct_platform_instance_4 *)tmp;
#line 210
  cf_arg_4->arg0 = arg0;
#line 211
  ldv_platform_instance_4((void *)cf_arg_4);
  }
#line 212
  return;
}
}
#line 216 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
int ldv_emg___platform_driver_register(struct platform_driver *arg0 , struct module *arg1 ) 
{ 
  struct platform_driver *ldv_7_platform_driver_platform_driver ;
  int tmp ;
  int tmp___0 ;

  {
  {
#line 223
  tmp___0 = ldv_undef_int();
  }
#line 223
  if (tmp___0 != 0) {
    {
#line 225
    ldv_7_platform_driver_platform_driver = arg0;
#line 229
    ldv_dispatch_register_7_3(ldv_7_platform_driver_platform_driver);
    }
#line 233
    return (0);
  } else {
    {
#line 240
    tmp = ldv_undef_int_negative();
    }
#line 240
    return (tmp);
  }
}
}
#line 250 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_emg_iio_triggered_buffer_cleanup(struct iio_dev *arg0 ) 
{ 
  struct iio_dev *ldv_8_dev_dev ;

  {
  {
#line 256
  ldv_8_dev_dev = arg0;
#line 260
  ldv_dispatch_irq_deregister_8_1(ldv_8_dev_dev);
  }
#line 264
  return;
#line 266
  return;
}
}
#line 271 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
int ldv_emg_iio_triggered_buffer_setup(struct iio_dev *arg0 , irqreturn_t (*arg1)(int  ,
                                                                                  void * ) ,
                                       irqreturn_t (*arg2)(int  , void * ) , struct iio_buffer_setup_ops *arg3 ) 
{ 
  irqreturn_t (*ldv_10_callback_handler)(int  , void * ) ;
  struct iio_dev *ldv_10_dev_dev ;
  irqreturn_t (*ldv_10_thread_thread)(int  , void * ) ;
  int tmp ;
  int tmp___0 ;

  {
  {
#line 280
  tmp___0 = ldv_undef_int();
  }
#line 280
  if (tmp___0 != 0) {
    {
#line 282
    ldv_10_dev_dev = arg0;
#line 283
    ldv_10_callback_handler = arg1;
#line 284
    ldv_10_thread_thread = arg2;
#line 288
    ldv_dispatch_irq_register_10_3(ldv_10_dev_dev, ldv_10_callback_handler, ldv_10_thread_thread);
    }
#line 292
    return (0);
  } else {
    {
#line 299
    tmp = ldv_undef_int_negative();
    }
#line 299
    return (tmp);
  }
}
}
#line 309 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_emg_platform_driver_unregister(struct platform_driver *arg0 ) 
{ 
  struct platform_driver *ldv_11_platform_driver_platform_driver ;

  {
  {
#line 315
  ldv_11_platform_driver_platform_driver = arg0;
#line 319
  ldv_dispatch_deregister_11_1(ldv_11_platform_driver_platform_driver);
  }
#line 323
  return;
#line 325
  return;
}
}
#line 330 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_iio_triggered_buffer_scenario_2(void *arg0 ) 
{ 
  irqreturn_t (*ldv_2_callback_handler)(int  , void * ) ;
  void *ldv_2_data_data ;
  struct iio_dev *ldv_2_dev_dev ;
  int ldv_2_line_line ;
  enum irqreturn ldv_2_ret_val_default ;
  irqreturn_t (*ldv_2_thread_thread)(int  , void * ) ;
  struct ldv_struct_iio_triggered_buffer_scenario_2 *data ;
  int tmp ;

  {
#line 340
  data = (struct ldv_struct_iio_triggered_buffer_scenario_2 *)arg0;
#line 345
  if ((unsigned long )data != (unsigned long )((struct ldv_struct_iio_triggered_buffer_scenario_2 *)0)) {
    {
#line 346
    ldv_2_dev_dev = data->arg0;
#line 347
    ldv_2_callback_handler = data->arg1;
#line 348
    ldv_2_thread_thread = data->arg2;
#line 349
    ldv_free((void *)data);
    }
  } else {

  }
  {
#line 355
  ldv_switch_to_interrupt_context();
#line 357
  ldv_2_ret_val_default = ldv_iio_triggered_buffer_scenario_handler_2_5(ldv_2_callback_handler,
                                                                        ldv_2_line_line,
                                                                        ldv_2_data_data);
#line 359
  ldv_switch_to_process_context();
#line 362
  tmp = ldv_undef_int();
  }
#line 362
  if (tmp != 0) {
    {
#line 364
    __VERIFIER_assume((unsigned int )ldv_2_ret_val_default == 2U);
#line 369
    ldv_iio_triggered_buffer_scenario_thread_2_3(ldv_2_thread_thread, ldv_2_line_line,
                                                 ldv_2_data_data);
    }
  } else {
    {
#line 375
    __VERIFIER_assume((unsigned int )ldv_2_ret_val_default != 2U);
    }
  }
#line 384
  return;
#line 386
  return;
}
}
#line 391 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_iio_triggered_buffer_scenario_3(void *arg0 ) 
{ 
  irqreturn_t (*ldv_3_callback_handler)(int  , void * ) ;
  void *ldv_3_data_data ;
  struct iio_dev *ldv_3_dev_dev ;
  int ldv_3_line_line ;
  enum irqreturn ldv_3_ret_val_default ;
  irqreturn_t (*ldv_3_thread_thread)(int  , void * ) ;
  struct ldv_struct_iio_triggered_buffer_scenario_2 *data ;
  int tmp ;

  {
#line 401
  data = (struct ldv_struct_iio_triggered_buffer_scenario_2 *)arg0;
#line 406
  if ((unsigned long )data != (unsigned long )((struct ldv_struct_iio_triggered_buffer_scenario_2 *)0)) {
    {
#line 407
    ldv_3_dev_dev = data->arg0;
#line 408
    ldv_3_callback_handler = data->arg1;
#line 409
    ldv_3_thread_thread = data->arg2;
#line 410
    ldv_free((void *)data);
    }
  } else {

  }
  {
#line 416
  ldv_switch_to_interrupt_context();
#line 418
  ldv_3_ret_val_default = ldv_iio_triggered_buffer_scenario_handler_3_5(ldv_3_callback_handler,
                                                                        ldv_3_line_line,
                                                                        ldv_3_data_data);
#line 420
  ldv_switch_to_process_context();
#line 423
  tmp = ldv_undef_int();
  }
#line 423
  if (tmp != 0) {
    {
#line 425
    __VERIFIER_assume((unsigned int )ldv_3_ret_val_default == 2U);
#line 430
    ldv_iio_triggered_buffer_scenario_thread_3_3(ldv_3_thread_thread, ldv_3_line_line,
                                                 ldv_3_data_data);
    }
  } else {
    {
#line 436
    __VERIFIER_assume((unsigned int )ldv_3_ret_val_default != 2U);
    }
  }
#line 445
  return;
#line 447
  return;
}
}
#line 452 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
enum irqreturn ldv_iio_triggered_buffer_scenario_handler_2_5(irqreturn_t (*arg0)(int  ,
                                                                                 void * ) ,
                                                             int arg1 , void *arg2 ) 
{ 
  irqreturn_t tmp ;

  {
  {
#line 453
  tmp = iio_pollfunc_store_time(arg1, arg2);
  }
#line 453
  return (tmp);
}
}
#line 457 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
enum irqreturn ldv_iio_triggered_buffer_scenario_handler_3_5(irqreturn_t (*arg0)(int  ,
                                                                                 void * ) ,
                                                             int arg1 , void *arg2 ) 
{ 
  irqreturn_t tmp ;

  {
  {
#line 458
  tmp = mxs_lradc_handle_irq(arg1, arg2);
  }
#line 458
  return (tmp);
}
}
#line 462 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_iio_triggered_buffer_scenario_thread_2_3(irqreturn_t (*arg0)(int  , void * ) ,
                                                  int arg1 , void *arg2 ) 
{ 


  {
  {
#line 463
  mxs_lradc_trigger_handler(arg1, arg2);
  }
#line 464
  return;
}
}
#line 467 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_iio_triggered_buffer_scenario_thread_3_3(irqreturn_t (*arg0)(int  , void * ) ,
                                                  int arg1 , void *arg2 ) 
{ 


  {
  {
#line 468
  mxs_lradc_trigger_handler(arg1, arg2);
  }
#line 469
  return;
}
}
#line 472 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_insmod_6(void *arg0 ) 
{ 
  void (*ldv_6_mxs_lradc_driver_exit_default)(void) ;
  int (*ldv_6_mxs_lradc_driver_init_default)(void) ;
  int ldv_6_ret_default ;
  int tmp ;

  {
  {
#line 480
  ldv_free(arg0);
#line 485
  ldv_6_ret_default = ldv_insmod_mxs_lradc_driver_init_6_6(ldv_6_mxs_lradc_driver_init_default);
#line 487
  ldv_6_ret_default = ldv_post_init(ldv_6_ret_default);
#line 490
  tmp = ldv_undef_int();
  }
#line 490
  if (tmp != 0) {
    {
#line 492
    __VERIFIER_assume(ldv_6_ret_default != 0);
    }
#line 500
    return;
  } else {
    {
#line 504
    __VERIFIER_assume(ldv_6_ret_default == 0);
#line 509
    ldv_insmod_mxs_lradc_driver_exit_6_2(ldv_6_mxs_lradc_driver_exit_default);
    }
#line 517
    return;
  }
#line 520
  return;
}
}
#line 525 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_insmod_mxs_lradc_driver_exit_6_2(void (*arg0)(void) ) 
{ 


  {
  {
#line 526
  mxs_lradc_driver_exit();
  }
#line 527
  return;
}
}
#line 530 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
int ldv_insmod_mxs_lradc_driver_init_6_6(int (*arg0)(void) ) 
{ 
  int tmp ;

  {
  {
#line 531
  tmp = mxs_lradc_driver_init();
  }
#line 531
  return (tmp);
}
}
#line 535 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_main_12(void *arg0 ) 
{ 


  {
  {
#line 540
  ldv_dispatch_insmod_register_12_2();
#line 544
  ldv_dispatch_insmod_deregister_12_1();
  }
#line 548
  return;
#line 550
  return;
}
}
#line 555 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_platform_instance_4(void *arg0 ) 
{ 
  struct platform_driver *ldv_4_container_platform_driver ;
  int ldv_4_probed_default ;
  struct platform_device *ldv_4_resource_platform_device ;
  struct ldv_struct_platform_instance_4 *data ;
  void *tmp ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;

  {
  {
#line 562
  data = (struct ldv_struct_platform_instance_4 *)arg0;
#line 566
  ldv_4_probed_default = ldv_undef_int();
  }
#line 569
  if ((unsigned long )data != (unsigned long )((struct ldv_struct_platform_instance_4 *)0)) {
    {
#line 570
    ldv_4_container_platform_driver = data->arg0;
#line 571
    ldv_free((void *)data);
    }
  } else {

  }
  {
#line 576
  tmp = ldv_xmalloc(1472UL);
#line 576
  ldv_4_resource_platform_device = (struct platform_device *)tmp;
  }
#line 583
  goto ldv_main_4;
#line 585
  return;
  ldv_main_4: 
  {
#line 591
  tmp___1 = ldv_undef_int();
  }
#line 591
  if (tmp___1 != 0) {
    {
#line 594
    ldv_pre_probe();
#line 596
    ldv_4_probed_default = ldv_platform_instance_probe_4_14(ldv_4_container_platform_driver->probe,
                                                            ldv_4_resource_platform_device);
#line 598
    ldv_4_probed_default = ldv_post_probe(ldv_4_probed_default);
#line 601
    tmp___0 = ldv_undef_int();
    }
#line 601
    if (tmp___0 != 0) {
      {
#line 603
      __VERIFIER_assume(ldv_4_probed_default == 0);
      }
#line 610
      goto ldv_call_4;
    } else {
      {
#line 614
      __VERIFIER_assume(ldv_4_probed_default != 0);
      }
#line 621
      goto ldv_main_4;
    }
  } else {
    {
#line 626
    ldv_free((void *)ldv_4_resource_platform_device);
    }
#line 634
    return;
  }
#line 637
  return;
  ldv_call_4: 
  {
#line 643
  tmp___2 = ldv_undef_int();
  }
  {
#line 644
  if (tmp___2 == 1) {
#line 644
    goto case_1;
  } else {

  }
#line 656
  if (tmp___2 == 2) {
#line 656
    goto case_2;
  } else {

  }
#line 672
  if (tmp___2 == 3) {
#line 672
    goto case_3;
  } else {

  }
#line 689
  goto switch_default;
  case_1: /* CIL Label */ ;
#line 653
  goto ldv_call_4;
  case_2: /* CIL Label */ 
  {
#line 658
  ldv_dispatch_pm_register_4_6();
#line 662
  ldv_dispatch_pm_deregister_4_5();
  }
#line 669
  goto ldv_call_4;
  case_3: /* CIL Label */ 
  {
#line 675
  ldv_platform_instance_release_4_3(ldv_4_container_platform_driver->remove, ldv_4_resource_platform_device);
#line 679
  ldv_4_probed_default = 1;
  }
#line 686
  goto ldv_main_4;
  switch_default: /* CIL Label */ 
  {
#line 689
  __VERIFIER_assume(0);
  }
  switch_break: /* CIL Label */ ;
  }
#line 692
  return;
}
}
#line 697 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
int ldv_platform_instance_probe_4_14(int (*arg0)(struct platform_device * ) , struct platform_device *arg1 ) 
{ 
  int tmp ;

  {
  {
#line 698
  tmp = mxs_lradc_probe(arg1);
  }
#line 698
  return (tmp);
}
}
#line 702 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_platform_instance_release_4_3(int (*arg0)(struct platform_device * ) , struct platform_device *arg1 ) 
{ 


  {
  {
#line 703
  mxs_lradc_remove(arg1);
  }
#line 704
  return;
}
}
#line 707 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_pm_ops_scenario_5(void *arg0 ) 
{ 
  struct device *ldv_5_device_device ;
  struct dev_pm_ops *ldv_5_pm_ops_dev_pm_ops ;
  int tmp ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  int tmp___3 ;

  {
  {
#line 714
  ldv_free(arg0);
  }
#line 721
  goto ldv_do_5;
#line 723
  return;
  ldv_do_5: 
  {
#line 729
  tmp = ldv_undef_int();
  }
  {
#line 730
  if (tmp == 1) {
#line 730
    goto case_1;
  } else {

  }
#line 745
  if (tmp == 2) {
#line 745
    goto case_2;
  } else {

  }
#line 767
  if (tmp == 3) {
#line 767
    goto case_3;
  } else {

  }
#line 939
  if (tmp == 4) {
#line 939
    goto case_4;
  } else {

  }
#line 948
  goto switch_default___0;
  case_1: /* CIL Label */ ;
#line 732
  if ((unsigned long )ldv_5_pm_ops_dev_pm_ops->runtime_idle != (unsigned long )((int (*)(struct device * ))0)) {
    {
#line 734
    ldv_pm_ops_scenario_runtime_idle_5_27(ldv_5_pm_ops_dev_pm_ops->runtime_idle, ldv_5_device_device);
    }
  } else {

  }
#line 742
  goto ldv_do_5;
  case_2: /* CIL Label */ ;
#line 747
  if ((unsigned long )ldv_5_pm_ops_dev_pm_ops->runtime_suspend != (unsigned long )((int (*)(struct device * ))0)) {
    {
#line 749
    ldv_pm_ops_scenario_runtime_suspend_5_25(ldv_5_pm_ops_dev_pm_ops->runtime_suspend,
                                             ldv_5_device_device);
    }
  } else {

  }
#line 754
  if ((unsigned long )ldv_5_pm_ops_dev_pm_ops->runtime_resume != (unsigned long )((int (*)(struct device * ))0)) {
    {
#line 756
    ldv_pm_ops_scenario_runtime_resume_5_24(ldv_5_pm_ops_dev_pm_ops->runtime_resume,
                                            ldv_5_device_device);
    }
  } else {

  }
#line 764
  goto ldv_do_5;
  case_3: /* CIL Label */ ;
#line 769
  if ((unsigned long )ldv_5_pm_ops_dev_pm_ops->prepare != (unsigned long )((int (*)(struct device * ))0)) {
    {
#line 771
    ldv_pm_ops_scenario_prepare_5_22(ldv_5_pm_ops_dev_pm_ops->prepare, ldv_5_device_device);
    }
  } else {

  }
  {
#line 775
  tmp___0 = ldv_undef_int();
  }
  {
#line 776
  if (tmp___0 == 1) {
#line 776
    goto case_1___0;
  } else {

  }
#line 825
  if (tmp___0 == 2) {
#line 825
    goto case_2___0;
  } else {

  }
#line 874
  if (tmp___0 == 3) {
#line 874
    goto case_3___0;
  } else {

  }
#line 923
  goto switch_default;
  case_1___0: /* CIL Label */ ;
#line 778
  if ((unsigned long )ldv_5_pm_ops_dev_pm_ops->suspend != (unsigned long )((int (*)(struct device * ))0)) {
    {
#line 780
    ldv_pm_ops_scenario_suspend_5_21(ldv_5_pm_ops_dev_pm_ops->suspend, ldv_5_device_device);
    }
  } else {

  }
  {
#line 784
  tmp___1 = ldv_undef_int();
  }
#line 784
  if (tmp___1 != 0) {
#line 786
    if ((unsigned long )ldv_5_pm_ops_dev_pm_ops->suspend_noirq != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 788
      ldv_pm_ops_scenario_suspend_noirq_5_20(ldv_5_pm_ops_dev_pm_ops->suspend_noirq,
                                             ldv_5_device_device);
      }
    } else {

    }
#line 793
    if ((unsigned long )ldv_5_pm_ops_dev_pm_ops->resume_noirq != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 795
      ldv_pm_ops_scenario_resume_noirq_5_19(ldv_5_pm_ops_dev_pm_ops->resume_noirq,
                                            ldv_5_device_device);
      }
    } else {

    }
  } else {
#line 802
    if ((unsigned long )ldv_5_pm_ops_dev_pm_ops->suspend_late != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 804
      ldv_pm_ops_scenario_suspend_late_5_18(ldv_5_pm_ops_dev_pm_ops->suspend_late,
                                            ldv_5_device_device);
      }
    } else {

    }
#line 809
    if ((unsigned long )ldv_5_pm_ops_dev_pm_ops->resume_early != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 811
      ldv_pm_ops_scenario_resume_early_5_17(ldv_5_pm_ops_dev_pm_ops->resume_early,
                                            ldv_5_device_device);
      }
    } else {

    }
  }
#line 817
  if ((unsigned long )ldv_5_pm_ops_dev_pm_ops->resume != (unsigned long )((int (*)(struct device * ))0)) {
    {
#line 819
    ldv_pm_ops_scenario_resume_5_16(ldv_5_pm_ops_dev_pm_ops->resume, ldv_5_device_device);
    }
  } else {

  }
#line 823
  goto ldv_28691;
  case_2___0: /* CIL Label */ ;
#line 827
  if ((unsigned long )ldv_5_pm_ops_dev_pm_ops->freeze != (unsigned long )((int (*)(struct device * ))0)) {
    {
#line 829
    ldv_pm_ops_scenario_freeze_5_15(ldv_5_pm_ops_dev_pm_ops->freeze, ldv_5_device_device);
    }
  } else {

  }
  {
#line 833
  tmp___2 = ldv_undef_int();
  }
#line 833
  if (tmp___2 != 0) {
#line 835
    if ((unsigned long )ldv_5_pm_ops_dev_pm_ops->freeze_late != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 837
      ldv_pm_ops_scenario_freeze_late_5_14(ldv_5_pm_ops_dev_pm_ops->freeze_late, ldv_5_device_device);
      }
    } else {

    }
#line 842
    if ((unsigned long )ldv_5_pm_ops_dev_pm_ops->thaw_early != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 844
      ldv_pm_ops_scenario_thaw_early_5_13(ldv_5_pm_ops_dev_pm_ops->thaw_early, ldv_5_device_device);
      }
    } else {

    }
  } else {
#line 851
    if ((unsigned long )ldv_5_pm_ops_dev_pm_ops->freeze_noirq != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 853
      ldv_pm_ops_scenario_freeze_noirq_5_12(ldv_5_pm_ops_dev_pm_ops->freeze_noirq,
                                            ldv_5_device_device);
      }
    } else {

    }
#line 858
    if ((unsigned long )ldv_5_pm_ops_dev_pm_ops->thaw_noirq != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 860
      ldv_pm_ops_scenario_thaw_noirq_5_11(ldv_5_pm_ops_dev_pm_ops->thaw_noirq, ldv_5_device_device);
      }
    } else {

    }
  }
#line 866
  if ((unsigned long )ldv_5_pm_ops_dev_pm_ops->thaw != (unsigned long )((int (*)(struct device * ))0)) {
    {
#line 868
    ldv_pm_ops_scenario_thaw_5_10(ldv_5_pm_ops_dev_pm_ops->thaw, ldv_5_device_device);
    }
  } else {

  }
#line 872
  goto ldv_28691;
  case_3___0: /* CIL Label */ ;
#line 876
  if ((unsigned long )ldv_5_pm_ops_dev_pm_ops->poweroff != (unsigned long )((int (*)(struct device * ))0)) {
    {
#line 878
    ldv_pm_ops_scenario_poweroff_5_9(ldv_5_pm_ops_dev_pm_ops->poweroff, ldv_5_device_device);
    }
  } else {

  }
  {
#line 882
  tmp___3 = ldv_undef_int();
  }
#line 882
  if (tmp___3 != 0) {
#line 884
    if ((unsigned long )ldv_5_pm_ops_dev_pm_ops->poweroff_late != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 886
      ldv_pm_ops_scenario_poweroff_late_5_8(ldv_5_pm_ops_dev_pm_ops->poweroff_late,
                                            ldv_5_device_device);
      }
    } else {

    }
#line 891
    if ((unsigned long )ldv_5_pm_ops_dev_pm_ops->restore_early != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 893
      ldv_pm_ops_scenario_restore_early_5_7(ldv_5_pm_ops_dev_pm_ops->restore_early,
                                            ldv_5_device_device);
      }
    } else {

    }
  } else {
#line 900
    if ((unsigned long )ldv_5_pm_ops_dev_pm_ops->poweroff_noirq != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 902
      ldv_pm_ops_scenario_poweroff_noirq_5_6(ldv_5_pm_ops_dev_pm_ops->poweroff_noirq,
                                             ldv_5_device_device);
      }
    } else {

    }
#line 907
    if ((unsigned long )ldv_5_pm_ops_dev_pm_ops->restore_noirq != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 909
      ldv_pm_ops_scenario_restore_noirq_5_5(ldv_5_pm_ops_dev_pm_ops->restore_noirq,
                                            ldv_5_device_device);
      }
    } else {

    }
  }
#line 915
  if ((unsigned long )ldv_5_pm_ops_dev_pm_ops->restore != (unsigned long )((int (*)(struct device * ))0)) {
    {
#line 917
    ldv_pm_ops_scenario_restore_5_4(ldv_5_pm_ops_dev_pm_ops->restore, ldv_5_device_device);
    }
  } else {

  }
#line 921
  goto ldv_28691;
  switch_default: /* CIL Label */ 
  {
#line 923
  __VERIFIER_assume(0);
  }
  switch_break___0: /* CIL Label */ ;
  }
  ldv_28691: ;
#line 926
  if ((unsigned long )ldv_5_pm_ops_dev_pm_ops->complete != (unsigned long )((void (*)(struct device * ))0)) {
    {
#line 928
    ldv_pm_ops_scenario_complete_5_3(ldv_5_pm_ops_dev_pm_ops->complete, ldv_5_device_device);
    }
  } else {

  }
#line 936
  goto ldv_do_5;
  case_4: /* CIL Label */ ;
#line 945
  return;
  switch_default___0: /* CIL Label */ 
  {
#line 948
  __VERIFIER_assume(0);
  }
  switch_break: /* CIL Label */ ;
  }
#line 951
  return;
}
}
#line 956 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_pm_ops_scenario_complete_5_3(void (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 957
  (*arg0)(arg1);
  }
#line 958
  return;
}
}
#line 961 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_pm_ops_scenario_freeze_5_15(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 962
  (*arg0)(arg1);
  }
#line 963
  return;
}
}
#line 966 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_pm_ops_scenario_freeze_late_5_14(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 967
  (*arg0)(arg1);
  }
#line 968
  return;
}
}
#line 971 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_pm_ops_scenario_freeze_noirq_5_12(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 972
  (*arg0)(arg1);
  }
#line 973
  return;
}
}
#line 976 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_pm_ops_scenario_poweroff_5_9(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 977
  (*arg0)(arg1);
  }
#line 978
  return;
}
}
#line 981 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_pm_ops_scenario_poweroff_late_5_8(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 982
  (*arg0)(arg1);
  }
#line 983
  return;
}
}
#line 986 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_pm_ops_scenario_poweroff_noirq_5_6(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 987
  (*arg0)(arg1);
  }
#line 988
  return;
}
}
#line 991 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_pm_ops_scenario_prepare_5_22(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 992
  (*arg0)(arg1);
  }
#line 993
  return;
}
}
#line 996 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_pm_ops_scenario_restore_5_4(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 997
  (*arg0)(arg1);
  }
#line 998
  return;
}
}
#line 1001 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_pm_ops_scenario_restore_early_5_7(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1002
  (*arg0)(arg1);
  }
#line 1003
  return;
}
}
#line 1006 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_pm_ops_scenario_restore_noirq_5_5(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1007
  (*arg0)(arg1);
  }
#line 1008
  return;
}
}
#line 1011 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_pm_ops_scenario_resume_5_16(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1012
  (*arg0)(arg1);
  }
#line 1013
  return;
}
}
#line 1016 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_pm_ops_scenario_resume_early_5_17(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1017
  (*arg0)(arg1);
  }
#line 1018
  return;
}
}
#line 1021 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_pm_ops_scenario_resume_noirq_5_19(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1022
  (*arg0)(arg1);
  }
#line 1023
  return;
}
}
#line 1026 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_pm_ops_scenario_runtime_idle_5_27(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1027
  (*arg0)(arg1);
  }
#line 1028
  return;
}
}
#line 1031 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_pm_ops_scenario_runtime_resume_5_24(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1032
  (*arg0)(arg1);
  }
#line 1033
  return;
}
}
#line 1036 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_pm_ops_scenario_runtime_suspend_5_25(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1037
  (*arg0)(arg1);
  }
#line 1038
  return;
}
}
#line 1041 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_pm_ops_scenario_suspend_5_21(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1042
  (*arg0)(arg1);
  }
#line 1043
  return;
}
}
#line 1046 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_pm_ops_scenario_suspend_late_5_18(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1047
  (*arg0)(arg1);
  }
#line 1048
  return;
}
}
#line 1051 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_pm_ops_scenario_suspend_noirq_5_20(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1052
  (*arg0)(arg1);
  }
#line 1053
  return;
}
}
#line 1056 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_pm_ops_scenario_thaw_5_10(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1057
  (*arg0)(arg1);
  }
#line 1058
  return;
}
}
#line 1061 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_pm_ops_scenario_thaw_early_5_13(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1062
  (*arg0)(arg1);
  }
#line 1063
  return;
}
}
#line 1066 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
void ldv_pm_ops_scenario_thaw_noirq_5_11(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 1067
  (*arg0)(arg1);
  }
#line 1068
  return;
}
}
#line 1071 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
int main(void) 
{ 


  {
  {
#line 1074
  ldv_initialize();
#line 1077
  ldv_main_12((void *)0);
#line 1080
  ldv_check_final_state();
  }
#line 1082
  return (0);
}
}
#line 1095 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
__inline static long PTR_ERR(void const   *ptr ) 
{ 
  long tmp ;

  {
  {
#line 1098
  tmp = ldv_ptr_err(ptr);
  }
#line 1098
  return (tmp);
}
}
#line 1102 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
__inline static void *kmalloc(size_t size , gfp_t flags ) 
{ 
  void *tmp ;

  {
  {
#line 1105
  tmp = ldv_kmalloc(size, flags);
  }
#line 1105
  return (tmp);
}
}
#line 1144 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
__inline static int ldv_clk_prepare_enable_9(struct clk *clk ) 
{ 
  int tmp ;

  {
  {
#line 1147
  tmp = ldv_clk_enable_clk_of_mxs_lradc();
  }
#line 1147
  return (tmp);
}
}
#line 1151 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
static int ldv_iio_triggered_buffer_setup_10(struct iio_dev *ldv_func_arg1 , irqreturn_t (*ldv_func_arg2)(int  ,
                                                                                                          void * ) ,
                                             irqreturn_t (*ldv_func_arg3)(int  , void * ) ,
                                             struct iio_buffer_setup_ops  const  *ldv_func_arg4 ) 
{ 
  int tmp ;

  {
  {
#line 1155
  tmp = ldv_emg_iio_triggered_buffer_setup(ldv_func_arg1, ldv_func_arg2, ldv_func_arg3,
                                           (struct iio_buffer_setup_ops *)ldv_func_arg4);
  }
#line 1155
  return (tmp);
}
}
#line 1159 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
static void ldv_iio_triggered_buffer_cleanup_11(struct iio_dev *ldv_func_arg1 ) 
{ 


  {
  {
#line 1163
  ldv_emg_iio_triggered_buffer_cleanup(ldv_func_arg1);
  }
#line 1164
  return;
}
}
#line 1167 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
__inline static void ldv_clk_disable_unprepare_12(struct clk *clk ) 
{ 


  {
  {
#line 1170
  ldv_clk_disable_clk_of_mxs_lradc(clk);
  }
#line 1171
  return;
}
}
#line 1174 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
static void ldv_iio_triggered_buffer_cleanup_13(struct iio_dev *ldv_func_arg1 ) 
{ 


  {
  {
#line 1178
  ldv_emg_iio_triggered_buffer_cleanup(ldv_func_arg1);
  }
#line 1179
  return;
}
}
#line 1189 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
static int ldv___platform_driver_register_15(struct platform_driver *ldv_func_arg1 ,
                                             struct module *ldv_func_arg2 ) 
{ 
  int tmp ;

  {
  {
#line 1193
  tmp = ldv_emg___platform_driver_register(ldv_func_arg1, ldv_func_arg2);
  }
#line 1193
  return (tmp);
}
}
#line 1197 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/weaver/.tmp_mxs-lradc.c.aux"
static void ldv_platform_driver_unregister_16(struct platform_driver *ldv_func_arg1 ) 
{ 


  {
  {
#line 1201
  ldv_emg_platform_driver_unregister(ldv_func_arg1);
  }
#line 1202
  return;
}
}
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device  const  *dev ) ;
#line 24
int ldv_dev_set_drvdata(struct device *dev , void *data ) ;
#line 29 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.h"
void *ldv_xzalloc(size_t size ) ;
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device  const  *dev ) 
{ 


  {
#line 29
  if ((unsigned long )dev != (unsigned long )((struct device  const  *)0) && (unsigned long )dev->p != (unsigned long )((struct device_private */* const  */)0)) {
#line 30
    return ((dev->p)->driver_data);
  } else {

  }
#line 32
  return ((void *)0);
}
}
#line 41 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev , void *data ) 
{ 
  void *tmp ;

  {
  {
#line 43
  tmp = ldv_xzalloc(8UL);
#line 43
  dev->p = (struct device_private *)tmp;
#line 44
  (dev->p)->driver_data = data;
  }
#line 46
  return (0);
}
}
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.h"
void *ldv_zalloc(size_t size ) ;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host , unsigned int size ) 
{ 
  struct spi_master *master ;
  void *tmp ;

  {
  {
#line 27
  tmp = ldv_zalloc((unsigned long )size + 2192UL);
#line 27
  master = (struct spi_master *)tmp;
  }
#line 29
  if ((unsigned long )master == (unsigned long )((struct spi_master *)0)) {
#line 30
    return ((struct spi_master *)0);
  } else {

  }
  {
#line 32
  ldv_dev_set_drvdata(& master->dev, (void *)(master + 1UL));
  }
#line 34
  return (master);
}
}
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/err.h"
long ldv_is_err(void const   *ptr ) ;
#line 28
long ldv_is_err_or_null(void const   *ptr ) ;
#line 29
void *ldv_err_ptr(long error ) ;
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/err.c"
long ldv_is_err(void const   *ptr ) 
{ 


  {
#line 22
  return ((unsigned long )ptr > 4294967295UL);
}
}
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/err.c"
void *ldv_err_ptr(long error ) 
{ 


  {
#line 27
  return ((void *)(4294967295L - error));
}
}
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/err.c"
long ldv_ptr_err(void const   *ptr ) 
{ 


  {
#line 32
  return ((long )(4294967295UL - (unsigned long )ptr));
}
}
#line 35 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/err.c"
long ldv_is_err_or_null(void const   *ptr ) 
{ 
  long tmp ;
  int tmp___0 ;

  {
#line 37
  if ((unsigned long )ptr == (unsigned long )((void const   *)0)) {
#line 37
    tmp___0 = 1;
  } else {
    {
#line 37
    tmp = ldv_is_err(ptr);
    }
#line 37
    if (tmp != 0L) {
#line 37
      tmp___0 = 1;
    } else {
#line 37
      tmp___0 = 0;
    }
  }
#line 37
  return ((long )tmp___0);
}
}
#line 50 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.h"
bool ldv_in_interrupt_context(void) ;
#line 141
int ldv_filter_err_code(int ret_val ) ;
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.c"
static bool __ldv_in_interrupt_context  =    0;
#line 28 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void) 
{ 


  {
#line 30
  __ldv_in_interrupt_context = 1;
#line 31
  return;
}
}
#line 34 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.c"
void ldv_switch_to_process_context(void) 
{ 


  {
#line 36
  __ldv_in_interrupt_context = 0;
#line 37
  return;
}
}
#line 39 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.c"
bool ldv_in_interrupt_context(void) 
{ 


  {
#line 41
  return (__ldv_in_interrupt_context);
}
}
#line 44 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.c"
static int ldv_filter_positive_int(int val ) 
{ 


  {
  {
#line 46
  __VERIFIER_assume(val <= 0);
  }
#line 47
  return (val);
}
}
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.c"
int ldv_post_init(int init_ret_val ) 
{ 
  int tmp ;

  {
  {
#line 56
  tmp = ldv_filter_positive_int(init_ret_val);
  }
#line 56
  return (tmp);
}
}
#line 60 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val ) 
{ 
  int tmp ;

  {
  {
#line 62
  tmp = ldv_filter_positive_int(probe_ret_val);
  }
#line 62
  return (tmp);
}
}
#line 66 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val ) 
{ 
  int tmp ;

  {
  {
#line 68
  tmp = ldv_filter_positive_int(ret_val);
  }
#line 68
  return (tmp);
}
}
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size , gfp_t flags ) ;
#line 25
void *ldv_kcalloc(size_t n , size_t size , gfp_t flags ) ;
#line 26
void *ldv_kmalloc_array(size_t n , size_t size , gfp_t flags ) ;
#line 28
extern void ldv_check_alloc_flags(gfp_t  ) ;
#line 29
extern void ldv_after_alloc(void * ) ;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.h"
void *ldv_malloc(size_t size ) ;
#line 24
void *ldv_calloc(size_t nmemb , size_t size ) ;
#line 21 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/mm/slab.c"
void *ldv_kmalloc(size_t size , gfp_t flags ) 
{ 
  void *res ;

  {
  {
#line 25
  ldv_check_alloc_flags(flags);
#line 26
  res = ldv_malloc(size);
#line 27
  ldv_after_alloc(res);
  }
#line 29
  return (res);
}
}
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/mm/slab.c"
void *ldv_kcalloc(size_t n , size_t size , gfp_t flags ) 
{ 
  void *res ;

  {
  {
#line 36
  ldv_check_alloc_flags(flags);
#line 37
  res = ldv_calloc(n, size);
#line 38
  ldv_after_alloc(res);
  }
#line 40
  return (res);
}
}
#line 43 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/mm/slab.c"
void *ldv_kzalloc(size_t size , gfp_t flags ) 
{ 
  void *res ;

  {
  {
#line 47
  ldv_check_alloc_flags(flags);
#line 48
  res = ldv_zalloc(size);
#line 49
  ldv_after_alloc(res);
  }
#line 51
  return (res);
}
}
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n , size_t size , gfp_t flags ) 
{ 
  void *res ;

  {
  {
#line 58
  ldv_check_alloc_flags(flags);
#line 59
  res = ldv_malloc(n * size);
#line 60
  ldv_after_alloc(res);
  }
#line 62
  return (res);
}
}
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/common.h"
extern void __VERIFIER_error(void) ;
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/gcc.c"
long __builtin_expect(long exp , long c ) 
{ 


  {
#line 26
  return (exp);
}
}
#line 35 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/gcc.c"
void __builtin_trap(void) 
{ 


  {
  {
#line 37
  __VERIFIER_error();
  }
#line 38
  return;
}
}
#line 31 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.h"
extern void *external_allocated_data(void) ;
#line 33
void *ldv_malloc_unknown_size(void) ;
#line 34
void *ldv_calloc_unknown_size(void) ;
#line 35
void *ldv_zalloc_unknown_size(void) ;
#line 41
void *ldv_xmalloc_unknown_size(size_t size ) ;
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
extern void *malloc(size_t  ) ;
#line 25
extern void *calloc(size_t  , size_t  ) ;
#line 26
extern void free(void * ) ;
#line 27
extern void *memset(void * , int  , size_t  ) ;
#line 29 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_malloc(size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;
  int tmp___1 ;

  {
  {
#line 31
  tmp___1 = ldv_undef_int();
  }
#line 31
  if (tmp___1 != 0) {
    {
#line 32
    tmp = malloc(size);
#line 32
    res = tmp;
#line 34
    __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 35
    tmp___0 = ldv_is_err((void const   *)res);
#line 35
    __VERIFIER_assume(tmp___0 == 0L);
    }
#line 37
    return (res);
  } else {
#line 40
    return ((void *)0);
  }
}
}
#line 43 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_calloc(size_t nmemb , size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;
  int tmp___1 ;

  {
  {
#line 45
  tmp___1 = ldv_undef_int();
  }
#line 45
  if (tmp___1 != 0) {
    {
#line 46
    tmp = calloc(nmemb, size);
#line 46
    res = tmp;
#line 48
    __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 49
    tmp___0 = ldv_is_err((void const   *)res);
#line 49
    __VERIFIER_assume(tmp___0 == 0L);
    }
#line 51
    return (res);
  } else {
#line 54
    return ((void *)0);
  }
}
}
#line 57 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_zalloc(size_t size ) 
{ 
  void *tmp ;

  {
  {
#line 59
  tmp = ldv_calloc(1UL, size);
  }
#line 59
  return (tmp);
}
}
#line 62 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void ldv_free(void *s ) 
{ 


  {
  {
#line 64
  free(s);
  }
#line 65
  return;
}
}
#line 67 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_xmalloc(size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;

  {
  {
#line 69
  tmp = malloc(size);
#line 69
  res = tmp;
#line 71
  __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 72
  tmp___0 = ldv_is_err((void const   *)res);
#line 72
  __VERIFIER_assume(tmp___0 == 0L);
  }
#line 74
  return (res);
}
}
#line 77 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_xzalloc(size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;

  {
  {
#line 79
  tmp = calloc(1UL, size);
#line 79
  res = tmp;
#line 81
  __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 82
  tmp___0 = ldv_is_err((void const   *)res);
#line 82
  __VERIFIER_assume(tmp___0 == 0L);
  }
#line 84
  return (res);
}
}
#line 87 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_malloc_unknown_size(void) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;
  int tmp___1 ;

  {
  {
#line 89
  tmp___1 = ldv_undef_int();
  }
#line 89
  if (tmp___1 != 0) {
    {
#line 90
    tmp = external_allocated_data();
#line 90
    res = tmp;
#line 92
    __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 93
    tmp___0 = ldv_is_err((void const   *)res);
#line 93
    __VERIFIER_assume(tmp___0 == 0L);
    }
#line 95
    return (res);
  } else {
#line 98
    return ((void *)0);
  }
}
}
#line 101 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_calloc_unknown_size(void) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;
  int tmp___1 ;

  {
  {
#line 103
  tmp___1 = ldv_undef_int();
  }
#line 103
  if (tmp___1 != 0) {
    {
#line 104
    tmp = external_allocated_data();
#line 104
    res = tmp;
#line 106
    memset(res, 0, 8UL);
#line 107
    __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 108
    tmp___0 = ldv_is_err((void const   *)res);
#line 108
    __VERIFIER_assume(tmp___0 == 0L);
    }
#line 110
    return (res);
  } else {
#line 113
    return ((void *)0);
  }
}
}
#line 116 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_zalloc_unknown_size(void) 
{ 
  void *tmp ;

  {
  {
#line 118
  tmp = ldv_calloc_unknown_size();
  }
#line 118
  return (tmp);
}
}
#line 121 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;

  {
  {
#line 123
  tmp = external_allocated_data();
#line 123
  res = tmp;
#line 125
  __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 126
  tmp___0 = ldv_is_err((void const   *)res);
#line 126
  __VERIFIER_assume(tmp___0 == 0L);
  }
#line 128
  return (res);
}
}
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.h"
int ldv_undef_long(void) ;
#line 24
unsigned int ldv_undef_uint(void) ;
#line 25
unsigned long ldv_undef_ulong(void) ;
#line 26
unsigned long long ldv_undef_ulonglong(void) ;
#line 27
void *ldv_undef_ptr(void) ;
#line 30
int ldv_undef_int_positive(void) ;
#line 36
int ldv_undef_int_nonpositive(void) ;
#line 39
void *ldv_undef_ptr_non_null(void) ;
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
extern int __VERIFIER_nondet_int(void) ;
#line 26
extern long __VERIFIER_nondet_long(void) ;
#line 33
extern unsigned int __VERIFIER_nondet_uint(void) ;
#line 36
extern unsigned long __VERIFIER_nondet_ulong(void) ;
#line 37
extern unsigned long long __VERIFIER_nondet_ulonglong(void) ;
#line 38
extern void *__VERIFIER_nondet_pointer(void) ;
#line 41 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
int ldv_undef_int(void) 
{ 
  int tmp ;

  {
  {
#line 43
  tmp = __VERIFIER_nondet_int();
  }
#line 43
  return (tmp);
}
}
#line 46 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
int ldv_undef_long(void) 
{ 
  long tmp ;

  {
  {
#line 48
  tmp = __VERIFIER_nondet_long();
  }
#line 48
  return ((int )tmp);
}
}
#line 51 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
unsigned int ldv_undef_uint(void) 
{ 
  unsigned int tmp ;

  {
  {
#line 53
  tmp = __VERIFIER_nondet_uint();
  }
#line 53
  return (tmp);
}
}
#line 56 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
void *ldv_undef_ptr(void) 
{ 
  void *tmp ;

  {
  {
#line 58
  tmp = __VERIFIER_nondet_pointer();
  }
#line 58
  return (tmp);
}
}
#line 61 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
unsigned long ldv_undef_ulong(void) 
{ 
  unsigned long tmp ;

  {
  {
#line 63
  tmp = __VERIFIER_nondet_ulong();
  }
#line 63
  return (tmp);
}
}
#line 66 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void) 
{ 
  unsigned long long tmp ;

  {
  {
#line 68
  tmp = __VERIFIER_nondet_ulonglong();
  }
#line 68
  return (tmp);
}
}
#line 71 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
int ldv_undef_int_positive(void) 
{ 
  int ret ;
  int tmp ;

  {
  {
#line 73
  tmp = ldv_undef_int();
#line 73
  ret = tmp;
#line 75
  __VERIFIER_assume(ret > 0);
  }
#line 77
  return (ret);
}
}
#line 80 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
int ldv_undef_int_negative(void) 
{ 
  int ret ;
  int tmp ;

  {
  {
#line 82
  tmp = ldv_undef_int();
#line 82
  ret = tmp;
#line 84
  __VERIFIER_assume(ret < 0);
  }
#line 86
  return (ret);
}
}
#line 89 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
int ldv_undef_int_nonpositive(void) 
{ 
  int ret ;
  int tmp ;

  {
  {
#line 91
  tmp = ldv_undef_int();
#line 91
  ret = tmp;
#line 93
  __VERIFIER_assume(ret <= 0);
  }
#line 95
  return (ret);
}
}
#line 98 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void) 
{ 
  void *ret ;
  int tmp ;

  {
  {
#line 100
  tmp = ldv_undef_int();
#line 100
  ret = (void *)((long )tmp);
#line 102
  __VERIFIER_assume((unsigned long )ret != (unsigned long )((void *)0));
  }
#line 104
  return (ret);
}
}
#line 1 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/rsg/models/clk1.bk.c"
void ldv_assert_linux_drivers_clk1__more_at_exit(int expr ) ;
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/tr/linux/drivers/clk1.c"
int ldv_counter_clk  =    0;
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/tr/linux/drivers/clk1.c"
void ldv_clk_disable_clk(struct clk *clk ) 
{ 


  {
#line 30
  ldv_counter_clk = 0;
#line 31
  return;
}
}
#line 34 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/tr/linux/drivers/clk1.c"
int ldv_clk_enable_clk(void) 
{ 
  int retval ;
  int tmp ;

  {
  {
#line 36
  tmp = ldv_undef_int();
#line 36
  retval = tmp;
  }
#line 37
  if (retval == 0) {
#line 39
    ldv_counter_clk = 1;
  } else {

  }
#line 41
  return (retval);
}
}
#line 44 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/tr/linux/drivers/clk1.c"
int ldv_counter_clk_of_mxs_lradc  =    0;
#line 47 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/tr/linux/drivers/clk1.c"
void ldv_clk_disable_clk_of_mxs_lradc(struct clk *clk ) 
{ 


  {
#line 50
  ldv_counter_clk_of_mxs_lradc = 0;
#line 51
  return;
}
}
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/tr/linux/drivers/clk1.c"
int ldv_clk_enable_clk_of_mxs_lradc(void) 
{ 
  int retval ;
  int tmp ;

  {
  {
#line 56
  tmp = ldv_undef_int();
#line 56
  retval = tmp;
  }
#line 57
  if (retval == 0) {
#line 59
    ldv_counter_clk_of_mxs_lradc = 1;
  } else {

  }
#line 61
  return (retval);
}
}
#line 64 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/tr/linux/drivers/clk1.c"
void ldv_check_final_state(void) 
{ 


  {
  {
#line 67
  ldv_assert_linux_drivers_clk1__more_at_exit(ldv_counter_clk == 0);
#line 69
  ldv_assert_linux_drivers_clk1__more_at_exit(ldv_counter_clk_of_mxs_lradc == 0);
  }
#line 70
  return;
}
}
#line 3 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/6/vtg/drivers/staging/iio/adc/mxs-lradc.ko/linux:drivers:clk1/fvtp/bug kind funcs.c"
void ldv_assert_linux_drivers_clk1__more_at_exit(int expr ) 
{ 


  {
#line 4
  if (! expr) {
    {
#line 5
    __VERIFIER_error();
    }
  } else {

  }
#line 6
  return;
}
}
