/* Generated by CIL v. 1.5.1 */
/* print_CIL_Input is false */

#line 7 ".tmp_spi-imx.c"
struct device;
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/device.h"
struct spi_master;
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;
#line 26 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;
#line 16 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/asm-generic/int-ll64.h"
typedef unsigned char u8;
#line 18 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/asm-generic/int-ll64.h"
typedef short s16;
#line 19 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/asm-generic/int-ll64.h"
typedef unsigned short u16;
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/asm-generic/int-ll64.h"
typedef unsigned int u32;
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/asm-generic/int-ll64.h"
typedef long long s64;
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;
#line 14 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;
#line 15 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;
#line 48 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;
#line 49 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;
#line 71 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;
#line 72 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;
#line 87 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;
#line 88 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;
#line 89 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;
#line 90 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;
#line 91 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;
#line 12 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/types.h"
typedef __u32 __kernel_dev_t;
#line 15 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/types.h"
typedef __kernel_dev_t dev_t;
#line 18 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/types.h"
typedef unsigned short umode_t;
#line 21 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/types.h"
typedef __kernel_pid_t pid_t;
#line 26 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;
#line 29 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/types.h"
typedef _Bool bool;
#line 31 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/types.h"
typedef __kernel_uid32_t uid_t;
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/types.h"
typedef __kernel_gid32_t gid_t;
#line 45 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/types.h"
typedef __kernel_loff_t loff_t;
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/types.h"
typedef __kernel_size_t size_t;
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;
#line 69 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/types.h"
typedef __kernel_time_t time_t;
#line 102 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/types.h"
typedef __s32 int32_t;
#line 108 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/types.h"
typedef __u32 uint32_t;
#line 146 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/types.h"
typedef u64 dma_addr_t;
#line 157 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/types.h"
typedef unsigned int gfp_t;
#line 159 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/types.h"
typedef unsigned int oom_flags_t;
#line 162 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/types.h"
typedef u64 phys_addr_t;
#line 167 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/types.h"
typedef phys_addr_t resource_size_t;
#line 177 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};
#line 177 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;
#line 182 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};
#line 182 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;
#line 183 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};
#line 188
struct hlist_node;
#line 188 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};
#line 192 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};
#line 203 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head * ) ;
};
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/slab.h"
struct clk;
#line 46 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/thread.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const   *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};
#line 659 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/list.h"
struct task_struct;
#line 660
struct lockdep_map;
#line 18 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/lockdep.h"
struct kernel_symbol {
   unsigned long value ;
   char const   *name ;
};
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/export.h"
struct module;
#line 65 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};
#line 144 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/init.h"
typedef void (*ctor_fn_t)(void);
#line 161 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/init.h"
struct __anonstruct____missing_field_name_9 {
   unsigned int a ;
   unsigned int b ;
};
#line 161 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/init.h"
struct __anonstruct____missing_field_name_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int base1 : 8 ;
   unsigned int type : 4 ;
   unsigned int s : 1 ;
   unsigned int dpl : 2 ;
   unsigned int p : 1 ;
   unsigned int limit : 4 ;
   unsigned int avl : 1 ;
   unsigned int l : 1 ;
   unsigned int d : 1 ;
   unsigned int g : 1 ;
   unsigned int base2 : 8 ;
};
#line 161 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/init.h"
union __anonunion____missing_field_name_8 {
   struct __anonstruct____missing_field_name_9 __annonCompField4 ;
   struct __anonstruct____missing_field_name_10 __annonCompField5 ;
};
#line 161 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/init.h"
struct desc_struct {
   union __anonunion____missing_field_name_8 __annonCompField6 ;
};
#line 15 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;
#line 16 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};
#line 243 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;
#line 245 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};
#line 245 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;
#line 333
struct page;
#line 333 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;
#line 341
struct file;
#line 386
struct thread_struct;
#line 388
struct mm_struct;
#line 389
struct cpumask;
#line 327 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/paravirt_types.h"
struct arch_spinlock;
#line 18 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/spinlock_types.h"
typedef u16 __ticket_t;
#line 19 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/spinlock_types.h"
typedef u32 __ticketpair_t;
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/spinlock_types.h"
struct __raw_tickets {
   __ticket_t head ;
   __ticket_t tail ;
};
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/spinlock_types.h"
union __anonunion____missing_field_name_15 {
   __ticketpair_t head_tail ;
   struct __raw_tickets tickets ;
};
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/spinlock_types.h"
struct arch_spinlock {
   union __anonunion____missing_field_name_15 __annonCompField7 ;
};
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/spinlock_types.h"
typedef struct arch_spinlock arch_spinlock_t;
#line 366 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/printk.h"
struct _ddebug {
   char const   *modname ;
   char const   *function ;
   char const   *filename ;
   char const   *format ;
   unsigned int lineno : 18 ;
   unsigned int flags : 8 ;
};
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/linux/sysinfo.h"
struct completion;
#line 383 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/kernel.h"
struct pid;
#line 127 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};
#line 79 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/vm86.h"
union __anonunion____missing_field_name_18 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};
#line 79 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion____missing_field_name_18 __annonCompField9 ;
};
#line 306 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/bitmap.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};
#line 102 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/bug.h"
struct cpumask {
   unsigned long bits[64U] ;
};
#line 14 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;
#line 663 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;
#line 195 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/paravirt.h"
struct static_key;
#line 294 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/processor.h"
struct i387_fsave_struct {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};
#line 312 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/processor.h"
struct __anonstruct____missing_field_name_23 {
   u64 rip ;
   u64 rdp ;
};
#line 312 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/processor.h"
struct __anonstruct____missing_field_name_24 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};
#line 312 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/processor.h"
union __anonunion____missing_field_name_22 {
   struct __anonstruct____missing_field_name_23 __annonCompField13 ;
   struct __anonstruct____missing_field_name_24 __annonCompField14 ;
};
#line 312 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/processor.h"
union __anonunion____missing_field_name_25 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};
#line 312 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/processor.h"
struct i387_fxsave_struct {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion____missing_field_name_22 __annonCompField15 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion____missing_field_name_25 __annonCompField16 ;
};
#line 346 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/processor.h"
struct i387_soft_struct {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};
#line 367 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/processor.h"
struct ymmh_struct {
   u32 ymmh_space[64U] ;
};
#line 372 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/processor.h"
struct xsave_hdr_struct {
   u64 xstate_bv ;
   u64 reserved1[2U] ;
   u64 reserved2[5U] ;
};
#line 378 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/processor.h"
struct xsave_struct {
   struct i387_fxsave_struct i387 ;
   struct xsave_hdr_struct xsave_hdr ;
   struct ymmh_struct ymmh ;
};
#line 384 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/processor.h"
union thread_xstate {
   struct i387_fsave_struct fsave ;
   struct i387_fxsave_struct fxsave ;
   struct i387_soft_struct soft ;
   struct xsave_struct xsave ;
};
#line 392 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/processor.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned int has_fpu ;
   union thread_xstate *state ;
};
#line 439
struct kmem_cache;
#line 440
struct perf_event;
#line 441 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned long usersp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   struct fpu fpu ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
};
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;
#line 55 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};
#line 26 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};
#line 53 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const   *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};
#line 144 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const   *name ;
   int cpu ;
   unsigned long ip ;
};
#line 205 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int class_idx : 13 ;
   unsigned int irq_context : 2 ;
   unsigned int trylock : 1 ;
   unsigned int read : 2 ;
   unsigned int check : 2 ;
   unsigned int hardirqs_off : 1 ;
   unsigned int references : 11 ;
};
#line 533
struct sock;
#line 534
struct kobject;
#line 535
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
} ;
#line 541 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/lockdep.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   bool (*current_may_mount)(void) ;
   void *(*grab_current_ns)(void) ;
   void const   *(*netlink_ns)(struct sock * ) ;
   void const   *(*initial_ns)(void) ;
   void (*drop_ns)(void * ) ;
};
#line 133 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/uapi/asm/stat.h"
struct timespec;
#line 115 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/barrier.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/spinlock_types.h"
struct __anonstruct____missing_field_name_33 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/spinlock_types.h"
union __anonunion____missing_field_name_32 {
   struct raw_spinlock rlock ;
   struct __anonstruct____missing_field_name_33 __annonCompField19 ;
};
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion____missing_field_name_32 __annonCompField20 ;
};
#line 76 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/rwlock_types.h"
struct jump_entry;
#line 23
struct static_key_mod;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/rwlock_types.h"
struct static_key {
   atomic_t enabled ;
   struct jump_entry *entries ;
   struct static_key_mod *next ;
};
#line 36 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;
#line 37 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};
#line 402 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/spinlock.h"
struct seqcount {
   unsigned int sequence ;
};
#line 47 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;
#line 328 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/seqlock.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};
#line 83 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/highuid.h"
struct user_namespace;
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/uidgid.h"
struct __anonstruct_kuid_t_36 {
   uid_t val ;
};
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/uidgid.h"
typedef struct __anonstruct_kuid_t_36 kuid_t;
#line 29 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/uidgid.h"
struct __anonstruct_kgid_t_37 {
   gid_t val ;
};
#line 29 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/uidgid.h"
typedef struct __anonstruct_kgid_t_37 kgid_t;
#line 36 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/stat.h"
struct bin_attribute;
#line 37 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/stat.h"
struct attribute {
   char const   *name ;
   umode_t mode ;
   bool ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};
#line 36 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/sysfs.h"
struct attribute_group {
   char const   *name ;
   umode_t (*is_visible)(struct kobject * , struct attribute * , int  ) ;
   struct attribute **attrs ;
   struct bin_attribute **bin_attrs ;
};
#line 66
struct vm_area_struct;
#line 67 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file * , struct kobject * , struct bin_attribute * , char * ,
                   loff_t  , size_t  ) ;
   ssize_t (*write)(struct file * , struct kobject * , struct bin_attribute * , char * ,
                    loff_t  , size_t  ) ;
   int (*mmap)(struct file * , struct kobject * , struct bin_attribute * , struct vm_area_struct * ) ;
};
#line 129 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject * , struct attribute * , char * ) ;
   ssize_t (*store)(struct kobject * , struct attribute * , char const   * , size_t  ) ;
   void const   *(*namespace)(struct kobject * , struct attribute  const  * ) ;
};
#line 178
struct sysfs_dirent;
#line 251 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/sysfs.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   char const   *name ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 67 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};
#line 177 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/mutex.h"
struct kref {
   atomic_t refcount ;
};
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};
#line 38 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;
#line 317 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/ktime.h"
typedef union ktime ktime_t;
#line 105 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/debugobjects.h"
struct tvec_base;
#line 106 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/debugobjects.h"
struct timer_list {
   struct list_head entry ;
   unsigned long expires ;
   struct tvec_base *base ;
   void (*function)(unsigned long  ) ;
   unsigned long data ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};
#line 254 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/timer.h"
struct hrtimer;
#line 255
enum hrtimer_restart;
#line 266
struct workqueue_struct;
#line 267
struct work_struct;
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct * ) ;
   struct lockdep_map lockdep_map ;
};
#line 107 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
   struct workqueue_struct *wq ;
   int cpu ;
};
#line 50 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/kobject.h"
struct kset;
#line 50
struct kobj_type;
#line 50 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/kobject.h"
struct kobject {
   char const   *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct sysfs_dirent *sd ;
   struct kref kref ;
   struct delayed_work release ;
   unsigned int state_initialized : 1 ;
   unsigned int state_in_sysfs : 1 ;
   unsigned int state_add_uevent_sent : 1 ;
   unsigned int state_remove_uevent_sent : 1 ;
   unsigned int uevent_suppress : 1 ;
};
#line 111 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject * ) ;
   struct sysfs_ops  const  *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations  const  *(*child_ns_type)(struct kobject * ) ;
   void const   *(*namespace)(struct kobject * ) ;
};
#line 119 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/kobject.h"
struct kobj_uevent_env {
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};
#line 126 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const  filter)(struct kset * , struct kobject * ) ;
   char const   *(* const  name)(struct kset * , struct kobject * ) ;
   int (* const  uevent)(struct kset * , struct kobject * , struct kobj_uevent_env * ) ;
};
#line 143 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops  const  *uevent_ops ;
};
#line 218
struct klist_node;
#line 37 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};
#line 98 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_38 {
   unsigned long bits[16U] ;
};
#line 98 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_38 nodemask_t;
#line 181 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/seq_file.h"
struct pinctrl;
#line 182
struct pinctrl_state;
#line 194 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/pinctrl/consumer.h"
struct dev_pin_info {
   struct pinctrl *p ;
   struct pinctrl_state *default_state ;
   struct pinctrl_state *sleep_state ;
   struct pinctrl_state *idle_state ;
};
#line 38 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/pinctrl/devinfo.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/pm.h"
struct pm_message {
   int event ;
};
#line 64 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/pm.h"
typedef struct pm_message pm_message_t;
#line 65 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device * ) ;
   void (*complete)(struct device * ) ;
   int (*suspend)(struct device * ) ;
   int (*resume)(struct device * ) ;
   int (*freeze)(struct device * ) ;
   int (*thaw)(struct device * ) ;
   int (*poweroff)(struct device * ) ;
   int (*restore)(struct device * ) ;
   int (*suspend_late)(struct device * ) ;
   int (*resume_early)(struct device * ) ;
   int (*freeze_late)(struct device * ) ;
   int (*thaw_early)(struct device * ) ;
   int (*poweroff_late)(struct device * ) ;
   int (*restore_early)(struct device * ) ;
   int (*suspend_noirq)(struct device * ) ;
   int (*resume_noirq)(struct device * ) ;
   int (*freeze_noirq)(struct device * ) ;
   int (*thaw_noirq)(struct device * ) ;
   int (*poweroff_noirq)(struct device * ) ;
   int (*restore_noirq)(struct device * ) ;
   int (*runtime_suspend)(struct device * ) ;
   int (*runtime_resume)(struct device * ) ;
   int (*runtime_idle)(struct device * ) ;
};
#line 301
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
} ;
#line 308
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
} ;
#line 316
struct wakeup_source;
#line 506 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};
#line 513
struct dev_pm_qos;
#line 513 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int can_wakeup : 1 ;
   unsigned int async_suspend : 1 ;
   bool is_prepared : 1 ;
   bool is_suspended : 1 ;
   bool ignore_children : 1 ;
   bool early_init : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool wakeup_path : 1 ;
   bool syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int disable_depth : 3 ;
   unsigned int idle_notification : 1 ;
   unsigned int request_pending : 1 ;
   unsigned int deferred_resume : 1 ;
   unsigned int run_wake : 1 ;
   unsigned int runtime_auto : 1 ;
   unsigned int no_callbacks : 1 ;
   unsigned int irq_safe : 1 ;
   unsigned int use_autosuspend : 1 ;
   unsigned int timer_autosuspends : 1 ;
   unsigned int memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   struct dev_pm_qos *qos ;
};
#line 570 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
};
#line 42 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/ratelimit.h"
struct dma_map_ops;
#line 42 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/ratelimit.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/device.h"
struct pdev_archdata {

};
#line 14
struct device_private;
#line 15
struct device_driver;
#line 16
struct driver_private;
#line 17
struct class;
#line 18
struct subsys_private;
#line 19
struct bus_type;
#line 20
struct device_node;
#line 21
struct iommu_ops;
#line 22
struct iommu_group;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/device.h"
struct bus_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct bus_type * , char * ) ;
   ssize_t (*store)(struct bus_type * , char const   * , size_t  ) ;
};
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/device.h"
struct device_attribute;
#line 59
struct driver_attribute;
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/device.h"
struct bus_type {
   char const   *name ;
   char const   *dev_name ;
   struct device *dev_root ;
   struct bus_attribute *bus_attrs ;
   struct device_attribute *dev_attrs ;
   struct driver_attribute *drv_attrs ;
   struct attribute_group  const  **bus_groups ;
   struct attribute_group  const  **dev_groups ;
   struct attribute_group  const  **drv_groups ;
   int (*match)(struct device * , struct device_driver * ) ;
   int (*uevent)(struct device * , struct kobj_uevent_env * ) ;
   int (*probe)(struct device * ) ;
   int (*remove)(struct device * ) ;
   void (*shutdown)(struct device * ) ;
   int (*online)(struct device * ) ;
   int (*offline)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
   struct iommu_ops *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};
#line 141
struct device_type;
#line 198
struct of_device_id;
#line 198
struct acpi_device_id;
#line 198 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/device.h"
struct device_driver {
   char const   *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const   *mod_name ;
   bool suppress_bind_attrs ;
   struct of_device_id  const  *of_match_table ;
   struct acpi_device_id  const  *acpi_match_table ;
   int (*probe)(struct device * ) ;
   int (*remove)(struct device * ) ;
   void (*shutdown)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct attribute_group  const  **groups ;
   struct dev_pm_ops  const  *pm ;
   struct driver_private *p ;
};
#line 263 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/device.h"
struct driver_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device_driver * , char * ) ;
   ssize_t (*store)(struct device_driver * , char const   * , size_t  ) ;
};
#line 324
struct class_attribute;
#line 324 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/device.h"
struct class {
   char const   *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct device_attribute *dev_attrs ;
   struct attribute_group  const  **dev_groups ;
   struct bin_attribute *dev_bin_attrs ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device * , struct kobj_uevent_env * ) ;
   char *(*devnode)(struct device * , umode_t * ) ;
   void (*class_release)(struct class * ) ;
   void (*dev_release)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct kobj_ns_type_operations  const  *ns_type ;
   void const   *(*namespace)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
   struct subsys_private *p ;
};
#line 421 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class * , struct class_attribute * , char * ) ;
   ssize_t (*store)(struct class * , struct class_attribute * , char const   * , size_t  ) ;
   void const   *(*namespace)(struct class * , struct class_attribute  const  * ) ;
};
#line 477 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/device.h"
struct device_type {
   char const   *name ;
   struct attribute_group  const  **groups ;
   int (*uevent)(struct device * , struct kobj_uevent_env * ) ;
   char *(*devnode)(struct device * , umode_t * , kuid_t * , kgid_t * ) ;
   void (*release)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
};
#line 505 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device * , struct device_attribute * , char * ) ;
   ssize_t (*store)(struct device * , struct device_attribute * , char const   * ,
                    size_t  ) ;
};
#line 616 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};
#line 625 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/device.h"
struct acpi_dev_node {
   void *handle ;
};
#line 630
struct dma_coherent_mem;
#line 630 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const   *init_name ;
   struct device_type  const  *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   struct dev_pin_info *pins ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct acpi_dev_node acpi_node ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group  const  **groups ;
   void (*release)(struct device * ) ;
   struct iommu_group *iommu_group ;
   bool offline_disabled : 1 ;
   bool offline : 1 ;
};
#line 772 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/device.h"
struct wakeup_source {
   char const   *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool active : 1 ;
   bool autosleep_enabled : 1 ;
};
#line 13 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;
#line 186 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
};
#line 219 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const   *data ;
};
#line 471 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/mod_devicetable.h"
struct platform_device_id {
   char name[20U] ;
   kernel_ulong_t driver_data ;
};
#line 601
struct mfd_cell;
#line 602 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/mod_devicetable.h"
struct platform_device {
   char const   *name ;
   int id ;
   bool id_auto ;
   struct device dev ;
   u32 num_resources ;
   struct resource *resource ;
   struct platform_device_id  const  *id_entry ;
   struct mfd_cell *mfd_cell ;
   struct pdev_archdata archdata ;
};
#line 172 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/platform_device.h"
struct platform_driver {
   int (*probe)(struct platform_device * ) ;
   int (*remove)(struct platform_device * ) ;
   void (*shutdown)(struct platform_device * ) ;
   int (*suspend)(struct platform_device * , pm_message_t  ) ;
   int (*resume)(struct platform_device * ) ;
   struct device_driver driver ;
   struct platform_device_id  const  *id_table ;
};
#line 309
struct rw_semaphore;
#line 310 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/platform_device.h"
struct rw_semaphore {
   long count ;
   raw_spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct lockdep_map dep_map ;
};
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_106 {
   void *ldt ;
   int size ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
};
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_106 mm_context_t;
#line 18 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/asm-generic/pci_iomap.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};
#line 40 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/of.h"
typedef u32 phandle;
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
};
#line 41
struct proc_dir_entry;
#line 41 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/of.h"
struct device_node {
   char const   *name ;
   char const   *type ;
   phandle phandle ;
   char const   *full_name ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct device_node *next ;
   struct device_node *allnext ;
   struct proc_dir_entry *pde ;
   struct kref kref ;
   unsigned long _flags ;
   void *data ;
};
#line 238 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/gpio.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
} ;
#line 16 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;
#line 72 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/smap.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/hardirq.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};
#line 12 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};
#line 50
struct hrtimer_clock_base;
#line 51
struct hrtimer_cpu_base;
#line 60
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
} ;
#line 65 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer * ) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};
#line 132 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t resolution ;
   ktime_t (*get_time)(void) ;
   ktime_t softirq_time ;
   ktime_t offset ;
};
#line 163 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   unsigned int active_bases ;
   unsigned int clock_was_set ;
   ktime_t expires_next ;
   int hres_active ;
   int hang_detected ;
   unsigned long nr_events ;
   unsigned long nr_retries ;
   unsigned long nr_hangs ;
   ktime_t max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};
#line 835 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/linux/sysctl.h"
struct nsproxy;
#line 37 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/kmod.h"
struct cred;
#line 15 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;
#line 16 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;
#line 21 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;
#line 190 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};
#line 198 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;
#line 48 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/elf.h"
struct kernel_param;
#line 53 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/elf.h"
struct kernel_param_ops {
   unsigned int flags ;
   int (*set)(char const   * , struct kernel_param  const  * ) ;
   int (*get)(char * , struct kernel_param  const  * ) ;
   void (*free)(void * ) ;
};
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/moduleparam.h"
struct kparam_string;
#line 58
struct kparam_array;
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/moduleparam.h"
union __anonunion____missing_field_name_141 {
   void *arg ;
   struct kparam_string  const  *str ;
   struct kparam_array  const  *arr ;
};
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/moduleparam.h"
struct kernel_param {
   char const   *name ;
   struct kernel_param_ops  const  *ops ;
   u16 perm ;
   s16 level ;
   union __anonunion____missing_field_name_141 __annonCompField34 ;
};
#line 70 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};
#line 76 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops  const  *ops ;
   void *elem ;
};
#line 463
struct tracepoint;
#line 464 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/moduleparam.h"
struct tracepoint_func {
   void *func ;
   void *data ;
};
#line 29 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/tracepoint.h"
struct tracepoint {
   char const   *name ;
   struct static_key key ;
   void (*regfunc)(void) ;
   void (*unregfunc)(void) ;
   struct tracepoint_func *funcs ;
};
#line 92 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/tracepoint.h"
struct mod_arch_specific {

};
#line 37 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/module.h"
struct module_param_attrs;
#line 37 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
   struct completion *kobj_completion ;
};
#line 47 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute * , struct module_kobject * , char * ) ;
   ssize_t (*store)(struct module_attribute * , struct module_kobject * , char const   * ,
                    size_t  ) ;
   void (*setup)(struct module * , char const   * ) ;
   int (*test)(struct module * ) ;
   void (*free)(struct module * ) ;
};
#line 207
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
} ;
#line 214 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/module.h"
struct module_ref {
   unsigned long incs ;
   unsigned long decs ;
};
#line 228
struct module_sect_attrs;
#line 228
struct module_notes_attrs;
#line 228
struct ftrace_event_call;
#line 228 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const   *version ;
   char const   *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol  const  *syms ;
   unsigned long const   *crcs ;
   unsigned int num_syms ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol  const  *gpl_syms ;
   unsigned long const   *gpl_crcs ;
   struct kernel_symbol  const  *unused_syms ;
   unsigned long const   *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol  const  *unused_gpl_syms ;
   unsigned long const   *unused_gpl_crcs ;
   bool sig_ok ;
   struct kernel_symbol  const  *gpl_future_syms ;
   unsigned long const   *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const  *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const   **trace_bprintk_fmt_start ;
   struct ftrace_event_call **trace_events ;
   unsigned int num_trace_events ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   struct list_head source_list ;
   struct list_head target_list ;
   struct task_struct *waiter ;
   void (*exit)(void) ;
   struct module_ref *refptr ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/kmemleak.h"
struct mem_cgroup;
#line 348 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/slab.h"
struct kmem_cache_cpu {
   void **freelist ;
   unsigned long tid ;
   struct page *page ;
   struct page *partial ;
   unsigned int stat[26U] ;
};
#line 48 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/slub_def.h"
struct kmem_cache_order_objects {
   unsigned long x ;
};
#line 58
struct memcg_cache_params;
#line 58
struct kmem_cache_node;
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/slub_def.h"
struct kmem_cache {
   struct kmem_cache_cpu *cpu_slab ;
   unsigned long flags ;
   unsigned long min_partial ;
   int size ;
   int object_size ;
   int offset ;
   int cpu_partial ;
   struct kmem_cache_order_objects oo ;
   struct kmem_cache_order_objects max ;
   struct kmem_cache_order_objects min ;
   gfp_t allocflags ;
   int refcount ;
   void (*ctor)(void * ) ;
   int inuse ;
   int align ;
   int reserved ;
   char const   *name ;
   struct list_head list ;
   struct kobject kobj ;
   struct memcg_cache_params *memcg_params ;
   int max_attr_size ;
   int remote_node_defrag_ratio ;
   struct kmem_cache_node *node[1024U] ;
};
#line 449 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/slab.h"
struct __anonstruct____missing_field_name_143 {
   struct mem_cgroup *memcg ;
   struct list_head list ;
   struct kmem_cache *root_cache ;
   bool dead ;
   atomic_t nr_pages ;
   struct work_struct destroy ;
};
#line 449 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/slab.h"
union __anonunion____missing_field_name_142 {
   struct kmem_cache *memcg_caches[0U] ;
   struct __anonstruct____missing_field_name_143 __annonCompField35 ;
};
#line 449 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/slab.h"
struct memcg_cache_params {
   bool is_root_cache ;
   union __anonunion____missing_field_name_142 __annonCompField36 ;
};
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;
#line 42 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};
#line 60 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/uprobes.h"
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
} ;
#line 67
struct return_instance;
#line 67
struct uprobe;
#line 67 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   struct arch_uprobe_task autask ;
   struct return_instance *return_instances ;
   unsigned int depth ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   unsigned long vaddr ;
};
#line 83 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/uprobes.h"
struct xol_area {
   wait_queue_head_t wq ;
   atomic_t slot_count ;
   unsigned long *bitmap ;
   struct page *page ;
   unsigned long vaddr ;
};
#line 102 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};
#line 128
struct address_space;
#line 129 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_146 {
   unsigned long index ;
   void *freelist ;
   bool pfmemalloc ;
};
#line 129 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/uprobes.h"
struct __anonstruct____missing_field_name_150 {
   unsigned int inuse : 16 ;
   unsigned int objects : 15 ;
   unsigned int frozen : 1 ;
};
#line 129 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_149 {
   atomic_t _mapcount ;
   struct __anonstruct____missing_field_name_150 __annonCompField38 ;
   int units ;
};
#line 129 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/uprobes.h"
struct __anonstruct____missing_field_name_148 {
   union __anonunion____missing_field_name_149 __annonCompField39 ;
   atomic_t _count ;
};
#line 129 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_147 {
   unsigned long counters ;
   struct __anonstruct____missing_field_name_148 __annonCompField40 ;
};
#line 129 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/uprobes.h"
struct __anonstruct____missing_field_name_145 {
   union __anonunion____missing_field_name_146 __annonCompField37 ;
   union __anonunion____missing_field_name_147 __annonCompField41 ;
};
#line 129 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/uprobes.h"
struct __anonstruct____missing_field_name_152 {
   struct page *next ;
   int pages ;
   int pobjects ;
};
#line 129
struct slab;
#line 129 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_151 {
   struct list_head lru ;
   struct __anonstruct____missing_field_name_152 __annonCompField43 ;
   struct list_head list ;
   struct slab *slab_page ;
};
#line 129 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_153 {
   unsigned long private ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};
#line 129 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/uprobes.h"
struct page {
   unsigned long flags ;
   struct address_space *mapping ;
   struct __anonstruct____missing_field_name_145 __annonCompField42 ;
   union __anonunion____missing_field_name_151 __annonCompField44 ;
   union __anonunion____missing_field_name_153 __annonCompField45 ;
   unsigned long debug_flags ;
};
#line 168 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};
#line 220 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/mm_types.h"
struct __anonstruct_linear_155 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};
#line 220 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/mm_types.h"
union __anonunion_shared_154 {
   struct __anonstruct_linear_155 linear ;
   struct list_head nonlinear ;
};
#line 220
struct anon_vma;
#line 220
struct vm_operations_struct;
#line 220
struct mempolicy;
#line 220 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   union __anonunion_shared_154 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct  const  *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};
#line 292 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};
#line 298 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};
#line 311 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};
#line 324
struct kioctx_table;
#line 325
struct linux_binfmt;
#line 325
struct mmu_notifier_mm;
#line 325 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   struct vm_area_struct *mmap_cache ;
   unsigned long (*get_unmapped_area)(struct file * , unsigned long  , unsigned long  ,
                                      unsigned long  , unsigned long  ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long nr_ptes ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct kioctx_table *ioctx_table ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   pgtable_t pmd_huge_pte ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_next_reset ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   int first_nid ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
};
#line 4 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/sem.h"
struct sem_undo_list;
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_156 {
   unsigned long sig[1U] ;
};
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_156 sigset_t;
#line 25
struct siginfo;
#line 17 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int  );
#line 18 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);
#line 21 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;
#line 34 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};
#line 10 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_158 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_159 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_160 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_161 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_162 {
   void *_addr ;
   short _addr_lsb ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_163 {
   long _band ;
   int _fd ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_164 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_157 {
   int _pad[28U] ;
   struct __anonstruct__kill_158 _kill ;
   struct __anonstruct__timer_159 _timer ;
   struct __anonstruct__rt_160 _rt ;
   struct __anonstruct__sigchld_161 _sigchld ;
   struct __anonstruct__sigfault_162 _sigfault ;
   struct __anonstruct__sigpoll_163 _sigpoll ;
   struct __anonstruct__sigsys_164 _sigsys ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_157 _sifields ;
};
#line 109 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/signal.h"
struct user_struct;
#line 21 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};
#line 251 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};
#line 265 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};
#line 455
struct pid_namespace;
#line 455 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};
#line 56 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};
#line 68 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};
#line 46 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/linux/seccomp.h"
struct seccomp_filter;
#line 47 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};
#line 441 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/rculist.h"
struct plist_head {
   struct list_head node_list ;
};
#line 84 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};
#line 38 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/rtmutex.h"
struct rt_mutex_waiter;
#line 41 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/uapi/linux/resource.h"
struct rlimit {
   unsigned long rlim_cur ;
   unsigned long rlim_max ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/resource.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};
#line 45 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/key.h"
typedef int32_t key_serial_t;
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/key.h"
typedef uint32_t key_perm_t;
#line 34
struct key;
#line 35
struct signal_struct;
#line 36
struct key_type;
#line 38
struct keyring_list;
#line 116 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/key.h"
union __anonunion____missing_field_name_167 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};
#line 116
struct key_user;
#line 116 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/key.h"
union __anonunion____missing_field_name_168 {
   time_t expiry ;
   time_t revoked_at ;
};
#line 116 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/key.h"
union __anonunion_type_data_169 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};
#line 116 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/key.h"
union __anonunion_payload_170 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   struct keyring_list *subscriptions ;
};
#line 116 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion____missing_field_name_167 __annonCompField46 ;
   struct key_type *type ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion____missing_field_name_168 __annonCompField47 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   char *description ;
   union __anonunion_type_data_169 type_data ;
   union __anonunion_payload_170 payload ;
};
#line 323
struct audit_context;
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};
#line 78 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};
#line 344
struct llist_node;
#line 64 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};
#line 197
struct futex_pi_state;
#line 198
struct robust_list_head;
#line 199
struct bio_list;
#line 200
struct fs_struct;
#line 201
struct perf_event_context;
#line 202
struct blk_plug;
#line 113 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/sched.h"
struct cfs_rq;
#line 114
struct task_group;
#line 324 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};
#line 375 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};
#line 383 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};
#line 390 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};
#line 402 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};
#line 422 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime cputime ;
   int running ;
   raw_spinlock_t lock ;
};
#line 458
struct autogroup;
#line 459
struct tty_struct;
#line 459
struct taskstats;
#line 459
struct tty_audit_buf;
#line 459 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int is_child_subreaper : 1 ;
   unsigned int has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};
#line 638 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t files ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};
#line 682
struct backing_dev_info;
#line 683
struct reclaim_state;
#line 684 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};
#line 698 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   struct timespec blkio_start ;
   struct timespec blkio_end ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   struct timespec freepages_start ;
   struct timespec freepages_end ;
   u64 freepages_delay ;
   u32 freepages_count ;
};
#line 881
struct io_context;
#line 909
struct pipe_inode_info;
#line 911 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   unsigned long inv_weight ;
};
#line 917 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/sched.h"
struct sched_avg {
   u32 runnable_avg_sum ;
   u32 runnable_avg_period ;
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
};
#line 929 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};
#line 964 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};
#line 995
struct rt_rq;
#line 995 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};
#line 1019 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/sched.h"
struct memcg_batch_info {
   int do_batch ;
   struct mem_cgroup *memcg ;
   unsigned long nr_pages ;
   unsigned long memsw_nr_pages ;
};
#line 1399 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/sched.h"
struct memcg_oom_info {
   struct mem_cgroup *memcg ;
   gfp_t gfp_mask ;
   int order ;
   unsigned int may_oom : 1 ;
};
#line 1406
struct sched_class;
#line 1406
struct files_struct;
#line 1406
struct css_set;
#line 1406
struct compat_robust_list_head;
#line 1406
struct ftrace_ret_stack;
#line 1406 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/sched.h"
struct task_struct {
   long volatile   state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   struct task_struct *last_wakee ;
   unsigned long wakee_flips ;
   unsigned long wakee_flip_decay_ts ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class  const  *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct hlist_head preempt_notifiers ;
   unsigned char fpu_counter ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   unsigned int brk_randomized : 1 ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned int jobctl ;
   unsigned int personality ;
   unsigned int did_exec : 1 ;
   unsigned int in_execve : 1 ;
   unsigned int in_iowait : 1 ;
   unsigned int no_new_privs : 1 ;
   unsigned int sched_reset_on_fork : 1 ;
   unsigned int sched_contributes_to_load : 1 ;
   pid_t pid ;
   pid_t tgid ;
   unsigned long stack_canary ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   struct timespec start_time ;
   struct timespec real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred  const  *real_cred ;
   struct cred  const  *cred ;
   char comm[16U] ;
   int link_count ;
   int total_link_count ;
   struct sysv_sem sysvsem ;
   unsigned long last_switch_count ;
   struct thread_struct thread ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void * ) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct plist_head pi_waiters ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   int numa_migrate_seq ;
   unsigned int numa_scan_period ;
   u64 node_stamp ;
   struct callback_head numa_work ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_batch_info memcg_batch ;
   unsigned int memcg_kmem_skip_account ;
   struct memcg_oom_info memcg_oom ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
};
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/kthread.h"
struct kthread_work;
#line 65 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};
#line 72 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work * ) ;
   wait_queue_head_t done ;
   struct kthread_worker *worker ;
};
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u16 mode ;
   u8 bits_per_word ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};
#line 151
struct spi_message;
#line 210 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u32 min_speed_hz ;
   u32 max_speed_hz ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device * ) ;
   int (*transfer)(struct spi_device * , struct spi_message * ) ;
   void (*cleanup)(struct spi_device * ) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool busy ;
   bool running ;
   bool rt ;
   bool auto_runtime_pm ;
   int (*prepare_transfer_hardware)(struct spi_master * ) ;
   int (*transfer_one_message)(struct spi_master * , struct spi_message * ) ;
   int (*unprepare_transfer_hardware)(struct spi_master * ) ;
   int *cs_gpios ;
};
#line 444 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/spi/spi.h"
struct spi_transfer {
   void const   *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   unsigned int cs_change : 1 ;
   u8 tx_nbits ;
   u8 rx_nbits ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};
#line 560 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int is_dma_mapped : 1 ;
   void (*complete)(void * ) ;
   void *context ;
   unsigned int frame_length ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};
#line 951 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/spi/spi.h"
struct spi_bitbang {
   spinlock_t lock ;
   u8 busy ;
   u8 use_dma ;
   u8 flags ;
   struct spi_master *master ;
   int (*setup_transfer)(struct spi_device * , struct spi_transfer * ) ;
   void (*chipselect)(struct spi_device * , int  ) ;
   int (*txrx_bufs)(struct spi_device * , struct spi_transfer * ) ;
   u32 (*txrx_word[4U])(struct spi_device * , unsigned int  , u32  , u8  ) ;
};
#line 85 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/of_device.h"
enum of_gpio_flags {
    OF_GPIO_ACTIVE_LOW = 1
} ;
#line 162 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/of_gpio.h"
struct spi_imx_master {
   int *chipselect ;
   int num_chipselect ;
};
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/platform_data/spi-imx.h"
struct spi_imx_config {
   unsigned int speed_hz ;
   unsigned int bpw ;
   unsigned int mode ;
   u8 cs ;
};
#line 61 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
enum spi_imx_devtype {
    IMX1_CSPI = 0,
    IMX21_CSPI = 1,
    IMX27_CSPI = 2,
    IMX31_CSPI = 3,
    IMX35_CSPI = 4,
    IMX51_ECSPI = 5
} ;
#line 70
struct spi_imx_data;
#line 71 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
struct spi_imx_devtype_data {
   void (*intctrl)(struct spi_imx_data * , int  ) ;
   int (*config)(struct spi_imx_data * , struct spi_imx_config * ) ;
   void (*trigger)(struct spi_imx_data * ) ;
   int (*rx_available)(struct spi_imx_data * ) ;
   void (*reset)(struct spi_imx_data * ) ;
   enum spi_imx_devtype devtype ;
};
#line 81 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
struct spi_imx_data {
   struct spi_bitbang bitbang ;
   struct completion xfer_done ;
   void *base ;
   int irq ;
   struct clk *clk_per ;
   struct clk *clk_ipg ;
   unsigned long spi_clk ;
   unsigned int count ;
   void (*tx)(struct spi_imx_data * ) ;
   void (*rx)(struct spi_imx_data * ) ;
   void *rx_buf ;
   void const   *tx_buf ;
   unsigned int txfifo ;
   struct spi_imx_devtype_data  const  *devtype_data ;
   int chipselect[0U] ;
};
#line 918 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
struct ldv_struct_platform_instance_2 {
   struct platform_driver *arg0 ;
   int signal_pending ;
};
#line 40 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};
#line 255 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/timer.h"
enum hrtimer_restart;
#line 1 "<compiler builtins>"
long __builtin_expect(long exp , long c ) ;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device  const  *dev ) ;
#line 24
int ldv_dev_set_drvdata(struct device *dev , void *data ) ;
#line 6 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
struct spi_master *ldv_spi_alloc_master(struct device *host , unsigned int size ) ;
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/err.h"
long ldv_is_err(void const   *ptr ) ;
#line 30
long ldv_ptr_err(void const   *ptr ) ;
#line 16 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_clk_disable_clk_ipg_of_spi_imx_data(struct clk *clk ) ;
#line 17
int ldv_clk_enable_clk_ipg_of_spi_imx_data(void) ;
#line 18
void ldv_clk_disable_clk_per_of_spi_imx_data(struct clk *clk ) ;
#line 19
int ldv_clk_enable_clk_per_of_spi_imx_data(void) ;
#line 62 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.h"
extern void ldv_initialize(void) ;
#line 76
void ldv_check_final_state(void) ;
#line 113
int ldv_post_init(int init_ret_val ) ;
#line 124
extern void ldv_pre_probe(void) ;
#line 133
int ldv_post_probe(int probe_ret_val ) ;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/common.h"
extern void __VERIFIER_assume(int  ) ;
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.h"
int ldv_undef_int(void) ;
#line 33
int ldv_undef_int_negative(void) ;
#line 26 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.h"
void ldv_free(void *s ) ;
#line 28
void *ldv_xmalloc(size_t size ) ;
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/export.h"
extern struct module __this_module ;
#line 455 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/bitops.h"
__inline static int fls(int x ) 
{ 
  int r ;

  {
#line 469
  __asm__  ("bsrl %1,%0": "=r" (r): "rm" (x), "0" (-1));
#line 482
  return (r + 1);
}
}
#line 124 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/printk.h"
extern int printk(char const   *  , ...) ;
#line 45 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/dynamic_debug.h"
extern int __dynamic_pr_debug(struct _ddebug * , char const   *  , ...) ;
#line 53
extern int __dynamic_dev_dbg(struct _ddebug * , struct device  const  * , char const   * 
                             , ...) ;
#line 31 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/err.h"
__inline static long PTR_ERR(void const   *ptr ) ;
#line 40
__inline static long IS_ERR(void const   *ptr ) ;
#line 67 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/wait.h"
extern void __init_waitqueue_head(wait_queue_head_t * , char const   * , struct lock_class_key * ) ;
#line 73 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/completion.h"
__inline static void init_completion(struct completion *x ) 
{ 
  struct lock_class_key __key ;

  {
  {
#line 75
  x->done = 0U;
#line 76
  __init_waitqueue_head(& x->wait, "&x->wait", & __key);
  }
#line 78
  return;
}
}
#line 79
extern void wait_for_completion(struct completion * ) ;
#line 94
extern void complete(struct completion * ) ;
#line 609 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/device.h"
extern void *devm_ioremap_resource(struct device * , struct resource * ) ;
#line 901
static void *ldv_dev_get_drvdata_5(struct device  const  *dev ) ;
#line 909
static void *ldv_dev_get_drvdata_15(struct device  const  *dev ) ;
#line 914
static int ldv_dev_set_drvdata_6(struct device *dev , void *data ) ;
#line 926 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/device.h"
__inline static void *dev_get_platdata(struct device  const  *dev ) 
{ 


  {
#line 928
  return ((void *)dev->platform_data);
}
}
#line 976
extern struct device *get_device(struct device * ) ;
#line 977
extern void put_device(struct device * ) ;
#line 1014
extern int dev_err(struct device  const  * , char const   *  , ...) ;
#line 1020
extern int _dev_info(struct device  const  * , char const   *  , ...) ;
#line 50 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/platform_device.h"
extern struct resource *platform_get_resource(struct platform_device * , unsigned int  ,
                                              unsigned int  ) ;
#line 52
extern int platform_get_irq(struct platform_device * , unsigned int  ) ;
#line 195
static int ldv___platform_driver_register_22(struct platform_driver *ldv_func_arg1 ,
                                             struct module *ldv_func_arg2 ) ;
#line 200
static void ldv_platform_driver_unregister_23(struct platform_driver *ldv_func_arg1 ) ;
#line 209 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/platform_device.h"
__inline static void *platform_get_drvdata(struct platform_device  const  *pdev ) 
{ 
  void *tmp ;

  {
  {
#line 211
  tmp = ldv_dev_get_drvdata_5(& pdev->dev);
  }
#line 211
  return (tmp);
}
}
#line 214 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/platform_device.h"
__inline static void platform_set_drvdata(struct platform_device *pdev , void *data ) 
{ 


  {
  {
#line 217
  ldv_dev_set_drvdata_6(& pdev->dev, data);
  }
#line 218
  return;
}
}
#line 115 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/clk.h"
extern void clk_unprepare(struct clk * ) ;
#line 159
extern struct clk *devm_clk_get(struct device * , char const   * ) ;
#line 198
extern unsigned long clk_get_rate(struct clk * ) ;
#line 348
__inline static int ldv_clk_prepare_enable_18(struct clk *clk ) ;
#line 352
__inline static int ldv_clk_prepare_enable_19(struct clk *clk ) ;
#line 364
__inline static void ldv_clk_disable_unprepare_20(struct clk *clk ) ;
#line 368
__inline static void ldv_clk_disable_unprepare_21(struct clk *clk ) ;
#line 55 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/io.h"
__inline static unsigned int readl(void const volatile   *addr ) 
{ 
  unsigned int ret ;

  {
#line 55
  __asm__  volatile   ("movl %1,%0": "=r" (ret): "m" (*((unsigned int volatile   *)addr)): "memory");
#line 55
  return (ret);
}
}
#line 63 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/arch/x86/include/asm/io.h"
__inline static void writel(unsigned int val , void volatile   *addr ) 
{ 


  {
#line 63
  __asm__  volatile   ("movl %0,%1": : "r" (val), "m" (*((unsigned int volatile   *)addr)): "memory");
#line 64
  return;
}
}
#line 423 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/of.h"
__inline static int of_property_read_u32_array(struct device_node  const  *np , char const   *propname ,
                                               u32 *out_values , size_t sz ) 
{ 


  {
#line 427
  return (-38);
}
}
#line 576 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/of.h"
__inline static int of_property_read_u32(struct device_node  const  *np , char const   *propname ,
                                         u32 *out_value ) 
{ 
  int tmp ;

  {
  {
#line 580
  tmp = of_property_read_u32_array(np, propname, out_value, 1UL);
  }
#line 580
  return (tmp);
}
}
#line 40 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/asm-generic/gpio.h"
__inline static bool gpio_is_valid(int number ) 
{ 


  {
#line 42
  return ((unsigned int )number <= 255U);
}
}
#line 176
extern int gpio_direction_output(unsigned int  , int  ) ;
#line 189
extern void __gpio_set_value(unsigned int  , int  ) ;
#line 55 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/gpio.h"
__inline static void gpio_set_value(unsigned int gpio , int value ) 
{ 


  {
  {
#line 57
  __gpio_set_value(gpio, value);
  }
#line 58
  return;
}
}
#line 234
extern int devm_gpio_request(struct device * , unsigned int  , char const   * ) ;
#line 149 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/interrupt.h"
extern int devm_request_threaded_irq(struct device * , unsigned int  , irqreturn_t (*)(int  ,
                                                                                       void * ) ,
                                     irqreturn_t (*)(int  , void * ) , unsigned long  ,
                                     char const   * , void * ) ;
#line 155 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/interrupt.h"
__inline static int devm_request_irq(struct device *dev , unsigned int irq , irqreturn_t (*handler)(int  ,
                                                                                                    void * ) ,
                                     unsigned long irqflags , char const   *devname ,
                                     void *dev_id ) 
{ 
  int tmp ;

  {
  {
#line 158
  tmp = devm_request_threaded_irq(dev, irq, handler, (irqreturn_t (*)(int  , void * ))0,
                                  irqflags, devname, dev_id);
  }
#line 158
  return (tmp);
}
}
#line 401 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/spi/spi.h"
__inline static void *spi_master_get_devdata(struct spi_master *master ) 
{ 
  void *tmp ;

  {
  {
#line 403
  tmp = ldv_dev_get_drvdata_15((struct device  const  *)(& master->dev));
  }
#line 403
  return (tmp);
}
}
#line 411 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/spi/spi.h"
__inline static struct spi_master *spi_master_get(struct spi_master *master ) 
{ 
  struct device *tmp ;

  {
#line 413
  if ((unsigned long )master == (unsigned long )((struct spi_master *)0)) {
#line 414
    return ((struct spi_master *)0);
  } else {
    {
#line 413
    tmp = get_device(& master->dev);
    }
#line 413
    if ((unsigned long )tmp == (unsigned long )((struct device *)0)) {
#line 414
      return ((struct spi_master *)0);
    } else {

    }
  }
#line 415
  return (master);
}
}
#line 418 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/spi/spi.h"
__inline static void spi_master_put(struct spi_master *master ) 
{ 


  {
#line 420
  if ((unsigned long )master != (unsigned long )((struct spi_master *)0)) {
    {
#line 421
    put_device(& master->dev);
    }
  } else {

  }
#line 422
  return;
}
}
#line 437
static struct spi_master *ldv_spi_alloc_master_17(struct device *host , unsigned int size ) ;
#line 44 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/spi/spi_bitbang.h"
extern int spi_bitbang_start(struct spi_bitbang * ) ;
#line 45
extern int spi_bitbang_stop(struct spi_bitbang * ) ;
#line 75 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/of_device.h"
__inline static struct of_device_id  const  *of_match_device(struct of_device_id  const  *matches ,
                                                             struct device  const  *dev ) 
{ 


  {
#line 78
  return ((struct of_device_id  const  *)0);
}
}
#line 65 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/of_gpio.h"
__inline static int of_get_named_gpio_flags(struct device_node *np , char const   *list_name ,
                                            int index , enum of_gpio_flags *flags ) 
{ 


  {
#line 68
  return (-38);
}
}
#line 144 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/include/linux/of_gpio.h"
__inline static int of_get_named_gpio(struct device_node *np , char const   *propname ,
                                      int index ) 
{ 
  int tmp ;

  {
  {
#line 147
  tmp = of_get_named_gpio_flags(np, propname, index, (enum of_gpio_flags *)0);
  }
#line 147
  return (tmp);
}
}
#line 103 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
__inline static int is_imx27_cspi(struct spi_imx_data *d ) 
{ 


  {
#line 105
  return ((unsigned int )(d->devtype_data)->devtype == 2U);
}
}
#line 108 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
__inline static int is_imx35_cspi(struct spi_imx_data *d ) 
{ 


  {
#line 110
  return ((unsigned int )(d->devtype_data)->devtype == 4U);
}
}
#line 113 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
__inline static unsigned int spi_imx_get_fifosize(struct spi_imx_data *d ) 
{ 


  {
#line 115
  return ((unsigned int )(d->devtype_data)->devtype == 5U ? 64U : 8U);
}
}
#line 144 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static void spi_imx_buf_rx_u8(struct spi_imx_data *spi_imx ) 
{ 
  unsigned int val ;
  unsigned int tmp ;

  {
  {
#line 144
  tmp = readl((void const volatile   *)spi_imx->base);
#line 144
  val = tmp;
  }
#line 144
  if ((unsigned long )spi_imx->rx_buf != (unsigned long )((void *)0)) {
#line 144
    *((u8 *)spi_imx->rx_buf) = (u8 )val;
#line 144
    spi_imx->rx_buf = spi_imx->rx_buf + 1UL;
  } else {

  }
#line 146
  return;
}
}
#line 145 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static void spi_imx_buf_tx_u8(struct spi_imx_data *spi_imx ) 
{ 
  u8 val ;

  {
#line 145
  val = 0U;
#line 145
  if ((unsigned long )spi_imx->tx_buf != (unsigned long )((void const   *)0)) {
#line 145
    val = *((u8 *)spi_imx->tx_buf);
#line 145
    spi_imx->tx_buf = spi_imx->tx_buf + 1UL;
  } else {

  }
  {
#line 145
  spi_imx->count = spi_imx->count - 1U;
#line 145
  writel((unsigned int )val, (void volatile   *)(spi_imx->base + 4UL));
  }
#line 146
  return;
}
}
#line 146 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static void spi_imx_buf_rx_u16(struct spi_imx_data *spi_imx ) 
{ 
  unsigned int val ;
  unsigned int tmp ;

  {
  {
#line 146
  tmp = readl((void const volatile   *)spi_imx->base);
#line 146
  val = tmp;
  }
#line 146
  if ((unsigned long )spi_imx->rx_buf != (unsigned long )((void *)0)) {
#line 146
    *((u16 *)spi_imx->rx_buf) = (u16 )val;
#line 146
    spi_imx->rx_buf = spi_imx->rx_buf + 2UL;
  } else {

  }
#line 148
  return;
}
}
#line 147 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static void spi_imx_buf_tx_u16(struct spi_imx_data *spi_imx ) 
{ 
  u16 val ;

  {
#line 147
  val = 0U;
#line 147
  if ((unsigned long )spi_imx->tx_buf != (unsigned long )((void const   *)0)) {
#line 147
    val = *((u16 *)spi_imx->tx_buf);
#line 147
    spi_imx->tx_buf = spi_imx->tx_buf + 2UL;
  } else {

  }
  {
#line 147
  spi_imx->count = spi_imx->count - 2U;
#line 147
  writel((unsigned int )val, (void volatile   *)(spi_imx->base + 4UL));
  }
#line 148
  return;
}
}
#line 148 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static void spi_imx_buf_rx_u32(struct spi_imx_data *spi_imx ) 
{ 
  unsigned int val ;
  unsigned int tmp ;

  {
  {
#line 148
  tmp = readl((void const volatile   *)spi_imx->base);
#line 148
  val = tmp;
  }
#line 148
  if ((unsigned long )spi_imx->rx_buf != (unsigned long )((void *)0)) {
#line 148
    *((u32 *)spi_imx->rx_buf) = val;
#line 148
    spi_imx->rx_buf = spi_imx->rx_buf + 4UL;
  } else {

  }
#line 150
  return;
}
}
#line 149 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static void spi_imx_buf_tx_u32(struct spi_imx_data *spi_imx ) 
{ 
  u32 val ;

  {
#line 149
  val = 0U;
#line 149
  if ((unsigned long )spi_imx->tx_buf != (unsigned long )((void const   *)0)) {
#line 149
    val = *((u32 *)spi_imx->tx_buf);
#line 149
    spi_imx->tx_buf = spi_imx->tx_buf + 4UL;
  } else {

  }
  {
#line 149
  spi_imx->count = spi_imx->count - 4U;
#line 149
  writel(val, (void volatile   *)(spi_imx->base + 4UL));
  }
#line 150
  return;
}
}
#line 154 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static int mxc_clkdivs[19U]  = 
#line 154
  {      0,      3,      4,      6, 
        8,      12,      16,      24, 
        32,      48,      64,      96, 
        128,      192,      256,      384, 
        512,      768,      1024};
#line 158 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static unsigned int spi_imx_clkdiv_1(unsigned int fin , unsigned int fspi , unsigned int max ) 
{ 
  int i ;

  {
#line 163
  i = 2;
#line 163
  goto ldv_22723;
  ldv_22722: ;
#line 164
  if (fspi * (unsigned int )mxc_clkdivs[i] >= fin) {
#line 165
    return ((unsigned int )i);
  } else {

  }
#line 163
  i = i + 1;
  ldv_22723: ;
#line 163
  if ((unsigned int )i < max) {
#line 165
    goto ldv_22722;
  } else {

  }

#line 167
  return (max);
}
}
#line 171 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static unsigned int spi_imx_clkdiv_2(unsigned int fin , unsigned int fspi ) 
{ 
  int i ;
  int div ;

  {
#line 174
  div = 4;
#line 176
  i = 0;
#line 176
  goto ldv_22732;
  ldv_22731: ;
#line 177
  if (fspi * (unsigned int )div >= fin) {
#line 178
    return ((unsigned int )i);
  } else {

  }
#line 179
  div = div << 1;
#line 176
  i = i + 1;
  ldv_22732: ;
#line 176
  if (i <= 6) {
#line 178
    goto ldv_22731;
  } else {

  }

#line 182
  return (7U);
}
}
#line 209 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static unsigned int mx51_ecspi_clkdiv(unsigned int fin , unsigned int fspi ) 
{ 
  unsigned int pre ;
  unsigned int post ;
  long tmp ;
  int tmp___0 ;
  int tmp___1 ;
  unsigned int _max1 ;
  unsigned int _max2 ;
  long tmp___2 ;
  struct _ddebug descriptor ;
  long tmp___3 ;

  {
  {
#line 217
  tmp = __builtin_expect(fspi > fin, 0L);
  }
#line 217
  if (tmp != 0L) {
#line 218
    return (0U);
  } else {

  }
  {
#line 220
  tmp___0 = fls((int )fin);
#line 220
  tmp___1 = fls((int )fspi);
#line 220
  post = (unsigned int )(tmp___0 - tmp___1);
  }
#line 221
  if (fin > fspi << (int )post) {
#line 222
    post = post + 1U;
  } else {

  }
  {
#line 226
  _max1 = 4U;
#line 226
  _max2 = post;
#line 226
  post = (_max1 > _max2 ? _max1 : _max2) - 4U;
#line 227
  tmp___2 = __builtin_expect(post > 15U, 0L);
  }
#line 227
  if (tmp___2 != 0L) {
    {
#line 228
    printk("\v%s: cannot set clock freq: %u (base freq: %u)\n", "mx51_ecspi_clkdiv",
           fspi, fin);
    }
#line 230
    return (255U);
  } else {

  }
  {
#line 233
  pre = ((fin + (fspi << (int )post)) - 1U) / (fspi << (int )post) - 1U;
#line 235
  descriptor.modname = "spi_imx";
#line 235
  descriptor.function = "mx51_ecspi_clkdiv";
#line 235
  descriptor.filename = "drivers/spi/spi-imx.c";
#line 235
  descriptor.format = "%s: fin: %u, fspi: %u, post: %u, pre: %u\n";
#line 235
  descriptor.lineno = 236U;
#line 235
  descriptor.flags = 1U;
#line 235
  tmp___3 = __builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 235
  if (tmp___3 != 0L) {
    {
#line 235
    __dynamic_pr_debug(& descriptor, "%s: fin: %u, fspi: %u, post: %u, pre: %u\n",
                       "mx51_ecspi_clkdiv", fin, fspi, post, pre);
    }
  } else {

  }
#line 237
  return ((pre << 12) | (post << 8));
}
}
#line 241 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static void mx51_ecspi_intctrl(struct spi_imx_data *spi_imx , int enable ) 
{ 
  unsigned int val ;

  {
#line 243
  val = 0U;
#line 245
  if ((enable & 2) != 0) {
#line 246
    val = val | 1U;
  } else {

  }
#line 248
  if (enable & 1) {
#line 249
    val = val | 8U;
  } else {

  }
  {
#line 251
  writel(val, (void volatile   *)(spi_imx->base + 16UL));
  }
#line 252
  return;
}
}
#line 254 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static void mx51_ecspi_trigger(struct spi_imx_data *spi_imx ) 
{ 
  u32 reg ;

  {
  {
#line 258
  reg = readl((void const volatile   *)(spi_imx->base + 8UL));
#line 259
  reg = reg | 4U;
#line 260
  writel(reg, (void volatile   *)(spi_imx->base + 8UL));
  }
#line 261
  return;
}
}
#line 263 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static int mx51_ecspi_config(struct spi_imx_data *spi_imx , struct spi_imx_config *config ) 
{ 
  u32 ctrl ;
  u32 cfg ;
  unsigned int tmp ;

  {
  {
#line 266
  ctrl = 1U;
#line 266
  cfg = 0U;
#line 275
  ctrl = ctrl | 240U;
#line 278
  tmp = mx51_ecspi_clkdiv((unsigned int )spi_imx->spi_clk, config->speed_hz);
#line 278
  ctrl = ctrl | tmp;
#line 281
  ctrl = ctrl | (u32 )((int )config->cs << 18);
#line 283
  ctrl = ctrl | ((config->bpw - 1U) << 20);
#line 285
  cfg = cfg | (u32 )(1 << ((int )config->cs + 8));
  }
#line 287
  if ((int )config->mode & 1) {
#line 288
    cfg = cfg | (u32 )(1 << (int )config->cs);
  } else {

  }
#line 290
  if ((config->mode & 2U) != 0U) {
#line 291
    cfg = cfg | (u32 )(1 << ((int )config->cs + 4));
#line 292
    cfg = cfg | (u32 )(1 << ((int )config->cs + 20));
  } else {

  }
#line 294
  if ((config->mode & 4U) != 0U) {
#line 295
    cfg = cfg | (u32 )(1 << ((int )config->cs + 12));
  } else {

  }
  {
#line 297
  writel(ctrl, (void volatile   *)(spi_imx->base + 8UL));
#line 298
  writel(cfg, (void volatile   *)(spi_imx->base + 12UL));
  }
#line 300
  return (0);
}
}
#line 303 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static int mx51_ecspi_rx_available(struct spi_imx_data *spi_imx ) 
{ 
  unsigned int tmp ;

  {
  {
#line 305
  tmp = readl((void const volatile   *)(spi_imx->base + 24UL));
  }
#line 305
  return ((int )tmp & 8);
}
}
#line 308 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static void mx51_ecspi_reset(struct spi_imx_data *spi_imx ) 
{ 
  int tmp ;

  {
#line 311
  goto ldv_22767;
  ldv_22766: 
  {
#line 312
  readl((void const volatile   *)spi_imx->base);
  }
  ldv_22767: 
  {
#line 311
  tmp = mx51_ecspi_rx_available(spi_imx);
  }
#line 311
  if (tmp != 0) {
#line 313
    goto ldv_22766;
  } else {

  }

#line 318
  return;
}
}
#line 338 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static void mx31_intctrl(struct spi_imx_data *spi_imx , int enable ) 
{ 
  unsigned int val ;

  {
#line 340
  val = 0U;
#line 342
  if ((enable & 2) != 0) {
#line 343
    val = val | 1U;
  } else {

  }
#line 344
  if (enable & 1) {
#line 345
    val = val | 8U;
  } else {

  }
  {
#line 347
  writel(val, (void volatile   *)(spi_imx->base + 12UL));
  }
#line 348
  return;
}
}
#line 350 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static void mx31_trigger(struct spi_imx_data *spi_imx ) 
{ 
  unsigned int reg ;

  {
  {
#line 354
  reg = readl((void const volatile   *)(spi_imx->base + 8UL));
#line 355
  reg = reg | 4U;
#line 356
  writel(reg, (void volatile   *)(spi_imx->base + 8UL));
  }
#line 357
  return;
}
}
#line 359 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static int mx31_config(struct spi_imx_data *spi_imx , struct spi_imx_config *config ) 
{ 
  unsigned int reg ;
  int cs ;
  unsigned int tmp ;
  int tmp___0 ;
  int tmp___1 ;

  {
  {
#line 362
  reg = 3U;
#line 363
  cs = spi_imx->chipselect[(int )config->cs];
#line 365
  tmp = spi_imx_clkdiv_2((unsigned int )spi_imx->spi_clk, config->speed_hz);
#line 365
  reg = reg | (tmp << 16);
#line 368
  tmp___0 = is_imx35_cspi(spi_imx);
  }
#line 368
  if (tmp___0 != 0) {
#line 369
    reg = reg | ((config->bpw - 1U) << 20);
#line 370
    reg = reg | 64U;
  } else {
#line 372
    reg = reg | ((config->bpw - 1U) << 8);
  }
#line 375
  if ((int )config->mode & 1) {
#line 376
    reg = reg | 32U;
  } else {

  }
#line 377
  if ((config->mode & 2U) != 0U) {
#line 378
    reg = reg | 16U;
  } else {

  }
#line 379
  if ((config->mode & 4U) != 0U) {
#line 380
    reg = reg | 128U;
  } else {

  }
#line 381
  if (cs < 0) {
    {
#line 382
    tmp___1 = is_imx35_cspi(spi_imx);
#line 382
    reg = reg | (unsigned int )((cs + 32) << (tmp___1 != 0 ? 12 : 24));
    }
  } else {

  }
  {
#line 386
  writel(reg, (void volatile   *)(spi_imx->base + 8UL));
  }
#line 388
  return (0);
}
}
#line 391 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static int mx31_rx_available(struct spi_imx_data *spi_imx ) 
{ 
  unsigned int tmp ;

  {
  {
#line 393
  tmp = readl((void const volatile   *)(spi_imx->base + 20UL));
  }
#line 393
  return ((int )tmp & 8);
}
}
#line 396 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static void mx31_reset(struct spi_imx_data *spi_imx ) 
{ 
  unsigned int tmp ;

  {
#line 399
  goto ldv_22791;
  ldv_22790: 
  {
#line 400
  readl((void const volatile   *)spi_imx->base);
  }
  ldv_22791: 
  {
#line 399
  tmp = readl((void const volatile   *)(spi_imx->base + 20UL));
  }
#line 399
  if ((tmp & 8U) != 0U) {
#line 401
    goto ldv_22790;
  } else {

  }

#line 406
  return;
}
}
#line 416 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static void mx21_intctrl(struct spi_imx_data *spi_imx , int enable ) 
{ 
  unsigned int val ;

  {
#line 418
  val = 0U;
#line 420
  if ((enable & 2) != 0) {
#line 421
    val = val | 512U;
  } else {

  }
#line 422
  if (enable & 1) {
#line 423
    val = val | 8192U;
  } else {

  }
  {
#line 425
  writel(val, (void volatile   *)(spi_imx->base + 12UL));
  }
#line 426
  return;
}
}
#line 428 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static void mx21_trigger(struct spi_imx_data *spi_imx ) 
{ 
  unsigned int reg ;

  {
  {
#line 432
  reg = readl((void const volatile   *)(spi_imx->base + 8UL));
#line 433
  reg = reg | 512U;
#line 434
  writel(reg, (void volatile   *)(spi_imx->base + 8UL));
  }
#line 435
  return;
}
}
#line 437 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static int mx21_config(struct spi_imx_data *spi_imx , struct spi_imx_config *config ) 
{ 
  unsigned int reg ;
  int cs ;
  unsigned int max ;
  int tmp ;
  unsigned int tmp___0 ;

  {
  {
#line 440
  reg = 3072U;
#line 441
  cs = spi_imx->chipselect[(int )config->cs];
#line 442
  tmp = is_imx27_cspi(spi_imx);
#line 442
  max = tmp != 0 ? 16U : 18U;
#line 444
  tmp___0 = spi_imx_clkdiv_1((unsigned int )spi_imx->spi_clk, config->speed_hz, max);
#line 444
  reg = reg | (tmp___0 << 14);
#line 446
  reg = reg | (config->bpw - 1U);
  }
#line 448
  if ((int )config->mode & 1) {
#line 449
    reg = reg | 64U;
  } else {

  }
#line 450
  if ((config->mode & 2U) != 0U) {
#line 451
    reg = reg | 32U;
  } else {

  }
#line 452
  if ((config->mode & 4U) != 0U) {
#line 453
    reg = reg | 256U;
  } else {

  }
#line 454
  if (cs < 0) {
#line 455
    reg = reg | (unsigned int )((cs + 32) << 19);
  } else {

  }
  {
#line 457
  writel(reg, (void volatile   *)(spi_imx->base + 8UL));
  }
#line 459
  return (0);
}
}
#line 462 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static int mx21_rx_available(struct spi_imx_data *spi_imx ) 
{ 
  unsigned int tmp ;

  {
  {
#line 464
  tmp = readl((void const volatile   *)(spi_imx->base + 12UL));
  }
#line 464
  return ((int )tmp & 16);
}
}
#line 467 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static void mx21_reset(struct spi_imx_data *spi_imx ) 
{ 


  {
  {
#line 469
  writel(1U, (void volatile   *)(spi_imx->base + 28UL));
  }
#line 470
  return;
}
}
#line 483 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static void mx1_intctrl(struct spi_imx_data *spi_imx , int enable ) 
{ 
  unsigned int val ;

  {
#line 485
  val = 0U;
#line 487
  if ((enable & 2) != 0) {
#line 488
    val = val | 256U;
  } else {

  }
#line 489
  if (enable & 1) {
#line 490
    val = val | 2048U;
  } else {

  }
  {
#line 492
  writel(val, (void volatile   *)(spi_imx->base + 12UL));
  }
#line 493
  return;
}
}
#line 495 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static void mx1_trigger(struct spi_imx_data *spi_imx ) 
{ 
  unsigned int reg ;

  {
  {
#line 499
  reg = readl((void const volatile   *)(spi_imx->base + 8UL));
#line 500
  reg = reg | 256U;
#line 501
  writel(reg, (void volatile   *)(spi_imx->base + 8UL));
  }
#line 502
  return;
}
}
#line 504 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static int mx1_config(struct spi_imx_data *spi_imx , struct spi_imx_config *config ) 
{ 
  unsigned int reg ;
  unsigned int tmp ;

  {
  {
#line 507
  reg = 1536U;
#line 509
  tmp = spi_imx_clkdiv_2((unsigned int )spi_imx->spi_clk, config->speed_hz);
#line 509
  reg = reg | (tmp << 13);
#line 511
  reg = reg | (config->bpw - 1U);
  }
#line 513
  if ((int )config->mode & 1) {
#line 514
    reg = reg | 32U;
  } else {

  }
#line 515
  if ((config->mode & 2U) != 0U) {
#line 516
    reg = reg | 16U;
  } else {

  }
  {
#line 518
  writel(reg, (void volatile   *)(spi_imx->base + 8UL));
  }
#line 520
  return (0);
}
}
#line 523 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static int mx1_rx_available(struct spi_imx_data *spi_imx ) 
{ 
  unsigned int tmp ;

  {
  {
#line 525
  tmp = readl((void const volatile   *)(spi_imx->base + 12UL));
  }
#line 525
  return ((int )tmp & 8);
}
}
#line 528 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static void mx1_reset(struct spi_imx_data *spi_imx ) 
{ 


  {
  {
#line 530
  writel(1U, (void volatile   *)(spi_imx->base + 28UL));
  }
#line 531
  return;
}
}
#line 533 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static struct spi_imx_devtype_data imx1_cspi_devtype_data  =    {& mx1_intctrl, & mx1_config, & mx1_trigger, & mx1_rx_available, & mx1_reset, 0};
#line 542 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static struct spi_imx_devtype_data imx21_cspi_devtype_data  =    {& mx21_intctrl, & mx21_config, & mx21_trigger, & mx21_rx_available, & mx21_reset,
    1};
#line 551 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static struct spi_imx_devtype_data imx27_cspi_devtype_data  =    {& mx21_intctrl, & mx21_config, & mx21_trigger, & mx21_rx_available, & mx21_reset,
    2};
#line 561 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static struct spi_imx_devtype_data imx31_cspi_devtype_data  =    {& mx31_intctrl, & mx31_config, & mx31_trigger, & mx31_rx_available, & mx31_reset,
    3};
#line 570 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static struct spi_imx_devtype_data imx35_cspi_devtype_data  =    {& mx31_intctrl, & mx31_config, & mx31_trigger, & mx31_rx_available, & mx31_reset,
    4};
#line 580 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static struct spi_imx_devtype_data imx51_ecspi_devtype_data  =    {& mx51_ecspi_intctrl, & mx51_ecspi_config, & mx51_ecspi_trigger, & mx51_ecspi_rx_available,
    & mx51_ecspi_reset, 5};
#line 589 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static struct platform_device_id spi_imx_devtype[7U]  = {      {{'i', 'm', 'x', '1', '-', 'c', 's', 'p', 'i', '\000'}, (unsigned long )(& imx1_cspi_devtype_data)}, 
        {{'i',
       'm', 'x', '2', '1', '-', 'c', 's', 'p', 'i', '\000'}, (unsigned long )(& imx21_cspi_devtype_data)}, 
        {{'i',
       'm', 'x', '2', '7', '-', 'c', 's', 'p', 'i', '\000'}, (unsigned long )(& imx27_cspi_devtype_data)}, 
        {{'i',
       'm', 'x', '3', '1', '-', 'c', 's', 'p', 'i', '\000'}, (unsigned long )(& imx31_cspi_devtype_data)}, 
        {{'i',
       'm', 'x', '3', '5', '-', 'c', 's', 'p', 'i', '\000'}, (unsigned long )(& imx35_cspi_devtype_data)}, 
        {{'i',
       'm', 'x', '5', '1', '-', 'e', 'c', 's', 'p', 'i', '\000'}, (unsigned long )(& imx51_ecspi_devtype_data)}};
#line 613 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static struct of_device_id  const  spi_imx_dt_ids[7U]  = {      {{(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
       (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
       (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
       (char)0, (char)0, (char)0, (char)0, (char)0}, {(char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0},
      {'f', 's', 'l', ',', 'i', 'm', 'x', '1', '-', 'c', 's', 'p', 'i', '\000'}, (void const   *)(& imx1_cspi_devtype_data)}, 
        {{(char)0,
       (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
       (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
       (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
       (char)0, (char)0, (char)0, (char)0}, {(char)0, (char)0, (char)0, (char)0, (char)0,
                                             (char)0, (char)0, (char)0, (char)0, (char)0,
                                             (char)0, (char)0, (char)0, (char)0, (char)0,
                                             (char)0, (char)0, (char)0, (char)0, (char)0,
                                             (char)0, (char)0, (char)0, (char)0, (char)0,
                                             (char)0, (char)0, (char)0, (char)0, (char)0,
                                             (char)0, (char)0}, {'f', 's', 'l', ',',
                                                                 'i', 'm', 'x', '2',
                                                                 '1', '-', 'c', 's',
                                                                 'p', 'i', '\000'},
      (void const   *)(& imx21_cspi_devtype_data)}, 
        {{(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
       (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
       (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
       (char)0, (char)0, (char)0, (char)0, (char)0}, {(char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0},
      {'f', 's', 'l', ',', 'i', 'm', 'x', '2', '7', '-', 'c', 's', 'p', 'i', '\000'},
      (void const   *)(& imx27_cspi_devtype_data)}, 
        {{(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
       (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
       (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
       (char)0, (char)0, (char)0, (char)0, (char)0}, {(char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0},
      {'f', 's', 'l', ',', 'i', 'm', 'x', '3', '1', '-', 'c', 's', 'p', 'i', '\000'},
      (void const   *)(& imx31_cspi_devtype_data)}, 
        {{(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
       (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
       (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
       (char)0, (char)0, (char)0, (char)0, (char)0}, {(char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0},
      {'f', 's', 'l', ',', 'i', 'm', 'x', '3', '5', '-', 'c', 's', 'p', 'i', '\000'},
      (void const   *)(& imx35_cspi_devtype_data)}, 
        {{(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
       (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
       (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
       (char)0, (char)0, (char)0, (char)0, (char)0}, {(char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0,
                                                      (char)0, (char)0, (char)0, (char)0},
      {'f', 's', 'l', ',', 'i', 'm', 'x', '5', '1', '-', 'e', 'c', 's', 'p', 'i',
       '\000'}, (void const   *)(& imx51_ecspi_devtype_data)}};
#line 622 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
struct of_device_id  const  __mod_of_device_table  ;
#line 624 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static void spi_imx_chipselect(struct spi_device *spi , int is_active ) 
{ 
  struct spi_imx_data *spi_imx ;
  void *tmp ;
  int gpio ;
  int active ;
  int dev_is_lowactive ;
  bool tmp___0 ;
  int tmp___1 ;

  {
  {
#line 626
  tmp = spi_master_get_devdata(spi->master);
#line 626
  spi_imx = (struct spi_imx_data *)tmp;
#line 627
  gpio = spi_imx->chipselect[(int )spi->chip_select];
#line 628
  active = is_active != 0;
#line 629
  dev_is_lowactive = ((int )spi->mode & 4) == 0;
#line 631
  tmp___0 = gpio_is_valid(gpio);
  }
#line 631
  if (tmp___0) {
#line 631
    tmp___1 = 0;
  } else {
#line 631
    tmp___1 = 1;
  }
#line 631
  if (tmp___1) {
#line 632
    return;
  } else {

  }
  {
#line 634
  gpio_set_value((unsigned int )gpio, dev_is_lowactive ^ active);
  }
#line 635
  return;
}
}
#line 637 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static void spi_imx_push(struct spi_imx_data *spi_imx ) 
{ 
  unsigned int tmp ;

  {
#line 639
  goto ldv_22857;
  ldv_22856: ;
#line 640
  if (spi_imx->count == 0U) {
#line 641
    goto ldv_22855;
  } else {

  }
  {
#line 642
  (*(spi_imx->tx))(spi_imx);
#line 643
  spi_imx->txfifo = spi_imx->txfifo + 1U;
  }
  ldv_22857: 
  {
#line 639
  tmp = spi_imx_get_fifosize(spi_imx);
  }
#line 639
  if (spi_imx->txfifo < tmp) {
#line 641
    goto ldv_22856;
  } else {

  }
  ldv_22855: 
  {
#line 646
  (*((spi_imx->devtype_data)->trigger))(spi_imx);
  }
#line 647
  return;
}
}
#line 649 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static irqreturn_t spi_imx_isr(int irq , void *dev_id ) 
{ 
  struct spi_imx_data *spi_imx ;
  int tmp ;

  {
#line 651
  spi_imx = (struct spi_imx_data *)dev_id;
#line 653
  goto ldv_22864;
  ldv_22863: 
  {
#line 654
  (*(spi_imx->rx))(spi_imx);
#line 655
  spi_imx->txfifo = spi_imx->txfifo - 1U;
  }
  ldv_22864: 
  {
#line 653
  tmp = (*((spi_imx->devtype_data)->rx_available))(spi_imx);
  }
#line 653
  if (tmp != 0) {
#line 655
    goto ldv_22863;
  } else {

  }

#line 658
  if (spi_imx->count != 0U) {
    {
#line 659
    spi_imx_push(spi_imx);
    }
#line 660
    return (1);
  } else {

  }
#line 663
  if (spi_imx->txfifo != 0U) {
    {
#line 667
    (*((spi_imx->devtype_data)->intctrl))(spi_imx, 1);
    }
#line 669
    return (1);
  } else {

  }
  {
#line 672
  (*((spi_imx->devtype_data)->intctrl))(spi_imx, 0);
#line 673
  complete(& spi_imx->xfer_done);
  }
#line 675
  return (1);
}
}
#line 678 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static int spi_imx_setupxfer(struct spi_device *spi , struct spi_transfer *t ) 
{ 
  struct spi_imx_data *spi_imx ;
  void *tmp ;
  struct spi_imx_config config ;

  {
  {
#line 681
  tmp = spi_master_get_devdata(spi->master);
#line 681
  spi_imx = (struct spi_imx_data *)tmp;
#line 684
  config.bpw = (unsigned int )((unsigned long )t != (unsigned long )((struct spi_transfer *)0) ? t->bits_per_word : spi->bits_per_word);
#line 685
  config.speed_hz = (unsigned long )t != (unsigned long )((struct spi_transfer *)0) ? t->speed_hz : spi->max_speed_hz;
#line 686
  config.mode = (unsigned int )spi->mode;
#line 687
  config.cs = spi->chip_select;
  }
#line 689
  if (config.speed_hz == 0U) {
#line 690
    config.speed_hz = spi->max_speed_hz;
  } else {

  }
#line 691
  if (config.bpw == 0U) {
#line 692
    config.bpw = (unsigned int )spi->bits_per_word;
  } else {

  }
#line 695
  if (config.bpw <= 8U) {
#line 696
    spi_imx->rx = & spi_imx_buf_rx_u8;
#line 697
    spi_imx->tx = & spi_imx_buf_tx_u8;
  } else
#line 698
  if (config.bpw <= 16U) {
#line 699
    spi_imx->rx = & spi_imx_buf_rx_u16;
#line 700
    spi_imx->tx = & spi_imx_buf_tx_u16;
  } else {
#line 702
    spi_imx->rx = & spi_imx_buf_rx_u32;
#line 703
    spi_imx->tx = & spi_imx_buf_tx_u32;
  }
  {
#line 706
  (*((spi_imx->devtype_data)->config))(spi_imx, & config);
  }
#line 708
  return (0);
}
}
#line 711 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static int spi_imx_transfer(struct spi_device *spi , struct spi_transfer *transfer ) 
{ 
  struct spi_imx_data *spi_imx ;
  void *tmp ;

  {
  {
#line 714
  tmp = spi_master_get_devdata(spi->master);
#line 714
  spi_imx = (struct spi_imx_data *)tmp;
#line 716
  spi_imx->tx_buf = transfer->tx_buf;
#line 717
  spi_imx->rx_buf = transfer->rx_buf;
#line 718
  spi_imx->count = transfer->len;
#line 719
  spi_imx->txfifo = 0U;
#line 721
  init_completion(& spi_imx->xfer_done);
#line 723
  spi_imx_push(spi_imx);
#line 725
  (*((spi_imx->devtype_data)->intctrl))(spi_imx, 2);
#line 727
  wait_for_completion(& spi_imx->xfer_done);
  }
#line 729
  return ((int )transfer->len);
}
}
#line 732 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static int spi_imx_setup(struct spi_device *spi ) 
{ 
  struct spi_imx_data *spi_imx ;
  void *tmp ;
  int gpio ;
  struct _ddebug descriptor ;
  long tmp___0 ;
  bool tmp___1 ;

  {
  {
#line 734
  tmp = spi_master_get_devdata(spi->master);
#line 734
  spi_imx = (struct spi_imx_data *)tmp;
#line 735
  gpio = spi_imx->chipselect[(int )spi->chip_select];
#line 737
  descriptor.modname = "spi_imx";
#line 737
  descriptor.function = "spi_imx_setup";
#line 737
  descriptor.filename = "drivers/spi/spi-imx.c";
#line 737
  descriptor.format = "%s: mode %d, %u bpw, %d hz\n";
#line 737
  descriptor.lineno = 738U;
#line 737
  descriptor.flags = 1U;
#line 737
  tmp___0 = __builtin_expect((long )descriptor.flags & 1L, 0L);
  }
#line 737
  if (tmp___0 != 0L) {
    {
#line 737
    __dynamic_dev_dbg(& descriptor, (struct device  const  *)(& spi->dev), "%s: mode %d, %u bpw, %d hz\n",
                      "spi_imx_setup", (int )spi->mode, (int )spi->bits_per_word,
                      spi->max_speed_hz);
    }
  } else {

  }
  {
#line 740
  tmp___1 = gpio_is_valid(gpio);
  }
#line 740
  if ((int )tmp___1) {
    {
#line 741
    gpio_direction_output((unsigned int )gpio, ((int )spi->mode & 4) == 0);
    }
  } else {

  }
  {
#line 743
  spi_imx_chipselect(spi, 0);
  }
#line 745
  return (0);
}
}
#line 748 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static void spi_imx_cleanup(struct spi_device *spi ) 
{ 


  {
#line 750
  return;
}
}
#line 752 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static int spi_imx_probe(struct platform_device *pdev ) 
{ 
  struct device_node *np ;
  struct of_device_id  const  *of_id ;
  struct of_device_id  const  *tmp ;
  struct spi_imx_master *mxc_platform_info ;
  void *tmp___0 ;
  struct spi_master *master ;
  struct spi_imx_data *spi_imx ;
  struct resource *res ;
  int i ;
  int ret ;
  int num_cs ;
  void *tmp___1 ;
  int cs_gpio ;
  int tmp___2 ;
  bool tmp___3 ;
  int tmp___4 ;
  bool tmp___5 ;
  int tmp___6 ;
  long tmp___7 ;
  long tmp___8 ;
  long tmp___9 ;
  long tmp___10 ;
  long tmp___11 ;
  long tmp___12 ;

  {
  {
#line 754
  np = pdev->dev.of_node;
#line 755
  tmp = of_match_device((struct of_device_id  const  *)(& spi_imx_dt_ids), (struct device  const  *)(& pdev->dev));
#line 755
  of_id = tmp;
#line 757
  tmp___0 = dev_get_platdata((struct device  const  *)(& pdev->dev));
#line 757
  mxc_platform_info = (struct spi_imx_master *)tmp___0;
  }
#line 764
  if ((unsigned long )np == (unsigned long )((struct device_node *)0) && (unsigned long )mxc_platform_info == (unsigned long )((struct spi_imx_master *)0)) {
    {
#line 765
    dev_err((struct device  const  *)(& pdev->dev), "can\'t get the platform data\n");
    }
#line 766
    return (-22);
  } else {

  }
  {
#line 769
  ret = of_property_read_u32((struct device_node  const  *)np, "fsl,spi-num-chipselects",
                             (u32 *)(& num_cs));
  }
#line 770
  if (ret < 0) {
#line 771
    if ((unsigned long )mxc_platform_info != (unsigned long )((struct spi_imx_master *)0)) {
#line 772
      num_cs = mxc_platform_info->num_chipselect;
    } else {
#line 774
      return (ret);
    }
  } else {

  }
  {
#line 777
  master = ldv_spi_alloc_master_17(& pdev->dev, (unsigned int )((unsigned long )num_cs + 84UL) * 4U);
  }
#line 779
  if ((unsigned long )master == (unsigned long )((struct spi_master *)0)) {
#line 780
    return (-12);
  } else {

  }
  {
#line 782
  platform_set_drvdata(pdev, (void *)master);
#line 784
  master->bits_per_word_mask = 4294967295U;
#line 785
  master->bus_num = (s16 )pdev->id;
#line 786
  master->num_chipselect = (u16 )num_cs;
#line 788
  tmp___1 = spi_master_get_devdata(master);
#line 788
  spi_imx = (struct spi_imx_data *)tmp___1;
#line 789
  spi_imx->bitbang.master = spi_master_get(master);
#line 791
  i = 0;
  }
#line 791
  goto ldv_22903;
  ldv_22902: 
  {
#line 792
  tmp___2 = of_get_named_gpio(np, "cs-gpios", i);
#line 792
  cs_gpio = tmp___2;
#line 793
  tmp___3 = gpio_is_valid(cs_gpio);
  }
#line 793
  if (tmp___3) {
#line 793
    tmp___4 = 0;
  } else {
#line 793
    tmp___4 = 1;
  }
#line 793
  if (tmp___4 && (unsigned long )mxc_platform_info != (unsigned long )((struct spi_imx_master *)0)) {
#line 794
    cs_gpio = *(mxc_platform_info->chipselect + (unsigned long )i);
  } else {

  }
  {
#line 796
  spi_imx->chipselect[i] = cs_gpio;
#line 797
  tmp___5 = gpio_is_valid(cs_gpio);
  }
#line 797
  if (tmp___5) {
#line 797
    tmp___6 = 0;
  } else {
#line 797
    tmp___6 = 1;
  }
#line 797
  if (tmp___6) {
#line 798
    goto ldv_22900;
  } else {

  }
  {
#line 800
  ret = devm_gpio_request(& pdev->dev, (unsigned int )spi_imx->chipselect[i], "spi_imx");
  }
#line 802
  if (ret != 0) {
    {
#line 803
    dev_err((struct device  const  *)(& pdev->dev), "can\'t get cs gpios\n");
    }
#line 804
    goto out_master_put;
  } else {

  }
  ldv_22900: 
#line 791
  i = i + 1;
  ldv_22903: ;
#line 791
  if (i < (int )master->num_chipselect) {
#line 793
    goto ldv_22902;
  } else {

  }
  {
#line 808
  spi_imx->bitbang.chipselect = & spi_imx_chipselect;
#line 809
  spi_imx->bitbang.setup_transfer = & spi_imx_setupxfer;
#line 810
  spi_imx->bitbang.txrx_bufs = & spi_imx_transfer;
#line 811
  (spi_imx->bitbang.master)->setup = & spi_imx_setup;
#line 812
  (spi_imx->bitbang.master)->cleanup = & spi_imx_cleanup;
#line 813
  (spi_imx->bitbang.master)->mode_bits = 7U;
#line 815
  init_completion(& spi_imx->xfer_done);
#line 817
  spi_imx->devtype_data = (unsigned long )of_id != (unsigned long )((struct of_device_id  const  *)0) ? (struct spi_imx_devtype_data  const  *)of_id->data : (struct spi_imx_devtype_data  const  *)(pdev->id_entry)->driver_data;
#line 820
  res = platform_get_resource(pdev, 512U, 0U);
#line 821
  spi_imx->base = devm_ioremap_resource(& pdev->dev, res);
#line 822
  tmp___8 = IS_ERR((void const   *)spi_imx->base);
  }
#line 822
  if (tmp___8 != 0L) {
    {
#line 823
    tmp___7 = PTR_ERR((void const   *)spi_imx->base);
#line 823
    ret = (int )tmp___7;
    }
#line 824
    goto out_master_put;
  } else {

  }
  {
#line 827
  spi_imx->irq = platform_get_irq(pdev, 0U);
  }
#line 828
  if (spi_imx->irq < 0) {
#line 829
    ret = -22;
#line 830
    goto out_master_put;
  } else {

  }
  {
#line 833
  ret = devm_request_irq(& pdev->dev, (unsigned int )spi_imx->irq, & spi_imx_isr,
                         0UL, "spi_imx", (void *)spi_imx);
  }
#line 835
  if (ret != 0) {
    {
#line 836
    dev_err((struct device  const  *)(& pdev->dev), "can\'t get irq%d: %d\n", spi_imx->irq,
            ret);
    }
#line 837
    goto out_master_put;
  } else {

  }
  {
#line 840
  spi_imx->clk_ipg = devm_clk_get(& pdev->dev, "ipg");
#line 841
  tmp___10 = IS_ERR((void const   *)spi_imx->clk_ipg);
  }
#line 841
  if (tmp___10 != 0L) {
    {
#line 842
    tmp___9 = PTR_ERR((void const   *)spi_imx->clk_ipg);
#line 842
    ret = (int )tmp___9;
    }
#line 843
    goto out_master_put;
  } else {

  }
  {
#line 846
  spi_imx->clk_per = devm_clk_get(& pdev->dev, "per");
#line 847
  tmp___12 = IS_ERR((void const   *)spi_imx->clk_per);
  }
#line 847
  if (tmp___12 != 0L) {
    {
#line 848
    tmp___11 = PTR_ERR((void const   *)spi_imx->clk_per);
#line 848
    ret = (int )tmp___11;
    }
#line 849
    goto out_master_put;
  } else {

  }
  {
#line 852
  ret = ldv_clk_prepare_enable_18(spi_imx->clk_per);
  }
#line 853
  if (ret != 0) {
#line 854
    goto out_master_put;
  } else {

  }
  {
#line 856
  ret = ldv_clk_prepare_enable_19(spi_imx->clk_ipg);
  }
#line 857
  if (ret != 0) {
#line 858
    goto out_put_per;
  } else {

  }
  {
#line 860
  spi_imx->spi_clk = clk_get_rate(spi_imx->clk_per);
#line 862
  (*((spi_imx->devtype_data)->reset))(spi_imx);
#line 864
  (*((spi_imx->devtype_data)->intctrl))(spi_imx, 0);
#line 866
  master->dev.of_node = pdev->dev.of_node;
#line 867
  ret = spi_bitbang_start(& spi_imx->bitbang);
  }
#line 868
  if (ret != 0) {
    {
#line 869
    dev_err((struct device  const  *)(& pdev->dev), "bitbang start failed with %d\n",
            ret);
    }
#line 870
    goto out_clk_put;
  } else {

  }
  {
#line 873
  _dev_info((struct device  const  *)(& pdev->dev), "probed\n");
  }
#line 875
  return (ret);
  out_clk_put: 
  {
#line 878
  ldv_clk_disable_unprepare_20(spi_imx->clk_ipg);
  }
  out_put_per: 
  {
#line 880
  ldv_clk_disable_unprepare_21(spi_imx->clk_per);
  }
  out_master_put: 
  {
#line 882
  spi_master_put(master);
  }
#line 884
  return (ret);
}
}
#line 887 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static int spi_imx_remove(struct platform_device *pdev ) 
{ 
  struct spi_master *master ;
  void *tmp ;
  struct spi_imx_data *spi_imx ;
  void *tmp___0 ;

  {
  {
#line 889
  tmp = platform_get_drvdata((struct platform_device  const  *)pdev);
#line 889
  master = (struct spi_master *)tmp;
#line 890
  tmp___0 = spi_master_get_devdata(master);
#line 890
  spi_imx = (struct spi_imx_data *)tmp___0;
#line 892
  spi_bitbang_stop(& spi_imx->bitbang);
#line 894
  writel(0U, (void volatile   *)(spi_imx->base + 8UL));
#line 895
  clk_unprepare(spi_imx->clk_ipg);
#line 896
  clk_unprepare(spi_imx->clk_per);
#line 897
  spi_master_put(master);
  }
#line 899
  return (0);
}
}
#line 902 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static struct platform_driver spi_imx_driver  =    {& spi_imx_probe, & spi_imx_remove, 0, 0, 0, {"spi_imx", 0, & __this_module, 0,
                                                 (_Bool)0, (struct of_device_id  const  *)(& spi_imx_dt_ids),
                                                 0, 0, 0, 0, 0, 0, 0, 0, 0}, (struct platform_device_id  const  *)(& spi_imx_devtype)};
#line 912 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static int spi_imx_driver_init(void) 
{ 
  int tmp ;

  {
  {
#line 912
  tmp = ldv___platform_driver_register_22(& spi_imx_driver, & __this_module);
  }
#line 912
  return (tmp);
}
}
#line 912 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/lkbce/drivers/spi/spi-imx.c"
static void spi_imx_driver_exit(void) 
{ 


  {
  {
#line 912
  ldv_platform_driver_unregister_23(& spi_imx_driver);
  }
#line 913
  return;
}
}
#line 41 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_dispatch_deregister_6_1(struct platform_driver *arg0 ) ;
#line 42
void ldv_dispatch_insmod_deregister_7_1(void) ;
#line 43
void ldv_dispatch_insmod_register_7_2(void) ;
#line 44
void ldv_dispatch_pm_deregister_2_5(void) ;
#line 45
void ldv_dispatch_pm_register_2_6(void) ;
#line 46
void ldv_dispatch_register_5_3(struct platform_driver *arg0 ) ;
#line 47
int ldv_emg___platform_driver_register(struct platform_driver *arg0 , struct module *arg1 ) ;
#line 48
void ldv_emg_platform_driver_unregister(struct platform_driver *arg0 ) ;
#line 49
void ldv_insmod_4(void *arg0 ) ;
#line 50
void ldv_insmod_spi_imx_driver_exit_4_2(void (*arg0)(void) ) ;
#line 51
int ldv_insmod_spi_imx_driver_init_4_6(int (*arg0)(void) ) ;
#line 52
void ldv_main_7(void *arg0 ) ;
#line 53
void ldv_platform_instance_2(void *arg0 ) ;
#line 54
int ldv_platform_instance_probe_2_14(int (*arg0)(struct platform_device * ) , struct platform_device *arg1 ) ;
#line 55
void ldv_platform_instance_release_2_3(int (*arg0)(struct platform_device * ) , struct platform_device *arg1 ) ;
#line 56
void ldv_pm_ops_scenario_3(void *arg0 ) ;
#line 57
void ldv_pm_ops_scenario_complete_3_3(void (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 58
void ldv_pm_ops_scenario_freeze_3_15(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 59
void ldv_pm_ops_scenario_freeze_late_3_14(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 60
void ldv_pm_ops_scenario_freeze_noirq_3_12(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 61
void ldv_pm_ops_scenario_poweroff_3_9(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 62
void ldv_pm_ops_scenario_poweroff_late_3_8(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 63
void ldv_pm_ops_scenario_poweroff_noirq_3_6(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 64
void ldv_pm_ops_scenario_prepare_3_22(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 65
void ldv_pm_ops_scenario_restore_3_4(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 66
void ldv_pm_ops_scenario_restore_early_3_7(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 67
void ldv_pm_ops_scenario_restore_noirq_3_5(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 68
void ldv_pm_ops_scenario_resume_3_16(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 69
void ldv_pm_ops_scenario_resume_early_3_17(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 70
void ldv_pm_ops_scenario_resume_noirq_3_19(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 71
void ldv_pm_ops_scenario_runtime_idle_3_27(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 72
void ldv_pm_ops_scenario_runtime_resume_3_24(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 73
void ldv_pm_ops_scenario_runtime_suspend_3_25(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 74
void ldv_pm_ops_scenario_suspend_3_21(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 75
void ldv_pm_ops_scenario_suspend_late_3_18(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 76
void ldv_pm_ops_scenario_suspend_noirq_3_20(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 77
void ldv_pm_ops_scenario_thaw_3_10(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 78
void ldv_pm_ops_scenario_thaw_early_3_13(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 79
void ldv_pm_ops_scenario_thaw_noirq_3_11(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 80
int main(void) ;
#line 88 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_dispatch_deregister_6_1(struct platform_driver *arg0 ) 
{ 


  {
#line 91
  return;
}
}
#line 95 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_dispatch_insmod_deregister_7_1(void) 
{ 


  {
#line 98
  return;
}
}
#line 102 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_dispatch_insmod_register_7_2(void) 
{ 
  struct ldv_struct_platform_instance_2 *cf_arg_4 ;
  void *tmp ;

  {
  {
#line 104
  tmp = ldv_xmalloc(16UL);
#line 104
  cf_arg_4 = (struct ldv_struct_platform_instance_2 *)tmp;
#line 105
  ldv_insmod_4((void *)cf_arg_4);
  }
#line 106
  return;
}
}
#line 110 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_dispatch_pm_deregister_2_5(void) 
{ 


  {
#line 113
  return;
}
}
#line 117 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_dispatch_pm_register_2_6(void) 
{ 
  struct ldv_struct_platform_instance_2 *cf_arg_3 ;
  void *tmp ;

  {
  {
#line 119
  tmp = ldv_xmalloc(16UL);
#line 119
  cf_arg_3 = (struct ldv_struct_platform_instance_2 *)tmp;
#line 120
  ldv_pm_ops_scenario_3((void *)cf_arg_3);
  }
#line 121
  return;
}
}
#line 125 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_dispatch_register_5_3(struct platform_driver *arg0 ) 
{ 
  struct ldv_struct_platform_instance_2 *cf_arg_2 ;
  void *tmp ;

  {
  {
#line 127
  tmp = ldv_xmalloc(16UL);
#line 127
  cf_arg_2 = (struct ldv_struct_platform_instance_2 *)tmp;
#line 128
  cf_arg_2->arg0 = arg0;
#line 129
  ldv_platform_instance_2((void *)cf_arg_2);
  }
#line 130
  return;
}
}
#line 134 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
int ldv_emg___platform_driver_register(struct platform_driver *arg0 , struct module *arg1 ) 
{ 
  struct platform_driver *ldv_5_platform_driver_platform_driver ;
  int tmp ;
  int tmp___0 ;

  {
  {
#line 141
  tmp___0 = ldv_undef_int();
  }
#line 141
  if (tmp___0 != 0) {
    {
#line 143
    ldv_5_platform_driver_platform_driver = arg0;
#line 147
    ldv_dispatch_register_5_3(ldv_5_platform_driver_platform_driver);
    }
#line 151
    return (0);
  } else {
    {
#line 158
    tmp = ldv_undef_int_negative();
    }
#line 158
    return (tmp);
  }
}
}
#line 168 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_emg_platform_driver_unregister(struct platform_driver *arg0 ) 
{ 
  struct platform_driver *ldv_6_platform_driver_platform_driver ;

  {
  {
#line 174
  ldv_6_platform_driver_platform_driver = arg0;
#line 178
  ldv_dispatch_deregister_6_1(ldv_6_platform_driver_platform_driver);
  }
#line 182
  return;
#line 184
  return;
}
}
#line 189 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_insmod_4(void *arg0 ) 
{ 
  int ldv_4_ret_default ;
  void (*ldv_4_spi_imx_driver_exit_default)(void) ;
  int (*ldv_4_spi_imx_driver_init_default)(void) ;
  int tmp ;

  {
  {
#line 197
  ldv_free(arg0);
#line 202
  ldv_4_ret_default = ldv_insmod_spi_imx_driver_init_4_6(ldv_4_spi_imx_driver_init_default);
#line 204
  ldv_4_ret_default = ldv_post_init(ldv_4_ret_default);
#line 207
  tmp = ldv_undef_int();
  }
#line 207
  if (tmp != 0) {
    {
#line 209
    __VERIFIER_assume(ldv_4_ret_default != 0);
    }
#line 217
    return;
  } else {
    {
#line 221
    __VERIFIER_assume(ldv_4_ret_default == 0);
#line 226
    ldv_insmod_spi_imx_driver_exit_4_2(ldv_4_spi_imx_driver_exit_default);
    }
#line 234
    return;
  }
#line 237
  return;
}
}
#line 242 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_insmod_spi_imx_driver_exit_4_2(void (*arg0)(void) ) 
{ 


  {
  {
#line 243
  spi_imx_driver_exit();
  }
#line 244
  return;
}
}
#line 247 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
int ldv_insmod_spi_imx_driver_init_4_6(int (*arg0)(void) ) 
{ 
  int tmp ;

  {
  {
#line 248
  tmp = spi_imx_driver_init();
  }
#line 248
  return (tmp);
}
}
#line 252 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_main_7(void *arg0 ) 
{ 


  {
  {
#line 257
  ldv_dispatch_insmod_register_7_2();
#line 261
  ldv_dispatch_insmod_deregister_7_1();
  }
#line 265
  return;
#line 267
  return;
}
}
#line 272 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_platform_instance_2(void *arg0 ) 
{ 
  struct platform_driver *ldv_2_container_platform_driver ;
  int ldv_2_probed_default ;
  struct platform_device *ldv_2_resource_platform_device ;
  struct ldv_struct_platform_instance_2 *data ;
  void *tmp ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;

  {
  {
#line 279
  data = (struct ldv_struct_platform_instance_2 *)arg0;
#line 283
  ldv_2_probed_default = ldv_undef_int();
  }
#line 286
  if ((unsigned long )data != (unsigned long )((struct ldv_struct_platform_instance_2 *)0)) {
    {
#line 287
    ldv_2_container_platform_driver = data->arg0;
#line 288
    ldv_free((void *)data);
    }
  } else {

  }
  {
#line 293
  tmp = ldv_xmalloc(1432UL);
#line 293
  ldv_2_resource_platform_device = (struct platform_device *)tmp;
  }
#line 300
  goto ldv_main_2;
#line 302
  return;
  ldv_main_2: 
  {
#line 308
  tmp___1 = ldv_undef_int();
  }
#line 308
  if (tmp___1 != 0) {
    {
#line 311
    ldv_pre_probe();
#line 313
    ldv_2_probed_default = ldv_platform_instance_probe_2_14(ldv_2_container_platform_driver->probe,
                                                            ldv_2_resource_platform_device);
#line 315
    ldv_2_probed_default = ldv_post_probe(ldv_2_probed_default);
#line 318
    tmp___0 = ldv_undef_int();
    }
#line 318
    if (tmp___0 != 0) {
      {
#line 320
      __VERIFIER_assume(ldv_2_probed_default == 0);
      }
#line 327
      goto ldv_call_2;
    } else {
      {
#line 331
      __VERIFIER_assume(ldv_2_probed_default != 0);
      }
#line 338
      goto ldv_main_2;
    }
  } else {
    {
#line 343
    ldv_free((void *)ldv_2_resource_platform_device);
    }
#line 351
    return;
  }
#line 354
  return;
  ldv_call_2: 
  {
#line 360
  tmp___2 = ldv_undef_int();
  }
  {
#line 361
  if (tmp___2 == 1) {
#line 361
    goto case_1;
  } else {

  }
#line 373
  if (tmp___2 == 2) {
#line 373
    goto case_2;
  } else {

  }
#line 389
  if (tmp___2 == 3) {
#line 389
    goto case_3;
  } else {

  }
#line 406
  goto switch_default;
  case_1: /* CIL Label */ ;
#line 370
  goto ldv_call_2;
  case_2: /* CIL Label */ 
  {
#line 375
  ldv_dispatch_pm_register_2_6();
#line 379
  ldv_dispatch_pm_deregister_2_5();
  }
#line 386
  goto ldv_call_2;
  case_3: /* CIL Label */ 
  {
#line 392
  ldv_platform_instance_release_2_3(ldv_2_container_platform_driver->remove, ldv_2_resource_platform_device);
#line 396
  ldv_2_probed_default = 1;
  }
#line 403
  goto ldv_main_2;
  switch_default: /* CIL Label */ 
  {
#line 406
  __VERIFIER_assume(0);
  }
  switch_break: /* CIL Label */ ;
  }
#line 409
  return;
}
}
#line 414 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
int ldv_platform_instance_probe_2_14(int (*arg0)(struct platform_device * ) , struct platform_device *arg1 ) 
{ 
  int tmp ;

  {
  {
#line 415
  tmp = spi_imx_probe(arg1);
  }
#line 415
  return (tmp);
}
}
#line 419 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_platform_instance_release_2_3(int (*arg0)(struct platform_device * ) , struct platform_device *arg1 ) 
{ 


  {
  {
#line 420
  spi_imx_remove(arg1);
  }
#line 421
  return;
}
}
#line 424 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_pm_ops_scenario_3(void *arg0 ) 
{ 
  struct device *ldv_3_device_device ;
  struct dev_pm_ops *ldv_3_pm_ops_dev_pm_ops ;
  int tmp ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  int tmp___3 ;

  {
  {
#line 431
  ldv_free(arg0);
  }
#line 438
  goto ldv_do_3;
#line 440
  return;
  ldv_do_3: 
  {
#line 446
  tmp = ldv_undef_int();
  }
  {
#line 447
  if (tmp == 1) {
#line 447
    goto case_1;
  } else {

  }
#line 462
  if (tmp == 2) {
#line 462
    goto case_2;
  } else {

  }
#line 484
  if (tmp == 3) {
#line 484
    goto case_3;
  } else {

  }
#line 656
  if (tmp == 4) {
#line 656
    goto case_4;
  } else {

  }
#line 665
  goto switch_default___0;
  case_1: /* CIL Label */ ;
#line 449
  if ((unsigned long )ldv_3_pm_ops_dev_pm_ops->runtime_idle != (unsigned long )((int (*)(struct device * ))0)) {
    {
#line 451
    ldv_pm_ops_scenario_runtime_idle_3_27(ldv_3_pm_ops_dev_pm_ops->runtime_idle, ldv_3_device_device);
    }
  } else {

  }
#line 459
  goto ldv_do_3;
  case_2: /* CIL Label */ ;
#line 464
  if ((unsigned long )ldv_3_pm_ops_dev_pm_ops->runtime_suspend != (unsigned long )((int (*)(struct device * ))0)) {
    {
#line 466
    ldv_pm_ops_scenario_runtime_suspend_3_25(ldv_3_pm_ops_dev_pm_ops->runtime_suspend,
                                             ldv_3_device_device);
    }
  } else {

  }
#line 471
  if ((unsigned long )ldv_3_pm_ops_dev_pm_ops->runtime_resume != (unsigned long )((int (*)(struct device * ))0)) {
    {
#line 473
    ldv_pm_ops_scenario_runtime_resume_3_24(ldv_3_pm_ops_dev_pm_ops->runtime_resume,
                                            ldv_3_device_device);
    }
  } else {

  }
#line 481
  goto ldv_do_3;
  case_3: /* CIL Label */ ;
#line 486
  if ((unsigned long )ldv_3_pm_ops_dev_pm_ops->prepare != (unsigned long )((int (*)(struct device * ))0)) {
    {
#line 488
    ldv_pm_ops_scenario_prepare_3_22(ldv_3_pm_ops_dev_pm_ops->prepare, ldv_3_device_device);
    }
  } else {

  }
  {
#line 492
  tmp___0 = ldv_undef_int();
  }
  {
#line 493
  if (tmp___0 == 1) {
#line 493
    goto case_1___0;
  } else {

  }
#line 542
  if (tmp___0 == 2) {
#line 542
    goto case_2___0;
  } else {

  }
#line 591
  if (tmp___0 == 3) {
#line 591
    goto case_3___0;
  } else {

  }
#line 640
  goto switch_default;
  case_1___0: /* CIL Label */ ;
#line 495
  if ((unsigned long )ldv_3_pm_ops_dev_pm_ops->suspend != (unsigned long )((int (*)(struct device * ))0)) {
    {
#line 497
    ldv_pm_ops_scenario_suspend_3_21(ldv_3_pm_ops_dev_pm_ops->suspend, ldv_3_device_device);
    }
  } else {

  }
  {
#line 501
  tmp___1 = ldv_undef_int();
  }
#line 501
  if (tmp___1 != 0) {
#line 503
    if ((unsigned long )ldv_3_pm_ops_dev_pm_ops->suspend_noirq != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 505
      ldv_pm_ops_scenario_suspend_noirq_3_20(ldv_3_pm_ops_dev_pm_ops->suspend_noirq,
                                             ldv_3_device_device);
      }
    } else {

    }
#line 510
    if ((unsigned long )ldv_3_pm_ops_dev_pm_ops->resume_noirq != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 512
      ldv_pm_ops_scenario_resume_noirq_3_19(ldv_3_pm_ops_dev_pm_ops->resume_noirq,
                                            ldv_3_device_device);
      }
    } else {

    }
  } else {
#line 519
    if ((unsigned long )ldv_3_pm_ops_dev_pm_ops->suspend_late != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 521
      ldv_pm_ops_scenario_suspend_late_3_18(ldv_3_pm_ops_dev_pm_ops->suspend_late,
                                            ldv_3_device_device);
      }
    } else {

    }
#line 526
    if ((unsigned long )ldv_3_pm_ops_dev_pm_ops->resume_early != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 528
      ldv_pm_ops_scenario_resume_early_3_17(ldv_3_pm_ops_dev_pm_ops->resume_early,
                                            ldv_3_device_device);
      }
    } else {

    }
  }
#line 534
  if ((unsigned long )ldv_3_pm_ops_dev_pm_ops->resume != (unsigned long )((int (*)(struct device * ))0)) {
    {
#line 536
    ldv_pm_ops_scenario_resume_3_16(ldv_3_pm_ops_dev_pm_ops->resume, ldv_3_device_device);
    }
  } else {

  }
#line 540
  goto ldv_23150;
  case_2___0: /* CIL Label */ ;
#line 544
  if ((unsigned long )ldv_3_pm_ops_dev_pm_ops->freeze != (unsigned long )((int (*)(struct device * ))0)) {
    {
#line 546
    ldv_pm_ops_scenario_freeze_3_15(ldv_3_pm_ops_dev_pm_ops->freeze, ldv_3_device_device);
    }
  } else {

  }
  {
#line 550
  tmp___2 = ldv_undef_int();
  }
#line 550
  if (tmp___2 != 0) {
#line 552
    if ((unsigned long )ldv_3_pm_ops_dev_pm_ops->freeze_late != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 554
      ldv_pm_ops_scenario_freeze_late_3_14(ldv_3_pm_ops_dev_pm_ops->freeze_late, ldv_3_device_device);
      }
    } else {

    }
#line 559
    if ((unsigned long )ldv_3_pm_ops_dev_pm_ops->thaw_early != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 561
      ldv_pm_ops_scenario_thaw_early_3_13(ldv_3_pm_ops_dev_pm_ops->thaw_early, ldv_3_device_device);
      }
    } else {

    }
  } else {
#line 568
    if ((unsigned long )ldv_3_pm_ops_dev_pm_ops->freeze_noirq != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 570
      ldv_pm_ops_scenario_freeze_noirq_3_12(ldv_3_pm_ops_dev_pm_ops->freeze_noirq,
                                            ldv_3_device_device);
      }
    } else {

    }
#line 575
    if ((unsigned long )ldv_3_pm_ops_dev_pm_ops->thaw_noirq != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 577
      ldv_pm_ops_scenario_thaw_noirq_3_11(ldv_3_pm_ops_dev_pm_ops->thaw_noirq, ldv_3_device_device);
      }
    } else {

    }
  }
#line 583
  if ((unsigned long )ldv_3_pm_ops_dev_pm_ops->thaw != (unsigned long )((int (*)(struct device * ))0)) {
    {
#line 585
    ldv_pm_ops_scenario_thaw_3_10(ldv_3_pm_ops_dev_pm_ops->thaw, ldv_3_device_device);
    }
  } else {

  }
#line 589
  goto ldv_23150;
  case_3___0: /* CIL Label */ ;
#line 593
  if ((unsigned long )ldv_3_pm_ops_dev_pm_ops->poweroff != (unsigned long )((int (*)(struct device * ))0)) {
    {
#line 595
    ldv_pm_ops_scenario_poweroff_3_9(ldv_3_pm_ops_dev_pm_ops->poweroff, ldv_3_device_device);
    }
  } else {

  }
  {
#line 599
  tmp___3 = ldv_undef_int();
  }
#line 599
  if (tmp___3 != 0) {
#line 601
    if ((unsigned long )ldv_3_pm_ops_dev_pm_ops->poweroff_late != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 603
      ldv_pm_ops_scenario_poweroff_late_3_8(ldv_3_pm_ops_dev_pm_ops->poweroff_late,
                                            ldv_3_device_device);
      }
    } else {

    }
#line 608
    if ((unsigned long )ldv_3_pm_ops_dev_pm_ops->restore_early != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 610
      ldv_pm_ops_scenario_restore_early_3_7(ldv_3_pm_ops_dev_pm_ops->restore_early,
                                            ldv_3_device_device);
      }
    } else {

    }
  } else {
#line 617
    if ((unsigned long )ldv_3_pm_ops_dev_pm_ops->poweroff_noirq != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 619
      ldv_pm_ops_scenario_poweroff_noirq_3_6(ldv_3_pm_ops_dev_pm_ops->poweroff_noirq,
                                             ldv_3_device_device);
      }
    } else {

    }
#line 624
    if ((unsigned long )ldv_3_pm_ops_dev_pm_ops->restore_noirq != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 626
      ldv_pm_ops_scenario_restore_noirq_3_5(ldv_3_pm_ops_dev_pm_ops->restore_noirq,
                                            ldv_3_device_device);
      }
    } else {

    }
  }
#line 632
  if ((unsigned long )ldv_3_pm_ops_dev_pm_ops->restore != (unsigned long )((int (*)(struct device * ))0)) {
    {
#line 634
    ldv_pm_ops_scenario_restore_3_4(ldv_3_pm_ops_dev_pm_ops->restore, ldv_3_device_device);
    }
  } else {

  }
#line 638
  goto ldv_23150;
  switch_default: /* CIL Label */ 
  {
#line 640
  __VERIFIER_assume(0);
  }
  switch_break___0: /* CIL Label */ ;
  }
  ldv_23150: ;
#line 643
  if ((unsigned long )ldv_3_pm_ops_dev_pm_ops->complete != (unsigned long )((void (*)(struct device * ))0)) {
    {
#line 645
    ldv_pm_ops_scenario_complete_3_3(ldv_3_pm_ops_dev_pm_ops->complete, ldv_3_device_device);
    }
  } else {

  }
#line 653
  goto ldv_do_3;
  case_4: /* CIL Label */ ;
#line 662
  return;
  switch_default___0: /* CIL Label */ 
  {
#line 665
  __VERIFIER_assume(0);
  }
  switch_break: /* CIL Label */ ;
  }
#line 668
  return;
}
}
#line 673 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_pm_ops_scenario_complete_3_3(void (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 674
  (*arg0)(arg1);
  }
#line 675
  return;
}
}
#line 678 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_pm_ops_scenario_freeze_3_15(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 679
  (*arg0)(arg1);
  }
#line 680
  return;
}
}
#line 683 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_pm_ops_scenario_freeze_late_3_14(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 684
  (*arg0)(arg1);
  }
#line 685
  return;
}
}
#line 688 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_pm_ops_scenario_freeze_noirq_3_12(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 689
  (*arg0)(arg1);
  }
#line 690
  return;
}
}
#line 693 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_pm_ops_scenario_poweroff_3_9(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 694
  (*arg0)(arg1);
  }
#line 695
  return;
}
}
#line 698 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_pm_ops_scenario_poweroff_late_3_8(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 699
  (*arg0)(arg1);
  }
#line 700
  return;
}
}
#line 703 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_pm_ops_scenario_poweroff_noirq_3_6(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 704
  (*arg0)(arg1);
  }
#line 705
  return;
}
}
#line 708 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_pm_ops_scenario_prepare_3_22(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 709
  (*arg0)(arg1);
  }
#line 710
  return;
}
}
#line 713 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_pm_ops_scenario_restore_3_4(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 714
  (*arg0)(arg1);
  }
#line 715
  return;
}
}
#line 718 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_pm_ops_scenario_restore_early_3_7(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 719
  (*arg0)(arg1);
  }
#line 720
  return;
}
}
#line 723 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_pm_ops_scenario_restore_noirq_3_5(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 724
  (*arg0)(arg1);
  }
#line 725
  return;
}
}
#line 728 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_pm_ops_scenario_resume_3_16(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 729
  (*arg0)(arg1);
  }
#line 730
  return;
}
}
#line 733 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_pm_ops_scenario_resume_early_3_17(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 734
  (*arg0)(arg1);
  }
#line 735
  return;
}
}
#line 738 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_pm_ops_scenario_resume_noirq_3_19(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 739
  (*arg0)(arg1);
  }
#line 740
  return;
}
}
#line 743 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_pm_ops_scenario_runtime_idle_3_27(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 744
  (*arg0)(arg1);
  }
#line 745
  return;
}
}
#line 748 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_pm_ops_scenario_runtime_resume_3_24(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 749
  (*arg0)(arg1);
  }
#line 750
  return;
}
}
#line 753 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_pm_ops_scenario_runtime_suspend_3_25(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 754
  (*arg0)(arg1);
  }
#line 755
  return;
}
}
#line 758 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_pm_ops_scenario_suspend_3_21(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 759
  (*arg0)(arg1);
  }
#line 760
  return;
}
}
#line 763 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_pm_ops_scenario_suspend_late_3_18(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 764
  (*arg0)(arg1);
  }
#line 765
  return;
}
}
#line 768 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_pm_ops_scenario_suspend_noirq_3_20(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 769
  (*arg0)(arg1);
  }
#line 770
  return;
}
}
#line 773 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_pm_ops_scenario_thaw_3_10(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 774
  (*arg0)(arg1);
  }
#line 775
  return;
}
}
#line 778 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_pm_ops_scenario_thaw_early_3_13(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 779
  (*arg0)(arg1);
  }
#line 780
  return;
}
}
#line 783 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
void ldv_pm_ops_scenario_thaw_noirq_3_11(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 784
  (*arg0)(arg1);
  }
#line 785
  return;
}
}
#line 788 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
int main(void) 
{ 


  {
  {
#line 791
  ldv_initialize();
#line 794
  ldv_main_7((void *)0);
#line 797
  ldv_check_final_state();
  }
#line 799
  return (0);
}
}
#line 812 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
__inline static long PTR_ERR(void const   *ptr ) 
{ 
  long tmp ;

  {
  {
#line 815
  tmp = ldv_ptr_err(ptr);
  }
#line 815
  return (tmp);
}
}
#line 819 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
__inline static long IS_ERR(void const   *ptr ) 
{ 
  long tmp ;

  {
  {
#line 822
  tmp = ldv_is_err(ptr);
  }
#line 822
  return (tmp);
}
}
#line 833 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
static void *ldv_dev_get_drvdata_5(struct device  const  *dev ) 
{ 
  void *tmp ;

  {
  {
#line 836
  tmp = ldv_dev_get_drvdata(dev);
  }
#line 836
  return (tmp);
}
}
#line 840 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
static int ldv_dev_set_drvdata_6(struct device *dev , void *data ) 
{ 
  int tmp ;

  {
  {
#line 843
  tmp = ldv_dev_set_drvdata(dev, data);
  }
#line 843
  return (tmp);
}
}
#line 903 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
static void *ldv_dev_get_drvdata_15(struct device  const  *dev ) 
{ 
  void *tmp ;

  {
  {
#line 906
  tmp = ldv_dev_get_drvdata(dev);
  }
#line 906
  return (tmp);
}
}
#line 917 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
static struct spi_master *ldv_spi_alloc_master_17(struct device *host , unsigned int size ) 
{ 
  struct spi_master *tmp ;

  {
  {
#line 920
  tmp = ldv_spi_alloc_master(host, size);
  }
#line 920
  return (tmp);
}
}
#line 924 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
__inline static int ldv_clk_prepare_enable_18(struct clk *clk ) 
{ 
  int tmp ;

  {
  {
#line 927
  tmp = ldv_clk_enable_clk_per_of_spi_imx_data();
  }
#line 927
  return (tmp);
}
}
#line 931 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
__inline static int ldv_clk_prepare_enable_19(struct clk *clk ) 
{ 
  int tmp ;

  {
  {
#line 934
  tmp = ldv_clk_enable_clk_ipg_of_spi_imx_data();
  }
#line 934
  return (tmp);
}
}
#line 938 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
__inline static void ldv_clk_disable_unprepare_20(struct clk *clk ) 
{ 


  {
  {
#line 941
  ldv_clk_disable_clk_ipg_of_spi_imx_data(clk);
  }
#line 942
  return;
}
}
#line 945 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
__inline static void ldv_clk_disable_unprepare_21(struct clk *clk ) 
{ 


  {
  {
#line 948
  ldv_clk_disable_clk_per_of_spi_imx_data(clk);
  }
#line 949
  return;
}
}
#line 952 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
static int ldv___platform_driver_register_22(struct platform_driver *ldv_func_arg1 ,
                                             struct module *ldv_func_arg2 ) 
{ 
  int tmp ;

  {
  {
#line 956
  tmp = ldv_emg___platform_driver_register(ldv_func_arg1, ldv_func_arg2);
  }
#line 956
  return (tmp);
}
}
#line 960 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/weaver/.tmp_spi-imx.c.aux"
static void ldv_platform_driver_unregister_23(struct platform_driver *ldv_func_arg1 ) 
{ 


  {
  {
#line 964
  ldv_emg_platform_driver_unregister(ldv_func_arg1);
  }
#line 965
  return;
}
}
#line 29 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.h"
void *ldv_xzalloc(size_t size ) ;
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device  const  *dev ) 
{ 


  {
#line 29
  if ((unsigned long )dev != (unsigned long )((struct device  const  *)0) && (unsigned long )dev->p != (unsigned long )((struct device_private */* const  */)0)) {
#line 30
    return ((dev->p)->driver_data);
  } else {

  }
#line 32
  return ((void *)0);
}
}
#line 41 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev , void *data ) 
{ 
  void *tmp ;

  {
  {
#line 43
  tmp = ldv_xzalloc(8UL);
#line 43
  dev->p = (struct device_private *)tmp;
#line 44
  (dev->p)->driver_data = data;
  }
#line 46
  return (0);
}
}
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.h"
void *ldv_zalloc(size_t size ) ;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host , unsigned int size ) 
{ 
  struct spi_master *master ;
  void *tmp ;

  {
  {
#line 27
  tmp = ldv_zalloc((unsigned long )size + 2072UL);
#line 27
  master = (struct spi_master *)tmp;
  }
#line 29
  if ((unsigned long )master == (unsigned long )((struct spi_master *)0)) {
#line 30
    return ((struct spi_master *)0);
  } else {

  }
  {
#line 32
  ldv_dev_set_drvdata(& master->dev, (void *)(master + 1UL));
  }
#line 34
  return (master);
}
}
#line 28 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/err.h"
long ldv_is_err_or_null(void const   *ptr ) ;
#line 29
void *ldv_err_ptr(long error ) ;
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/err.c"
long ldv_is_err(void const   *ptr ) 
{ 


  {
#line 22
  return ((unsigned long )ptr > 4294967295UL);
}
}
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/err.c"
void *ldv_err_ptr(long error ) 
{ 


  {
#line 27
  return ((void *)(4294967295L - error));
}
}
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/err.c"
long ldv_ptr_err(void const   *ptr ) 
{ 


  {
#line 32
  return ((long )(4294967295UL - (unsigned long )ptr));
}
}
#line 35 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/err.c"
long ldv_is_err_or_null(void const   *ptr ) 
{ 
  long tmp ;
  int tmp___0 ;

  {
#line 37
  if ((unsigned long )ptr == (unsigned long )((void const   *)0)) {
#line 37
    tmp___0 = 1;
  } else {
    {
#line 37
    tmp = ldv_is_err(ptr);
    }
#line 37
    if (tmp != 0L) {
#line 37
      tmp___0 = 1;
    } else {
#line 37
      tmp___0 = 0;
    }
  }
#line 37
  return ((long )tmp___0);
}
}
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void) ;
#line 42
void ldv_switch_to_process_context(void) ;
#line 50
bool ldv_in_interrupt_context(void) ;
#line 141
int ldv_filter_err_code(int ret_val ) ;
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.c"
static bool __ldv_in_interrupt_context  =    0;
#line 28 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void) 
{ 


  {
#line 30
  __ldv_in_interrupt_context = 1;
#line 31
  return;
}
}
#line 34 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.c"
void ldv_switch_to_process_context(void) 
{ 


  {
#line 36
  __ldv_in_interrupt_context = 0;
#line 37
  return;
}
}
#line 39 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.c"
bool ldv_in_interrupt_context(void) 
{ 


  {
#line 41
  return (__ldv_in_interrupt_context);
}
}
#line 44 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.c"
static int ldv_filter_positive_int(int val ) 
{ 


  {
  {
#line 46
  __VERIFIER_assume(val <= 0);
  }
#line 47
  return (val);
}
}
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.c"
int ldv_post_init(int init_ret_val ) 
{ 
  int tmp ;

  {
  {
#line 56
  tmp = ldv_filter_positive_int(init_ret_val);
  }
#line 56
  return (tmp);
}
}
#line 60 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val ) 
{ 
  int tmp ;

  {
  {
#line 62
  tmp = ldv_filter_positive_int(probe_ret_val);
  }
#line 62
  return (tmp);
}
}
#line 66 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val ) 
{ 
  int tmp ;

  {
  {
#line 68
  tmp = ldv_filter_positive_int(ret_val);
  }
#line 68
  return (tmp);
}
}
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size , gfp_t flags ) ;
#line 24
void *ldv_kmalloc(size_t size , gfp_t flags ) ;
#line 25
void *ldv_kcalloc(size_t n , size_t size , gfp_t flags ) ;
#line 26
void *ldv_kmalloc_array(size_t n , size_t size , gfp_t flags ) ;
#line 28
extern void ldv_check_alloc_flags(gfp_t  ) ;
#line 29
extern void ldv_after_alloc(void * ) ;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.h"
void *ldv_malloc(size_t size ) ;
#line 24
void *ldv_calloc(size_t nmemb , size_t size ) ;
#line 21 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/mm/slab.c"
void *ldv_kmalloc(size_t size , gfp_t flags ) 
{ 
  void *res ;

  {
  {
#line 25
  ldv_check_alloc_flags(flags);
#line 26
  res = ldv_malloc(size);
#line 27
  ldv_after_alloc(res);
  }
#line 29
  return (res);
}
}
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/mm/slab.c"
void *ldv_kcalloc(size_t n , size_t size , gfp_t flags ) 
{ 
  void *res ;

  {
  {
#line 36
  ldv_check_alloc_flags(flags);
#line 37
  res = ldv_calloc(n, size);
#line 38
  ldv_after_alloc(res);
  }
#line 40
  return (res);
}
}
#line 43 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/mm/slab.c"
void *ldv_kzalloc(size_t size , gfp_t flags ) 
{ 
  void *res ;

  {
  {
#line 47
  ldv_check_alloc_flags(flags);
#line 48
  res = ldv_zalloc(size);
#line 49
  ldv_after_alloc(res);
  }
#line 51
  return (res);
}
}
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n , size_t size , gfp_t flags ) 
{ 
  void *res ;

  {
  {
#line 58
  ldv_check_alloc_flags(flags);
#line 59
  res = ldv_malloc(n * size);
#line 60
  ldv_after_alloc(res);
  }
#line 62
  return (res);
}
}
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/common.h"
extern void __VERIFIER_error(void) ;
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/gcc.c"
long __builtin_expect(long exp , long c ) 
{ 


  {
#line 26
  return (exp);
}
}
#line 35 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/gcc.c"
void __builtin_trap(void) 
{ 


  {
  {
#line 37
  __VERIFIER_error();
  }
#line 38
  return;
}
}
#line 31 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.h"
extern void *external_allocated_data(void) ;
#line 33
void *ldv_malloc_unknown_size(void) ;
#line 34
void *ldv_calloc_unknown_size(void) ;
#line 35
void *ldv_zalloc_unknown_size(void) ;
#line 41
void *ldv_xmalloc_unknown_size(size_t size ) ;
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
extern void *malloc(size_t  ) ;
#line 25
extern void *calloc(size_t  , size_t  ) ;
#line 26
extern void free(void * ) ;
#line 27
extern void *memset(void * , int  , size_t  ) ;
#line 29 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_malloc(size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;
  int tmp___1 ;

  {
  {
#line 31
  tmp___1 = ldv_undef_int();
  }
#line 31
  if (tmp___1 != 0) {
    {
#line 32
    tmp = malloc(size);
#line 32
    res = tmp;
#line 34
    __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 35
    tmp___0 = ldv_is_err((void const   *)res);
#line 35
    __VERIFIER_assume(tmp___0 == 0L);
    }
#line 37
    return (res);
  } else {
#line 40
    return ((void *)0);
  }
}
}
#line 43 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_calloc(size_t nmemb , size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;
  int tmp___1 ;

  {
  {
#line 45
  tmp___1 = ldv_undef_int();
  }
#line 45
  if (tmp___1 != 0) {
    {
#line 46
    tmp = calloc(nmemb, size);
#line 46
    res = tmp;
#line 48
    __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 49
    tmp___0 = ldv_is_err((void const   *)res);
#line 49
    __VERIFIER_assume(tmp___0 == 0L);
    }
#line 51
    return (res);
  } else {
#line 54
    return ((void *)0);
  }
}
}
#line 57 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_zalloc(size_t size ) 
{ 
  void *tmp ;

  {
  {
#line 59
  tmp = ldv_calloc(1UL, size);
  }
#line 59
  return (tmp);
}
}
#line 62 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void ldv_free(void *s ) 
{ 


  {
  {
#line 64
  free(s);
  }
#line 65
  return;
}
}
#line 67 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_xmalloc(size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;

  {
  {
#line 69
  tmp = malloc(size);
#line 69
  res = tmp;
#line 71
  __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 72
  tmp___0 = ldv_is_err((void const   *)res);
#line 72
  __VERIFIER_assume(tmp___0 == 0L);
  }
#line 74
  return (res);
}
}
#line 77 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_xzalloc(size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;

  {
  {
#line 79
  tmp = calloc(1UL, size);
#line 79
  res = tmp;
#line 81
  __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 82
  tmp___0 = ldv_is_err((void const   *)res);
#line 82
  __VERIFIER_assume(tmp___0 == 0L);
  }
#line 84
  return (res);
}
}
#line 87 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_malloc_unknown_size(void) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;
  int tmp___1 ;

  {
  {
#line 89
  tmp___1 = ldv_undef_int();
  }
#line 89
  if (tmp___1 != 0) {
    {
#line 90
    tmp = external_allocated_data();
#line 90
    res = tmp;
#line 92
    __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 93
    tmp___0 = ldv_is_err((void const   *)res);
#line 93
    __VERIFIER_assume(tmp___0 == 0L);
    }
#line 95
    return (res);
  } else {
#line 98
    return ((void *)0);
  }
}
}
#line 101 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_calloc_unknown_size(void) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;
  int tmp___1 ;

  {
  {
#line 103
  tmp___1 = ldv_undef_int();
  }
#line 103
  if (tmp___1 != 0) {
    {
#line 104
    tmp = external_allocated_data();
#line 104
    res = tmp;
#line 106
    memset(res, 0, 8UL);
#line 107
    __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 108
    tmp___0 = ldv_is_err((void const   *)res);
#line 108
    __VERIFIER_assume(tmp___0 == 0L);
    }
#line 110
    return (res);
  } else {
#line 113
    return ((void *)0);
  }
}
}
#line 116 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_zalloc_unknown_size(void) 
{ 
  void *tmp ;

  {
  {
#line 118
  tmp = ldv_calloc_unknown_size();
  }
#line 118
  return (tmp);
}
}
#line 121 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;

  {
  {
#line 123
  tmp = external_allocated_data();
#line 123
  res = tmp;
#line 125
  __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 126
  tmp___0 = ldv_is_err((void const   *)res);
#line 126
  __VERIFIER_assume(tmp___0 == 0L);
  }
#line 128
  return (res);
}
}
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.h"
int ldv_undef_long(void) ;
#line 24
unsigned int ldv_undef_uint(void) ;
#line 25
unsigned long ldv_undef_ulong(void) ;
#line 26
unsigned long long ldv_undef_ulonglong(void) ;
#line 27
void *ldv_undef_ptr(void) ;
#line 30
int ldv_undef_int_positive(void) ;
#line 36
int ldv_undef_int_nonpositive(void) ;
#line 39
void *ldv_undef_ptr_non_null(void) ;
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
extern int __VERIFIER_nondet_int(void) ;
#line 26
extern long __VERIFIER_nondet_long(void) ;
#line 33
extern unsigned int __VERIFIER_nondet_uint(void) ;
#line 36
extern unsigned long __VERIFIER_nondet_ulong(void) ;
#line 37
extern unsigned long long __VERIFIER_nondet_ulonglong(void) ;
#line 38
extern void *__VERIFIER_nondet_pointer(void) ;
#line 41 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
int ldv_undef_int(void) 
{ 
  int tmp ;

  {
  {
#line 43
  tmp = __VERIFIER_nondet_int();
  }
#line 43
  return (tmp);
}
}
#line 46 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
int ldv_undef_long(void) 
{ 
  long tmp ;

  {
  {
#line 48
  tmp = __VERIFIER_nondet_long();
  }
#line 48
  return ((int )tmp);
}
}
#line 51 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
unsigned int ldv_undef_uint(void) 
{ 
  unsigned int tmp ;

  {
  {
#line 53
  tmp = __VERIFIER_nondet_uint();
  }
#line 53
  return (tmp);
}
}
#line 56 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
void *ldv_undef_ptr(void) 
{ 
  void *tmp ;

  {
  {
#line 58
  tmp = __VERIFIER_nondet_pointer();
  }
#line 58
  return (tmp);
}
}
#line 61 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
unsigned long ldv_undef_ulong(void) 
{ 
  unsigned long tmp ;

  {
  {
#line 63
  tmp = __VERIFIER_nondet_ulong();
  }
#line 63
  return (tmp);
}
}
#line 66 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void) 
{ 
  unsigned long long tmp ;

  {
  {
#line 68
  tmp = __VERIFIER_nondet_ulonglong();
  }
#line 68
  return (tmp);
}
}
#line 71 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
int ldv_undef_int_positive(void) 
{ 
  int ret ;
  int tmp ;

  {
  {
#line 73
  tmp = ldv_undef_int();
#line 73
  ret = tmp;
#line 75
  __VERIFIER_assume(ret > 0);
  }
#line 77
  return (ret);
}
}
#line 80 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
int ldv_undef_int_negative(void) 
{ 
  int ret ;
  int tmp ;

  {
  {
#line 82
  tmp = ldv_undef_int();
#line 82
  ret = tmp;
#line 84
  __VERIFIER_assume(ret < 0);
  }
#line 86
  return (ret);
}
}
#line 89 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
int ldv_undef_int_nonpositive(void) 
{ 
  int ret ;
  int tmp ;

  {
  {
#line 91
  tmp = ldv_undef_int();
#line 91
  ret = tmp;
#line 93
  __VERIFIER_assume(ret <= 0);
  }
#line 95
  return (ret);
}
}
#line 98 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void) 
{ 
  void *ret ;
  int tmp ;

  {
  {
#line 100
  tmp = ldv_undef_int();
#line 100
  ret = (void *)((long )tmp);
#line 102
  __VERIFIER_assume((unsigned long )ret != (unsigned long )((void *)0));
  }
#line 104
  return (ret);
}
}
#line 1 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/rsg/models/clk1.bk.c"
void ldv_assert_linux_drivers_clk1__more_at_exit(int expr ) ;
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/tr/linux/drivers/clk1.c"
int ldv_counter_clk  =    0;
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/tr/linux/drivers/clk1.c"
void ldv_clk_disable_clk(struct clk *clk ) 
{ 


  {
#line 30
  ldv_counter_clk = 0;
#line 31
  return;
}
}
#line 34 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/tr/linux/drivers/clk1.c"
int ldv_clk_enable_clk(void) 
{ 
  int retval ;
  int tmp ;

  {
  {
#line 36
  tmp = ldv_undef_int();
#line 36
  retval = tmp;
  }
#line 37
  if (retval == 0) {
#line 39
    ldv_counter_clk = 1;
  } else {

  }
#line 41
  return (retval);
}
}
#line 44 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/tr/linux/drivers/clk1.c"
int ldv_counter_clk_ipg_of_spi_imx_data  =    0;
#line 47 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/tr/linux/drivers/clk1.c"
void ldv_clk_disable_clk_ipg_of_spi_imx_data(struct clk *clk ) 
{ 


  {
#line 50
  ldv_counter_clk_ipg_of_spi_imx_data = 0;
#line 51
  return;
}
}
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/tr/linux/drivers/clk1.c"
int ldv_clk_enable_clk_ipg_of_spi_imx_data(void) 
{ 
  int retval ;
  int tmp ;

  {
  {
#line 56
  tmp = ldv_undef_int();
#line 56
  retval = tmp;
  }
#line 57
  if (retval == 0) {
#line 59
    ldv_counter_clk_ipg_of_spi_imx_data = 1;
  } else {

  }
#line 61
  return (retval);
}
}
#line 64 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/tr/linux/drivers/clk1.c"
int ldv_counter_clk_per_of_spi_imx_data  =    0;
#line 67 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/tr/linux/drivers/clk1.c"
void ldv_clk_disable_clk_per_of_spi_imx_data(struct clk *clk ) 
{ 


  {
#line 70
  ldv_counter_clk_per_of_spi_imx_data = 0;
#line 71
  return;
}
}
#line 74 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/tr/linux/drivers/clk1.c"
int ldv_clk_enable_clk_per_of_spi_imx_data(void) 
{ 
  int retval ;
  int tmp ;

  {
  {
#line 76
  tmp = ldv_undef_int();
#line 76
  retval = tmp;
  }
#line 77
  if (retval == 0) {
#line 79
    ldv_counter_clk_per_of_spi_imx_data = 1;
  } else {

  }
#line 81
  return (retval);
}
}
#line 84 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/tr/linux/drivers/clk1.c"
void ldv_check_final_state(void) 
{ 


  {
  {
#line 87
  ldv_assert_linux_drivers_clk1__more_at_exit(ldv_counter_clk == 0);
#line 89
  ldv_assert_linux_drivers_clk1__more_at_exit(ldv_counter_clk_ipg_of_spi_imx_data == 0);
#line 91
  ldv_assert_linux_drivers_clk1__more_at_exit(ldv_counter_clk_per_of_spi_imx_data == 0);
  }
#line 92
  return;
}
}
#line 3 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/5/vtg/drivers/spi/spi-imx.ko/linux:drivers:clk1/fvtp/bug kind funcs.c"
void ldv_assert_linux_drivers_clk1__more_at_exit(int expr ) 
{ 


  {
#line 4
  if (! expr) {
    {
#line 5
    __VERIFIER_error();
    }
  } else {

  }
#line 6
  return;
}
}
