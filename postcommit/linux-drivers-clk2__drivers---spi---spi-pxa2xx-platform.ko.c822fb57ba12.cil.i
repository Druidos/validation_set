/* Generated by CIL v. 1.5.1 */
/* print_CIL_Input is false */

#line 7 ".tmp_spi-pxa2xx.c"
struct device;
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/device.h"
struct spi_master;
#line 19 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef signed char __s8;
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef unsigned char __u8;
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef short __s16;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef unsigned short __u16;
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef int __s32;
#line 26 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef unsigned int __u32;
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/int-ll64.h"
typedef unsigned long long __u64;
#line 16 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/asm-generic/int-ll64.h"
typedef unsigned char u8;
#line 18 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/asm-generic/int-ll64.h"
typedef short s16;
#line 19 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/asm-generic/int-ll64.h"
typedef unsigned short u16;
#line 21 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/asm-generic/int-ll64.h"
typedef int s32;
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/asm-generic/int-ll64.h"
typedef unsigned int u32;
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/asm-generic/int-ll64.h"
typedef long long s64;
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/asm-generic/int-ll64.h"
typedef unsigned long long u64;
#line 14 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/posix_types.h"
typedef long __kernel_long_t;
#line 15 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_pid_t;
#line 48 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_uid32_t;
#line 49 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/posix_types.h"
typedef unsigned int __kernel_gid32_t;
#line 71 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;
#line 72 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;
#line 87 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;
#line 88 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_time_t;
#line 89 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_clock_t;
#line 90 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_timer_t;
#line 91 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/posix_types.h"
typedef int __kernel_clockid_t;
#line 12 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/types.h"
typedef __u32 __kernel_dev_t;
#line 15 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/types.h"
typedef __kernel_dev_t dev_t;
#line 18 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/types.h"
typedef unsigned short umode_t;
#line 21 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/types.h"
typedef __kernel_pid_t pid_t;
#line 26 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/types.h"
typedef __kernel_clockid_t clockid_t;
#line 29 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/types.h"
typedef _Bool bool;
#line 31 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/types.h"
typedef __kernel_uid32_t uid_t;
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/types.h"
typedef __kernel_gid32_t gid_t;
#line 45 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/types.h"
typedef __kernel_loff_t loff_t;
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/types.h"
typedef __kernel_size_t size_t;
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/types.h"
typedef __kernel_ssize_t ssize_t;
#line 69 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/types.h"
typedef __kernel_time_t time_t;
#line 91 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/types.h"
typedef unsigned int uint;
#line 102 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/types.h"
typedef __s32 int32_t;
#line 108 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/types.h"
typedef __u32 uint32_t;
#line 133 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/types.h"
typedef unsigned long sector_t;
#line 134 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/types.h"
typedef unsigned long blkcnt_t;
#line 146 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/types.h"
typedef u64 dma_addr_t;
#line 157 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/types.h"
typedef unsigned int gfp_t;
#line 158 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/types.h"
typedef unsigned int fmode_t;
#line 159 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/types.h"
typedef unsigned int oom_flags_t;
#line 162 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/types.h"
typedef u64 phys_addr_t;
#line 167 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/types.h"
typedef phys_addr_t resource_size_t;
#line 177 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};
#line 177 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;
#line 182 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};
#line 182 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;
#line 183 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};
#line 188
struct hlist_node;
#line 188 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};
#line 192 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};
#line 203 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/types.h"
struct callback_head {
   struct callback_head *next ;
   void (*func)(struct callback_head * ) ;
};
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/slab.h"
struct clk;
#line 46 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/thread.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const   *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};
#line 686 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/list.h"
struct task_struct;
#line 687
struct lockdep_map;
#line 18 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/lockdep.h"
struct kernel_symbol {
   unsigned long value ;
   char const   *name ;
};
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/export.h"
struct module;
#line 145 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/init.h"
typedef void (*ctor_fn_t)(void);
#line 354 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/printk.h"
struct file_operations;
#line 366 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/printk.h"
struct _ddebug {
   char const   *modname ;
   char const   *function ;
   char const   *filename ;
   char const   *format ;
   unsigned int lineno : 18 ;
   unsigned int flags : 8 ;
};
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/linux/sysinfo.h"
struct completion;
#line 24
struct pt_regs;
#line 386 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/kernel.h"
struct pid;
#line 630
struct mm_struct;
#line 60 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/ptrace.h"
struct __anonstruct____missing_field_name_9 {
   unsigned int a ;
   unsigned int b ;
};
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/ptrace.h"
struct __anonstruct____missing_field_name_10 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int base1 : 8 ;
   unsigned int type : 4 ;
   unsigned int s : 1 ;
   unsigned int dpl : 2 ;
   unsigned int p : 1 ;
   unsigned int limit : 4 ;
   unsigned int avl : 1 ;
   unsigned int l : 1 ;
   unsigned int d : 1 ;
   unsigned int g : 1 ;
   unsigned int base2 : 8 ;
};
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/ptrace.h"
union __anonunion____missing_field_name_8 {
   struct __anonstruct____missing_field_name_9 __annonCompField4 ;
   struct __anonstruct____missing_field_name_10 __annonCompField5 ;
};
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion____missing_field_name_8 __annonCompField6 ;
};
#line 15 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;
#line 16 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};
#line 212 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;
#line 214 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_12 {
   pgdval_t pgd ;
};
#line 214 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_12 pgd_t;
#line 302
struct page;
#line 302 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;
#line 310
struct file;
#line 323
struct seq_file;
#line 355
struct thread_struct;
#line 357
struct cpumask;
#line 327 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/paravirt_types.h"
struct arch_spinlock;
#line 127 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/uapi/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};
#line 79 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/vm86.h"
union __anonunion____missing_field_name_15 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};
#line 79 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion____missing_field_name_15 __annonCompField7 ;
};
#line 306 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/bitmap.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};
#line 102 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/bug.h"
struct cpumask {
   unsigned long bits[64U] ;
};
#line 14 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/cpumask.h"
typedef struct cpumask cpumask_t;
#line 663 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;
#line 195 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/paravirt.h"
struct static_key;
#line 293 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/processor.h"
struct i387_fsave_struct {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};
#line 311 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/processor.h"
struct __anonstruct____missing_field_name_20 {
   u64 rip ;
   u64 rdp ;
};
#line 311 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/processor.h"
struct __anonstruct____missing_field_name_21 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};
#line 311 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/processor.h"
union __anonunion____missing_field_name_19 {
   struct __anonstruct____missing_field_name_20 __annonCompField11 ;
   struct __anonstruct____missing_field_name_21 __annonCompField12 ;
};
#line 311 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/processor.h"
union __anonunion____missing_field_name_22 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};
#line 311 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/processor.h"
struct i387_fxsave_struct {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion____missing_field_name_19 __annonCompField13 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion____missing_field_name_22 __annonCompField14 ;
};
#line 345 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/processor.h"
struct i387_soft_struct {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};
#line 366 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/processor.h"
struct ymmh_struct {
   u32 ymmh_space[64U] ;
};
#line 371 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/processor.h"
struct xsave_hdr_struct {
   u64 xstate_bv ;
   u64 reserved1[2U] ;
   u64 reserved2[5U] ;
};
#line 377 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/processor.h"
struct xsave_struct {
   struct i387_fxsave_struct i387 ;
   struct xsave_hdr_struct xsave_hdr ;
   struct ymmh_struct ymmh ;
};
#line 383 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/processor.h"
union thread_xstate {
   struct i387_fsave_struct fsave ;
   struct i387_fxsave_struct fxsave ;
   struct i387_soft_struct soft ;
   struct xsave_struct xsave ;
};
#line 391 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/processor.h"
struct fpu {
   unsigned int last_cpu ;
   unsigned int has_fpu ;
   union thread_xstate *state ;
};
#line 438
struct kmem_cache;
#line 439
struct perf_event;
#line 440 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned long usersp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_nr ;
   unsigned long error_code ;
   struct fpu fpu ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
};
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;
#line 55 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};
#line 26 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};
#line 53 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const   *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};
#line 144 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const   *name ;
   int cpu ;
   unsigned long ip ;
};
#line 205 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int class_idx : 13 ;
   unsigned int irq_context : 2 ;
   unsigned int trylock : 1 ;
   unsigned int read : 2 ;
   unsigned int check : 2 ;
   unsigned int hardirqs_off : 1 ;
   unsigned int references : 11 ;
};
#line 579
struct sock;
#line 580
struct kobject;
#line 581
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
} ;
#line 587 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/lockdep.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   void *(*grab_current_ns)(void) ;
   void const   *(*netlink_ns)(struct sock * ) ;
   void const   *(*initial_ns)(void) ;
   void (*drop_ns)(void * ) ;
};
#line 57 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/kobject_ns.h"
struct attribute {
   char const   *name ;
   umode_t mode ;
   bool ignore_lockdep : 1 ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};
#line 34 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/sysfs.h"
struct attribute_group {
   char const   *name ;
   umode_t (*is_visible)(struct kobject * , struct attribute * , int  ) ;
   struct attribute **attrs ;
};
#line 63
struct vm_area_struct;
#line 64 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file * , struct kobject * , struct bin_attribute * , char * ,
                   loff_t  , size_t  ) ;
   ssize_t (*write)(struct file * , struct kobject * , struct bin_attribute * , char * ,
                    loff_t  , size_t  ) ;
   int (*mmap)(struct file * , struct kobject * , struct bin_attribute * , struct vm_area_struct * ) ;
};
#line 110 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject * , struct attribute * , char * ) ;
   ssize_t (*store)(struct kobject * , struct attribute * , char const   * , size_t  ) ;
   void const   *(*namespace)(struct kobject * , struct attribute  const  * ) ;
};
#line 129
struct sysfs_dirent;
#line 198
struct timespec;
#line 14 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/spinlock_types.h"
typedef u16 __ticket_t;
#line 15 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/spinlock_types.h"
typedef u32 __ticketpair_t;
#line 16 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/spinlock_types.h"
struct __raw_tickets {
   __ticket_t head ;
   __ticket_t tail ;
};
#line 26 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/spinlock_types.h"
union __anonunion____missing_field_name_29 {
   __ticketpair_t head_tail ;
   struct __raw_tickets tickets ;
};
#line 26 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/spinlock_types.h"
struct arch_spinlock {
   union __anonunion____missing_field_name_29 __annonCompField17 ;
};
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/spinlock_types.h"
typedef struct arch_spinlock arch_spinlock_t;
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/rwlock.h"
struct __anonstruct____missing_field_name_31 {
   u32 read ;
   s32 write ;
};
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/rwlock.h"
union __anonunion_arch_rwlock_t_30 {
   s64 lock ;
   struct __anonstruct____missing_field_name_31 __annonCompField18 ;
};
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/rwlock.h"
typedef union __anonunion_arch_rwlock_t_30 arch_rwlock_t;
#line 34 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/rwlock.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/spinlock_types.h"
struct __anonstruct____missing_field_name_33 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/spinlock_types.h"
union __anonunion____missing_field_name_32 {
   struct raw_spinlock rlock ;
   struct __anonstruct____missing_field_name_33 __annonCompField19 ;
};
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion____missing_field_name_32 __annonCompField20 ;
};
#line 76 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_34 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_34 rwlock_t;
#line 402 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/spinlock.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   char const   *name ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 66 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};
#line 174 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/mutex.h"
struct kref {
   atomic_t refcount ;
};
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};
#line 37 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;
#line 49 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/kobject.h"
struct kset;
#line 49
struct kobj_type;
#line 49 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/kobject.h"
struct kobject {
   char const   *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct sysfs_dirent *sd ;
   struct kref kref ;
   unsigned int state_initialized : 1 ;
   unsigned int state_in_sysfs : 1 ;
   unsigned int state_add_uevent_sent : 1 ;
   unsigned int state_remove_uevent_sent : 1 ;
   unsigned int uevent_suppress : 1 ;
};
#line 107 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject * ) ;
   struct sysfs_ops  const  *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations  const  *(*child_ns_type)(struct kobject * ) ;
   void const   *(*namespace)(struct kobject * ) ;
};
#line 115 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/kobject.h"
struct kobj_uevent_env {
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};
#line 122 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const  filter)(struct kset * , struct kobject * ) ;
   char const   *(* const  name)(struct kset * , struct kobject * ) ;
   int (* const  uevent)(struct kset * , struct kobject * , struct kobj_uevent_env * ) ;
};
#line 139 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops  const  *uevent_ops ;
};
#line 214
struct klist_node;
#line 37 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};
#line 43 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/pinctrl/devinfo.h"
struct seqcount {
   unsigned int sequence ;
};
#line 41 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/seqlock.h"
typedef struct seqcount seqcount_t;
#line 270 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/seqlock.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};
#line 301 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/ktime.h"
typedef union ktime ktime_t;
#line 105 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/debugobjects.h"
struct tvec_base;
#line 106 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/debugobjects.h"
struct timer_list {
   struct list_head entry ;
   unsigned long expires ;
   struct tvec_base *base ;
   void (*function)(unsigned long  ) ;
   unsigned long data ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};
#line 254 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/timer.h"
struct hrtimer;
#line 255
enum hrtimer_restart;
#line 267
struct work_struct;
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct * ) ;
   struct lockdep_map lockdep_map ;
};
#line 611 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/workqueue.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/pm.h"
struct pm_message {
   int event ;
};
#line 64 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/pm.h"
typedef struct pm_message pm_message_t;
#line 65 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device * ) ;
   void (*complete)(struct device * ) ;
   int (*suspend)(struct device * ) ;
   int (*resume)(struct device * ) ;
   int (*freeze)(struct device * ) ;
   int (*thaw)(struct device * ) ;
   int (*poweroff)(struct device * ) ;
   int (*restore)(struct device * ) ;
   int (*suspend_late)(struct device * ) ;
   int (*resume_early)(struct device * ) ;
   int (*freeze_late)(struct device * ) ;
   int (*thaw_early)(struct device * ) ;
   int (*poweroff_late)(struct device * ) ;
   int (*restore_early)(struct device * ) ;
   int (*suspend_noirq)(struct device * ) ;
   int (*resume_noirq)(struct device * ) ;
   int (*freeze_noirq)(struct device * ) ;
   int (*thaw_noirq)(struct device * ) ;
   int (*poweroff_noirq)(struct device * ) ;
   int (*restore_noirq)(struct device * ) ;
   int (*runtime_suspend)(struct device * ) ;
   int (*runtime_resume)(struct device * ) ;
   int (*runtime_idle)(struct device * ) ;
};
#line 301
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
} ;
#line 308
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
} ;
#line 316
struct wakeup_source;
#line 506 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
   struct list_head clock_list ;
};
#line 513
struct dev_pm_qos;
#line 513 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int can_wakeup : 1 ;
   unsigned int async_suspend : 1 ;
   bool is_prepared : 1 ;
   bool is_suspended : 1 ;
   bool ignore_children : 1 ;
   bool early_init : 1 ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool wakeup_path : 1 ;
   bool syscore : 1 ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int disable_depth : 3 ;
   unsigned int idle_notification : 1 ;
   unsigned int request_pending : 1 ;
   unsigned int deferred_resume : 1 ;
   unsigned int run_wake : 1 ;
   unsigned int runtime_auto : 1 ;
   unsigned int no_callbacks : 1 ;
   unsigned int irq_safe : 1 ;
   unsigned int use_autosuspend : 1 ;
   unsigned int timer_autosuspends : 1 ;
   unsigned int memalloc_noio : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   struct dev_pm_qos *qos ;
};
#line 570 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
};
#line 83 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/highuid.h"
struct user_namespace;
#line 46 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/uidgid.h"
typedef uid_t kuid_t;
#line 47 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/uidgid.h"
typedef gid_t kgid_t;
#line 197
struct dma_map_ops;
#line 197 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/uidgid.h"
struct dev_archdata {
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/device.h"
struct pdev_archdata {

};
#line 14
struct device_private;
#line 15
struct device_driver;
#line 16
struct driver_private;
#line 17
struct class;
#line 18
struct subsys_private;
#line 19
struct bus_type;
#line 20
struct device_node;
#line 21
struct iommu_ops;
#line 22
struct iommu_group;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/device.h"
struct bus_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct bus_type * , char * ) ;
   ssize_t (*store)(struct bus_type * , char const   * , size_t  ) ;
};
#line 55 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/device.h"
struct device_attribute;
#line 55
struct driver_attribute;
#line 55 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/device.h"
struct bus_type {
   char const   *name ;
   char const   *dev_name ;
   struct device *dev_root ;
   struct bus_attribute *bus_attrs ;
   struct device_attribute *dev_attrs ;
   struct driver_attribute *drv_attrs ;
   int (*match)(struct device * , struct device_driver * ) ;
   int (*uevent)(struct device * , struct kobj_uevent_env * ) ;
   int (*probe)(struct device * ) ;
   int (*remove)(struct device * ) ;
   void (*shutdown)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
   struct iommu_ops *iommu_ops ;
   struct subsys_private *p ;
   struct lock_class_key lock_key ;
};
#line 123
struct device_type;
#line 180
struct of_device_id;
#line 180
struct acpi_device_id;
#line 180 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/device.h"
struct device_driver {
   char const   *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const   *mod_name ;
   bool suppress_bind_attrs ;
   struct of_device_id  const  *of_match_table ;
   struct acpi_device_id  const  *acpi_match_table ;
   int (*probe)(struct device * ) ;
   int (*remove)(struct device * ) ;
   void (*shutdown)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct attribute_group  const  **groups ;
   struct dev_pm_ops  const  *pm ;
   struct driver_private *p ;
};
#line 245 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/device.h"
struct driver_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device_driver * , char * ) ;
   ssize_t (*store)(struct device_driver * , char const   * , size_t  ) ;
};
#line 301
struct class_attribute;
#line 301 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/device.h"
struct class {
   char const   *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct device_attribute *dev_attrs ;
   struct bin_attribute *dev_bin_attrs ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device * , struct kobj_uevent_env * ) ;
   char *(*devnode)(struct device * , umode_t * ) ;
   void (*class_release)(struct class * ) ;
   void (*dev_release)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct kobj_ns_type_operations  const  *ns_type ;
   void const   *(*namespace)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
   struct subsys_private *p ;
};
#line 396 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class * , struct class_attribute * , char * ) ;
   ssize_t (*store)(struct class * , struct class_attribute * , char const   * , size_t  ) ;
   void const   *(*namespace)(struct class * , struct class_attribute  const  * ) ;
};
#line 449 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/device.h"
struct device_type {
   char const   *name ;
   struct attribute_group  const  **groups ;
   int (*uevent)(struct device * , struct kobj_uevent_env * ) ;
   char *(*devnode)(struct device * , umode_t * , kuid_t * , kgid_t * ) ;
   void (*release)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
};
#line 477 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device * , struct device_attribute * , char * ) ;
   ssize_t (*store)(struct device * , struct device_attribute * , char const   * ,
                    size_t  ) ;
};
#line 582 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};
#line 591 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/device.h"
struct acpi_dev_node {
   void *handle ;
};
#line 596
struct dma_coherent_mem;
#line 596 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const   *init_name ;
   struct device_type  const  *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   struct acpi_dev_node acpi_node ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group  const  **groups ;
   void (*release)(struct device * ) ;
   struct iommu_group *iommu_group ;
};
#line 730 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/device.h"
struct wakeup_source {
   char const   *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   ktime_t start_prevent_time ;
   ktime_t prevent_sleep_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long expire_count ;
   unsigned long wakeup_count ;
   bool active : 1 ;
   bool autosleep_enabled : 1 ;
};
#line 13 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;
#line 186 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[9U] ;
   kernel_ulong_t driver_data ;
};
#line 219 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void const   *data ;
};
#line 470 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/mod_devicetable.h"
struct platform_device_id {
   char name[20U] ;
   kernel_ulong_t driver_data ;
};
#line 581
struct mfd_cell;
#line 582 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/mod_devicetable.h"
struct platform_device {
   char const   *name ;
   int id ;
   bool id_auto ;
   struct device dev ;
   u32 num_resources ;
   struct resource *resource ;
   struct platform_device_id  const  *id_entry ;
   struct mfd_cell *mfd_cell ;
   struct pdev_archdata archdata ;
};
#line 172 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/platform_device.h"
struct platform_driver {
   int (*probe)(struct platform_device * ) ;
   int (*remove)(struct platform_device * ) ;
   void (*shutdown)(struct platform_device * ) ;
   int (*suspend)(struct platform_device * , pm_message_t  ) ;
   int (*resume)(struct platform_device * ) ;
   struct device_driver driver ;
   struct platform_device_id  const  *id_table ;
};
#line 300
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
} ;
#line 16 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;
#line 98 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/nodemask.h"
struct __anonstruct_nodemask_t_103 {
   unsigned long bits[16U] ;
};
#line 98 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_103 nodemask_t;
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_104 {
   void *ldt ;
   int size ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
};
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_104 mm_context_t;
#line 18 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/asm-generic/pci_iomap.h"
struct rb_node {
   unsigned long __rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};
#line 40 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};
#line 770 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/mmzone.h"
struct rw_semaphore;
#line 771 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/mmzone.h"
struct rw_semaphore {
   long count ;
   raw_spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct lockdep_map dep_map ;
};
#line 342 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/irq.h"
struct proc_dir_entry;
#line 72 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/smap.h"
struct exception_table_entry {
   int insn ;
   int fixup ;
};
#line 178 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/hardirq.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};
#line 12 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};
#line 50
struct hrtimer_clock_base;
#line 51
struct hrtimer_cpu_base;
#line 60
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
} ;
#line 65 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer * ) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};
#line 132 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t resolution ;
   ktime_t (*get_time)(void) ;
   ktime_t softirq_time ;
   ktime_t offset ;
};
#line 163 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   unsigned int active_bases ;
   unsigned int clock_was_set ;
   ktime_t expires_next ;
   int hres_active ;
   int hang_detected ;
   unsigned long nr_events ;
   unsigned long nr_retries ;
   unsigned long nr_hangs ;
   ktime_t max_hang_time ;
   struct hrtimer_clock_base clock_base[4U] ;
};
#line 516 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/interrupt.h"
struct tasklet_struct {
   struct tasklet_struct *next ;
   unsigned long state ;
   atomic_t count ;
   void (*func)(unsigned long  ) ;
   unsigned long data ;
};
#line 133 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/uapi/asm/stat.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   kuid_t uid ;
   kgid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};
#line 835 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/linux/sysctl.h"
struct nsproxy;
#line 37 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/kmod.h"
struct cred;
#line 15 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/linux/elf.h"
typedef __u64 Elf64_Addr;
#line 16 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/linux/elf.h"
typedef __u16 Elf64_Half;
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/linux/elf.h"
typedef __u32 Elf64_Word;
#line 21 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/linux/elf.h"
typedef __u64 Elf64_Xword;
#line 190 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};
#line 198 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;
#line 48 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/elf.h"
struct kernel_param;
#line 49 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/elf.h"
struct kernel_param_ops {
   int (*set)(char const   * , struct kernel_param  const  * ) ;
   int (*get)(char * , struct kernel_param  const  * ) ;
   void (*free)(void * ) ;
};
#line 47 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/moduleparam.h"
struct kparam_string;
#line 47
struct kparam_array;
#line 47 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/moduleparam.h"
union __anonunion____missing_field_name_139 {
   void *arg ;
   struct kparam_string  const  *str ;
   struct kparam_array  const  *arr ;
};
#line 47 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/moduleparam.h"
struct kernel_param {
   char const   *name ;
   struct kernel_param_ops  const  *ops ;
   u16 perm ;
   s16 level ;
   union __anonunion____missing_field_name_139 __annonCompField34 ;
};
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};
#line 65 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops  const  *ops ;
   void *elem ;
};
#line 452
struct jump_entry;
#line 452
struct static_key_mod;
#line 452 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/moduleparam.h"
struct static_key {
   atomic_t enabled ;
   struct jump_entry *entries ;
   struct static_key_mod *next ;
};
#line 31 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/jump_label.h"
typedef u64 jump_label_t;
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/jump_label.h"
struct jump_entry {
   jump_label_t code ;
   jump_label_t target ;
   jump_label_t key ;
};
#line 210 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/jump_label.h"
struct tracepoint;
#line 211 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/jump_label.h"
struct tracepoint_func {
   void *func ;
   void *data ;
};
#line 29 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/tracepoint.h"
struct tracepoint {
   char const   *name ;
   struct static_key key ;
   void (*regfunc)(void) ;
   void (*unregfunc)(void) ;
   struct tracepoint_func *funcs ;
};
#line 92 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/tracepoint.h"
struct mod_arch_specific {

};
#line 37 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/module.h"
struct module_param_attrs;
#line 37 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
};
#line 46 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute * , struct module_kobject * , char * ) ;
   ssize_t (*store)(struct module_attribute * , struct module_kobject * , char const   * ,
                    size_t  ) ;
   void (*setup)(struct module * , char const   * ) ;
   int (*test)(struct module * ) ;
   void (*free)(struct module * ) ;
};
#line 201
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2,
    MODULE_STATE_UNFORMED = 3
} ;
#line 208 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/module.h"
struct module_ref {
   unsigned long incs ;
   unsigned long decs ;
};
#line 222
struct module_sect_attrs;
#line 222
struct module_notes_attrs;
#line 222
struct ftrace_event_call;
#line 222 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const   *version ;
   char const   *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol  const  *syms ;
   unsigned long const   *crcs ;
   unsigned int num_syms ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol  const  *gpl_syms ;
   unsigned long const   *gpl_crcs ;
   struct kernel_symbol  const  *unused_syms ;
   unsigned long const   *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol  const  *unused_gpl_syms ;
   unsigned long const   *unused_gpl_crcs ;
   bool sig_ok ;
   struct kernel_symbol  const  *gpl_future_syms ;
   unsigned long const   *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const  *tracepoints_ptrs ;
   struct jump_entry *jump_entries ;
   unsigned int num_jump_entries ;
   unsigned int num_trace_bprintk_fmt ;
   char const   **trace_bprintk_fmt_start ;
   struct ftrace_event_call **trace_events ;
   unsigned int num_trace_events ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   struct list_head source_list ;
   struct list_head target_list ;
   struct task_struct *waiter ;
   void (*exit)(void) ;
   struct module_ref *refptr ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};
#line 69 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/io.h"
enum pxa_ssp_type {
    SSP_UNDEFINED = 0,
    PXA25x_SSP = 1,
    PXA25x_NSSP = 2,
    PXA27x_SSP = 3,
    PXA3xx_SSP = 4,
    PXA168_SSP = 5,
    PXA910_SSP = 6,
    CE4100_SSP = 7,
    LPSS_SSP = 8
} ;
#line 81 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/io.h"
struct ssp_device {
   struct platform_device *pdev ;
   struct list_head node ;
   struct clk *clk ;
   void *mmio_base ;
   unsigned long phys_base ;
   char const   *label ;
   int port_id ;
   int type ;
   int use_count ;
   int irq ;
   int drcmr_rx ;
   int drcmr_tx ;
};
#line 229 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/pxa2xx_ssp.h"
struct pxa2xx_spi_master {
   u32 clock_enable ;
   u16 num_chipselect ;
   u8 enable_dma ;
   int rx_chan_id ;
   int tx_chan_id ;
   int rx_slave_id ;
   int tx_slave_id ;
   struct ssp_device ssp ;
};
#line 41 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/spi/pxa2xx_spi.h"
struct pxa2xx_spi_chip {
   u8 tx_threshold ;
   u8 tx_hi_threshold ;
   u8 rx_threshold ;
   u8 dma_burst_size ;
   u32 timeout ;
   u8 enable_loopback ;
   int gpio_cs ;
   void (*cs_control)(u32  ) ;
};
#line 55
struct mem_cgroup;
#line 88 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/kmemleak.h"
struct kmem_cache_cpu {
   void **freelist ;
   unsigned long tid ;
   struct page *page ;
   struct page *partial ;
   unsigned int stat[26U] ;
};
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/slub_def.h"
struct kmem_cache_order_objects {
   unsigned long x ;
};
#line 64
struct memcg_cache_params;
#line 64
struct kmem_cache_node;
#line 64 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/slub_def.h"
struct kmem_cache {
   struct kmem_cache_cpu *cpu_slab ;
   unsigned long flags ;
   unsigned long min_partial ;
   int size ;
   int object_size ;
   int offset ;
   int cpu_partial ;
   struct kmem_cache_order_objects oo ;
   struct kmem_cache_order_objects max ;
   struct kmem_cache_order_objects min ;
   gfp_t allocflags ;
   int refcount ;
   void (*ctor)(void * ) ;
   int inuse ;
   int align ;
   int reserved ;
   char const   *name ;
   struct list_head list ;
   struct kobject kobj ;
   struct memcg_cache_params *memcg_params ;
   int max_attr_size ;
   int remote_node_defrag_ratio ;
   struct kmem_cache_node *node[1024U] ;
};
#line 305 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/slab.h"
struct __anonstruct____missing_field_name_141 {
   struct mem_cgroup *memcg ;
   struct list_head list ;
   struct kmem_cache *root_cache ;
   bool dead ;
   atomic_t nr_pages ;
   struct work_struct destroy ;
};
#line 305 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/slab.h"
union __anonunion____missing_field_name_140 {
   struct kmem_cache *memcg_caches[0U] ;
   struct __anonstruct____missing_field_name_141 __annonCompField35 ;
};
#line 305 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/slab.h"
struct memcg_cache_params {
   bool is_root_cache ;
   union __anonunion____missing_field_name_140 __annonCompField36 ;
};
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;
#line 33
struct inode;
#line 34
struct dentry;
#line 42 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/uprobes.h"
struct arch_uprobe_task {
   unsigned long saved_scratch_register ;
   unsigned int saved_trap_nr ;
   unsigned int saved_tf ;
};
#line 60 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/uprobes.h"
enum uprobe_task_state {
    UTASK_RUNNING = 0,
    UTASK_SSTEP = 1,
    UTASK_SSTEP_ACK = 2,
    UTASK_SSTEP_TRAPPED = 3
} ;
#line 67
struct return_instance;
#line 67
struct uprobe;
#line 67 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/uprobes.h"
struct uprobe_task {
   enum uprobe_task_state state ;
   struct arch_uprobe_task autask ;
   struct return_instance *return_instances ;
   unsigned int depth ;
   struct uprobe *active_uprobe ;
   unsigned long xol_vaddr ;
   unsigned long vaddr ;
};
#line 83 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/uprobes.h"
struct xol_area {
   wait_queue_head_t wq ;
   atomic_t slot_count ;
   unsigned long *bitmap ;
   struct page *page ;
   unsigned long vaddr ;
};
#line 102 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/uprobes.h"
struct uprobes_state {
   struct xol_area *xol_area ;
};
#line 128
struct address_space;
#line 129 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_144 {
   unsigned long index ;
   void *freelist ;
   bool pfmemalloc ;
};
#line 129 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/uprobes.h"
struct __anonstruct____missing_field_name_148 {
   unsigned int inuse : 16 ;
   unsigned int objects : 15 ;
   unsigned int frozen : 1 ;
};
#line 129 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_147 {
   atomic_t _mapcount ;
   struct __anonstruct____missing_field_name_148 __annonCompField38 ;
   int units ;
};
#line 129 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/uprobes.h"
struct __anonstruct____missing_field_name_146 {
   union __anonunion____missing_field_name_147 __annonCompField39 ;
   atomic_t _count ;
};
#line 129 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_145 {
   unsigned long counters ;
   struct __anonstruct____missing_field_name_146 __annonCompField40 ;
};
#line 129 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/uprobes.h"
struct __anonstruct____missing_field_name_143 {
   union __anonunion____missing_field_name_144 __annonCompField37 ;
   union __anonunion____missing_field_name_145 __annonCompField41 ;
};
#line 129 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/uprobes.h"
struct __anonstruct____missing_field_name_150 {
   struct page *next ;
   int pages ;
   int pobjects ;
};
#line 129
struct slab;
#line 129 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_149 {
   struct list_head lru ;
   struct __anonstruct____missing_field_name_150 __annonCompField43 ;
   struct list_head list ;
   struct slab *slab_page ;
};
#line 129 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/uprobes.h"
union __anonunion____missing_field_name_151 {
   unsigned long private ;
   struct kmem_cache *slab_cache ;
   struct page *first_page ;
};
#line 129 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/uprobes.h"
struct page {
   unsigned long flags ;
   struct address_space *mapping ;
   struct __anonstruct____missing_field_name_143 __annonCompField42 ;
   union __anonunion____missing_field_name_149 __annonCompField44 ;
   union __anonunion____missing_field_name_151 __annonCompField45 ;
   unsigned long debug_flags ;
};
#line 168 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/mm_types.h"
struct page_frag {
   struct page *page ;
   __u32 offset ;
   __u32 size ;
};
#line 220 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/mm_types.h"
struct __anonstruct_linear_153 {
   struct rb_node rb ;
   unsigned long rb_subtree_last ;
};
#line 220 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/mm_types.h"
union __anonunion_shared_152 {
   struct __anonstruct_linear_153 linear ;
   struct list_head nonlinear ;
};
#line 220
struct anon_vma;
#line 220
struct vm_operations_struct;
#line 220
struct mempolicy;
#line 220 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/mm_types.h"
struct vm_area_struct {
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   struct rb_node vm_rb ;
   unsigned long rb_subtree_gap ;
   struct mm_struct *vm_mm ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   union __anonunion_shared_152 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct  const  *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};
#line 292 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};
#line 298 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};
#line 311 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};
#line 324
struct linux_binfmt;
#line 324
struct mmu_notifier_mm;
#line 324 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   struct vm_area_struct *mmap_cache ;
   unsigned long (*get_unmapped_area)(struct file * , unsigned long  , unsigned long  ,
                                      unsigned long  , unsigned long  ) ;
   void (*unmap_area)(struct mm_struct * , unsigned long  ) ;
   unsigned long mmap_base ;
   unsigned long mmap_legacy_base ;
   unsigned long task_size ;
   unsigned long cached_hole_size ;
   unsigned long free_area_cache ;
   unsigned long highest_vm_end ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long def_flags ;
   unsigned long nr_ptes ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[46U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct hlist_head ioctx_list ;
   struct task_struct *owner ;
   struct file *exe_file ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   pgtable_t pmd_huge_pte ;
   struct cpumask cpumask_allocation ;
   unsigned long numa_next_scan ;
   unsigned long numa_next_reset ;
   unsigned long numa_scan_offset ;
   int numa_scan_seq ;
   int first_nid ;
   bool tlb_flush_pending ;
   struct uprobes_state uprobes_state ;
};
#line 4 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/asm-generic/cputime_jiffies.h"
typedef unsigned long cputime_t;
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/sem.h"
struct sem_undo_list;
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_154 {
   unsigned long sig[1U] ;
};
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_154 sigset_t;
#line 25
struct siginfo;
#line 17 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/signal-defs.h"
typedef void __signalfn_t(int  );
#line 18 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);
#line 21 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;
#line 34 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};
#line 10 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/siginfo.h"
typedef union sigval sigval_t;
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__kill_156 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__timer_157 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__rt_158 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigchld_159 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigfault_160 {
   void *_addr ;
   short _addr_lsb ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_161 {
   long _band ;
   int _fd ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/siginfo.h"
struct __anonstruct__sigsys_162 {
   void *_call_addr ;
   int _syscall ;
   unsigned int _arch ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/siginfo.h"
union __anonunion__sifields_155 {
   int _pad[28U] ;
   struct __anonstruct__kill_156 _kill ;
   struct __anonstruct__timer_157 _timer ;
   struct __anonstruct__rt_158 _rt ;
   struct __anonstruct__sigchld_159 _sigchld ;
   struct __anonstruct__sigfault_160 _sigfault ;
   struct __anonstruct__sigpoll_161 _sigpoll ;
   struct __anonstruct__sigsys_162 _sigsys ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_155 _sifields ;
};
#line 109 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/signal.h"
struct user_struct;
#line 21 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};
#line 251 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};
#line 265 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};
#line 448
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
} ;
#line 455
struct pid_namespace;
#line 455 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};
#line 56 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct callback_head rcu ;
   struct upid numbers[1U] ;
};
#line 68 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};
#line 176 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/pid.h"
struct percpu_counter {
   raw_spinlock_t lock ;
   s64 count ;
   struct list_head list ;
   s32 *counters ;
};
#line 46 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/linux/seccomp.h"
struct seccomp_filter;
#line 47 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/linux/seccomp.h"
struct seccomp {
   int mode ;
   struct seccomp_filter *filter ;
};
#line 441 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/rculist.h"
struct plist_head {
   struct list_head node_list ;
};
#line 84 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};
#line 38 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/rtmutex.h"
struct rt_mutex_waiter;
#line 41 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/linux/resource.h"
struct rlimit {
   unsigned long rlim_cur ;
   unsigned long rlim_max ;
};
#line 11 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/resource.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};
#line 45 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/key.h"
typedef int32_t key_serial_t;
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/key.h"
typedef uint32_t key_perm_t;
#line 34
struct key;
#line 35
struct signal_struct;
#line 36
struct key_type;
#line 38
struct keyring_list;
#line 116 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/key.h"
union __anonunion____missing_field_name_165 {
   struct list_head graveyard_link ;
   struct rb_node serial_node ;
};
#line 116
struct key_user;
#line 116 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/key.h"
union __anonunion____missing_field_name_166 {
   time_t expiry ;
   time_t revoked_at ;
};
#line 116 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/key.h"
union __anonunion_type_data_167 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};
#line 116 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/key.h"
union __anonunion_payload_168 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   struct keyring_list *subscriptions ;
};
#line 116 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   union __anonunion____missing_field_name_165 __annonCompField46 ;
   struct key_type *type ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion____missing_field_name_166 __annonCompField47 ;
   time_t last_used_at ;
   kuid_t uid ;
   kgid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   char *description ;
   union __anonunion_type_data_167 type_data ;
   union __anonunion_payload_168 payload ;
};
#line 323
struct audit_context;
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   kgid_t small_block[32U] ;
   kgid_t *blocks[0U] ;
};
#line 78 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   kuid_t uid ;
   kgid_t gid ;
   kuid_t suid ;
   kgid_t sgid ;
   kuid_t euid ;
   kgid_t egid ;
   kuid_t fsuid ;
   kgid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct callback_head rcu ;
};
#line 344
struct llist_node;
#line 64 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};
#line 185
struct futex_pi_state;
#line 186
struct robust_list_head;
#line 187
struct bio_list;
#line 188
struct fs_struct;
#line 189
struct perf_event_context;
#line 190
struct blk_plug;
#line 121 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/sched.h"
struct cfs_rq;
#line 122
struct task_group;
#line 334 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};
#line 385 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};
#line 393 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};
#line 400 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/sched.h"
struct cputime {
   cputime_t utime ;
   cputime_t stime ;
};
#line 412 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};
#line 432 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime cputime ;
   int running ;
   raw_spinlock_t lock ;
};
#line 468
struct autogroup;
#line 469
struct tty_struct;
#line 469
struct taskstats;
#line 469
struct tty_audit_buf;
#line 469 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   struct list_head thread_head ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   unsigned int is_child_subreaper : 1 ;
   unsigned int has_child_subreaper : 1 ;
   int posix_timer_id ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   unsigned int audit_tty_log_passwd ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore group_rwsem ;
   oom_flags_t oom_flags ;
   short oom_score_adj ;
   short oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};
#line 649 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t files ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   kuid_t uid ;
   atomic_long_t locked_vm ;
};
#line 693
struct backing_dev_info;
#line 694
struct reclaim_state;
#line 695 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};
#line 709 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   struct timespec blkio_start ;
   struct timespec blkio_end ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   struct timespec freepages_start ;
   struct timespec freepages_end ;
   u64 freepages_delay ;
   u32 freepages_count ;
};
#line 892
struct io_context;
#line 920
struct pipe_inode_info;
#line 922 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   unsigned long inv_weight ;
};
#line 928 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/sched.h"
struct sched_avg {
   u32 runnable_avg_sum ;
   u32 runnable_avg_period ;
   u64 last_runnable_update ;
   s64 decay_count ;
   unsigned long load_avg_contrib ;
};
#line 940 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};
#line 975 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
   struct sched_avg avg ;
};
#line 1011
struct rt_rq;
#line 1011 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned long watchdog_stamp ;
   unsigned int time_slice ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};
#line 1035 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/sched.h"
struct memcg_batch_info {
   int do_batch ;
   struct mem_cgroup *memcg ;
   unsigned long nr_pages ;
   unsigned long memsw_nr_pages ;
};
#line 1413
struct sched_class;
#line 1413
struct files_struct;
#line 1413
struct css_set;
#line 1413
struct compat_robust_list_head;
#line 1413
struct ftrace_ret_stack;
#line 1413 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/sched.h"
struct task_struct {
   long volatile   state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class  const  *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct task_group *sched_task_group ;
   struct hlist_head preempt_notifiers ;
   unsigned char fpu_counter ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   int nr_cpus_allowed ;
   cpumask_t cpus_allowed ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   unsigned int brk_randomized : 1 ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned int jobctl ;
   unsigned int personality ;
   unsigned int did_exec : 1 ;
   unsigned int in_execve : 1 ;
   unsigned int in_iowait : 1 ;
   unsigned int no_new_privs : 1 ;
   unsigned int sched_reset_on_fork : 1 ;
   unsigned int sched_contributes_to_load : 1 ;
   pid_t pid ;
   pid_t tgid ;
   unsigned long stack_canary ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct list_head thread_node ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   struct cputime prev_cputime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   struct timespec start_time ;
   struct timespec real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred  const  *real_cred ;
   struct cred  const  *cred ;
   char comm[16U] ;
   int link_count ;
   int total_link_count ;
   struct sysv_sem sysvsem ;
   unsigned long last_switch_count ;
   struct thread_struct thread ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void * ) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct callback_head *task_works ;
   struct audit_context *audit_context ;
   kuid_t loginuid ;
   unsigned int sessionid ;
   struct seccomp seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   raw_spinlock_t pi_lock ;
   struct plist_head pi_waiters ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   seqcount_t mems_allowed_seq ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   int numa_scan_seq ;
   int numa_migrate_seq ;
   unsigned int numa_scan_period ;
   u64 node_stamp ;
   struct callback_head numa_work ;
   struct callback_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct page_frag task_frag ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   unsigned long dirty_paused_when ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_batch_info memcg_batch ;
   unsigned int memcg_kmem_skip_account ;
   atomic_t ptrace_bp_refcnt ;
   struct uprobe_task *utask ;
   unsigned int sequential_io ;
   unsigned int sequential_io_avg ;
};
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/kthread.h"
struct kthread_work;
#line 65 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/kthread.h"
struct kthread_worker {
   spinlock_t lock ;
   struct list_head work_list ;
   struct task_struct *task ;
   struct kthread_work *current_work ;
};
#line 72 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/kthread.h"
struct kthread_work {
   struct list_head node ;
   void (*func)(struct kthread_work * ) ;
   wait_queue_head_t done ;
   struct kthread_worker *worker ;
};
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 mode ;
   u8 bits_per_word ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
   int cs_gpio ;
};
#line 147
struct spi_message;
#line 206 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   struct list_head list ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u32 bits_per_word_mask ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device * ) ;
   int (*transfer)(struct spi_device * , struct spi_message * ) ;
   void (*cleanup)(struct spi_device * ) ;
   bool queued ;
   struct kthread_worker kworker ;
   struct task_struct *kworker_task ;
   struct kthread_work pump_messages ;
   spinlock_t queue_lock ;
   struct list_head queue ;
   struct spi_message *cur_msg ;
   bool busy ;
   bool running ;
   bool rt ;
   int (*prepare_transfer_hardware)(struct spi_master * ) ;
   int (*transfer_one_message)(struct spi_master * , struct spi_message * ) ;
   int (*unprepare_transfer_hardware)(struct spi_master * ) ;
   int *cs_gpios ;
};
#line 426 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/spi/spi.h"
struct spi_transfer {
   void const   *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   unsigned int cs_change : 1 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};
#line 528 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned int is_dma_mapped : 1 ;
   void (*complete)(void * ) ;
   void *context ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/of.h"
typedef u32 phandle;
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
};
#line 41 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/of.h"
struct device_node {
   char const   *name ;
   char const   *type ;
   phandle phandle ;
   char const   *full_name ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct device_node *next ;
   struct device_node *allnext ;
   struct proc_dir_entry *pde ;
   struct kref kref ;
   unsigned long _flags ;
   void *data ;
};
#line 162 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/actypes.h"
typedef u64 acpi_io_address;
#line 374 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/actypes.h"
typedef void *acpi_handle;
#line 565 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/actypes.h"
typedef u32 acpi_object_type;
#line 822 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/actypes.h"
struct __anonstruct_integer_170 {
   acpi_object_type type ;
   u64 value ;
};
#line 822 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/actypes.h"
struct __anonstruct_string_171 {
   acpi_object_type type ;
   u32 length ;
   char *pointer ;
};
#line 822 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/actypes.h"
struct __anonstruct_buffer_172 {
   acpi_object_type type ;
   u32 length ;
   u8 *pointer ;
};
#line 822 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/actypes.h"
struct __anonstruct_package_173 {
   acpi_object_type type ;
   u32 count ;
   union acpi_object *elements ;
};
#line 822 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/actypes.h"
struct __anonstruct_reference_174 {
   acpi_object_type type ;
   acpi_object_type actual_type ;
   acpi_handle handle ;
};
#line 822 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/actypes.h"
struct __anonstruct_processor_175 {
   acpi_object_type type ;
   u32 proc_id ;
   acpi_io_address pblk_address ;
   u32 pblk_length ;
};
#line 822 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/actypes.h"
struct __anonstruct_power_resource_176 {
   acpi_object_type type ;
   u32 system_level ;
   u32 resource_order ;
};
#line 822 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/actypes.h"
union acpi_object {
   acpi_object_type type ;
   struct __anonstruct_integer_170 integer ;
   struct __anonstruct_string_171 string ;
   struct __anonstruct_buffer_172 buffer ;
   struct __anonstruct_package_173 package ;
   struct __anonstruct_reference_174 reference ;
   struct __anonstruct_processor_175 processor ;
   struct __anonstruct_power_resource_176 power_resource ;
};
#line 168 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acrestyp.h"
struct acpi_resource_irq {
   u8 descriptor_length ;
   u8 triggering ;
   u8 polarity ;
   u8 sharable ;
   u8 wake_capable ;
   u8 interrupt_count ;
   u8 interrupts[1U] ;
};
#line 181 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acrestyp.h"
struct acpi_resource_dma {
   u8 type ;
   u8 bus_master ;
   u8 transfer ;
   u8 channel_count ;
   u8 channels[1U] ;
};
#line 189 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acrestyp.h"
struct acpi_resource_start_dependent {
   u8 descriptor_length ;
   u8 compatibility_priority ;
   u8 performance_robustness ;
};
#line 195 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acrestyp.h"
struct acpi_resource_io {
   u8 io_decode ;
   u8 alignment ;
   u8 address_length ;
   u16 minimum ;
   u16 maximum ;
};
#line 208 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acrestyp.h"
struct acpi_resource_fixed_io {
   u16 address ;
   u8 address_length ;
};
#line 213 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acrestyp.h"
struct acpi_resource_fixed_dma {
   u16 request_lines ;
   u16 channels ;
   u8 width ;
};
#line 219 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acrestyp.h"
struct acpi_resource_vendor {
   u16 byte_length ;
   u8 byte_data[1U] ;
};
#line 233 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acrestyp.h"
struct acpi_resource_vendor_typed {
   u16 byte_length ;
   u8 uuid_subtype ;
   u8 uuid[16U] ;
   u8 byte_data[1U] ;
};
#line 242 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acrestyp.h"
struct acpi_resource_end_tag {
   u8 checksum ;
};
#line 246 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acrestyp.h"
struct acpi_resource_memory24 {
   u8 write_protect ;
   u16 minimum ;
   u16 maximum ;
   u16 alignment ;
   u16 address_length ;
};
#line 254 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acrestyp.h"
struct acpi_resource_memory32 {
   u8 write_protect ;
   u32 minimum ;
   u32 maximum ;
   u32 alignment ;
   u32 address_length ;
};
#line 262 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acrestyp.h"
struct acpi_resource_fixed_memory32 {
   u8 write_protect ;
   u32 address ;
   u32 address_length ;
};
#line 268 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acrestyp.h"
struct acpi_memory_attribute {
   u8 write_protect ;
   u8 caching ;
   u8 range_type ;
   u8 translation ;
};
#line 275 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acrestyp.h"
struct acpi_io_attribute {
   u8 range_type ;
   u8 translation ;
   u8 translation_type ;
   u8 reserved1 ;
};
#line 282 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acrestyp.h"
union acpi_resource_attribute {
   struct acpi_memory_attribute mem ;
   struct acpi_io_attribute io ;
   u8 type_specific ;
};
#line 291 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acrestyp.h"
struct acpi_resource_source {
   u8 index ;
   u16 string_length ;
   char *string_ptr ;
};
#line 297 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acrestyp.h"
struct acpi_resource_address {
   u8 resource_type ;
   u8 producer_consumer ;
   u8 decode ;
   u8 min_address_fixed ;
   u8 max_address_fixed ;
   union acpi_resource_attribute info ;
};
#line 311 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acrestyp.h"
struct acpi_resource_address16 {
   u8 resource_type ;
   u8 producer_consumer ;
   u8 decode ;
   u8 min_address_fixed ;
   u8 max_address_fixed ;
   union acpi_resource_attribute info ;
   u16 granularity ;
   u16 minimum ;
   u16 maximum ;
   u16 translation_offset ;
   u16 address_length ;
   struct acpi_resource_source resource_source ;
};
#line 319 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acrestyp.h"
struct acpi_resource_address32 {
   u8 resource_type ;
   u8 producer_consumer ;
   u8 decode ;
   u8 min_address_fixed ;
   u8 max_address_fixed ;
   union acpi_resource_attribute info ;
   u32 granularity ;
   u32 minimum ;
   u32 maximum ;
   u32 translation_offset ;
   u32 address_length ;
   struct acpi_resource_source resource_source ;
};
#line 328 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acrestyp.h"
struct acpi_resource_address64 {
   u8 resource_type ;
   u8 producer_consumer ;
   u8 decode ;
   u8 min_address_fixed ;
   u8 max_address_fixed ;
   union acpi_resource_attribute info ;
   u64 granularity ;
   u64 minimum ;
   u64 maximum ;
   u64 translation_offset ;
   u64 address_length ;
   struct acpi_resource_source resource_source ;
};
#line 337 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acrestyp.h"
struct acpi_resource_extended_address64 {
   u8 resource_type ;
   u8 producer_consumer ;
   u8 decode ;
   u8 min_address_fixed ;
   u8 max_address_fixed ;
   union acpi_resource_attribute info ;
   u8 revision_ID ;
   u64 granularity ;
   u64 minimum ;
   u64 maximum ;
   u64 translation_offset ;
   u64 address_length ;
   u64 type_specific ;
};
#line 347 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acrestyp.h"
struct acpi_resource_extended_irq {
   u8 producer_consumer ;
   u8 triggering ;
   u8 polarity ;
   u8 sharable ;
   u8 wake_capable ;
   u8 interrupt_count ;
   struct acpi_resource_source resource_source ;
   u32 interrupts[1U] ;
};
#line 358 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acrestyp.h"
struct acpi_resource_generic_register {
   u8 space_id ;
   u8 bit_width ;
   u8 bit_offset ;
   u8 access_size ;
   u64 address ;
};
#line 366 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acrestyp.h"
struct acpi_resource_gpio {
   u8 revision_id ;
   u8 connection_type ;
   u8 producer_consumer ;
   u8 pin_config ;
   u8 sharable ;
   u8 wake_capable ;
   u8 io_restriction ;
   u8 triggering ;
   u8 polarity ;
   u16 drive_strength ;
   u16 debounce_timeout ;
   u16 pin_table_length ;
   u16 vendor_length ;
   struct acpi_resource_source resource_source ;
   u16 *pin_table ;
   u8 *vendor_data ;
};
#line 385 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acrestyp.h"
struct acpi_resource_common_serialbus {
   u8 revision_id ;
   u8 type ;
   u8 producer_consumer ;
   u8 slave_mode ;
   u8 type_revision_id ;
   u16 type_data_length ;
   u16 vendor_length ;
   struct acpi_resource_source resource_source ;
   u8 *vendor_data ;
};
#line 421 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acrestyp.h"
struct acpi_resource_i2c_serialbus {
   u8 revision_id ;
   u8 type ;
   u8 producer_consumer ;
   u8 slave_mode ;
   u8 type_revision_id ;
   u16 type_data_length ;
   u16 vendor_length ;
   struct acpi_resource_source resource_source ;
   u8 *vendor_data ;
   u8 access_mode ;
   u16 slave_address ;
   u32 connection_speed ;
};
#line 437 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acrestyp.h"
struct acpi_resource_spi_serialbus {
   u8 revision_id ;
   u8 type ;
   u8 producer_consumer ;
   u8 slave_mode ;
   u8 type_revision_id ;
   u16 type_data_length ;
   u16 vendor_length ;
   struct acpi_resource_source resource_source ;
   u8 *vendor_data ;
   u8 wire_mode ;
   u8 device_polarity ;
   u8 data_bit_length ;
   u8 clock_phase ;
   u8 clock_polarity ;
   u16 device_selection ;
   u32 connection_speed ;
};
#line 452 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acrestyp.h"
struct acpi_resource_uart_serialbus {
   u8 revision_id ;
   u8 type ;
   u8 producer_consumer ;
   u8 slave_mode ;
   u8 type_revision_id ;
   u16 type_data_length ;
   u16 vendor_length ;
   struct acpi_resource_source resource_source ;
   u8 *vendor_data ;
   u8 endian ;
   u8 data_bits ;
   u8 stop_bits ;
   u8 flow_control ;
   u8 parity ;
   u8 lines_enabled ;
   u16 rx_fifo_size ;
   u16 tx_fifo_size ;
   u32 default_baud_rate ;
};
#line 484 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acrestyp.h"
union acpi_resource_data {
   struct acpi_resource_irq irq ;
   struct acpi_resource_dma dma ;
   struct acpi_resource_start_dependent start_dpf ;
   struct acpi_resource_io io ;
   struct acpi_resource_fixed_io fixed_io ;
   struct acpi_resource_fixed_dma fixed_dma ;
   struct acpi_resource_vendor vendor ;
   struct acpi_resource_vendor_typed vendor_typed ;
   struct acpi_resource_end_tag end_tag ;
   struct acpi_resource_memory24 memory24 ;
   struct acpi_resource_memory32 memory32 ;
   struct acpi_resource_fixed_memory32 fixed_memory32 ;
   struct acpi_resource_address16 address16 ;
   struct acpi_resource_address32 address32 ;
   struct acpi_resource_address64 address64 ;
   struct acpi_resource_extended_address64 ext_address64 ;
   struct acpi_resource_extended_irq extended_irq ;
   struct acpi_resource_generic_register generic_reg ;
   struct acpi_resource_gpio gpio ;
   struct acpi_resource_i2c_serialbus i2c_serial_bus ;
   struct acpi_resource_spi_serialbus spi_serial_bus ;
   struct acpi_resource_uart_serialbus uart_serial_bus ;
   struct acpi_resource_common_serialbus common_serial_bus ;
   struct acpi_resource_address address ;
};
#line 583 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acrestyp.h"
struct acpi_resource {
   u32 type ;
   u32 length ;
   union acpi_resource_data data ;
};
#line 93 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/bit_spinlock.h"
struct hlist_bl_node;
#line 93 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/bit_spinlock.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};
#line 36 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};
#line 114 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/rculist_bl.h"
struct nameidata;
#line 115
struct path;
#line 116
struct vfsmount;
#line 117 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/rculist_bl.h"
struct __anonstruct____missing_field_name_178 {
   u32 hash ;
   u32 len ;
};
#line 117 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/rculist_bl.h"
union __anonunion____missing_field_name_177 {
   struct __anonstruct____missing_field_name_178 __annonCompField49 ;
   u64 hash_len ;
};
#line 117 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/rculist_bl.h"
struct qstr {
   union __anonunion____missing_field_name_177 __annonCompField50 ;
   unsigned char const   *name ;
};
#line 87 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/dcache.h"
struct dentry_operations;
#line 87
struct super_block;
#line 87 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/dcache.h"
union __anonunion_d_u_179 {
   struct list_head d_child ;
   struct callback_head d_rcu ;
};
#line 87 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   unsigned int d_count ;
   spinlock_t d_lock ;
   struct dentry_operations  const  *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   union __anonunion_d_u_179 d_u ;
   struct list_head d_subdirs ;
   struct hlist_node d_alias ;
};
#line 138 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry * , unsigned int  ) ;
   int (*d_weak_revalidate)(struct dentry * , unsigned int  ) ;
   int (*d_hash)(struct dentry  const  * , struct inode  const  * , struct qstr * ) ;
   int (*d_compare)(struct dentry  const  * , struct inode  const  * , struct dentry  const  * ,
                    struct inode  const  * , unsigned int  , char const   * , struct qstr  const  * ) ;
   int (*d_delete)(struct dentry  const  * ) ;
   void (*d_release)(struct dentry * ) ;
   void (*d_prune)(struct dentry * ) ;
   void (*d_iput)(struct dentry * , struct inode * ) ;
   char *(*d_dname)(struct dentry * , char * , int  ) ;
   struct vfsmount *(*d_automount)(struct path * ) ;
   int (*d_manage)(struct dentry * , bool  ) ;
};
#line 414 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/radix-tree.h"
struct radix_tree_node;
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};
#line 45 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};
#line 38 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/linux/fiemap.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
};
#line 14 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/shrinker.h"
struct shrinker {
   int (*shrink)(struct shrinker * , struct shrink_control * ) ;
   int seeks ;
   long batch ;
   struct list_head list ;
   atomic_long_t nr_in_batch ;
};
#line 42
enum migrate_mode {
    MIGRATE_ASYNC = 0,
    MIGRATE_SYNC_LIGHT = 1,
    MIGRATE_SYNC = 2
} ;
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/percpu-rwsem.h"
struct block_device;
#line 56 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/linux/fs.h"
struct export_operations;
#line 58
struct iovec;
#line 59
struct kiocb;
#line 60
struct poll_table_struct;
#line 61
struct kstatfs;
#line 62
struct swap_info_struct;
#line 65 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   kuid_t ia_uid ;
   kgid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};
#line 241 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/fs.h"
struct fs_disk_quota {
   __s8 d_version ;
   __s8 d_flags ;
   __u16 d_fieldmask ;
   __u32 d_id ;
   __u64 d_blk_hardlimit ;
   __u64 d_blk_softlimit ;
   __u64 d_ino_hardlimit ;
   __u64 d_ino_softlimit ;
   __u64 d_bcount ;
   __u64 d_icount ;
   __s32 d_itimer ;
   __s32 d_btimer ;
   __u16 d_iwarns ;
   __u16 d_bwarns ;
   __s32 d_padding2 ;
   __u64 d_rtb_hardlimit ;
   __u64 d_rtb_softlimit ;
   __u64 d_rtbcount ;
   __s32 d_rtbtimer ;
   __u16 d_rtbwarns ;
   __s16 d_padding3 ;
   char d_padding4[8U] ;
};
#line 75 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/linux/dqblk_xfs.h"
struct fs_qfilestat {
   __u64 qfs_ino ;
   __u64 qfs_nblks ;
   __u32 qfs_nextents ;
};
#line 150 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/linux/dqblk_xfs.h"
typedef struct fs_qfilestat fs_qfilestat_t;
#line 151 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/linux/dqblk_xfs.h"
struct fs_quota_stat {
   __s8 qs_version ;
   __u16 qs_flags ;
   __s8 qs_pad ;
   fs_qfilestat_t qs_uquota ;
   fs_qfilestat_t qs_gquota ;
   __u32 qs_incoredqs ;
   __s32 qs_btimelimit ;
   __s32 qs_itimelimit ;
   __s32 qs_rtbtimelimit ;
   __u16 qs_bwarnlimit ;
   __u16 qs_iwarnlimit ;
};
#line 165
struct dquot;
#line 19 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/projid.h"
typedef __kernel_uid32_t projid_t;
#line 36 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/projid.h"
typedef projid_t kprojid_t;
#line 119 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/uapi/linux/quota.h"
struct if_dqinfo {
   __u64 dqi_bgrace ;
   __u64 dqi_igrace ;
   __u32 dqi_flags ;
   __u32 dqi_valid ;
};
#line 152
enum quota_type {
    USRQUOTA = 0,
    GRPQUOTA = 1,
    PRJQUOTA = 2
} ;
#line 60 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/quota.h"
typedef long long qsize_t;
#line 61 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/quota.h"
union __anonunion____missing_field_name_180 {
   kuid_t uid ;
   kgid_t gid ;
   kprojid_t projid ;
};
#line 61 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/quota.h"
struct kqid {
   union __anonunion____missing_field_name_180 __annonCompField51 ;
   enum quota_type type ;
};
#line 178 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};
#line 200
struct quota_format_type;
#line 201 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_maxblimit ;
   qsize_t dqi_maxilimit ;
   void *dqi_priv ;
};
#line 264 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   struct kqid dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   struct mem_dqblk dq_dqb ;
};
#line 291 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block * , int  ) ;
   int (*read_file_info)(struct super_block * , int  ) ;
   int (*write_file_info)(struct super_block * , int  ) ;
   int (*free_file_info)(struct super_block * , int  ) ;
   int (*read_dqblk)(struct dquot * ) ;
   int (*commit_dqblk)(struct dquot * ) ;
   int (*release_dqblk)(struct dquot * ) ;
};
#line 302 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot * ) ;
   struct dquot *(*alloc_dquot)(struct super_block * , int  ) ;
   void (*destroy_dquot)(struct dquot * ) ;
   int (*acquire_dquot)(struct dquot * ) ;
   int (*release_dquot)(struct dquot * ) ;
   int (*mark_dirty)(struct dquot * ) ;
   int (*write_info)(struct super_block * , int  ) ;
   qsize_t *(*get_reserved_space)(struct inode * ) ;
};
#line 316 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block * , int  , int  , struct path * ) ;
   int (*quota_on_meta)(struct super_block * , int  , int  ) ;
   int (*quota_off)(struct super_block * , int  ) ;
   int (*quota_sync)(struct super_block * , int  ) ;
   int (*get_info)(struct super_block * , int  , struct if_dqinfo * ) ;
   int (*set_info)(struct super_block * , int  , struct if_dqinfo * ) ;
   int (*get_dqblk)(struct super_block * , struct kqid  , struct fs_disk_quota * ) ;
   int (*set_dqblk)(struct super_block * , struct kqid  , struct fs_disk_quota * ) ;
   int (*get_xstate)(struct super_block * , struct fs_quota_stat * ) ;
   int (*set_xstate)(struct super_block * , unsigned int  , int  ) ;
};
#line 332 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops  const  *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};
#line 378 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct rw_semaphore dqptr_sem ;
   struct inode *files[2U] ;
   struct mem_dqinfo info[2U] ;
   struct quota_format_ops  const  *ops[2U] ;
};
#line 409
struct writeback_control;
#line 340 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/fs.h"
union __anonunion_arg_182 {
   char *buf ;
   void *data ;
};
#line 340 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/fs.h"
struct __anonstruct_read_descriptor_t_181 {
   size_t written ;
   size_t count ;
   union __anonunion_arg_182 arg ;
   int error ;
};
#line 340 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/fs.h"
typedef struct __anonstruct_read_descriptor_t_181 read_descriptor_t;
#line 343 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page * , struct writeback_control * ) ;
   int (*readpage)(struct file * , struct page * ) ;
   int (*writepages)(struct address_space * , struct writeback_control * ) ;
   int (*set_page_dirty)(struct page * ) ;
   int (*readpages)(struct file * , struct address_space * , struct list_head * ,
                    unsigned int  ) ;
   int (*write_begin)(struct file * , struct address_space * , loff_t  , unsigned int  ,
                      unsigned int  , struct page ** , void ** ) ;
   int (*write_end)(struct file * , struct address_space * , loff_t  , unsigned int  ,
                    unsigned int  , struct page * , void * ) ;
   sector_t (*bmap)(struct address_space * , sector_t  ) ;
   void (*invalidatepage)(struct page * , unsigned long  ) ;
   int (*releasepage)(struct page * , gfp_t  ) ;
   void (*freepage)(struct page * ) ;
   ssize_t (*direct_IO)(int  , struct kiocb * , struct iovec  const  * , loff_t  ,
                        unsigned long  ) ;
   int (*get_xip_mem)(struct address_space * , unsigned long  , int  , void ** , unsigned long * ) ;
   int (*migratepage)(struct address_space * , struct page * , struct page * , enum migrate_mode  ) ;
   int (*launder_page)(struct page * ) ;
   int (*is_partially_uptodate)(struct page * , read_descriptor_t * , unsigned long  ) ;
   int (*error_remove_page)(struct address_space * , struct page * ) ;
   int (*swap_activate)(struct swap_info_struct * , struct file * , sector_t * ) ;
   void (*swap_deactivate)(struct file * ) ;
};
#line 402 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   unsigned int i_mmap_writable ;
   struct rb_root i_mmap ;
   struct list_head i_mmap_nonlinear ;
   struct mutex i_mmap_mutex ;
   unsigned long nrpages ;
   unsigned long writeback_index ;
   struct address_space_operations  const  *a_ops ;
   unsigned long flags ;
   struct backing_dev_info *backing_dev_info ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   void *private_data ;
};
#line 424
struct request_queue;
#line 425
struct hd_struct;
#line 425
struct gendisk;
#line 425 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct request_queue *bd_queue ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};
#line 497
struct posix_acl;
#line 498
struct inode_operations;
#line 498 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/fs.h"
union __anonunion____missing_field_name_183 {
   unsigned int const   i_nlink ;
   unsigned int __i_nlink ;
};
#line 498 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/fs.h"
union __anonunion____missing_field_name_184 {
   struct hlist_head i_dentry ;
   struct callback_head i_rcu ;
};
#line 498
struct file_lock;
#line 498
struct cdev;
#line 498 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/fs.h"
union __anonunion____missing_field_name_185 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
};
#line 498 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   kuid_t i_uid ;
   kgid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations  const  *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion____missing_field_name_183 __annonCompField52 ;
   dev_t i_rdev ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion____missing_field_name_184 __annonCompField53 ;
   u64 i_version ;
   atomic_t i_count ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   struct file_operations  const  *i_fop ;
   struct file_lock *i_flock ;
   struct address_space i_data ;
   struct dquot *i_dquot[2U] ;
   struct list_head i_devices ;
   union __anonunion____missing_field_name_185 __annonCompField54 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   atomic_t i_readcount ;
   void *i_private ;
};
#line 728 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   kuid_t uid ;
   kuid_t euid ;
   int signum ;
};
#line 736 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};
#line 759 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/fs.h"
union __anonunion_f_u_186 {
   struct list_head fu_list ;
   struct callback_head fu_rcuhead ;
};
#line 759 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/fs.h"
struct file {
   union __anonunion_f_u_186 f_u ;
   struct path f_path ;
   struct inode *f_inode ;
   struct file_operations  const  *f_op ;
   spinlock_t f_lock ;
   int f_sb_list_cpu ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred  const  *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct list_head f_tfile_llink ;
   struct address_space *f_mapping ;
   unsigned long f_mnt_write_state ;
};
#line 902 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/fs.h"
typedef struct files_struct *fl_owner_t;
#line 903 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock * , struct file_lock * ) ;
   void (*fl_release_private)(struct file_lock * ) ;
};
#line 908 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock * , struct file_lock * ) ;
   void (*lm_notify)(struct file_lock * ) ;
   int (*lm_grant)(struct file_lock * , struct file_lock * , int  ) ;
   void (*lm_break)(struct file_lock * ) ;
   int (*lm_change)(struct file_lock ** , int  ) ;
};
#line 925
struct nlm_lockowner;
#line 926 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/fs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};
#line 14 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/nfs_fs_i.h"
struct nfs4_lock_state;
#line 15 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};
#line 19
struct fasync_struct;
#line 19 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/nfs_fs_i.h"
struct __anonstruct_afs_188 {
   struct list_head link ;
   int state ;
};
#line 19 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/nfs_fs_i.h"
union __anonunion_fl_u_187 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_188 afs ;
};
#line 19 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations  const  *fl_ops ;
   struct lock_manager_operations  const  *fl_lmops ;
   union __anonunion_fl_u_187 fl_u ;
};
#line 1012 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct callback_head fa_rcu ;
};
#line 1218 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/fs.h"
struct sb_writers {
   struct percpu_counter counter[3U] ;
   wait_queue_head_t wait ;
   int frozen ;
   wait_queue_head_t wait_unfrozen ;
   struct lockdep_map lock_map[3U] ;
};
#line 1234
struct file_system_type;
#line 1234
struct super_operations;
#line 1234
struct xattr_handler;
#line 1234
struct mtd_info;
#line 1234 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations  const  *s_op ;
   struct dquot_operations  const  *dq_op ;
   struct quotactl_ops  const  *s_qcop ;
   struct export_operations  const  *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler  const  **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head *s_files ;
   struct list_head s_mounts ;
   struct list_head s_dentry_lru ;
   int s_nr_dentry_unused ;
   spinlock_t s_inode_lru_lock ;
   struct list_head s_inode_lru ;
   int s_nr_inodes_unused ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct hlist_node s_instances ;
   struct quota_info s_dquot ;
   struct sb_writers s_writers ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   unsigned int s_max_links ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations  const  *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
   atomic_long_t s_remove_count ;
   int s_readonly_remount ;
};
#line 1471 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};
#line 1510 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file * , loff_t  , int  ) ;
   ssize_t (*read)(struct file * , char * , size_t  , loff_t * ) ;
   ssize_t (*write)(struct file * , char const   * , size_t  , loff_t * ) ;
   ssize_t (*aio_read)(struct kiocb * , struct iovec  const  * , unsigned long  ,
                       loff_t  ) ;
   ssize_t (*aio_write)(struct kiocb * , struct iovec  const  * , unsigned long  ,
                        loff_t  ) ;
   int (*readdir)(struct file * , void * , int (*)(void * , char const   * , int  ,
                                                   loff_t  , u64  , unsigned int  ) ) ;
   unsigned int (*poll)(struct file * , struct poll_table_struct * ) ;
   long (*unlocked_ioctl)(struct file * , unsigned int  , unsigned long  ) ;
   long (*compat_ioctl)(struct file * , unsigned int  , unsigned long  ) ;
   int (*mmap)(struct file * , struct vm_area_struct * ) ;
   int (*open)(struct inode * , struct file * ) ;
   int (*flush)(struct file * , fl_owner_t  ) ;
   int (*release)(struct inode * , struct file * ) ;
   int (*fsync)(struct file * , loff_t  , loff_t  , int  ) ;
   int (*aio_fsync)(struct kiocb * , int  ) ;
   int (*fasync)(int  , struct file * , int  ) ;
   int (*lock)(struct file * , int  , struct file_lock * ) ;
   ssize_t (*sendpage)(struct file * , struct page * , int  , size_t  , loff_t * ,
                       int  ) ;
   unsigned long (*get_unmapped_area)(struct file * , unsigned long  , unsigned long  ,
                                      unsigned long  , unsigned long  ) ;
   int (*check_flags)(int  ) ;
   int (*flock)(struct file * , int  , struct file_lock * ) ;
   ssize_t (*splice_write)(struct pipe_inode_info * , struct file * , loff_t * , size_t  ,
                           unsigned int  ) ;
   ssize_t (*splice_read)(struct file * , loff_t * , struct pipe_inode_info * , size_t  ,
                          unsigned int  ) ;
   int (*setlease)(struct file * , long  , struct file_lock ** ) ;
   long (*fallocate)(struct file * , int  , loff_t  , loff_t  ) ;
   int (*show_fdinfo)(struct seq_file * , struct file * ) ;
};
#line 1547 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode * , struct dentry * , unsigned int  ) ;
   void *(*follow_link)(struct dentry * , struct nameidata * ) ;
   int (*permission)(struct inode * , int  ) ;
   struct posix_acl *(*get_acl)(struct inode * , int  ) ;
   int (*readlink)(struct dentry * , char * , int  ) ;
   void (*put_link)(struct dentry * , struct nameidata * , void * ) ;
   int (*create)(struct inode * , struct dentry * , umode_t  , bool  ) ;
   int (*link)(struct dentry * , struct inode * , struct dentry * ) ;
   int (*unlink)(struct inode * , struct dentry * ) ;
   int (*symlink)(struct inode * , struct dentry * , char const   * ) ;
   int (*mkdir)(struct inode * , struct dentry * , umode_t  ) ;
   int (*rmdir)(struct inode * , struct dentry * ) ;
   int (*mknod)(struct inode * , struct dentry * , umode_t  , dev_t  ) ;
   int (*rename)(struct inode * , struct dentry * , struct inode * , struct dentry * ) ;
   int (*setattr)(struct dentry * , struct iattr * ) ;
   int (*getattr)(struct vfsmount * , struct dentry * , struct kstat * ) ;
   int (*setxattr)(struct dentry * , char const   * , void const   * , size_t  , int  ) ;
   ssize_t (*getxattr)(struct dentry * , char const   * , void * , size_t  ) ;
   ssize_t (*listxattr)(struct dentry * , char * , size_t  ) ;
   int (*removexattr)(struct dentry * , char const   * ) ;
   int (*fiemap)(struct inode * , struct fiemap_extent_info * , u64  , u64  ) ;
   int (*update_time)(struct inode * , struct timespec * , int  ) ;
   int (*atomic_open)(struct inode * , struct dentry * , struct file * , unsigned int  ,
                      umode_t  , int * ) ;
};
#line 1590 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block * ) ;
   void (*destroy_inode)(struct inode * ) ;
   void (*dirty_inode)(struct inode * , int  ) ;
   int (*write_inode)(struct inode * , struct writeback_control * ) ;
   int (*drop_inode)(struct inode * ) ;
   void (*evict_inode)(struct inode * ) ;
   void (*put_super)(struct super_block * ) ;
   int (*sync_fs)(struct super_block * , int  ) ;
   int (*freeze_fs)(struct super_block * ) ;
   int (*unfreeze_fs)(struct super_block * ) ;
   int (*statfs)(struct dentry * , struct kstatfs * ) ;
   int (*remount_fs)(struct super_block * , int * , char * ) ;
   void (*umount_begin)(struct super_block * ) ;
   int (*show_options)(struct seq_file * , struct dentry * ) ;
   int (*show_devname)(struct seq_file * , struct dentry * ) ;
   int (*show_path)(struct seq_file * , struct dentry * ) ;
   int (*show_stats)(struct seq_file * , struct dentry * ) ;
   ssize_t (*quota_read)(struct super_block * , int  , char * , size_t  , loff_t  ) ;
   ssize_t (*quota_write)(struct super_block * , int  , char const   * , size_t  ,
                          loff_t  ) ;
   int (*bdev_try_to_free_page)(struct super_block * , struct page * , gfp_t  ) ;
   int (*nr_cached_objects)(struct super_block * ) ;
   void (*free_cached_objects)(struct super_block * , int  ) ;
};
#line 1803 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/fs.h"
struct file_system_type {
   char const   *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type * , int  , char const   * , void * ) ;
   void (*kill_sb)(struct super_block * ) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct hlist_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key s_writers_key[3U] ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};
#line 65 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acpi_bus.h"
enum acpi_bus_removal_type {
    ACPI_BUS_REMOVAL_NORMAL = 0,
    ACPI_BUS_REMOVAL_EJECT = 1,
    ACPI_BUS_REMOVAL_SUPRISE = 2,
    ACPI_BUS_REMOVAL_TYPE_COUNT = 3
} ;
#line 82
struct acpi_driver;
#line 83
struct acpi_device;
#line 84
enum acpi_hotplug_mode {
    AHM_GENERIC = 0,
    AHM_CONTAINER = 1,
    AHM_COUNT = 2
} ;
#line 90 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acpi_bus.h"
struct acpi_hotplug_profile {
   struct kobject kobj ;
   bool enabled : 1 ;
   bool ignore : 1 ;
   enum acpi_hotplug_mode mode ;
};
#line 110 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acpi_bus.h"
struct acpi_scan_handler {
   struct acpi_device_id  const  *ids ;
   struct list_head list_node ;
   int (*attach)(struct acpi_device * , struct acpi_device_id  const  * ) ;
   void (*detach)(struct acpi_device * ) ;
   struct acpi_hotplug_profile hotplug ;
};
#line 126 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acpi_bus.h"
struct acpi_device_ops {
   int (*add)(struct acpi_device * ) ;
   int (*remove)(struct acpi_device * ) ;
   void (*notify)(struct acpi_device * , u32  ) ;
};
#line 132 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acpi_bus.h"
struct acpi_driver {
   char name[80U] ;
   char class[80U] ;
   struct acpi_device_id  const  *ids ;
   unsigned int flags ;
   struct acpi_device_ops ops ;
   struct device_driver drv ;
   struct module *owner ;
};
#line 144 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acpi_bus.h"
struct acpi_device_status {
   u32 present : 1 ;
   u32 enabled : 1 ;
   u32 show_in_ui : 1 ;
   u32 functional : 1 ;
   u32 battery_present : 1 ;
   u32 reserved : 27 ;
};
#line 160 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acpi_bus.h"
struct acpi_device_flags {
   u32 dynamic_status : 1 ;
   u32 removable : 1 ;
   u32 ejectable : 1 ;
   u32 suprise_removal_ok : 1 ;
   u32 power_manageable : 1 ;
   u32 performance_manageable : 1 ;
   u32 eject_pending : 1 ;
   u32 match_driver : 1 ;
   u32 reserved : 24 ;
};
#line 174 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acpi_bus.h"
struct acpi_device_dir {
   struct proc_dir_entry *entry ;
};
#line 185 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acpi_bus.h"
typedef char acpi_bus_id[8U];
#line 186 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acpi_bus.h"
typedef unsigned long acpi_bus_address;
#line 187 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acpi_bus.h"
typedef char acpi_device_name[40U];
#line 188 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acpi_bus.h"
typedef char acpi_device_class[20U];
#line 194 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acpi_bus.h"
struct acpi_pnp_type {
   u32 hardware_id : 1 ;
   u32 bus_address : 1 ;
   u32 reserved : 30 ;
};
#line 200 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acpi_bus.h"
struct acpi_device_pnp {
   acpi_bus_id bus_id ;
   struct acpi_pnp_type type ;
   acpi_bus_address bus_address ;
   char *unique_id ;
   struct list_head ids ;
   acpi_device_name device_name ;
   acpi_device_class device_class ;
   union acpi_object *str_obj ;
   unsigned long sun ;
};
#line 216 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acpi_bus.h"
struct acpi_device_power_flags {
   u32 explicit_get : 1 ;
   u32 power_resources : 1 ;
   u32 inrush_current : 1 ;
   u32 power_removed : 1 ;
   u32 reserved : 28 ;
};
#line 228 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acpi_bus.h"
struct __anonstruct_flags_189 {
   u8 valid : 1 ;
   u8 os_accessible : 1 ;
   u8 explicit_set : 1 ;
   u8 reserved : 6 ;
};
#line 228 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acpi_bus.h"
struct acpi_device_power_state {
   struct __anonstruct_flags_189 flags ;
   int power ;
   int latency ;
   struct list_head resources ;
};
#line 240 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acpi_bus.h"
struct acpi_device_power {
   int state ;
   struct acpi_device_power_flags flags ;
   struct acpi_device_power_state states[5U] ;
};
#line 246 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acpi_bus.h"
struct acpi_device_perf_flags {
   u8 reserved : 8 ;
};
#line 252 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acpi_bus.h"
struct __anonstruct_flags_190 {
   u8 valid : 1 ;
   u8 reserved : 7 ;
};
#line 252 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acpi_bus.h"
struct acpi_device_perf_state {
   struct __anonstruct_flags_190 flags ;
   u8 power ;
   u8 performance ;
   int latency ;
};
#line 262 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acpi_bus.h"
struct acpi_device_perf {
   int state ;
   struct acpi_device_perf_flags flags ;
   int state_count ;
   struct acpi_device_perf_state *states ;
};
#line 269 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acpi_bus.h"
struct acpi_device_wakeup_flags {
   u8 valid : 1 ;
   u8 run_wake : 1 ;
   u8 notifier_present : 1 ;
};
#line 276 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acpi_bus.h"
struct acpi_device_wakeup {
   acpi_handle gpe_device ;
   u64 gpe_number ;
   u64 sleep_state ;
   struct list_head resources ;
   struct acpi_device_wakeup_flags flags ;
   int prepare_count ;
};
#line 291 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acpi_bus.h"
struct acpi_device {
   int device_type ;
   acpi_handle handle ;
   struct acpi_device *parent ;
   struct list_head children ;
   struct list_head node ;
   struct list_head wakeup_list ;
   struct acpi_device_status status ;
   struct acpi_device_flags flags ;
   struct acpi_device_pnp pnp ;
   struct acpi_device_power power ;
   struct acpi_device_wakeup wakeup ;
   struct acpi_device_perf performance ;
   struct acpi_device_dir dir ;
   struct acpi_scan_handler *handler ;
   struct acpi_driver *driver ;
   void *driver_data ;
   struct device dev ;
   enum acpi_bus_removal_type removal_type ;
   u8 physical_node_count ;
   struct list_head physical_node_list ;
   struct mutex physical_node_lock ;
   unsigned long physical_node_id_bitmap[1U] ;
   struct list_head power_dependent ;
   void (*remove)(struct acpi_device * ) ;
};
#line 542 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/acpi.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};
#line 162 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *page ;
};
#line 186 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct * ) ;
   void (*close)(struct vm_area_struct * ) ;
   int (*fault)(struct vm_area_struct * , struct vm_fault * ) ;
   int (*page_mkwrite)(struct vm_area_struct * , struct vm_fault * ) ;
   int (*access)(struct vm_area_struct * , unsigned long  , void * , int  , int  ) ;
   int (*set_policy)(struct vm_area_struct * , struct mempolicy * ) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct * , unsigned long  ) ;
   int (*migrate)(struct vm_area_struct * , nodemask_t const   * , nodemask_t const   * ,
                  unsigned long  ) ;
   int (*remap_pages)(struct vm_area_struct * , unsigned long  , unsigned long  ,
                      unsigned long  ) ;
};
#line 1841 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/mm.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};
#line 17 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/asm-generic/scatterlist.h"
struct sg_table {
   struct scatterlist *sgl ;
   unsigned int nents ;
   unsigned int orig_nents ;
};
#line 37 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/dmaengine.h"
typedef s32 dma_cookie_t;
#line 38
enum dma_status {
    DMA_SUCCESS = 0,
    DMA_IN_PROGRESS = 1,
    DMA_PAUSED = 2,
    DMA_ERROR = 3
} ;
#line 62
enum dma_transfer_direction {
    DMA_MEM_TO_MEM = 0,
    DMA_MEM_TO_DEV = 1,
    DMA_DEV_TO_MEM = 2,
    DMA_DEV_TO_DEV = 3,
    DMA_TRANS_NONE = 4
} ;
#line 70 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/dmaengine.h"
struct data_chunk {
   size_t size ;
   size_t icg ;
};
#line 132 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/dmaengine.h"
struct dma_interleaved_template {
   dma_addr_t src_start ;
   dma_addr_t dst_start ;
   enum dma_transfer_direction dir ;
   bool src_inc ;
   bool dst_inc ;
   bool src_sgl ;
   bool dst_sgl ;
   size_t numf ;
   size_t frame_size ;
   struct data_chunk sgl[0U] ;
};
#line 163
enum dma_ctrl_flags {
    DMA_PREP_INTERRUPT = 1,
    DMA_CTRL_ACK = 2,
    DMA_COMPL_SKIP_SRC_UNMAP = 4,
    DMA_COMPL_SKIP_DEST_UNMAP = 8,
    DMA_COMPL_SRC_UNMAP_SINGLE = 16,
    DMA_COMPL_DEST_UNMAP_SINGLE = 32,
    DMA_PREP_PQ_DISABLE_P = 64,
    DMA_PREP_PQ_DISABLE_Q = 128,
    DMA_PREP_CONTINUE = 256,
    DMA_PREP_FENCE = 512
} ;
#line 176
enum dma_ctrl_cmd {
    DMA_TERMINATE_ALL = 0,
    DMA_PAUSE = 1,
    DMA_RESUME = 2,
    DMA_SLAVE_CONFIG = 3,
    FSLDMA_EXTERNAL_START = 4
} ;
#line 189
enum sum_check_flags {
    SUM_CHECK_P_RESULT = 1,
    SUM_CHECK_Q_RESULT = 2
} ;
#line 244 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/dmaengine.h"
struct __anonstruct_dma_cap_mask_t_191 {
   unsigned long bits[1U] ;
};
#line 244 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/dmaengine.h"
typedef struct __anonstruct_dma_cap_mask_t_191 dma_cap_mask_t;
#line 246 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/dmaengine.h"
struct dma_chan_percpu {
   unsigned long memcpy_count ;
   unsigned long bytes_transferred ;
};
#line 257
struct dma_device;
#line 257
struct dma_chan_dev;
#line 257 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/dmaengine.h"
struct dma_chan {
   struct dma_device *device ;
   dma_cookie_t cookie ;
   dma_cookie_t completed_cookie ;
   int chan_id ;
   struct dma_chan_dev *dev ;
   struct list_head device_node ;
   struct dma_chan_percpu *local ;
   int client_count ;
   int table_count ;
   void *private ;
};
#line 286 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/dmaengine.h"
struct dma_chan_dev {
   struct dma_chan *chan ;
   struct device device ;
   int dev_id ;
   atomic_t *idr_ref ;
};
#line 395 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/dmaengine.h"
struct dma_async_tx_descriptor {
   dma_cookie_t cookie ;
   enum dma_ctrl_flags flags ;
   dma_addr_t phys ;
   struct dma_chan *chan ;
   dma_cookie_t (*tx_submit)(struct dma_async_tx_descriptor * ) ;
   void (*callback)(void * ) ;
   void *callback_param ;
};
#line 452 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/dmaengine.h"
struct dma_tx_state {
   dma_cookie_t last ;
   dma_cookie_t used ;
   u32 residue ;
};
#line 499 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/dmaengine.h"
struct dma_device {
   unsigned int chancnt ;
   unsigned int privatecnt ;
   struct list_head channels ;
   struct list_head global_node ;
   dma_cap_mask_t cap_mask ;
   unsigned short max_xor ;
   unsigned short max_pq ;
   u8 copy_align ;
   u8 xor_align ;
   u8 pq_align ;
   u8 fill_align ;
   int dev_id ;
   struct device *dev ;
   int (*device_alloc_chan_resources)(struct dma_chan * ) ;
   void (*device_free_chan_resources)(struct dma_chan * ) ;
   struct dma_async_tx_descriptor *(*device_prep_dma_memcpy)(struct dma_chan * , dma_addr_t  ,
                                                             dma_addr_t  , size_t  ,
                                                             unsigned long  ) ;
   struct dma_async_tx_descriptor *(*device_prep_dma_xor)(struct dma_chan * , dma_addr_t  ,
                                                          dma_addr_t * , unsigned int  ,
                                                          size_t  , unsigned long  ) ;
   struct dma_async_tx_descriptor *(*device_prep_dma_xor_val)(struct dma_chan * ,
                                                              dma_addr_t * , unsigned int  ,
                                                              size_t  , enum sum_check_flags * ,
                                                              unsigned long  ) ;
   struct dma_async_tx_descriptor *(*device_prep_dma_pq)(struct dma_chan * , dma_addr_t * ,
                                                         dma_addr_t * , unsigned int  ,
                                                         unsigned char const   * ,
                                                         size_t  , unsigned long  ) ;
   struct dma_async_tx_descriptor *(*device_prep_dma_pq_val)(struct dma_chan * , dma_addr_t * ,
                                                             dma_addr_t * , unsigned int  ,
                                                             unsigned char const   * ,
                                                             size_t  , enum sum_check_flags * ,
                                                             unsigned long  ) ;
   struct dma_async_tx_descriptor *(*device_prep_dma_memset)(struct dma_chan * , dma_addr_t  ,
                                                             int  , size_t  , unsigned long  ) ;
   struct dma_async_tx_descriptor *(*device_prep_dma_interrupt)(struct dma_chan * ,
                                                                unsigned long  ) ;
   struct dma_async_tx_descriptor *(*device_prep_dma_sg)(struct dma_chan * , struct scatterlist * ,
                                                         unsigned int  , struct scatterlist * ,
                                                         unsigned int  , unsigned long  ) ;
   struct dma_async_tx_descriptor *(*device_prep_slave_sg)(struct dma_chan * , struct scatterlist * ,
                                                           unsigned int  , enum dma_transfer_direction  ,
                                                           unsigned long  , void * ) ;
   struct dma_async_tx_descriptor *(*device_prep_dma_cyclic)(struct dma_chan * , dma_addr_t  ,
                                                             size_t  , size_t  , enum dma_transfer_direction  ,
                                                             unsigned long  , void * ) ;
   struct dma_async_tx_descriptor *(*device_prep_interleaved_dma)(struct dma_chan * ,
                                                                  struct dma_interleaved_template * ,
                                                                  unsigned long  ) ;
   int (*device_control)(struct dma_chan * , enum dma_ctrl_cmd  , unsigned long  ) ;
   enum dma_status (*device_tx_status)(struct dma_chan * , dma_cookie_t  , struct dma_tx_state * ) ;
   void (*device_issue_pending)(struct dma_chan * ) ;
};
#line 1041
struct chip_data;
#line 1041 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/dmaengine.h"
struct driver_data {
   struct platform_device *pdev ;
   struct ssp_device *ssp ;
   enum pxa_ssp_type ssp_type ;
   struct spi_master *master ;
   struct pxa2xx_spi_master *master_info ;
   int rx_channel ;
   int tx_channel ;
   u32 *null_dma_buf ;
   void *ioaddr ;
   u32 ssdr_physical ;
   u32 dma_cr1 ;
   u32 int_cr1 ;
   u32 clear_sr ;
   u32 mask_sr ;
   unsigned long max_clk_rate ;
   struct tasklet_struct pump_transfers ;
   struct dma_chan *rx_chan ;
   struct dma_chan *tx_chan ;
   struct sg_table rx_sgt ;
   struct sg_table tx_sgt ;
   int rx_nents ;
   int tx_nents ;
   void *dummy ;
   atomic_t dma_running ;
   struct spi_message *cur_msg ;
   struct spi_transfer *cur_transfer ;
   struct chip_data *cur_chip ;
   size_t len ;
   void *tx ;
   void *tx_end ;
   void *rx ;
   void *rx_end ;
   int dma_mapped ;
   dma_addr_t rx_dma ;
   dma_addr_t tx_dma ;
   size_t rx_map_len ;
   size_t tx_map_len ;
   u8 n_bytes ;
   int (*write)(struct driver_data * ) ;
   int (*read)(struct driver_data * ) ;
   irqreturn_t (*transfer_handler)(struct driver_data * ) ;
   void (*cs_control)(u32  ) ;
   void *lpss_base ;
};
#line 92 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.h"
union __anonunion____missing_field_name_192 {
   int gpio_cs ;
   unsigned int frm ;
};
#line 92 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.h"
struct chip_data {
   u32 cr0 ;
   u32 cr1 ;
   u32 psp ;
   u32 timeout ;
   u8 n_bytes ;
   u32 dma_burst_size ;
   u32 threshold ;
   u32 dma_threshold ;
   u16 lpss_rx_threshold ;
   u16 lpss_tx_threshold ;
   u8 enable_dma ;
   u8 bits_per_word ;
   u32 speed_hz ;
   union __anonunion____missing_field_name_192 __annonCompField55 ;
   int gpio_cs_inverted ;
   int (*write)(struct driver_data * ) ;
   int (*read)(struct driver_data * ) ;
   void (*cs_control)(u32  ) ;
};
#line 1404 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
struct ldv_struct_free_irq_6 {
   int arg0 ;
   int signal_pending ;
};
#line 37 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
struct ldv_struct_interrupt_scenario_2 {
   int arg0 ;
   irqreturn_t (*arg1)(int  , void * ) ;
   irqreturn_t (*arg2)(int  , void * ) ;
   void *arg3 ;
   int signal_pending ;
};
#line 45 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
struct ldv_struct_platform_instance_3 {
   struct platform_driver *arg0 ;
   int signal_pending ;
};
#line 255 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/timer.h"
enum hrtimer_restart;
#line 742 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/interrupt.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};
#line 70 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
} ;
#line 345 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/scatterlist.h"
struct dma_map_ops {
   void *(*alloc)(struct device * , size_t  , dma_addr_t * , gfp_t  , struct dma_attrs * ) ;
   void (*free)(struct device * , size_t  , void * , dma_addr_t  , struct dma_attrs * ) ;
   int (*mmap)(struct device * , struct vm_area_struct * , void * , dma_addr_t  ,
               size_t  , struct dma_attrs * ) ;
   int (*get_sgtable)(struct device * , struct sg_table * , void * , dma_addr_t  ,
                      size_t  , struct dma_attrs * ) ;
   dma_addr_t (*map_page)(struct device * , struct page * , unsigned long  , size_t  ,
                          enum dma_data_direction  , struct dma_attrs * ) ;
   void (*unmap_page)(struct device * , dma_addr_t  , size_t  , enum dma_data_direction  ,
                      struct dma_attrs * ) ;
   int (*map_sg)(struct device * , struct scatterlist * , int  , enum dma_data_direction  ,
                 struct dma_attrs * ) ;
   void (*unmap_sg)(struct device * , struct scatterlist * , int  , enum dma_data_direction  ,
                    struct dma_attrs * ) ;
   void (*sync_single_for_cpu)(struct device * , dma_addr_t  , size_t  , enum dma_data_direction  ) ;
   void (*sync_single_for_device)(struct device * , dma_addr_t  , size_t  , enum dma_data_direction  ) ;
   void (*sync_sg_for_cpu)(struct device * , struct scatterlist * , int  , enum dma_data_direction  ) ;
   void (*sync_sg_for_device)(struct device * , struct scatterlist * , int  , enum dma_data_direction  ) ;
   int (*mapping_error)(struct device * , dma_addr_t  ) ;
   int (*dma_supported)(struct device * , u64  ) ;
   int (*set_dma_mask)(struct device * , u64  ) ;
   int is_phys ;
};
#line 45 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/dmaengine.h"
enum dma_transaction_type {
    DMA_MEMCPY = 0,
    DMA_XOR = 1,
    DMA_PQ = 2,
    DMA_XOR_VAL = 3,
    DMA_PQ_VAL = 4,
    DMA_MEMSET = 5,
    DMA_INTERRUPT = 6,
    DMA_SG = 7,
    DMA_PRIVATE = 8,
    DMA_ASYNC_TX = 9,
    DMA_SLAVE = 10,
    DMA_CYCLIC = 11,
    DMA_INTERLEAVE = 12,
    DMA_TX_TYPE_END = 13
} ;
#line 300
enum dma_slave_buswidth {
    DMA_SLAVE_BUSWIDTH_UNDEFINED = 0,
    DMA_SLAVE_BUSWIDTH_1_BYTE = 1,
    DMA_SLAVE_BUSWIDTH_2_BYTES = 2,
    DMA_SLAVE_BUSWIDTH_4_BYTES = 4,
    DMA_SLAVE_BUSWIDTH_8_BYTES = 8
} ;
#line 308 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/dmaengine.h"
struct dma_slave_config {
   enum dma_transfer_direction direction ;
   dma_addr_t src_addr ;
   dma_addr_t dst_addr ;
   enum dma_slave_buswidth src_addr_width ;
   enum dma_slave_buswidth dst_addr_width ;
   u32 src_maxburst ;
   u32 dst_maxburst ;
   bool device_fc ;
   unsigned int slave_id ;
};
#line 40 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.h"
struct device_private {
   void *driver_data ;
};
#line 255 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/timer.h"
enum hrtimer_restart;
#line 1 "<compiler builtins>"
long __builtin_expect(long exp , long c ) ;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/device.h"
void *ldv_dev_get_drvdata(struct device  const  *dev ) ;
#line 24
int ldv_dev_set_drvdata(struct device *dev , void *data ) ;
#line 6 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
struct spi_master *ldv_spi_alloc_master(struct device *host , unsigned int size ) ;
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/err.h"
long ldv_is_err(void const   *ptr ) ;
#line 30
long ldv_ptr_err(void const   *ptr ) ;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/slab.h"
void *ldv_kzalloc(size_t size , gfp_t flags ) ;
#line 16 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_clk_disable_clk_of_ssp_device(struct clk *clk ) ;
#line 17
int ldv_clk_enable_clk_of_ssp_device(void) ;
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.h"
void ldv_switch_to_interrupt_context(void) ;
#line 42
void ldv_switch_to_process_context(void) ;
#line 62
extern void ldv_initialize(void) ;
#line 76
extern void ldv_check_final_state(void) ;
#line 113
int ldv_post_init(int init_ret_val ) ;
#line 124
extern void ldv_pre_probe(void) ;
#line 133
int ldv_post_probe(int probe_ret_val ) ;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/common.h"
extern void __VERIFIER_assume(int  ) ;
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.h"
int ldv_undef_int(void) ;
#line 33
int ldv_undef_int_negative(void) ;
#line 26 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.h"
void ldv_free(void *s ) ;
#line 28
void *ldv_xmalloc(size_t size ) ;
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/list.h"
__inline static void INIT_LIST_HEAD(struct list_head *list ) 
{ 


  {
#line 26
  list->next = list;
#line 27
  list->prev = list;
#line 28
  return;
}
}
#line 33 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/export.h"
extern struct module __this_module ;
#line 197 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/bitops.h"
__inline static int test_and_set_bit(int nr , unsigned long volatile   *addr ) 
{ 
  int oldbit ;

  {
#line 201
  __asm__  volatile   (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; bts %2,%1\n\tsbb %0,%0": "=r" (oldbit),
                       "+m" (*((long volatile   *)addr)): "Ir" (nr): "memory");
#line 204
  return (oldbit);
}
}
#line 136 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/printk.h"
extern int __printk_ratelimit(char const   * ) ;
#line 53 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/dynamic_debug.h"
extern int __dynamic_dev_dbg(struct _ddebug * , struct device  const  * , char const   * 
                             , ...) ;
#line 285 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/kernel.h"
extern int kstrtoint(char const   * , unsigned int  , int * ) ;
#line 71 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/asm-generic/bug.h"
extern void warn_slowpath_null(char const   * , int const    ) ;
#line 31 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/err.h"
__inline static long PTR_ERR(void const   *ptr ) ;
#line 40
__inline static long IS_ERR(void const   *ptr ) ;
#line 13 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/cmpxchg.h"
extern void __cmpxchg_wrong_size(void) ;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/atomic.h"
__inline static int atomic_read(atomic_t const   *v ) 
{ 


  {
#line 25
  return ((int )*((int volatile   *)(& v->counter)));
}
}
#line 193 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/atomic.h"
__inline static int atomic_cmpxchg(atomic_t *v , int old , int new ) 
{ 
  int __ret ;
  int __old ;
  int __new ;
  u8 volatile   *__ptr ;
  u16 volatile   *__ptr___0 ;
  u32 volatile   *__ptr___1 ;
  u64 volatile   *__ptr___2 ;

  {
#line 195
  __old = old;
#line 195
  __new = new;
  {
#line 195
  if (4UL == 1UL) {
#line 195
    goto case_1;
  } else {

  }
#line 195
  if (4UL == 2UL) {
#line 195
    goto case_2;
  } else {

  }
#line 195
  if (4UL == 4UL) {
#line 195
    goto case_4;
  } else {

  }
#line 195
  if (4UL == 8UL) {
#line 195
    goto case_8;
  } else {

  }
#line 195
  goto switch_default;
  case_1: /* CIL Label */ 
#line 195
  __ptr = (u8 volatile   *)(& v->counter);
#line 195
  __asm__  volatile   (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgb %2,%1": "=a" (__ret),
                       "+m" (*__ptr): "q" (__new), "0" (__old): "memory");
#line 195
  goto ldv_5714;
  case_2: /* CIL Label */ 
#line 195
  __ptr___0 = (u16 volatile   *)(& v->counter);
#line 195
  __asm__  volatile   (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgw %2,%1": "=a" (__ret),
                       "+m" (*__ptr___0): "r" (__new), "0" (__old): "memory");
#line 195
  goto ldv_5714;
  case_4: /* CIL Label */ 
#line 195
  __ptr___1 = (u32 volatile   *)(& v->counter);
#line 195
  __asm__  volatile   (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgl %2,%1": "=a" (__ret),
                       "+m" (*__ptr___1): "r" (__new), "0" (__old): "memory");
#line 195
  goto ldv_5714;
  case_8: /* CIL Label */ 
#line 195
  __ptr___2 = (u64 volatile   *)(& v->counter);
#line 195
  __asm__  volatile   (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgq %2,%1": "=a" (__ret),
                       "+m" (*__ptr___2): "r" (__new), "0" (__old): "memory");
#line 195
  goto ldv_5714;
  switch_default: /* CIL Label */ 
  {
#line 195
  __cmpxchg_wrong_size();
  }
  switch_break: /* CIL Label */ ;
  }
  ldv_5714: ;
#line 195
  return (__ret);
}
}
#line 212 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/atomic.h"
__inline static int __atomic_add_unless(atomic_t *v , int a , int u ) 
{ 
  int c ;
  int old ;
  long tmp ;
  long tmp___0 ;

  {
  {
#line 215
  c = atomic_read((atomic_t const   *)v);
  }
  ldv_5743: 
  {
#line 217
  tmp = __builtin_expect(c == u, 0L);
  }
#line 217
  if (tmp != 0L) {
#line 218
    goto ldv_5742;
  } else {

  }
  {
#line 219
  old = atomic_cmpxchg(v, c, c + a);
#line 220
  tmp___0 = __builtin_expect(old == c, 1L);
  }
#line 220
  if (tmp___0 != 0L) {
#line 221
    goto ldv_5742;
  } else {

  }
#line 222
  c = old;
#line 223
  goto ldv_5743;
  ldv_5742: ;
#line 224
  return (c);
}
}
#line 15 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/atomic.h"
__inline static int atomic_add_unless(atomic_t *v , int a , int u ) 
{ 
  int tmp ;

  {
  {
#line 17
  tmp = __atomic_add_unless(v, a, u);
  }
#line 17
  return (tmp != u);
}
}
#line 80 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/kobject.h"
__inline static char const   *kobject_name(struct kobject  const  *kobj ) 
{ 


  {
#line 82
  return ((char const   *)kobj->name);
}
}
#line 77 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/jiffies.h"
extern unsigned long volatile   jiffies ;
#line 572 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/device.h"
extern void *devm_kzalloc(struct device * , size_t  , gfp_t  ) ;
#line 575
extern void *devm_ioremap_resource(struct device * , struct resource * ) ;
#line 741 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/device.h"
__inline static char const   *dev_name(struct device  const  *dev ) 
{ 
  char const   *tmp ;

  {
#line 744
  if ((unsigned long )dev->init_name != (unsigned long )((char const   */* const  */)0)) {
#line 745
    return ((char const   *)dev->init_name);
  } else {

  }
  {
#line 747
  tmp = kobject_name(& dev->kobj);
  }
#line 747
  return (tmp);
}
}
#line 859
static void *ldv_dev_get_drvdata_5(struct device  const  *dev ) ;
#line 867
static void *ldv_dev_get_drvdata_13(struct device  const  *dev ) ;
#line 871
static void *ldv_dev_get_drvdata_24(struct device  const  *dev ) ;
#line 875
static void *ldv_dev_get_drvdata_26(struct device  const  *dev ) ;
#line 879
static void *ldv_dev_get_drvdata_28(struct device  const  *dev ) ;
#line 883
static void *ldv_dev_get_drvdata_30(struct device  const  *dev ) ;
#line 888
static int ldv_dev_set_drvdata_6(struct device *dev , void *data ) ;
#line 874 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/device.h"
__inline static void *dev_get_platdata(struct device  const  *dev ) 
{ 


  {
#line 876
  return ((void *)dev->platform_data);
}
}
#line 920
extern void put_device(struct device * ) ;
#line 957
extern int dev_err(struct device  const  * , char const   *  , ...) ;
#line 959
extern int dev_warn(struct device  const  * , char const   *  , ...) ;
#line 50 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/platform_device.h"
extern struct resource *platform_get_resource(struct platform_device * , unsigned int  ,
                                              unsigned int  ) ;
#line 52
extern int platform_get_irq(struct platform_device * , unsigned int  ) ;
#line 186
static int ldv_platform_driver_register_32(struct platform_driver *ldv_func_arg1 ) ;
#line 191
static void ldv_platform_driver_unregister_33(struct platform_driver *ldv_func_arg1 ) ;
#line 200 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/platform_device.h"
__inline static void *platform_get_drvdata(struct platform_device  const  *pdev ) 
{ 
  void *tmp ;

  {
  {
#line 202
  tmp = ldv_dev_get_drvdata_5(& pdev->dev);
  }
#line 202
  return (tmp);
}
}
#line 205 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/platform_device.h"
__inline static void platform_set_drvdata(struct platform_device *pdev , void *data ) 
{ 


  {
  {
#line 208
  ldv_dev_set_drvdata_6(& pdev->dev, data);
  }
#line 209
  return;
}
}
#line 55 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/io.h"
__inline static unsigned int readl(void const volatile   *addr ) 
{ 
  unsigned int ret ;

  {
#line 55
  __asm__  volatile   ("movl %1,%0": "=r" (ret): "m" (*((unsigned int volatile   *)addr)): "memory");
#line 55
  return (ret);
}
}
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/io.h"
__inline static unsigned int __readl(void const volatile   *addr ) 
{ 
  unsigned int ret ;

  {
#line 59
  __asm__  volatile   ("movl %1,%0": "=r" (ret): "m" (*((unsigned int volatile   *)addr)));
#line 59
  return (ret);
}
}
#line 63 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/io.h"
__inline static void writel(unsigned int val , void volatile   *addr ) 
{ 


  {
#line 63
  __asm__  volatile   ("movl %0,%1": : "r" (val), "m" (*((unsigned int volatile   *)addr)): "memory");
#line 64
  return;
}
}
#line 67 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/io.h"
__inline static void __writel(unsigned int val , void volatile   *addr ) 
{ 


  {
#line 67
  __asm__  volatile   ("movl %0,%1": : "r" (val), "m" (*((unsigned int volatile   *)addr)));
#line 68
  return;
}
}
#line 139 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/interrupt.h"
__inline static int ldv_request_irq_18(unsigned int irq , irqreturn_t (*handler)(int  ,
                                                                                 void * ) ,
                                       unsigned long flags , char const   *name ,
                                       void *dev ) ;
#line 181
static void ldv_free_irq_21(unsigned int ldv_func_arg1 , void *ldv_func_arg2 ) ;
#line 185
static void ldv_free_irq_23(unsigned int ldv_func_arg1 , void *ldv_func_arg2 ) ;
#line 582
extern void __tasklet_schedule(struct tasklet_struct * ) ;
#line 584 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/interrupt.h"
__inline static void tasklet_schedule(struct tasklet_struct *t ) 
{ 
  int tmp ;

  {
  {
#line 586
  tmp = test_and_set_bit(0, (unsigned long volatile   *)(& t->state));
  }
#line 586
  if (tmp == 0) {
    {
#line 587
    __tasklet_schedule(t);
    }
  } else {

  }
#line 588
  return;
}
}
#line 640
extern void tasklet_init(struct tasklet_struct * , void (*)(unsigned long  ) , unsigned long  ) ;
#line 222 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/pxa2xx_ssp.h"
__inline static struct ssp_device *pxa_ssp_request(int port , char const   *label ) 
{ 


  {
#line 224
  return ((struct ssp_device *)0);
}
}
#line 226 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/pxa2xx_ssp.h"
__inline static void pxa_ssp_free(struct ssp_device *ssp ) 
{ 


  {
#line 228
  return;
}
}
#line 132 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/slab.h"
extern void kfree(void const   * ) ;
#line 517
__inline static void *kzalloc(size_t size , gfp_t flags ) ;
#line 126 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/spi/spi.h"
__inline static void *spi_get_ctldata(struct spi_device *spi ) 
{ 


  {
#line 128
  return (spi->controller_state);
}
}
#line 131 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/spi/spi.h"
__inline static void spi_set_ctldata(struct spi_device *spi , void *state ) 
{ 


  {
#line 133
  spi->controller_state = state;
#line 134
  return;
}
}
#line 383 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/spi/spi.h"
__inline static void *spi_master_get_devdata(struct spi_master *master ) 
{ 
  void *tmp ;

  {
  {
#line 385
  tmp = ldv_dev_get_drvdata_13((struct device  const  *)(& master->dev));
  }
#line 385
  return (tmp);
}
}
#line 400 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/spi/spi.h"
__inline static void spi_master_put(struct spi_master *master ) 
{ 


  {
#line 402
  if ((unsigned long )master != (unsigned long )((struct spi_master *)0)) {
    {
#line 403
    put_device(& master->dev);
    }
  } else {

  }
#line 404
  return;
}
}
#line 407
extern int spi_master_suspend(struct spi_master * ) ;
#line 408
extern int spi_master_resume(struct spi_master * ) ;
#line 411
extern struct spi_message *spi_get_next_queued_message(struct spi_master * ) ;
#line 412
extern void spi_finalize_current_message(struct spi_master * ) ;
#line 419
static struct spi_master *ldv_spi_alloc_master_17(struct device *host , unsigned int size ) ;
#line 422
extern int spi_register_master(struct spi_master * ) ;
#line 423
extern void spi_unregister_master(struct spi_master * ) ;
#line 12 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/delay.h"
extern unsigned long loops_per_jiffy ;
#line 8 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/asm-generic/delay.h"
extern void __udelay(unsigned long  ) ;
#line 40 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/asm-generic/gpio.h"
__inline static bool gpio_is_valid(int number ) 
{ 


  {
#line 42
  return ((unsigned int )number <= 255U);
}
}
#line 172
extern int gpio_request(unsigned int  , char const   * ) ;
#line 173
extern void gpio_free(unsigned int  ) ;
#line 176
extern int gpio_direction_output(unsigned int  , int  ) ;
#line 189
extern void __gpio_set_value(unsigned int  , int  ) ;
#line 55 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/gpio.h"
__inline static void gpio_set_value(unsigned int gpio , int value ) 
{ 


  {
  {
#line 57
  __gpio_set_value(gpio, value);
  }
#line 58
  return;
}
}
#line 159 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/clk.h"
extern struct clk *devm_clk_get(struct device * , char const   * ) ;
#line 198
extern unsigned long clk_get_rate(struct clk * ) ;
#line 348
__inline static int ldv_clk_prepare_enable_19(struct clk *clk ) ;
#line 352
__inline static int ldv_clk_prepare_enable_19(struct clk *clk ) ;
#line 356
__inline static int ldv_clk_prepare_enable_19(struct clk *clk ) ;
#line 364
__inline static void ldv_clk_disable_unprepare_20(struct clk *clk ) ;
#line 368
__inline static void ldv_clk_disable_unprepare_20(struct clk *clk ) ;
#line 372
__inline static void ldv_clk_disable_unprepare_20(struct clk *clk ) ;
#line 376
__inline static void ldv_clk_disable_unprepare_20(struct clk *clk ) ;
#line 31 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/pm_runtime.h"
extern int __pm_runtime_suspend(struct device * , int  ) ;
#line 32
extern int __pm_runtime_resume(struct device * , int  ) ;
#line 34
extern int __pm_runtime_set_status(struct device * , unsigned int  ) ;
#line 36
extern void pm_runtime_enable(struct device * ) ;
#line 37
extern void __pm_runtime_disable(struct device * , bool  ) ;
#line 45
extern void __pm_runtime_use_autosuspend(struct device * , bool  ) ;
#line 46
extern void pm_runtime_set_autosuspend_delay(struct device * , int  ) ;
#line 63 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/pm_runtime.h"
__inline static void pm_runtime_put_noidle(struct device *dev ) 
{ 


  {
  {
#line 65
  atomic_add_unless(& dev->power.usage_count, -1, 0);
  }
#line 66
  return;
}
}
#line 78 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/pm_runtime.h"
__inline static bool pm_runtime_suspended(struct device *dev ) 
{ 


  {
#line 80
  return ((bool )((unsigned int )dev->power.runtime_status == 2U && (unsigned int )*((unsigned char *)dev + 808UL) == 0U));
}
}
#line 105 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/pm_runtime.h"
__inline static void pm_runtime_mark_last_busy(struct device *dev ) 
{ 


  {
#line 107
  *((unsigned long volatile   *)(& dev->power.last_busy)) = jiffies;
#line 108
  return;
}
}
#line 205 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/pm_runtime.h"
__inline static int pm_runtime_get_sync(struct device *dev ) 
{ 
  int tmp ;

  {
  {
#line 207
  tmp = __pm_runtime_resume(dev, 4);
  }
#line 207
  return (tmp);
}
}
#line 215 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/pm_runtime.h"
__inline static int pm_runtime_put_autosuspend(struct device *dev ) 
{ 
  int tmp ;

  {
  {
#line 217
  tmp = __pm_runtime_suspend(dev, 13);
  }
#line 217
  return (tmp);
}
}
#line 236 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/pm_runtime.h"
__inline static int pm_runtime_set_active(struct device *dev ) 
{ 
  int tmp ;

  {
  {
#line 238
  tmp = __pm_runtime_set_status(dev, 0U);
  }
#line 238
  return (tmp);
}
}
#line 246 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/pm_runtime.h"
__inline static void pm_runtime_disable(struct device *dev ) 
{ 


  {
  {
#line 248
  __pm_runtime_disable(dev, 1);
  }
#line 249
  return;
}
}
#line 251 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/pm_runtime.h"
__inline static void pm_runtime_use_autosuspend(struct device *dev ) 
{ 


  {
  {
#line 253
  __pm_runtime_use_autosuspend(dev, 1);
  }
#line 254
  return;
}
}
#line 375 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/acpi/acpi_bus.h"
extern int acpi_bus_get_device(acpi_handle  , struct acpi_device ** ) ;
#line 274 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/acpi.h"
extern void acpi_dev_free_resource_list(struct list_head * ) ;
#line 275
extern int acpi_dev_get_resources(struct acpi_device * , struct list_head * , int (*)(struct acpi_resource * ,
                                                                                      void * ) ,
                                  void * ) ;
#line 124 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.h"
__inline static u32 read_SSCR0(void const   *p ) 
{ 
  unsigned int tmp ;

  {
  {
#line 124
  tmp = __readl((void const volatile   *)p);
  }
#line 124
  return (tmp);
}
}
#line 124 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.h"
__inline static void write_SSCR0(u32 v , void *p ) 
{ 


  {
  {
#line 124
  __writel(v, (void volatile   *)p);
  }
#line 125
  return;
}
}
#line 125 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.h"
__inline static u32 read_SSCR1(void const   *p ) 
{ 
  unsigned int tmp ;

  {
  {
#line 125
  tmp = __readl((void const volatile   *)(p + 4UL));
  }
#line 125
  return (tmp);
}
}
#line 125 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.h"
__inline static void write_SSCR1(u32 v , void *p ) 
{ 


  {
  {
#line 125
  __writel(v, (void volatile   *)(p + 4UL));
  }
#line 126
  return;
}
}
#line 126 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.h"
__inline static u32 read_SSSR(void const   *p ) 
{ 
  unsigned int tmp ;

  {
  {
#line 126
  tmp = __readl((void const volatile   *)(p + 8UL));
  }
#line 126
  return (tmp);
}
}
#line 126 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.h"
__inline static void write_SSSR(u32 v , void *p ) 
{ 


  {
  {
#line 126
  __writel(v, (void volatile   *)(p + 8UL));
  }
#line 127
  return;
}
}
#line 128 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.h"
__inline static u32 read_SSDR(void const   *p ) 
{ 
  unsigned int tmp ;

  {
  {
#line 128
  tmp = __readl((void const volatile   *)(p + 16UL));
  }
#line 128
  return (tmp);
}
}
#line 128 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.h"
__inline static void write_SSDR(u32 v , void *p ) 
{ 


  {
  {
#line 128
  __writel(v, (void volatile   *)(p + 16UL));
  }
#line 129
  return;
}
}
#line 129 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.h"
__inline static void write_SSTO(u32 v , void *p ) 
{ 


  {
  {
#line 129
  __writel(v, (void volatile   *)(p + 40UL));
  }
#line 130
  return;
}
}
#line 130 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.h"
__inline static void write_SSPSP(u32 v , void *p ) 
{ 


  {
  {
#line 130
  __writel(v, (void volatile   *)(p + 44UL));
  }
#line 131
  return;
}
}
#line 131 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.h"
__inline static u32 read_SSITF(void const   *p ) 
{ 
  unsigned int tmp ;

  {
  {
#line 131
  tmp = __readl((void const volatile   *)(p + 68UL));
  }
#line 131
  return (tmp);
}
}
#line 131 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.h"
__inline static void write_SSITF(u32 v , void *p ) 
{ 


  {
  {
#line 131
  __writel(v, (void volatile   *)(p + 68UL));
  }
#line 132
  return;
}
}
#line 132 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.h"
__inline static u32 read_SSIRF(void const   *p ) 
{ 
  unsigned int tmp ;

  {
  {
#line 132
  tmp = __readl((void const volatile   *)(p + 72UL));
  }
#line 132
  return (tmp);
}
}
#line 132 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.h"
__inline static void write_SSIRF(u32 v , void *p ) 
{ 


  {
  {
#line 132
  __writel(v, (void volatile   *)(p + 72UL));
  }
#line 133
  return;
}
}
#line 142 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.h"
__inline static int pxa25x_ssp_comp(struct driver_data *drv_data ) 
{ 


  {
#line 144
  if ((unsigned int )drv_data->ssp_type == 1U) {
#line 145
    return (1);
  } else {

  }
#line 146
  if ((unsigned int )drv_data->ssp_type == 7U) {
#line 147
    return (1);
  } else {

  }
#line 148
  return (0);
}
}
#line 151 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.h"
__inline static void write_SSSR_CS(struct driver_data *drv_data , u32 val ) 
{ 
  void *reg ;
  u32 tmp ;

  {
#line 153
  reg = drv_data->ioaddr;
#line 155
  if ((unsigned int )drv_data->ssp_type == 7U) {
    {
#line 156
    tmp = read_SSSR((void const   *)reg);
#line 156
    val = val | (tmp & 3U);
    }
  } else {

  }
  {
#line 158
  write_SSSR(val, reg);
  }
#line 159
  return;
}
}
#line 161
int pxa2xx_spi_flush(struct driver_data *drv_data ) ;
#line 162
void *pxa2xx_spi_next_transfer(struct driver_data *drv_data ) ;
#line 182
bool pxa2xx_spi_dma_is_possible(size_t len ) ;
#line 183
int pxa2xx_spi_map_dma_buffers(struct driver_data *drv_data ) ;
#line 184
irqreturn_t pxa2xx_spi_dma_transfer(struct driver_data *drv_data ) ;
#line 185
int pxa2xx_spi_dma_prepare(struct driver_data *drv_data , u32 dma_burst ) ;
#line 186
void pxa2xx_spi_dma_start(struct driver_data *drv_data ) ;
#line 187
int pxa2xx_spi_dma_setup(struct driver_data *drv_data ) ;
#line 188
void pxa2xx_spi_dma_release(struct driver_data *drv_data ) ;
#line 189
void pxa2xx_spi_dma_resume(struct driver_data *drv_data ) ;
#line 190
int pxa2xx_spi_set_dma_burst_and_threshold(struct chip_data *chip , struct spi_device *spi ,
                                           u8 bits_per_word , u32 *burst_code , u32 *threshold ) ;
#line 77 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static bool is_lpss_ssp(struct driver_data  const  *drv_data ) 
{ 


  {
#line 79
  return ((unsigned int )drv_data->ssp_type == 8U);
}
}
#line 86 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static u32 __lpss_ssp_read_priv(struct driver_data *drv_data , unsigned int offset ) 
{ 
  int __ret_warn_on ;
  long tmp ;
  unsigned int tmp___0 ;

  {
  {
#line 88
  __ret_warn_on = (unsigned long )drv_data->lpss_base == (unsigned long )((void *)0);
#line 88
  tmp = __builtin_expect(__ret_warn_on != 0, 0L);
  }
#line 88
  if (tmp != 0L) {
    {
#line 88
    warn_slowpath_null("drivers/spi/spi-pxa2xx.c", 88);
    }
  } else {

  }
  {
#line 88
  __builtin_expect(__ret_warn_on != 0, 0L);
#line 89
  tmp___0 = readl((void const volatile   *)(drv_data->lpss_base + (unsigned long )offset));
  }
#line 89
  return (tmp___0);
}
}
#line 92 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static void __lpss_ssp_write_priv(struct driver_data *drv_data , unsigned int offset ,
                                  u32 value ) 
{ 
  int __ret_warn_on ;
  long tmp ;

  {
  {
#line 95
  __ret_warn_on = (unsigned long )drv_data->lpss_base == (unsigned long )((void *)0);
#line 95
  tmp = __builtin_expect(__ret_warn_on != 0, 0L);
  }
#line 95
  if (tmp != 0L) {
    {
#line 95
    warn_slowpath_null("drivers/spi/spi-pxa2xx.c", 95);
    }
  } else {

  }
  {
#line 95
  __builtin_expect(__ret_warn_on != 0, 0L);
#line 96
  writel(value, (void volatile   *)(drv_data->lpss_base + (unsigned long )offset));
  }
#line 97
  return;
}
}
#line 106 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static void lpss_ssp_setup(struct driver_data *drv_data ) 
{ 
  unsigned int offset ;
  u32 value ;
  u32 orig ;
  bool tmp ;
  int tmp___0 ;

  {
  {
#line 108
  offset = 1024U;
#line 111
  tmp = is_lpss_ssp((struct driver_data  const  *)drv_data);
  }
#line 111
  if (tmp) {
#line 111
    tmp___0 = 0;
  } else {
#line 111
    tmp___0 = 1;
  }
#line 111
  if (tmp___0) {
#line 112
    return;
  } else {

  }
  {
#line 118
  orig = readl((void const volatile   *)(drv_data->ioaddr + ((unsigned long )offset + 24UL)));
#line 120
  value = orig | 1U;
#line 121
  writel(value, (void volatile   *)(drv_data->ioaddr + ((unsigned long )offset + 24UL)));
#line 122
  value = readl((void const volatile   *)(drv_data->ioaddr + ((unsigned long )offset + 24UL)));
  }
#line 123
  if (value != (orig | 1U)) {
#line 124
    offset = 2048U;
#line 125
    goto detection_done;
  } else {

  }
  {
#line 128
  value = value & 4294967294U;
#line 129
  writel(value, (void volatile   *)(drv_data->ioaddr + ((unsigned long )offset + 24UL)));
#line 130
  value = readl((void const volatile   *)(drv_data->ioaddr + ((unsigned long )offset + 24UL)));
  }
#line 131
  if (value != orig) {
#line 132
    offset = 2048U;
#line 133
    goto detection_done;
  } else {

  }
  detection_done: 
  {
#line 138
  drv_data->lpss_base = drv_data->ioaddr + (unsigned long )offset;
#line 141
  value = 3U;
#line 142
  __lpss_ssp_write_priv(drv_data, 24U, value);
  }
#line 145
  if ((unsigned int )(drv_data->master_info)->enable_dma != 0U) {
    {
#line 146
    __lpss_ssp_write_priv(drv_data, 12U, 1U);
    }
  } else {

  }
#line 147
  return;
}
}
#line 149 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static void lpss_ssp_cs_control(struct driver_data *drv_data , bool enable ) 
{ 
  u32 value ;
  bool tmp ;
  int tmp___0 ;

  {
  {
#line 153
  tmp = is_lpss_ssp((struct driver_data  const  *)drv_data);
  }
#line 153
  if (tmp) {
#line 153
    tmp___0 = 0;
  } else {
#line 153
    tmp___0 = 1;
  }
#line 153
  if (tmp___0) {
#line 154
    return;
  } else {

  }
  {
#line 156
  value = __lpss_ssp_read_priv(drv_data, 24U);
  }
#line 157
  if ((int )enable) {
#line 158
    value = value & 4294967293U;
  } else {
#line 160
    value = value | 2U;
  }
  {
#line 161
  __lpss_ssp_write_priv(drv_data, 24U, value);
  }
#line 162
  return;
}
}
#line 164 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static void cs_assert(struct driver_data *drv_data ) 
{ 
  struct chip_data *chip ;
  bool tmp ;

  {
#line 166
  chip = drv_data->cur_chip;
#line 168
  if ((unsigned int )drv_data->ssp_type == 7U) {
    {
#line 169
    write_SSSR((drv_data->cur_chip)->__annonCompField55.frm, drv_data->ioaddr);
    }
#line 170
    return;
  } else {

  }
#line 173
  if ((unsigned long )chip->cs_control != (unsigned long )((void (*)(u32  ))0)) {
    {
#line 174
    (*(chip->cs_control))(1U);
    }
#line 175
    return;
  } else {

  }
  {
#line 178
  tmp = gpio_is_valid(chip->__annonCompField55.gpio_cs);
  }
#line 178
  if ((int )tmp) {
    {
#line 179
    gpio_set_value((unsigned int )chip->__annonCompField55.gpio_cs, chip->gpio_cs_inverted);
    }
#line 180
    return;
  } else {

  }
  {
#line 183
  lpss_ssp_cs_control(drv_data, 1);
  }
#line 184
  return;
}
}
#line 186 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static void cs_deassert(struct driver_data *drv_data ) 
{ 
  struct chip_data *chip ;
  bool tmp ;

  {
#line 188
  chip = drv_data->cur_chip;
#line 190
  if ((unsigned int )drv_data->ssp_type == 7U) {
#line 191
    return;
  } else {

  }
#line 193
  if ((unsigned long )chip->cs_control != (unsigned long )((void (*)(u32  ))0)) {
    {
#line 194
    (*(chip->cs_control))(2U);
    }
#line 195
    return;
  } else {

  }
  {
#line 198
  tmp = gpio_is_valid(chip->__annonCompField55.gpio_cs);
  }
#line 198
  if ((int )tmp) {
    {
#line 199
    gpio_set_value((unsigned int )chip->__annonCompField55.gpio_cs, chip->gpio_cs_inverted == 0);
    }
#line 200
    return;
  } else {

  }
  {
#line 203
  lpss_ssp_cs_control(drv_data, 0);
  }
#line 204
  return;
}
}
#line 206 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
int pxa2xx_spi_flush(struct driver_data *drv_data ) 
{ 
  unsigned long limit ;
  void *reg ;
  u32 tmp ;
  u32 tmp___0 ;

  {
#line 208
  limit = loops_per_jiffy << 1;
#line 210
  reg = drv_data->ioaddr;
  ldv_31851: ;
#line 213
  goto ldv_31849;
  ldv_31848: 
  {
#line 214
  read_SSDR((void const   *)reg);
  }
  ldv_31849: 
  {
#line 213
  tmp = read_SSSR((void const   *)reg);
  }
#line 213
  if ((tmp & 8U) != 0U) {
#line 215
    goto ldv_31848;
  } else {

  }
  {
#line 216
  tmp___0 = read_SSSR((void const   *)reg);
  }
#line 216
  if ((tmp___0 & 16U) != 0U) {
#line 216
    limit = limit - 1UL;
#line 216
    if (limit != 0UL) {
#line 218
      goto ldv_31851;
    } else {
#line 221
      goto ldv_31852;
    }
  } else {

  }
  ldv_31852: 
  {
#line 217
  write_SSSR_CS(drv_data, 128U);
  }
#line 219
  return ((int )limit);
}
}
#line 222 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static int null_writer(struct driver_data *drv_data ) 
{ 
  void *reg ;
  u8 n_bytes ;
  u32 tmp ;

  {
  {
#line 224
  reg = drv_data->ioaddr;
#line 225
  n_bytes = drv_data->n_bytes;
#line 227
  tmp = read_SSSR((void const   *)reg);
  }
#line 227
  if ((tmp & 768U) == 768U || (unsigned long )drv_data->tx == (unsigned long )drv_data->tx_end) {
#line 229
    return (0);
  } else {

  }
  {
#line 231
  write_SSDR(0U, reg);
#line 232
  drv_data->tx = drv_data->tx + (unsigned long )n_bytes;
  }
#line 234
  return (1);
}
}
#line 237 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static int null_reader(struct driver_data *drv_data ) 
{ 
  void *reg ;
  u8 n_bytes ;
  u32 tmp ;

  {
#line 239
  reg = drv_data->ioaddr;
#line 240
  n_bytes = drv_data->n_bytes;
#line 242
  goto ldv_31864;
  ldv_31863: 
  {
#line 244
  read_SSDR((void const   *)reg);
#line 245
  drv_data->rx = drv_data->rx + (unsigned long )n_bytes;
  }
  ldv_31864: 
  {
#line 242
  tmp = read_SSSR((void const   *)reg);
  }
#line 242
  if ((tmp & 8U) != 0U && (unsigned long )drv_data->rx < (unsigned long )drv_data->rx_end) {
#line 245
    goto ldv_31863;
  } else {

  }

#line 248
  return ((unsigned long )drv_data->rx == (unsigned long )drv_data->rx_end);
}
}
#line 251 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static int u8_writer(struct driver_data *drv_data ) 
{ 
  void *reg ;
  u32 tmp ;

  {
  {
#line 253
  reg = drv_data->ioaddr;
#line 255
  tmp = read_SSSR((void const   *)reg);
  }
#line 255
  if ((tmp & 768U) == 768U || (unsigned long )drv_data->tx == (unsigned long )drv_data->tx_end) {
#line 257
    return (0);
  } else {

  }
  {
#line 259
  write_SSDR((u32 )*((u8 *)drv_data->tx), reg);
#line 260
  drv_data->tx = drv_data->tx + 1;
  }
#line 262
  return (1);
}
}
#line 265 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static int u8_reader(struct driver_data *drv_data ) 
{ 
  void *reg ;
  u32 tmp ;
  u32 tmp___0 ;

  {
#line 267
  reg = drv_data->ioaddr;
#line 269
  goto ldv_31875;
  ldv_31874: 
  {
#line 271
  tmp = read_SSDR((void const   *)reg);
#line 271
  *((u8 *)drv_data->rx) = (u8 )tmp;
#line 272
  drv_data->rx = drv_data->rx + 1;
  }
  ldv_31875: 
  {
#line 269
  tmp___0 = read_SSSR((void const   *)reg);
  }
#line 269
  if ((tmp___0 & 8U) != 0U && (unsigned long )drv_data->rx < (unsigned long )drv_data->rx_end) {
#line 272
    goto ldv_31874;
  } else {

  }

#line 275
  return ((unsigned long )drv_data->rx == (unsigned long )drv_data->rx_end);
}
}
#line 278 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static int u16_writer(struct driver_data *drv_data ) 
{ 
  void *reg ;
  u32 tmp ;

  {
  {
#line 280
  reg = drv_data->ioaddr;
#line 282
  tmp = read_SSSR((void const   *)reg);
  }
#line 282
  if ((tmp & 768U) == 768U || (unsigned long )drv_data->tx == (unsigned long )drv_data->tx_end) {
#line 284
    return (0);
  } else {

  }
  {
#line 286
  write_SSDR((u32 )*((u16 *)drv_data->tx), reg);
#line 287
  drv_data->tx = drv_data->tx + 2UL;
  }
#line 289
  return (1);
}
}
#line 292 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static int u16_reader(struct driver_data *drv_data ) 
{ 
  void *reg ;
  u32 tmp ;
  u32 tmp___0 ;

  {
#line 294
  reg = drv_data->ioaddr;
#line 296
  goto ldv_31886;
  ldv_31885: 
  {
#line 298
  tmp = read_SSDR((void const   *)reg);
#line 298
  *((u16 *)drv_data->rx) = (u16 )tmp;
#line 299
  drv_data->rx = drv_data->rx + 2UL;
  }
  ldv_31886: 
  {
#line 296
  tmp___0 = read_SSSR((void const   *)reg);
  }
#line 296
  if ((tmp___0 & 8U) != 0U && (unsigned long )drv_data->rx < (unsigned long )drv_data->rx_end) {
#line 299
    goto ldv_31885;
  } else {

  }

#line 302
  return ((unsigned long )drv_data->rx == (unsigned long )drv_data->rx_end);
}
}
#line 305 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static int u32_writer(struct driver_data *drv_data ) 
{ 
  void *reg ;
  u32 tmp ;

  {
  {
#line 307
  reg = drv_data->ioaddr;
#line 309
  tmp = read_SSSR((void const   *)reg);
  }
#line 309
  if ((tmp & 768U) == 768U || (unsigned long )drv_data->tx == (unsigned long )drv_data->tx_end) {
#line 311
    return (0);
  } else {

  }
  {
#line 313
  write_SSDR(*((u32 *)drv_data->tx), reg);
#line 314
  drv_data->tx = drv_data->tx + 4UL;
  }
#line 316
  return (1);
}
}
#line 319 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static int u32_reader(struct driver_data *drv_data ) 
{ 
  void *reg ;
  u32 tmp ;

  {
#line 321
  reg = drv_data->ioaddr;
#line 323
  goto ldv_31897;
  ldv_31896: 
  {
#line 325
  *((u32 *)drv_data->rx) = read_SSDR((void const   *)reg);
#line 326
  drv_data->rx = drv_data->rx + 4UL;
  }
  ldv_31897: 
  {
#line 323
  tmp = read_SSSR((void const   *)reg);
  }
#line 323
  if ((tmp & 8U) != 0U && (unsigned long )drv_data->rx < (unsigned long )drv_data->rx_end) {
#line 326
    goto ldv_31896;
  } else {

  }

#line 329
  return ((unsigned long )drv_data->rx == (unsigned long )drv_data->rx_end);
}
}
#line 332 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
void *pxa2xx_spi_next_transfer(struct driver_data *drv_data ) 
{ 
  struct spi_message *msg ;
  struct spi_transfer *trans ;
  struct list_head  const  *__mptr ;

  {
#line 334
  msg = drv_data->cur_msg;
#line 335
  trans = drv_data->cur_transfer;
#line 338
  if ((unsigned long )trans->transfer_list.next != (unsigned long )(& msg->transfers)) {
#line 340
    __mptr = (struct list_head  const  *)trans->transfer_list.next;
#line 340
    drv_data->cur_transfer = (struct spi_transfer *)((char *)__mptr + 0xffffffffffffffd0UL);
#line 343
    return ((void *)1);
  } else {
#line 345
    return ((void *)2);
  }
}
}
#line 349 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static void giveback(struct driver_data *drv_data ) 
{ 
  struct spi_transfer *last_transfer ;
  struct spi_message *msg ;
  struct list_head  const  *__mptr ;
  struct spi_message *next_msg ;

  {
#line 354
  msg = drv_data->cur_msg;
#line 355
  drv_data->cur_msg = (struct spi_message *)0;
#line 356
  drv_data->cur_transfer = (struct spi_transfer *)0;
#line 358
  __mptr = (struct list_head  const  *)msg->transfers.prev;
#line 358
  last_transfer = (struct spi_transfer *)((char *)__mptr + 0xffffffffffffffd0UL);
#line 363
  if ((unsigned int )last_transfer->delay_usecs != 0U) {
    {
#line 364
    __udelay((unsigned long )last_transfer->delay_usecs);
    }
  } else {

  }
#line 369
  if ((unsigned int )*((unsigned char *)last_transfer + 40UL) == 0U) {
    {
#line 370
    cs_deassert(drv_data);
    }
  } else {
    {
#line 385
    next_msg = spi_get_next_queued_message(drv_data->master);
    }
#line 390
    if ((unsigned long )next_msg != (unsigned long )((struct spi_message *)0) && (unsigned long )next_msg->spi != (unsigned long )msg->spi) {
#line 391
      next_msg = (struct spi_message *)0;
    } else {

    }
#line 392
    if ((unsigned long )next_msg == (unsigned long )((struct spi_message *)0) || (unsigned long )msg->state == (unsigned long )((void *)-1)) {
      {
#line 393
      cs_deassert(drv_data);
      }
    } else {

    }
  }
  {
#line 396
  spi_finalize_current_message(drv_data->master);
#line 397
  drv_data->cur_chip = (struct chip_data *)0;
  }
#line 398
  return;
}
}
#line 400 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static void reset_sccr1(struct driver_data *drv_data ) 
{ 
  void *reg ;
  struct chip_data *chip ;
  u32 sccr1_reg ;
  u32 tmp ;

  {
  {
#line 402
  reg = drv_data->ioaddr;
#line 403
  chip = drv_data->cur_chip;
#line 406
  tmp = read_SSCR1((void const   *)reg);
#line 406
  sccr1_reg = tmp & ~ drv_data->int_cr1;
#line 407
  sccr1_reg = sccr1_reg & 4294964223U;
#line 408
  sccr1_reg = sccr1_reg | chip->threshold;
#line 409
  write_SSCR1(sccr1_reg, reg);
  }
#line 410
  return;
}
}
#line 412 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static void int_error_stop(struct driver_data *drv_data , char const   *msg ) 
{ 
  void *reg ;
  int tmp ;
  u32 tmp___0 ;

  {
  {
#line 414
  reg = drv_data->ioaddr;
#line 417
  write_SSSR_CS(drv_data, drv_data->clear_sr);
#line 418
  reset_sccr1(drv_data);
#line 419
  tmp = pxa25x_ssp_comp(drv_data);
  }
#line 419
  if (tmp == 0) {
    {
#line 420
    write_SSTO(0U, reg);
    }
  } else {

  }
  {
#line 421
  pxa2xx_spi_flush(drv_data);
#line 422
  tmp___0 = read_SSCR0((void const   *)reg);
#line 422
  write_SSCR0(tmp___0 & 4294967167U, reg);
#line 424
  dev_err((struct device  const  *)(& (drv_data->pdev)->dev), "%s\n", msg);
#line 426
  (drv_data->cur_msg)->state = (void *)-1;
#line 427
  tasklet_schedule(& drv_data->pump_transfers);
  }
#line 428
  return;
}
}
#line 430 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static void int_transfer_complete(struct driver_data *drv_data ) 
{ 
  void *reg ;
  int tmp ;

  {
  {
#line 432
  reg = drv_data->ioaddr;
#line 435
  write_SSSR_CS(drv_data, drv_data->clear_sr);
#line 436
  reset_sccr1(drv_data);
#line 437
  tmp = pxa25x_ssp_comp(drv_data);
  }
#line 437
  if (tmp == 0) {
    {
#line 438
    write_SSTO(0U, reg);
    }
  } else {

  }
  {
#line 441
  (drv_data->cur_msg)->actual_length = (drv_data->cur_msg)->actual_length + ((unsigned int )drv_data->len + ((unsigned int )((long )drv_data->rx) - (unsigned int )((long )drv_data->rx_end)));
#line 449
  (drv_data->cur_msg)->state = pxa2xx_spi_next_transfer(drv_data);
#line 452
  tasklet_schedule(& drv_data->pump_transfers);
  }
#line 453
  return;
}
}
#line 455 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static irqreturn_t interrupt_transfer(struct driver_data *drv_data ) 
{ 
  void *reg ;
  u32 irq_mask ;
  u32 tmp ;
  u32 irq_status ;
  u32 tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  int tmp___3 ;
  int tmp___4 ;
  u32 bytes_left ;
  u32 sccr1_reg ;
  int tmp___5 ;

  {
  {
#line 457
  reg = drv_data->ioaddr;
#line 459
  tmp = read_SSCR1((void const   *)reg);
#line 459
  irq_mask = (tmp & 2U) != 0U ? drv_data->mask_sr : drv_data->mask_sr & 4294967263U;
#line 462
  tmp___0 = read_SSSR((void const   *)reg);
#line 462
  irq_status = tmp___0 & irq_mask;
  }
#line 464
  if ((irq_status & 128U) != 0U) {
    {
#line 465
    int_error_stop(drv_data, "interrupt_transfer: fifo overrun");
    }
#line 466
    return (1);
  } else {

  }
#line 469
  if ((irq_status & 524288U) != 0U) {
    {
#line 470
    write_SSSR(524288U, reg);
#line 471
    tmp___1 = (*(drv_data->read))(drv_data);
    }
#line 471
    if (tmp___1 != 0) {
      {
#line 472
      int_transfer_complete(drv_data);
      }
#line 473
      return (1);
    } else {

    }
  } else {

  }
  ldv_31935: 
  {
#line 479
  tmp___2 = (*(drv_data->read))(drv_data);
  }
#line 479
  if (tmp___2 != 0) {
    {
#line 480
    int_transfer_complete(drv_data);
    }
#line 481
    return (1);
  } else {

  }
  {
#line 483
  tmp___3 = (*(drv_data->write))(drv_data);
  }
#line 483
  if (tmp___3 != 0) {
#line 485
    goto ldv_31935;
  } else {

  }
  {
#line 485
  tmp___4 = (*(drv_data->read))(drv_data);
  }
#line 485
  if (tmp___4 != 0) {
    {
#line 486
    int_transfer_complete(drv_data);
    }
#line 487
    return (1);
  } else {

  }
#line 490
  if ((unsigned long )drv_data->tx == (unsigned long )drv_data->tx_end) {
    {
#line 494
    sccr1_reg = read_SSCR1((void const   *)reg);
#line 495
    sccr1_reg = sccr1_reg & 4294967293U;
#line 501
    tmp___5 = pxa25x_ssp_comp(drv_data);
    }
#line 501
    if (tmp___5 != 0) {
#line 503
      sccr1_reg = sccr1_reg & 4294964223U;
#line 505
      bytes_left = (u32 )((long )drv_data->rx_end) - (u32 )((long )drv_data->rx);
      {
#line 507
      if ((int )drv_data->n_bytes == 4) {
#line 507
        goto case_4;
      } else {

      }
#line 509
      if ((int )drv_data->n_bytes == 2) {
#line 509
        goto case_2;
      } else {

      }
#line 506
      goto switch_break;
      case_4: /* CIL Label */ 
#line 508
      bytes_left = bytes_left >> 1;
      case_2: /* CIL Label */ 
#line 510
      bytes_left = bytes_left >> 1;
      switch_break: /* CIL Label */ ;
      }
#line 513
      if (bytes_left > 2U) {
#line 514
        bytes_left = 2U;
      } else {

      }
#line 516
      sccr1_reg = sccr1_reg | ((bytes_left - 1U) << 10);
    } else {

    }
    {
#line 518
    write_SSCR1(sccr1_reg, reg);
    }
  } else {

  }
#line 522
  return (1);
}
}
#line 525 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static irqreturn_t ssp_int(int irq , void *dev_id ) 
{ 
  struct driver_data *drv_data ;
  void *reg ;
  u32 sccr1_reg ;
  u32 mask ;
  u32 status ;
  bool tmp ;
  u32 tmp___0 ;
  u32 tmp___1 ;
  int tmp___2 ;
  irqreturn_t tmp___3 ;

  {
  {
#line 527
  drv_data = (struct driver_data *)dev_id;
#line 528
  reg = drv_data->ioaddr;
#line 530
  mask = drv_data->mask_sr;
#line 539
  tmp = pm_runtime_suspended(& (drv_data->pdev)->dev);
  }
#line 539
  if ((int )tmp) {
#line 540
    return (0);
  } else {

  }
  {
#line 542
  sccr1_reg = read_SSCR1((void const   *)reg);
#line 543
  status = read_SSSR((void const   *)reg);
  }
#line 546
  if ((sccr1_reg & 2U) == 0U) {
#line 547
    mask = mask & 4294967263U;
  } else {

  }
#line 549
  if ((status & mask) == 0U) {
#line 550
    return (0);
  } else {

  }
#line 552
  if ((unsigned long )drv_data->cur_msg == (unsigned long )((struct spi_message *)0)) {
    {
#line 554
    tmp___0 = read_SSCR0((void const   *)reg);
#line 554
    write_SSCR0(tmp___0 & 4294967167U, reg);
#line 555
    tmp___1 = read_SSCR1((void const   *)reg);
#line 555
    write_SSCR1(tmp___1 & ~ drv_data->int_cr1, reg);
#line 556
    tmp___2 = pxa25x_ssp_comp(drv_data);
    }
#line 556
    if (tmp___2 == 0) {
      {
#line 557
      write_SSTO(0U, reg);
      }
    } else {

    }
    {
#line 558
    write_SSSR_CS(drv_data, drv_data->clear_sr);
#line 560
    dev_err((struct device  const  *)(& (drv_data->pdev)->dev), "bad message state in interrupt handler\n");
    }
#line 564
    return (1);
  } else {

  }
  {
#line 567
  tmp___3 = (*(drv_data->transfer_handler))(drv_data);
  }
#line 567
  return (tmp___3);
}
}
#line 570 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static unsigned int ssp_get_clk_div(struct driver_data *drv_data , int rate ) 
{ 
  unsigned long ssp_clk ;
  struct ssp_device  const  *ssp ;
  int __min1 ;
  int __min2 ;

  {
#line 572
  ssp_clk = drv_data->max_clk_rate;
#line 573
  ssp = (struct ssp_device  const  *)drv_data->ssp;
#line 575
  __min1 = (int )ssp_clk;
#line 575
  __min2 = rate;
#line 575
  rate = __min1 < __min2 ? __min1 : __min2;
#line 577
  if (ssp->type == 1 || ssp->type == 7) {
#line 578
    return ((((unsigned int )(ssp_clk / (unsigned long )(rate * 2)) - 1U) << 8U) & 65535U);
  } else {
#line 580
    return ((((unsigned int )(ssp_clk / (unsigned long )rate) - 1U) & 4095U) << 8U);
  }
}
}
#line 583 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static void pump_transfers(unsigned long data ) 
{ 
  struct driver_data *drv_data ;
  struct spi_message *message ;
  struct spi_transfer *transfer ;
  struct spi_transfer *previous ;
  struct chip_data *chip ;
  void *reg ;
  u32 clk_div ;
  u8 bits ;
  u32 speed ;
  u32 cr0 ;
  u32 cr1 ;
  u32 dma_thresh ;
  u32 dma_burst ;
  struct list_head  const  *__mptr ;
  int tmp ;
  bool tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  int tmp___3 ;
  int tmp___4 ;
  bool tmp___5 ;
  u32 tmp___6 ;
  u32 tmp___7 ;
  bool tmp___8 ;
  int tmp___9 ;
  int tmp___10 ;
  u32 tmp___11 ;
  u32 tmp___12 ;

  {
#line 585
  drv_data = (struct driver_data *)data;
#line 586
  message = (struct spi_message *)0;
#line 587
  transfer = (struct spi_transfer *)0;
#line 588
  previous = (struct spi_transfer *)0;
#line 589
  chip = (struct chip_data *)0;
#line 590
  reg = drv_data->ioaddr;
#line 591
  clk_div = 0U;
#line 592
  bits = 0U;
#line 593
  speed = 0U;
#line 596
  dma_thresh = (drv_data->cur_chip)->dma_threshold;
#line 597
  dma_burst = (drv_data->cur_chip)->dma_burst_size;
#line 600
  message = drv_data->cur_msg;
#line 601
  transfer = drv_data->cur_transfer;
#line 602
  chip = drv_data->cur_chip;
#line 605
  if ((unsigned long )message->state == (unsigned long )((void *)-1)) {
    {
#line 606
    message->status = -5;
#line 607
    giveback(drv_data);
    }
#line 608
    return;
  } else {

  }
#line 612
  if ((unsigned long )message->state == (unsigned long )((void *)2)) {
    {
#line 613
    message->status = 0;
#line 614
    giveback(drv_data);
    }
#line 615
    return;
  } else {

  }
#line 619
  if ((unsigned long )message->state == (unsigned long )((void *)1)) {
#line 620
    __mptr = (struct list_head  const  *)transfer->transfer_list.prev;
#line 620
    previous = (struct spi_transfer *)((char *)__mptr + 0xffffffffffffffd0UL);
#line 623
    if ((unsigned int )previous->delay_usecs != 0U) {
      {
#line 624
      __udelay((unsigned long )previous->delay_usecs);
      }
    } else {

    }
#line 627
    if ((unsigned int )*((unsigned char *)previous + 40UL) != 0U) {
      {
#line 628
      cs_deassert(drv_data);
      }
    } else {

    }
  } else {

  }
  {
#line 632
  tmp___0 = pxa2xx_spi_dma_is_possible((size_t )transfer->len);
  }
#line 632
  if (tmp___0) {
#line 632
    tmp___1 = 0;
  } else {
#line 632
    tmp___1 = 1;
  }
#line 632
  if (tmp___1 && (unsigned int )chip->enable_dma != 0U) {
#line 635
    if (((unsigned int )*((unsigned char *)message + 24UL) != 0U || transfer->rx_dma != 0ULL) || transfer->tx_dma != 0ULL) {
      {
#line 637
      dev_err((struct device  const  *)(& (drv_data->pdev)->dev), "pump_transfers: mapped transfer length of %u is greater than %d\n",
              transfer->len, 65536);
#line 641
      message->status = -22;
#line 642
      giveback(drv_data);
      }
#line 643
      return;
    } else {

    }
    {
#line 647
    tmp = __printk_ratelimit("pump_transfers");
    }
#line 647
    if (tmp != 0) {
      {
#line 648
      dev_warn((struct device  const  *)(& (message->spi)->dev), "pump_transfers: DMA disabled for transfer length %ld greater than %d\n",
               (long )drv_data->len, 65536);
      }
    } else {

    }
  } else {

  }
  {
#line 655
  tmp___2 = pxa2xx_spi_flush(drv_data);
  }
#line 655
  if (tmp___2 == 0) {
    {
#line 656
    dev_err((struct device  const  *)(& (drv_data->pdev)->dev), "pump_transfers: flush failed\n");
#line 657
    message->status = -5;
#line 658
    giveback(drv_data);
    }
#line 659
    return;
  } else {

  }
#line 661
  drv_data->n_bytes = chip->n_bytes;
#line 662
  drv_data->tx = (void *)transfer->tx_buf;
#line 663
  drv_data->tx_end = drv_data->tx + (unsigned long )transfer->len;
#line 664
  drv_data->rx = transfer->rx_buf;
#line 665
  drv_data->rx_end = drv_data->rx + (unsigned long )transfer->len;
#line 666
  drv_data->rx_dma = transfer->rx_dma;
#line 667
  drv_data->tx_dma = transfer->tx_dma;
#line 668
  drv_data->len = (size_t )transfer->len;
#line 669
  drv_data->write = (unsigned long )drv_data->tx != (unsigned long )((void *)0) ? chip->write : & null_writer;
#line 670
  drv_data->read = (unsigned long )drv_data->rx != (unsigned long )((void *)0) ? chip->read : & null_reader;
#line 673
  cr0 = chip->cr0;
#line 674
  if (*((unsigned long *)transfer + 5UL) != 0UL) {
#line 676
    bits = chip->bits_per_word;
#line 677
    speed = chip->speed_hz;
#line 679
    if (transfer->speed_hz != 0U) {
#line 680
      speed = transfer->speed_hz;
    } else {

    }
#line 682
    if ((unsigned int )transfer->bits_per_word != 0U) {
#line 683
      bits = transfer->bits_per_word;
    } else {

    }
    {
#line 685
    clk_div = ssp_get_clk_div(drv_data, (int )speed);
    }
#line 687
    if ((unsigned int )bits <= 8U) {
#line 688
      drv_data->n_bytes = 1U;
#line 689
      drv_data->read = (unsigned long )drv_data->read != (unsigned long )(& null_reader) ? & u8_reader : & null_reader;
#line 691
      drv_data->write = (unsigned long )drv_data->write != (unsigned long )(& null_writer) ? & u8_writer : & null_writer;
    } else
#line 693
    if ((unsigned int )bits <= 16U) {
#line 694
      drv_data->n_bytes = 2U;
#line 695
      drv_data->read = (unsigned long )drv_data->read != (unsigned long )(& null_reader) ? & u16_reader : & null_reader;
#line 697
      drv_data->write = (unsigned long )drv_data->write != (unsigned long )(& null_writer) ? & u16_writer : & null_writer;
    } else
#line 699
    if ((unsigned int )bits <= 32U) {
#line 700
      drv_data->n_bytes = 4U;
#line 701
      drv_data->read = (unsigned long )drv_data->read != (unsigned long )(& null_reader) ? & u32_reader : & null_reader;
#line 703
      drv_data->write = (unsigned long )drv_data->write != (unsigned long )(& null_writer) ? & u32_writer : & null_writer;
    } else {

    }
#line 708
    if ((unsigned int )chip->enable_dma != 0U) {
      {
#line 709
      tmp___4 = pxa2xx_spi_set_dma_burst_and_threshold(chip, message->spi, (int )bits,
                                                       & dma_burst, & dma_thresh);
      }
#line 709
      if (tmp___4 != 0) {
        {
#line 713
        tmp___3 = __printk_ratelimit("pump_transfers");
        }
#line 713
        if (tmp___3 != 0) {
          {
#line 714
          dev_warn((struct device  const  *)(& (message->spi)->dev), "pump_transfers: DMA burst size reduced to match bits_per_word\n");
          }
        } else {

        }
      } else {

      }
    } else {

    }
#line 720
    cr0 = ((clk_div | (u32 )((unsigned int )bits > 16U ? (int )bits + -17 : (int )bits + -1)) | ((unsigned int )bits > 16U ? 1048576U : 0U)) | 128U;
  } else {

  }
  {
#line 727
  message->state = (void *)1;
#line 729
  drv_data->dma_mapped = 0;
#line 730
  tmp___5 = pxa2xx_spi_dma_is_possible(drv_data->len);
  }
#line 730
  if ((int )tmp___5) {
    {
#line 731
    drv_data->dma_mapped = pxa2xx_spi_map_dma_buffers(drv_data);
    }
  } else {

  }
#line 732
  if (drv_data->dma_mapped != 0) {
    {
#line 735
    drv_data->transfer_handler = & pxa2xx_spi_dma_transfer;
#line 737
    pxa2xx_spi_dma_prepare(drv_data, dma_burst);
#line 740
    cr1 = (chip->cr1 | dma_thresh) | drv_data->dma_cr1;
#line 741
    write_SSSR(drv_data->clear_sr, reg);
#line 743
    pxa2xx_spi_dma_start(drv_data);
    }
  } else {
    {
#line 746
    drv_data->transfer_handler = & interrupt_transfer;
#line 749
    cr1 = (chip->cr1 | chip->threshold) | drv_data->int_cr1;
#line 750
    write_SSSR_CS(drv_data, drv_data->clear_sr);
    }
  }
  {
#line 753
  tmp___8 = is_lpss_ssp((struct driver_data  const  *)drv_data);
  }
#line 753
  if ((int )tmp___8) {
    {
#line 754
    tmp___6 = read_SSIRF((void const   *)reg);
    }
#line 754
    if ((tmp___6 & 255U) != (u32 )chip->lpss_rx_threshold) {
      {
#line 755
      write_SSIRF((u32 )chip->lpss_rx_threshold, reg);
      }
    } else {

    }
    {
#line 756
    tmp___7 = read_SSITF((void const   *)reg);
    }
#line 756
    if ((tmp___7 & 65535U) != (u32 )chip->lpss_tx_threshold) {
      {
#line 757
      write_SSITF((u32 )chip->lpss_tx_threshold, reg);
      }
    } else {

    }
  } else {

  }
  {
#line 761
  tmp___11 = read_SSCR0((void const   *)reg);
  }
#line 761
  if (tmp___11 != cr0) {
#line 761
    goto _L;
  } else {
    {
#line 761
    tmp___12 = read_SSCR1((void const   *)reg);
    }
#line 761
    if (((tmp___12 ^ cr1) & 3754020092U) != 0U) {
      _L: /* CIL Label */ 
      {
#line 766
      write_SSCR0(cr0 & 4294967167U, reg);
#line 767
      tmp___9 = pxa25x_ssp_comp(drv_data);
      }
#line 767
      if (tmp___9 == 0) {
        {
#line 768
        write_SSTO(chip->timeout, reg);
        }
      } else {

      }
      {
#line 770
      write_SSCR1(cr1 & 3754020092U, reg);
#line 772
      write_SSCR0(cr0, reg);
      }
    } else {
      {
#line 775
      tmp___10 = pxa25x_ssp_comp(drv_data);
      }
#line 775
      if (tmp___10 == 0) {
        {
#line 776
        write_SSTO(chip->timeout, reg);
        }
      } else {

      }
    }
  }
  {
#line 779
  cs_assert(drv_data);
#line 783
  write_SSCR1(cr1, reg);
  }
#line 784
  return;
}
}
#line 786 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static int pxa2xx_spi_transfer_one_message(struct spi_master *master , struct spi_message *msg ) 
{ 
  struct driver_data *drv_data ;
  void *tmp ;
  struct list_head  const  *__mptr ;
  void *tmp___0 ;

  {
  {
#line 789
  tmp = spi_master_get_devdata(master);
#line 789
  drv_data = (struct driver_data *)tmp;
#line 791
  drv_data->cur_msg = msg;
#line 793
  (drv_data->cur_msg)->state = (void *)0;
#line 794
  __mptr = (struct list_head  const  *)(drv_data->cur_msg)->transfers.next;
#line 794
  drv_data->cur_transfer = (struct spi_transfer *)((char *)__mptr + 0xffffffffffffffd0UL);
#line 800
  tmp___0 = spi_get_ctldata((drv_data->cur_msg)->spi);
#line 800
  drv_data->cur_chip = (struct chip_data *)tmp___0;
#line 803
  tasklet_schedule(& drv_data->pump_transfers);
  }
#line 804
  return (0);
}
}
#line 807 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static int pxa2xx_spi_prepare_transfer(struct spi_master *master ) 
{ 
  struct driver_data *drv_data ;
  void *tmp ;

  {
  {
#line 809
  tmp = spi_master_get_devdata(master);
#line 809
  drv_data = (struct driver_data *)tmp;
#line 811
  pm_runtime_get_sync(& (drv_data->pdev)->dev);
  }
#line 812
  return (0);
}
}
#line 815 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static int pxa2xx_spi_unprepare_transfer(struct spi_master *master ) 
{ 
  struct driver_data *drv_data ;
  void *tmp ;
  u32 tmp___0 ;

  {
  {
#line 817
  tmp = spi_master_get_devdata(master);
#line 817
  drv_data = (struct driver_data *)tmp;
#line 820
  tmp___0 = read_SSCR0((void const   *)drv_data->ioaddr);
#line 820
  write_SSCR0(tmp___0 & 4294967167U, drv_data->ioaddr);
#line 823
  pm_runtime_mark_last_busy(& (drv_data->pdev)->dev);
#line 824
  pm_runtime_put_autosuspend(& (drv_data->pdev)->dev);
  }
#line 825
  return (0);
}
}
#line 828 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static int setup_cs(struct spi_device *spi , struct chip_data *chip , struct pxa2xx_spi_chip *chip_info ) 
{ 
  int err ;
  bool tmp ;
  bool tmp___0 ;

  {
#line 831
  err = 0;
#line 833
  if ((unsigned long )chip == (unsigned long )((struct chip_data *)0) || (unsigned long )chip_info == (unsigned long )((struct pxa2xx_spi_chip *)0)) {
#line 834
    return (0);
  } else {

  }
  {
#line 839
  tmp = gpio_is_valid(chip->__annonCompField55.gpio_cs);
  }
#line 839
  if ((int )tmp) {
    {
#line 840
    gpio_free((unsigned int )chip->__annonCompField55.gpio_cs);
    }
  } else {

  }
#line 843
  if ((unsigned long )chip_info->cs_control != (unsigned long )((void (*)(u32  ))0)) {
#line 844
    chip->cs_control = chip_info->cs_control;
#line 845
    return (0);
  } else {

  }
  {
#line 848
  tmp___0 = gpio_is_valid(chip_info->gpio_cs);
  }
#line 848
  if ((int )tmp___0) {
    {
#line 849
    err = gpio_request((unsigned int )chip_info->gpio_cs, "SPI_CS");
    }
#line 850
    if (err != 0) {
      {
#line 851
      dev_err((struct device  const  *)(& spi->dev), "failed to request chip select GPIO%d\n",
              chip_info->gpio_cs);
      }
#line 853
      return (err);
    } else {

    }
    {
#line 856
    chip->__annonCompField55.gpio_cs = chip_info->gpio_cs;
#line 857
    chip->gpio_cs_inverted = (int )spi->mode & 4;
#line 859
    err = gpio_direction_output((unsigned int )chip->__annonCompField55.gpio_cs, chip->gpio_cs_inverted == 0);
    }
  } else {

  }
#line 863
  return (err);
}
}
#line 866 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static int setup(struct spi_device *spi ) 
{ 
  struct pxa2xx_spi_chip *chip_info ;
  struct chip_data *chip ;
  struct driver_data *drv_data ;
  void *tmp ;
  unsigned int clk_div ;
  uint tx_thres ;
  uint tx_hi_thres ;
  uint rx_thres ;
  bool tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  void *tmp___3 ;
  void *tmp___4 ;
  int tmp___5 ;
  struct _ddebug descriptor ;
  long tmp___6 ;
  struct _ddebug descriptor___0 ;
  long tmp___7 ;
  int tmp___8 ;
  int tmp___9 ;

  {
  {
#line 868
  chip_info = (struct pxa2xx_spi_chip *)0;
#line 870
  tmp = spi_master_get_devdata(spi->master);
#line 870
  drv_data = (struct driver_data *)tmp;
#line 874
  tmp___0 = is_lpss_ssp((struct driver_data  const  *)drv_data);
  }
#line 874
  if ((int )tmp___0) {
#line 875
    tx_thres = 160U;
#line 876
    tx_hi_thres = 224U;
#line 877
    rx_thres = 64U;
  } else {
#line 879
    tx_thres = 2U;
#line 880
    tx_hi_thres = 0U;
#line 881
    rx_thres = 2U;
  }
  {
#line 884
  tmp___2 = pxa25x_ssp_comp(drv_data);
  }
#line 884
  if (tmp___2 == 0 && (unsigned int )spi->bits_per_word - 4U > 28U) {
    {
#line 886
    dev_err((struct device  const  *)(& spi->dev), "failed setup: ssp_type=%d, bits/wrd=%d b/w not 4-32 for type non-PXA25x_SSP\n",
            (unsigned int )drv_data->ssp_type, (int )spi->bits_per_word);
    }
#line 889
    return (-22);
  } else {
    {
#line 890
    tmp___1 = pxa25x_ssp_comp(drv_data);
    }
#line 890
    if (tmp___1 != 0 && (unsigned int )spi->bits_per_word - 4U > 12U) {
      {
#line 893
      dev_err((struct device  const  *)(& spi->dev), "failed setup: ssp_type=%d, bits/wrd=%d b/w not 4-16 for type PXA25x_SSP\n",
              (unsigned int )drv_data->ssp_type, (int )spi->bits_per_word);
      }
#line 896
      return (-22);
    } else {

    }
  }
  {
#line 900
  tmp___3 = spi_get_ctldata(spi);
#line 900
  chip = (struct chip_data *)tmp___3;
  }
#line 901
  if ((unsigned long )chip == (unsigned long )((struct chip_data *)0)) {
    {
#line 902
    tmp___4 = kzalloc(80UL, 208U);
#line 902
    chip = (struct chip_data *)tmp___4;
    }
#line 903
    if ((unsigned long )chip == (unsigned long )((struct chip_data *)0)) {
      {
#line 904
      dev_err((struct device  const  *)(& spi->dev), "failed setup: can\'t allocate chip data\n");
      }
#line 906
      return (-12);
    } else {

    }
#line 909
    if ((unsigned int )drv_data->ssp_type == 7U) {
#line 910
      if ((unsigned int )spi->chip_select > 4U) {
        {
#line 911
        dev_err((struct device  const  *)(& spi->dev), "failed setup: cs number must not be > 4.\n");
#line 913
        kfree((void const   *)chip);
        }
#line 914
        return (-22);
      } else {

      }
#line 917
      chip->__annonCompField55.frm = (unsigned int )spi->chip_select;
    } else {
#line 919
      chip->__annonCompField55.gpio_cs = -1;
    }
#line 920
    chip->enable_dma = 0U;
#line 921
    chip->timeout = 1000U;
  } else {

  }
#line 926
  chip_info = (struct pxa2xx_spi_chip *)spi->controller_data;
#line 929
  chip->cr1 = 0U;
#line 930
  if ((unsigned long )chip_info != (unsigned long )((struct pxa2xx_spi_chip *)0)) {
#line 931
    if (chip_info->timeout != 0U) {
#line 932
      chip->timeout = chip_info->timeout;
    } else {

    }
#line 933
    if ((unsigned int )chip_info->tx_threshold != 0U) {
#line 934
      tx_thres = (uint )chip_info->tx_threshold;
    } else {

    }
#line 935
    if ((unsigned int )chip_info->tx_hi_threshold != 0U) {
#line 936
      tx_hi_thres = (uint )chip_info->tx_hi_threshold;
    } else {

    }
#line 937
    if ((unsigned int )chip_info->rx_threshold != 0U) {
#line 938
      rx_thres = (uint )chip_info->rx_threshold;
    } else {

    }
#line 939
    chip->enable_dma = (drv_data->master_info)->enable_dma;
#line 940
    chip->dma_threshold = 0U;
#line 941
    if ((unsigned int )chip_info->enable_loopback != 0U) {
#line 942
      chip->cr1 = 4U;
    } else {

    }
  } else
#line 943
  if ((unsigned long )spi->dev.acpi_node.handle != (unsigned long )((void *)0)) {
#line 949
    chip->enable_dma = (drv_data->master_info)->enable_dma;
  } else {

  }
#line 952
  chip->threshold = (((rx_thres - 1U) << 10) & 3072U) | (((tx_thres - 1U) << 6) & 255U);
#line 955
  chip->lpss_rx_threshold = (unsigned int )((u16 )rx_thres) - 1U;
#line 956
  chip->lpss_tx_threshold = (((unsigned int )((u16 )tx_thres) - 1U) << 8U) | ((unsigned int )((u16 )tx_hi_thres) - 1U);
#line 962
  if ((unsigned int )chip->enable_dma != 0U) {
    {
#line 964
    tmp___5 = pxa2xx_spi_set_dma_burst_and_threshold(chip, spi, (int )spi->bits_per_word,
                                                     & chip->dma_burst_size, & chip->dma_threshold);
    }
#line 964
    if (tmp___5 != 0) {
      {
#line 968
      dev_warn((struct device  const  *)(& spi->dev), "in setup: DMA burst size reduced to match bits_per_word\n");
      }
    } else {

    }
  } else {

  }
  {
#line 973
  clk_div = ssp_get_clk_div(drv_data, (int )spi->max_speed_hz);
#line 974
  chip->speed_hz = spi->max_speed_hz;
#line 976
  chip->cr0 = ((clk_div | (unsigned int )((unsigned int )spi->bits_per_word > 16U ? (int )spi->bits_per_word + -17 : (int )spi->bits_per_word + -1)) | ((unsigned int )spi->bits_per_word > 16U ? 1048576U : 0U)) | 128U;
#line 982
  chip->cr1 = chip->cr1 & 4294967271U;
#line 983
  chip->cr1 = chip->cr1 | (u32 )(((int )spi->mode & 1 ? 16 : 0) | (((int )spi->mode & 2) != 0 ? 8 : 0));
  }
#line 986
  if (((int )spi->mode & 32) != 0) {
#line 987
    chip->cr1 = chip->cr1 | 4U;
  } else {

  }
  {
#line 990
  tmp___8 = pxa25x_ssp_comp(drv_data);
  }
#line 990
  if (tmp___8 == 0) {
    {
#line 991
    descriptor.modname = "spi_pxa2xx_platform";
#line 991
    descriptor.function = "setup";
#line 991
    descriptor.filename = "drivers/spi/spi-pxa2xx.c";
#line 991
    descriptor.format = "%ld Hz actual, %s\n";
#line 991
    descriptor.lineno = 994U;
#line 991
    descriptor.flags = 1U;
#line 991
    tmp___6 = __builtin_expect((long )descriptor.flags & 1L, 0L);
    }
#line 991
    if (tmp___6 != 0L) {
      {
#line 991
      __dynamic_dev_dbg(& descriptor, (struct device  const  *)(& spi->dev), "%ld Hz actual, %s\n",
                        drv_data->max_clk_rate / (unsigned long )(((chip->cr0 & 1048320U) >> 8) + 1U),
                        (unsigned int )chip->enable_dma != 0U ? (char *)"DMA" : (char *)"PIO");
      }
    } else {

    }
  } else {
    {
#line 996
    descriptor___0.modname = "spi_pxa2xx_platform";
#line 996
    descriptor___0.function = "setup";
#line 996
    descriptor___0.filename = "drivers/spi/spi-pxa2xx.c";
#line 996
    descriptor___0.format = "%ld Hz actual, %s\n";
#line 996
    descriptor___0.lineno = 999U;
#line 996
    descriptor___0.flags = 1U;
#line 996
    tmp___7 = __builtin_expect((long )descriptor___0.flags & 1L, 0L);
    }
#line 996
    if (tmp___7 != 0L) {
      {
#line 996
      __dynamic_dev_dbg(& descriptor___0, (struct device  const  *)(& spi->dev), "%ld Hz actual, %s\n",
                        (drv_data->max_clk_rate / 2UL) / (unsigned long )(((chip->cr0 & 65280U) >> 8) + 1U),
                        (unsigned int )chip->enable_dma != 0U ? (char *)"DMA" : (char *)"PIO");
      }
    } else {

    }
  }
#line 1001
  if ((unsigned int )spi->bits_per_word <= 8U) {
#line 1002
    chip->n_bytes = 1U;
#line 1003
    chip->read = & u8_reader;
#line 1004
    chip->write = & u8_writer;
  } else
#line 1005
  if ((unsigned int )spi->bits_per_word <= 16U) {
#line 1006
    chip->n_bytes = 2U;
#line 1007
    chip->read = & u16_reader;
#line 1008
    chip->write = & u16_writer;
  } else
#line 1009
  if ((unsigned int )spi->bits_per_word <= 32U) {
#line 1010
    chip->cr0 = chip->cr0 | 1048576U;
#line 1011
    chip->n_bytes = 4U;
#line 1012
    chip->read = & u32_reader;
#line 1013
    chip->write = & u32_writer;
  } else {
    {
#line 1015
    dev_err((struct device  const  *)(& spi->dev), "invalid wordsize\n");
    }
#line 1016
    return (-19);
  }
  {
#line 1018
  chip->bits_per_word = spi->bits_per_word;
#line 1020
  spi_set_ctldata(spi, (void *)chip);
  }
#line 1022
  if ((unsigned int )drv_data->ssp_type == 7U) {
#line 1023
    return (0);
  } else {

  }
  {
#line 1025
  tmp___9 = setup_cs(spi, chip, chip_info);
  }
#line 1025
  return (tmp___9);
}
}
#line 1028 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static void cleanup(struct spi_device *spi ) 
{ 
  struct chip_data *chip ;
  void *tmp ;
  struct driver_data *drv_data ;
  void *tmp___0 ;
  bool tmp___1 ;

  {
  {
#line 1030
  tmp = spi_get_ctldata(spi);
#line 1030
  chip = (struct chip_data *)tmp;
#line 1031
  tmp___0 = spi_master_get_devdata(spi->master);
#line 1031
  drv_data = (struct driver_data *)tmp___0;
  }
#line 1033
  if ((unsigned long )chip == (unsigned long )((struct chip_data *)0)) {
#line 1034
    return;
  } else {

  }
#line 1036
  if ((unsigned int )drv_data->ssp_type != 7U) {
    {
#line 1036
    tmp___1 = gpio_is_valid(chip->__annonCompField55.gpio_cs);
    }
#line 1036
    if ((int )tmp___1) {
      {
#line 1037
      gpio_free((unsigned int )chip->__annonCompField55.gpio_cs);
      }
    } else {

    }
  } else {

  }
  {
#line 1039
  kfree((void const   *)chip);
  }
#line 1040
  return;
}
}
#line 1043 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static int pxa2xx_spi_acpi_add_dma(struct acpi_resource *res , void *data ) 
{ 
  struct pxa2xx_spi_master *pdata ;
  struct acpi_resource_fixed_dma  const  *dma ;

  {
#line 1045
  pdata = (struct pxa2xx_spi_master *)data;
#line 1047
  if (res->type == 18U) {
#line 1050
    dma = (struct acpi_resource_fixed_dma  const  *)(& res->data.fixed_dma);
#line 1051
    if (pdata->tx_slave_id < 0) {
#line 1052
      pdata->tx_slave_id = (int )dma->request_lines;
#line 1053
      pdata->tx_chan_id = (int )dma->channels;
    } else
#line 1054
    if (pdata->rx_slave_id < 0) {
#line 1055
      pdata->rx_slave_id = (int )dma->request_lines;
#line 1056
      pdata->rx_chan_id = (int )dma->channels;
    } else {

    }
  } else {

  }
#line 1061
  return (1);
}
}
#line 1065 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static struct pxa2xx_spi_master *pxa2xx_spi_acpi_get_pdata(struct platform_device *pdev ) 
{ 
  struct pxa2xx_spi_master *pdata ;
  struct list_head resource_list ;
  struct acpi_device *adev ;
  struct ssp_device *ssp ;
  struct resource *res ;
  int devid ;
  int tmp ;
  void *tmp___0 ;
  long tmp___1 ;
  long tmp___2 ;
  int tmp___3 ;

  {
#line 1074
  if ((unsigned long )pdev->dev.acpi_node.handle == (unsigned long )((void *)0)) {
#line 1076
    return ((struct pxa2xx_spi_master *)0);
  } else {
    {
#line 1074
    tmp = acpi_bus_get_device(pdev->dev.acpi_node.handle, & adev);
    }
#line 1074
    if (tmp != 0) {
#line 1076
      return ((struct pxa2xx_spi_master *)0);
    } else {

    }
  }
  {
#line 1078
  tmp___0 = devm_kzalloc(& pdev->dev, 104UL, 208U);
#line 1078
  pdata = (struct pxa2xx_spi_master *)tmp___0;
  }
#line 1079
  if ((unsigned long )pdata == (unsigned long )((struct pxa2xx_spi_master *)0)) {
    {
#line 1080
    dev_err((struct device  const  *)(& pdev->dev), "failed to allocate memory for platform data\n");
    }
#line 1082
    return ((struct pxa2xx_spi_master *)0);
  } else {

  }
  {
#line 1085
  res = platform_get_resource(pdev, 512U, 0U);
  }
#line 1086
  if ((unsigned long )res == (unsigned long )((struct resource *)0)) {
#line 1087
    return ((struct pxa2xx_spi_master *)0);
  } else {

  }
  {
#line 1089
  ssp = & pdata->ssp;
#line 1091
  ssp->phys_base = (unsigned long )res->start;
#line 1092
  ssp->mmio_base = devm_ioremap_resource(& pdev->dev, res);
#line 1093
  tmp___2 = IS_ERR((void const   *)ssp->mmio_base);
  }
#line 1093
  if (tmp___2 != 0L) {
    {
#line 1094
    tmp___1 = PTR_ERR((void const   *)ssp->mmio_base);
    }
#line 1094
    return ((struct pxa2xx_spi_master *)tmp___1);
  } else {

  }
  {
#line 1096
  ssp->clk = devm_clk_get(& pdev->dev, (char const   *)0);
#line 1097
  ssp->irq = platform_get_irq(pdev, 0U);
#line 1098
  ssp->type = 8;
#line 1099
  ssp->pdev = pdev;
#line 1101
  ssp->port_id = -1;
  }
#line 1102
  if ((unsigned long )adev->pnp.unique_id != (unsigned long )((char *)0)) {
    {
#line 1102
    tmp___3 = kstrtoint((char const   *)adev->pnp.unique_id, 0U, & devid);
    }
#line 1102
    if (tmp___3 == 0) {
#line 1103
      ssp->port_id = devid;
    } else {

    }
  } else {

  }
  {
#line 1105
  pdata->num_chipselect = 1U;
#line 1106
  pdata->rx_slave_id = -1;
#line 1107
  pdata->tx_slave_id = -1;
#line 1109
  INIT_LIST_HEAD(& resource_list);
#line 1110
  acpi_dev_get_resources(adev, & resource_list, & pxa2xx_spi_acpi_add_dma, (void *)pdata);
#line 1112
  acpi_dev_free_resource_list(& resource_list);
#line 1114
  pdata->enable_dma = (u8 )(pdata->rx_slave_id >= 0 && pdata->tx_slave_id >= 0);
  }
#line 1116
  return (pdata);
}
}
#line 1119 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static struct acpi_device_id pxa2xx_spi_acpi_match[3U]  = {      {{'I', 'N', 'T', '3', '3', 'C', '0', '\000'}, 0UL}, 
        {{'I', 'N', 'T', '3', '3', 'C', '1', '\000'}, 0UL}};
#line 1124 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
struct acpi_device_id  const  __mod_acpi_device_table  ;
#line 1133 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static int pxa2xx_spi_probe(struct platform_device *pdev ) 
{ 
  struct device *dev ;
  struct pxa2xx_spi_master *platform_info ;
  struct spi_master *master ;
  struct driver_data *drv_data ;
  struct ssp_device *ssp ;
  int status ;
  void *tmp ;
  void *tmp___0 ;
  int tmp___1 ;
  char const   *tmp___2 ;
  int tmp___3 ;

  {
  {
#line 1135
  dev = & pdev->dev;
#line 1142
  tmp = dev_get_platdata((struct device  const  *)dev);
#line 1142
  platform_info = (struct pxa2xx_spi_master *)tmp;
  }
#line 1143
  if ((unsigned long )platform_info == (unsigned long )((struct pxa2xx_spi_master *)0)) {
    {
#line 1144
    platform_info = pxa2xx_spi_acpi_get_pdata(pdev);
    }
#line 1145
    if ((unsigned long )platform_info == (unsigned long )((struct pxa2xx_spi_master *)0)) {
      {
#line 1146
      dev_err((struct device  const  *)(& pdev->dev), "missing platform data\n");
      }
#line 1147
      return (-19);
    } else {

    }
  } else {

  }
  {
#line 1151
  ssp = pxa_ssp_request(pdev->id, pdev->name);
  }
#line 1152
  if ((unsigned long )ssp == (unsigned long )((struct ssp_device *)0)) {
#line 1153
    ssp = & platform_info->ssp;
  } else {

  }
#line 1155
  if ((unsigned long )ssp->mmio_base == (unsigned long )((void *)0)) {
    {
#line 1156
    dev_err((struct device  const  *)(& pdev->dev), "failed to get ssp\n");
    }
#line 1157
    return (-19);
  } else {

  }
  {
#line 1161
  master = ldv_spi_alloc_master_17(dev, 376U);
  }
#line 1162
  if ((unsigned long )master == (unsigned long )((struct spi_master *)0)) {
    {
#line 1163
    dev_err((struct device  const  *)(& pdev->dev), "cannot alloc spi_master\n");
#line 1164
    pxa_ssp_free(ssp);
    }
#line 1165
    return (-12);
  } else {

  }
  {
#line 1167
  tmp___0 = spi_master_get_devdata(master);
#line 1167
  drv_data = (struct driver_data *)tmp___0;
#line 1168
  drv_data->master = master;
#line 1169
  drv_data->master_info = platform_info;
#line 1170
  drv_data->pdev = pdev;
#line 1171
  drv_data->ssp = ssp;
#line 1173
  master->dev.parent = & pdev->dev;
#line 1174
  master->dev.of_node = pdev->dev.of_node;
#line 1176
  master->mode_bits = 39U;
#line 1178
  master->bus_num = (s16 )ssp->port_id;
#line 1179
  master->num_chipselect = platform_info->num_chipselect;
#line 1180
  master->dma_alignment = 8U;
#line 1181
  master->cleanup = & cleanup;
#line 1182
  master->setup = & setup;
#line 1183
  master->transfer_one_message = & pxa2xx_spi_transfer_one_message;
#line 1184
  master->prepare_transfer_hardware = & pxa2xx_spi_prepare_transfer;
#line 1185
  master->unprepare_transfer_hardware = & pxa2xx_spi_unprepare_transfer;
#line 1187
  drv_data->ssp_type = (enum pxa_ssp_type )ssp->type;
#line 1188
  drv_data->null_dma_buf = (u32 *)(((unsigned long )(drv_data + 1UL) + 7UL) & 0xfffffffffffffff8UL);
#line 1190
  drv_data->ioaddr = ssp->mmio_base;
#line 1191
  drv_data->ssdr_physical = (u32 )ssp->phys_base + 16U;
#line 1192
  tmp___1 = pxa25x_ssp_comp(drv_data);
  }
#line 1192
  if (tmp___1 != 0) {
#line 1193
    drv_data->int_cr1 = 3U;
#line 1194
    drv_data->dma_cr1 = 0U;
#line 1195
    drv_data->clear_sr = 128U;
#line 1196
    drv_data->mask_sr = 224U;
  } else {
#line 1198
    drv_data->int_cr1 = 524291U;
#line 1199
    drv_data->dma_cr1 = 7340032U;
#line 1200
    drv_data->clear_sr = 524416U;
#line 1201
    drv_data->mask_sr = 524512U;
  }
  {
#line 1204
  tmp___2 = dev_name((struct device  const  *)dev);
#line 1204
  status = ldv_request_irq_18((unsigned int )ssp->irq, & ssp_int, 128UL, tmp___2,
                              (void *)drv_data);
  }
#line 1206
  if (status < 0) {
    {
#line 1207
    dev_err((struct device  const  *)(& pdev->dev), "cannot get IRQ %d\n", ssp->irq);
    }
#line 1208
    goto out_error_master_alloc;
  } else {

  }
#line 1212
  drv_data->tx_channel = -1;
#line 1213
  drv_data->rx_channel = -1;
#line 1214
  if ((unsigned int )platform_info->enable_dma != 0U) {
    {
#line 1215
    status = pxa2xx_spi_dma_setup(drv_data);
    }
#line 1216
    if (status != 0) {
      {
#line 1217
      dev_warn((struct device  const  *)dev, "failed to setup DMA, using PIO\n");
#line 1218
      platform_info->enable_dma = 0U;
      }
    } else {

    }
  } else {

  }
  {
#line 1223
  ldv_clk_prepare_enable_19(ssp->clk);
#line 1225
  drv_data->max_clk_rate = clk_get_rate(ssp->clk);
#line 1228
  write_SSCR0(0U, drv_data->ioaddr);
#line 1229
  write_SSCR1(1088U, drv_data->ioaddr);
#line 1232
  write_SSCR0(519U, drv_data->ioaddr);
#line 1236
  tmp___3 = pxa25x_ssp_comp(drv_data);
  }
#line 1236
  if (tmp___3 == 0) {
    {
#line 1237
    write_SSTO(0U, drv_data->ioaddr);
    }
  } else {

  }
  {
#line 1238
  write_SSPSP(0U, drv_data->ioaddr);
#line 1240
  lpss_ssp_setup(drv_data);
#line 1242
  tasklet_init(& drv_data->pump_transfers, & pump_transfers, (unsigned long )drv_data);
#line 1246
  platform_set_drvdata(pdev, (void *)drv_data);
#line 1247
  status = spi_register_master(master);
  }
#line 1248
  if (status != 0) {
    {
#line 1249
    dev_err((struct device  const  *)(& pdev->dev), "problem registering spi master\n");
    }
#line 1250
    goto out_error_clock_enabled;
  } else {

  }
  {
#line 1253
  pm_runtime_set_autosuspend_delay(& pdev->dev, 50);
#line 1254
  pm_runtime_use_autosuspend(& pdev->dev);
#line 1255
  pm_runtime_set_active(& pdev->dev);
#line 1256
  pm_runtime_enable(& pdev->dev);
  }
#line 1258
  return (status);
  out_error_clock_enabled: 
  {
#line 1261
  ldv_clk_disable_unprepare_20(ssp->clk);
#line 1262
  pxa2xx_spi_dma_release(drv_data);
#line 1263
  ldv_free_irq_21((unsigned int )ssp->irq, (void *)drv_data);
  }
  out_error_master_alloc: 
  {
#line 1266
  spi_master_put(master);
#line 1267
  pxa_ssp_free(ssp);
  }
#line 1268
  return (status);
}
}
#line 1271 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static int pxa2xx_spi_remove(struct platform_device *pdev ) 
{ 
  struct driver_data *drv_data ;
  void *tmp ;
  struct ssp_device *ssp ;

  {
  {
#line 1273
  tmp = platform_get_drvdata((struct platform_device  const  *)pdev);
#line 1273
  drv_data = (struct driver_data *)tmp;
  }
#line 1276
  if ((unsigned long )drv_data == (unsigned long )((struct driver_data *)0)) {
#line 1277
    return (0);
  } else {

  }
  {
#line 1278
  ssp = drv_data->ssp;
#line 1280
  pm_runtime_get_sync(& pdev->dev);
#line 1283
  write_SSCR0(0U, drv_data->ioaddr);
#line 1284
  ldv_clk_disable_unprepare_20(ssp->clk);
  }
#line 1287
  if ((unsigned int )(drv_data->master_info)->enable_dma != 0U) {
    {
#line 1288
    pxa2xx_spi_dma_release(drv_data);
    }
  } else {

  }
  {
#line 1290
  pm_runtime_put_noidle(& pdev->dev);
#line 1291
  pm_runtime_disable(& pdev->dev);
#line 1294
  ldv_free_irq_23((unsigned int )ssp->irq, (void *)drv_data);
#line 1297
  pxa_ssp_free(ssp);
#line 1300
  spi_unregister_master(drv_data->master);
#line 1303
  platform_set_drvdata(pdev, (void *)0);
  }
#line 1305
  return (0);
}
}
#line 1308 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static void pxa2xx_spi_shutdown(struct platform_device *pdev ) 
{ 
  int status ;

  {
  {
#line 1310
  status = 0;
#line 1312
  status = pxa2xx_spi_remove(pdev);
  }
#line 1312
  if (status != 0) {
    {
#line 1313
    dev_err((struct device  const  *)(& pdev->dev), "shutdown failed with %d\n", status);
    }
  } else {

  }
#line 1314
  return;
}
}
#line 1317 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static int pxa2xx_spi_suspend(struct device *dev ) 
{ 
  struct driver_data *drv_data ;
  void *tmp ;
  struct ssp_device *ssp ;
  int status ;
  bool tmp___0 ;
  int tmp___1 ;

  {
  {
#line 1319
  tmp = ldv_dev_get_drvdata_24((struct device  const  *)dev);
#line 1319
  drv_data = (struct driver_data *)tmp;
#line 1320
  ssp = drv_data->ssp;
#line 1321
  status = 0;
#line 1323
  status = spi_master_suspend(drv_data->master);
  }
#line 1324
  if (status != 0) {
#line 1325
    return (status);
  } else {

  }
  {
#line 1326
  write_SSCR0(0U, drv_data->ioaddr);
#line 1328
  tmp___0 = pm_runtime_suspended(dev);
  }
#line 1328
  if (tmp___0) {
#line 1328
    tmp___1 = 0;
  } else {
#line 1328
    tmp___1 = 1;
  }
#line 1328
  if (tmp___1) {
    {
#line 1329
    ldv_clk_disable_unprepare_20(ssp->clk);
    }
  } else {

  }
#line 1331
  return (0);
}
}
#line 1334 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static int pxa2xx_spi_resume(struct device *dev ) 
{ 
  struct driver_data *drv_data ;
  void *tmp ;
  struct ssp_device *ssp ;
  int status ;
  bool tmp___0 ;
  int tmp___1 ;

  {
  {
#line 1336
  tmp = ldv_dev_get_drvdata_26((struct device  const  *)dev);
#line 1336
  drv_data = (struct driver_data *)tmp;
#line 1337
  ssp = drv_data->ssp;
#line 1338
  status = 0;
#line 1340
  pxa2xx_spi_dma_resume(drv_data);
#line 1343
  tmp___0 = pm_runtime_suspended(dev);
  }
#line 1343
  if (tmp___0) {
#line 1343
    tmp___1 = 0;
  } else {
#line 1343
    tmp___1 = 1;
  }
#line 1343
  if (tmp___1) {
    {
#line 1344
    ldv_clk_prepare_enable_19(ssp->clk);
    }
  } else {

  }
  {
#line 1347
  status = spi_master_resume(drv_data->master);
  }
#line 1348
  if (status != 0) {
    {
#line 1349
    dev_err((struct device  const  *)dev, "problem starting queue (%d)\n", status);
    }
#line 1350
    return (status);
  } else {

  }
#line 1353
  return (0);
}
}
#line 1358 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static int pxa2xx_spi_runtime_suspend(struct device *dev ) 
{ 
  struct driver_data *drv_data ;
  void *tmp ;

  {
  {
#line 1360
  tmp = ldv_dev_get_drvdata_28((struct device  const  *)dev);
#line 1360
  drv_data = (struct driver_data *)tmp;
#line 1362
  ldv_clk_disable_unprepare_20((drv_data->ssp)->clk);
  }
#line 1363
  return (0);
}
}
#line 1366 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static int pxa2xx_spi_runtime_resume(struct device *dev ) 
{ 
  struct driver_data *drv_data ;
  void *tmp ;

  {
  {
#line 1368
  tmp = ldv_dev_get_drvdata_30((struct device  const  *)dev);
#line 1368
  drv_data = (struct driver_data *)tmp;
#line 1370
  ldv_clk_prepare_enable_19((drv_data->ssp)->clk);
  }
#line 1371
  return (0);
}
}
#line 1375 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static struct dev_pm_ops  const  pxa2xx_spi_pm_ops  = 
#line 1375
     {0, 0, & pxa2xx_spi_suspend, & pxa2xx_spi_resume, & pxa2xx_spi_suspend, & pxa2xx_spi_resume,
    & pxa2xx_spi_suspend, & pxa2xx_spi_resume, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    & pxa2xx_spi_runtime_suspend, & pxa2xx_spi_runtime_resume, (int (*)(struct device * ))0};
#line 1381 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static struct platform_driver driver  =    {& pxa2xx_spi_probe, & pxa2xx_spi_remove, & pxa2xx_spi_shutdown, 0, 0, {"pxa2xx-spi",
                                                                           0, & __this_module,
                                                                           0, (_Bool)0,
                                                                           0, (struct acpi_device_id  const  *)(& pxa2xx_spi_acpi_match),
                                                                           0, 0, 0,
                                                                           0, 0, 0,
                                                                           & pxa2xx_spi_pm_ops,
                                                                           0}, 0};
#line 1393 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static int pxa2xx_spi_init(void) 
{ 
  int tmp ;

  {
  {
#line 1395
  tmp = ldv_platform_driver_register_32(& driver);
  }
#line 1395
  return (tmp);
}
}
#line 1399 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx.c"
static void pxa2xx_spi_exit(void) 
{ 


  {
  {
#line 1401
  ldv_platform_driver_unregister_33(& driver);
  }
#line 1402
  return;
}
}
#line 52 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_dispatch_deregister_7_1(struct platform_driver *arg0 ) ;
#line 53
void ldv_dispatch_insmod_deregister_10_1(void) ;
#line 54
void ldv_dispatch_insmod_register_10_2(void) ;
#line 55
void ldv_dispatch_irq_deregister_6_1(int arg0 ) ;
#line 56
void ldv_dispatch_irq_register_8_3(int arg0 , irqreturn_t (*arg1)(int  , void * ) ,
                                   irqreturn_t (*arg2)(int  , void * ) , void *arg3 ) ;
#line 57
void ldv_dispatch_pm_deregister_3_5(void) ;
#line 58
void ldv_dispatch_pm_register_3_6(void) ;
#line 59
void ldv_dispatch_register_9_3(struct platform_driver *arg0 ) ;
#line 60
void ldv_emg_free_irq(int arg0 , void *arg1 ) ;
#line 61
int ldv_emg_platform_driver_register(struct platform_driver *arg0 ) ;
#line 62
void ldv_emg_platform_driver_unregister(struct platform_driver *arg0 ) ;
#line 63
int ldv_emg_request_irq(unsigned int arg0 , irqreturn_t (*arg1)(int  , void * ) ,
                        unsigned long arg2 , char *arg3 , void *arg4 ) ;
#line 64
void ldv_insmod_5(void *arg0 ) ;
#line 65
void ldv_insmod_pxa2xx_spi_exit_5_2(void (*arg0)(void) ) ;
#line 66
int ldv_insmod_pxa2xx_spi_init_5_6(int (*arg0)(void) ) ;
#line 67
void ldv_interrupt_scenario_2(void *arg0 ) ;
#line 68
enum irqreturn ldv_interrupt_scenario_handler_2_5(irqreturn_t (*arg0)(int  , void * ) ,
                                                  int arg1 , void *arg2 ) ;
#line 69
void ldv_interrupt_scenario_thread_2_3(irqreturn_t (*arg0)(int  , void * ) , int arg1 ,
                                       void *arg2 ) ;
#line 70
void ldv_main_10(void *arg0 ) ;
#line 71
void ldv_platform_instance_3(void *arg0 ) ;
#line 72
void ldv_platform_instance_callback_3_7(void (*arg0)(struct platform_device * ) ,
                                        struct platform_device *arg1 ) ;
#line 73
int ldv_platform_instance_probe_3_14(int (*arg0)(struct platform_device * ) , struct platform_device *arg1 ) ;
#line 74
void ldv_platform_instance_release_3_3(int (*arg0)(struct platform_device * ) , struct platform_device *arg1 ) ;
#line 75
void ldv_pm_ops_scenario_4(void *arg0 ) ;
#line 76
void ldv_pm_ops_scenario_complete_4_3(void (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 77
void ldv_pm_ops_scenario_freeze_4_15(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 78
void ldv_pm_ops_scenario_freeze_late_4_14(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 79
void ldv_pm_ops_scenario_freeze_noirq_4_12(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 80
void ldv_pm_ops_scenario_poweroff_4_9(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 81
void ldv_pm_ops_scenario_poweroff_late_4_8(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 82
void ldv_pm_ops_scenario_poweroff_noirq_4_6(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 83
void ldv_pm_ops_scenario_prepare_4_22(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 84
void ldv_pm_ops_scenario_restore_4_4(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 85
void ldv_pm_ops_scenario_restore_early_4_7(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 86
void ldv_pm_ops_scenario_restore_noirq_4_5(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 87
void ldv_pm_ops_scenario_resume_4_16(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 88
void ldv_pm_ops_scenario_resume_early_4_17(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 89
void ldv_pm_ops_scenario_resume_noirq_4_19(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 90
void ldv_pm_ops_scenario_runtime_idle_4_27(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 91
void ldv_pm_ops_scenario_runtime_resume_4_24(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 92
void ldv_pm_ops_scenario_runtime_suspend_4_25(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 93
void ldv_pm_ops_scenario_suspend_4_21(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 94
void ldv_pm_ops_scenario_suspend_late_4_18(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 95
void ldv_pm_ops_scenario_suspend_noirq_4_20(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 96
void ldv_pm_ops_scenario_thaw_4_10(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 97
void ldv_pm_ops_scenario_thaw_early_4_13(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 98
void ldv_pm_ops_scenario_thaw_noirq_4_11(int (*arg0)(struct device * ) , struct device *arg1 ) ;
#line 99
int main(void) ;
#line 107 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_dispatch_deregister_7_1(struct platform_driver *arg0 ) 
{ 


  {
#line 110
  return;
}
}
#line 114 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_dispatch_insmod_deregister_10_1(void) 
{ 


  {
#line 117
  return;
}
}
#line 121 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_dispatch_insmod_register_10_2(void) 
{ 
  struct ldv_struct_platform_instance_3 *cf_arg_5 ;
  void *tmp ;

  {
  {
#line 123
  tmp = ldv_xmalloc(16UL);
#line 123
  cf_arg_5 = (struct ldv_struct_platform_instance_3 *)tmp;
#line 124
  ldv_insmod_5((void *)cf_arg_5);
  }
#line 125
  return;
}
}
#line 129 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_dispatch_irq_deregister_6_1(int arg0 ) 
{ 


  {
#line 132
  return;
}
}
#line 136 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_dispatch_irq_register_8_3(int arg0 , irqreturn_t (*arg1)(int  , void * ) ,
                                   irqreturn_t (*arg2)(int  , void * ) , void *arg3 ) 
{ 
  struct ldv_struct_interrupt_scenario_2 *cf_arg_2 ;
  void *tmp ;

  {
  {
#line 138
  tmp = ldv_xmalloc(40UL);
#line 138
  cf_arg_2 = (struct ldv_struct_interrupt_scenario_2 *)tmp;
#line 139
  cf_arg_2->arg0 = arg0;
#line 140
  cf_arg_2->arg1 = arg1;
#line 141
  cf_arg_2->arg2 = arg2;
#line 142
  cf_arg_2->arg3 = arg3;
#line 143
  ldv_interrupt_scenario_2((void *)cf_arg_2);
  }
#line 144
  return;
}
}
#line 148 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_dispatch_pm_deregister_3_5(void) 
{ 


  {
#line 151
  return;
}
}
#line 155 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_dispatch_pm_register_3_6(void) 
{ 
  struct ldv_struct_platform_instance_3 *cf_arg_4 ;
  void *tmp ;

  {
  {
#line 157
  tmp = ldv_xmalloc(16UL);
#line 157
  cf_arg_4 = (struct ldv_struct_platform_instance_3 *)tmp;
#line 158
  ldv_pm_ops_scenario_4((void *)cf_arg_4);
  }
#line 159
  return;
}
}
#line 163 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_dispatch_register_9_3(struct platform_driver *arg0 ) 
{ 
  struct ldv_struct_platform_instance_3 *cf_arg_3 ;
  void *tmp ;

  {
  {
#line 165
  tmp = ldv_xmalloc(16UL);
#line 165
  cf_arg_3 = (struct ldv_struct_platform_instance_3 *)tmp;
#line 166
  cf_arg_3->arg0 = arg0;
#line 167
  ldv_platform_instance_3((void *)cf_arg_3);
  }
#line 168
  return;
}
}
#line 172 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_emg_free_irq(int arg0 , void *arg1 ) 
{ 
  int ldv_6_line_line ;

  {
  {
#line 178
  ldv_6_line_line = arg0;
#line 182
  ldv_dispatch_irq_deregister_6_1(ldv_6_line_line);
  }
#line 186
  return;
#line 188
  return;
}
}
#line 193 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
int ldv_emg_platform_driver_register(struct platform_driver *arg0 ) 
{ 
  struct platform_driver *ldv_9_platform_driver_platform_driver ;
  int tmp ;
  int tmp___0 ;

  {
  {
#line 200
  tmp___0 = ldv_undef_int();
  }
#line 200
  if (tmp___0 != 0) {
    {
#line 202
    ldv_9_platform_driver_platform_driver = arg0;
#line 206
    ldv_dispatch_register_9_3(ldv_9_platform_driver_platform_driver);
    }
#line 210
    return (0);
  } else {
    {
#line 217
    tmp = ldv_undef_int_negative();
    }
#line 217
    return (tmp);
  }
}
}
#line 227 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_emg_platform_driver_unregister(struct platform_driver *arg0 ) 
{ 
  struct platform_driver *ldv_7_platform_driver_platform_driver ;

  {
  {
#line 233
  ldv_7_platform_driver_platform_driver = arg0;
#line 237
  ldv_dispatch_deregister_7_1(ldv_7_platform_driver_platform_driver);
  }
#line 241
  return;
#line 243
  return;
}
}
#line 248 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
int ldv_emg_request_irq(unsigned int arg0 , irqreturn_t (*arg1)(int  , void * ) ,
                        unsigned long arg2 , char *arg3 , void *arg4 ) 
{ 
  irqreturn_t (*ldv_8_callback_handler)(int  , void * ) ;
  void *ldv_8_data_data ;
  int ldv_8_line_line ;
  irqreturn_t (*ldv_8_thread_thread)(int  , void * ) ;
  int tmp ;
  int tmp___0 ;

  {
  {
#line 258
  tmp___0 = ldv_undef_int();
  }
#line 258
  if (tmp___0 != 0) {
    {
#line 260
    ldv_8_line_line = (int )arg0;
#line 261
    ldv_8_callback_handler = arg1;
#line 262
    ldv_8_thread_thread = (irqreturn_t (*)(int  , void * ))0;
#line 263
    ldv_8_data_data = arg4;
#line 267
    ldv_dispatch_irq_register_8_3(ldv_8_line_line, ldv_8_callback_handler, ldv_8_thread_thread,
                                  ldv_8_data_data);
    }
#line 271
    return (0);
  } else {
    {
#line 278
    tmp = ldv_undef_int_negative();
    }
#line 278
    return (tmp);
  }
}
}
#line 288 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_insmod_5(void *arg0 ) 
{ 
  void (*ldv_5_pxa2xx_spi_exit_default)(void) ;
  int (*ldv_5_pxa2xx_spi_init_default)(void) ;
  int ldv_5_ret_default ;
  int tmp ;

  {
  {
#line 296
  ldv_free(arg0);
#line 301
  ldv_5_ret_default = ldv_insmod_pxa2xx_spi_init_5_6(ldv_5_pxa2xx_spi_init_default);
#line 303
  ldv_5_ret_default = ldv_post_init(ldv_5_ret_default);
#line 306
  tmp = ldv_undef_int();
  }
#line 306
  if (tmp != 0) {
    {
#line 308
    __VERIFIER_assume(ldv_5_ret_default != 0);
    }
#line 316
    return;
  } else {
    {
#line 320
    __VERIFIER_assume(ldv_5_ret_default == 0);
#line 325
    ldv_insmod_pxa2xx_spi_exit_5_2(ldv_5_pxa2xx_spi_exit_default);
    }
#line 333
    return;
  }
#line 336
  return;
}
}
#line 341 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_insmod_pxa2xx_spi_exit_5_2(void (*arg0)(void) ) 
{ 


  {
  {
#line 342
  pxa2xx_spi_exit();
  }
#line 343
  return;
}
}
#line 346 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
int ldv_insmod_pxa2xx_spi_init_5_6(int (*arg0)(void) ) 
{ 
  int tmp ;

  {
  {
#line 347
  tmp = pxa2xx_spi_init();
  }
#line 347
  return (tmp);
}
}
#line 351 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_interrupt_scenario_2(void *arg0 ) 
{ 
  irqreturn_t (*ldv_2_callback_handler)(int  , void * ) ;
  void *ldv_2_data_data ;
  int ldv_2_line_line ;
  enum irqreturn ldv_2_ret_val_default ;
  irqreturn_t (*ldv_2_thread_thread)(int  , void * ) ;
  struct ldv_struct_interrupt_scenario_2 *data ;
  int tmp ;

  {
#line 360
  data = (struct ldv_struct_interrupt_scenario_2 *)arg0;
#line 365
  if ((unsigned long )data != (unsigned long )((struct ldv_struct_interrupt_scenario_2 *)0)) {
    {
#line 366
    ldv_2_line_line = data->arg0;
#line 367
    ldv_2_callback_handler = data->arg1;
#line 368
    ldv_2_thread_thread = data->arg2;
#line 369
    ldv_2_data_data = data->arg3;
#line 370
    ldv_free((void *)data);
    }
  } else {

  }
  {
#line 376
  ldv_switch_to_interrupt_context();
#line 378
  ldv_2_ret_val_default = ldv_interrupt_scenario_handler_2_5(ldv_2_callback_handler,
                                                             ldv_2_line_line, ldv_2_data_data);
#line 380
  ldv_switch_to_process_context();
#line 383
  tmp = ldv_undef_int();
  }
#line 383
  if (tmp != 0) {
    {
#line 385
    __VERIFIER_assume((unsigned int )ldv_2_ret_val_default == 2U);
    }
#line 389
    if ((unsigned long )ldv_2_thread_thread != (unsigned long )((irqreturn_t (*)(int  ,
                                                                                 void * ))0)) {
      {
#line 391
      ldv_interrupt_scenario_thread_2_3(ldv_2_thread_thread, ldv_2_line_line, ldv_2_data_data);
      }
    } else {

    }
  } else {
    {
#line 398
    __VERIFIER_assume((unsigned int )ldv_2_ret_val_default != 2U);
    }
  }
#line 407
  return;
#line 409
  return;
}
}
#line 414 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
enum irqreturn ldv_interrupt_scenario_handler_2_5(irqreturn_t (*arg0)(int  , void * ) ,
                                                  int arg1 , void *arg2 ) 
{ 
  irqreturn_t tmp ;

  {
  {
#line 415
  tmp = ssp_int(arg1, arg2);
  }
#line 415
  return (tmp);
}
}
#line 419 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_interrupt_scenario_thread_2_3(irqreturn_t (*arg0)(int  , void * ) , int arg1 ,
                                       void *arg2 ) 
{ 


  {
  {
#line 420
  (*arg0)(arg1, arg2);
  }
#line 421
  return;
}
}
#line 424 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_main_10(void *arg0 ) 
{ 


  {
  {
#line 429
  ldv_dispatch_insmod_register_10_2();
#line 433
  ldv_dispatch_insmod_deregister_10_1();
  }
#line 437
  return;
#line 439
  return;
}
}
#line 444 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_platform_instance_3(void *arg0 ) 
{ 
  void (*ldv_3_callback_shutdown)(struct platform_device * ) ;
  struct platform_driver *ldv_3_container_platform_driver ;
  int ldv_3_probed_default ;
  struct platform_device *ldv_3_resource_platform_device ;
  struct ldv_struct_platform_instance_3 *data ;
  void *tmp ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;

  {
  {
#line 452
  data = (struct ldv_struct_platform_instance_3 *)arg0;
#line 456
  ldv_3_probed_default = ldv_undef_int();
  }
#line 459
  if ((unsigned long )data != (unsigned long )((struct ldv_struct_platform_instance_3 *)0)) {
    {
#line 460
    ldv_3_container_platform_driver = data->arg0;
#line 461
    ldv_free((void *)data);
    }
  } else {

  }
  {
#line 466
  tmp = ldv_xmalloc(1184UL);
#line 466
  ldv_3_resource_platform_device = (struct platform_device *)tmp;
  }
#line 473
  goto ldv_main_3;
#line 475
  return;
  ldv_main_3: 
  {
#line 481
  tmp___1 = ldv_undef_int();
  }
#line 481
  if (tmp___1 != 0) {
    {
#line 484
    ldv_pre_probe();
#line 486
    ldv_3_probed_default = ldv_platform_instance_probe_3_14(ldv_3_container_platform_driver->probe,
                                                            ldv_3_resource_platform_device);
#line 488
    ldv_3_probed_default = ldv_post_probe(ldv_3_probed_default);
#line 491
    tmp___0 = ldv_undef_int();
    }
#line 491
    if (tmp___0 != 0) {
      {
#line 493
      __VERIFIER_assume(ldv_3_probed_default == 0);
      }
#line 500
      goto ldv_call_3;
    } else {
      {
#line 504
      __VERIFIER_assume(ldv_3_probed_default != 0);
      }
#line 511
      goto ldv_main_3;
    }
  } else {
    {
#line 516
    ldv_free((void *)ldv_3_resource_platform_device);
    }
#line 524
    return;
  }
#line 527
  return;
  ldv_call_3: 
  {
#line 533
  tmp___2 = ldv_undef_int();
  }
  {
#line 534
  if (tmp___2 == 1) {
#line 534
    goto case_1;
  } else {

  }
#line 547
  if (tmp___2 == 2) {
#line 547
    goto case_2;
  } else {

  }
#line 563
  if (tmp___2 == 3) {
#line 563
    goto case_3;
  } else {

  }
#line 580
  goto switch_default;
  case_1: /* CIL Label */ 
  {
#line 537
  ldv_platform_instance_callback_3_7(ldv_3_callback_shutdown, ldv_3_resource_platform_device);
  }
#line 544
  goto ldv_call_3;
  case_2: /* CIL Label */ 
  {
#line 549
  ldv_dispatch_pm_register_3_6();
#line 553
  ldv_dispatch_pm_deregister_3_5();
  }
#line 560
  goto ldv_call_3;
  case_3: /* CIL Label */ 
  {
#line 566
  ldv_platform_instance_release_3_3(ldv_3_container_platform_driver->remove, ldv_3_resource_platform_device);
#line 570
  ldv_3_probed_default = 1;
  }
#line 577
  goto ldv_main_3;
  switch_default: /* CIL Label */ 
  {
#line 580
  __VERIFIER_assume(0);
  }
  switch_break: /* CIL Label */ ;
  }
#line 583
  return;
}
}
#line 588 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_platform_instance_callback_3_7(void (*arg0)(struct platform_device * ) ,
                                        struct platform_device *arg1 ) 
{ 


  {
  {
#line 589
  pxa2xx_spi_shutdown(arg1);
  }
#line 590
  return;
}
}
#line 593 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
int ldv_platform_instance_probe_3_14(int (*arg0)(struct platform_device * ) , struct platform_device *arg1 ) 
{ 
  int tmp ;

  {
  {
#line 594
  tmp = pxa2xx_spi_probe(arg1);
  }
#line 594
  return (tmp);
}
}
#line 598 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_platform_instance_release_3_3(int (*arg0)(struct platform_device * ) , struct platform_device *arg1 ) 
{ 


  {
  {
#line 599
  pxa2xx_spi_remove(arg1);
  }
#line 600
  return;
}
}
#line 603 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_pm_ops_scenario_4(void *arg0 ) 
{ 
  struct device *ldv_4_device_device ;
  struct dev_pm_ops *ldv_4_pm_ops_dev_pm_ops ;
  int tmp ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  int tmp___3 ;

  {
  {
#line 610
  ldv_free(arg0);
  }
#line 617
  goto ldv_do_4;
#line 619
  return;
  ldv_do_4: 
  {
#line 625
  tmp = ldv_undef_int();
  }
  {
#line 626
  if (tmp == 1) {
#line 626
    goto case_1;
  } else {

  }
#line 641
  if (tmp == 2) {
#line 641
    goto case_2;
  } else {

  }
#line 659
  if (tmp == 3) {
#line 659
    goto case_3;
  } else {

  }
#line 819
  if (tmp == 4) {
#line 819
    goto case_4;
  } else {

  }
#line 828
  goto switch_default___0;
  case_1: /* CIL Label */ ;
#line 628
  if ((unsigned long )ldv_4_pm_ops_dev_pm_ops->runtime_idle != (unsigned long )((int (*)(struct device * ))0)) {
    {
#line 630
    ldv_pm_ops_scenario_runtime_idle_4_27(ldv_4_pm_ops_dev_pm_ops->runtime_idle, ldv_4_device_device);
    }
  } else {

  }
#line 638
  goto ldv_do_4;
  case_2: /* CIL Label */ 
  {
#line 644
  ldv_pm_ops_scenario_runtime_suspend_4_25(ldv_4_pm_ops_dev_pm_ops->runtime_suspend,
                                           ldv_4_device_device);
#line 649
  ldv_pm_ops_scenario_runtime_resume_4_24(ldv_4_pm_ops_dev_pm_ops->runtime_resume,
                                          ldv_4_device_device);
  }
#line 656
  goto ldv_do_4;
  case_3: /* CIL Label */ ;
#line 661
  if ((unsigned long )ldv_4_pm_ops_dev_pm_ops->prepare != (unsigned long )((int (*)(struct device * ))0)) {
    {
#line 663
    ldv_pm_ops_scenario_prepare_4_22(ldv_4_pm_ops_dev_pm_ops->prepare, ldv_4_device_device);
    }
  } else {

  }
  {
#line 667
  tmp___0 = ldv_undef_int();
  }
  {
#line 668
  if (tmp___0 == 1) {
#line 668
    goto case_1___0;
  } else {

  }
#line 713
  if (tmp___0 == 2) {
#line 713
    goto case_2___0;
  } else {

  }
#line 758
  if (tmp___0 == 3) {
#line 758
    goto case_3___0;
  } else {

  }
#line 803
  goto switch_default;
  case_1___0: /* CIL Label */ 
  {
#line 671
  ldv_pm_ops_scenario_suspend_4_21(ldv_4_pm_ops_dev_pm_ops->suspend, ldv_4_device_device);
#line 674
  tmp___1 = ldv_undef_int();
  }
#line 674
  if (tmp___1 != 0) {
#line 676
    if ((unsigned long )ldv_4_pm_ops_dev_pm_ops->suspend_noirq != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 678
      ldv_pm_ops_scenario_suspend_noirq_4_20(ldv_4_pm_ops_dev_pm_ops->suspend_noirq,
                                             ldv_4_device_device);
      }
    } else {

    }
#line 683
    if ((unsigned long )ldv_4_pm_ops_dev_pm_ops->resume_noirq != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 685
      ldv_pm_ops_scenario_resume_noirq_4_19(ldv_4_pm_ops_dev_pm_ops->resume_noirq,
                                            ldv_4_device_device);
      }
    } else {

    }
  } else {
#line 692
    if ((unsigned long )ldv_4_pm_ops_dev_pm_ops->suspend_late != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 694
      ldv_pm_ops_scenario_suspend_late_4_18(ldv_4_pm_ops_dev_pm_ops->suspend_late,
                                            ldv_4_device_device);
      }
    } else {

    }
#line 699
    if ((unsigned long )ldv_4_pm_ops_dev_pm_ops->resume_early != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 701
      ldv_pm_ops_scenario_resume_early_4_17(ldv_4_pm_ops_dev_pm_ops->resume_early,
                                            ldv_4_device_device);
      }
    } else {

    }
  }
  {
#line 708
  ldv_pm_ops_scenario_resume_4_16(ldv_4_pm_ops_dev_pm_ops->resume, ldv_4_device_device);
  }
#line 711
  goto ldv_32429;
  case_2___0: /* CIL Label */ 
  {
#line 716
  ldv_pm_ops_scenario_freeze_4_15(ldv_4_pm_ops_dev_pm_ops->freeze, ldv_4_device_device);
#line 719
  tmp___2 = ldv_undef_int();
  }
#line 719
  if (tmp___2 != 0) {
#line 721
    if ((unsigned long )ldv_4_pm_ops_dev_pm_ops->freeze_late != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 723
      ldv_pm_ops_scenario_freeze_late_4_14(ldv_4_pm_ops_dev_pm_ops->freeze_late, ldv_4_device_device);
      }
    } else {

    }
#line 728
    if ((unsigned long )ldv_4_pm_ops_dev_pm_ops->thaw_early != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 730
      ldv_pm_ops_scenario_thaw_early_4_13(ldv_4_pm_ops_dev_pm_ops->thaw_early, ldv_4_device_device);
      }
    } else {

    }
  } else {
#line 737
    if ((unsigned long )ldv_4_pm_ops_dev_pm_ops->freeze_noirq != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 739
      ldv_pm_ops_scenario_freeze_noirq_4_12(ldv_4_pm_ops_dev_pm_ops->freeze_noirq,
                                            ldv_4_device_device);
      }
    } else {

    }
#line 744
    if ((unsigned long )ldv_4_pm_ops_dev_pm_ops->thaw_noirq != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 746
      ldv_pm_ops_scenario_thaw_noirq_4_11(ldv_4_pm_ops_dev_pm_ops->thaw_noirq, ldv_4_device_device);
      }
    } else {

    }
  }
  {
#line 753
  ldv_pm_ops_scenario_thaw_4_10(ldv_4_pm_ops_dev_pm_ops->thaw, ldv_4_device_device);
  }
#line 756
  goto ldv_32429;
  case_3___0: /* CIL Label */ 
  {
#line 761
  ldv_pm_ops_scenario_poweroff_4_9(ldv_4_pm_ops_dev_pm_ops->poweroff, ldv_4_device_device);
#line 764
  tmp___3 = ldv_undef_int();
  }
#line 764
  if (tmp___3 != 0) {
#line 766
    if ((unsigned long )ldv_4_pm_ops_dev_pm_ops->poweroff_late != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 768
      ldv_pm_ops_scenario_poweroff_late_4_8(ldv_4_pm_ops_dev_pm_ops->poweroff_late,
                                            ldv_4_device_device);
      }
    } else {

    }
#line 773
    if ((unsigned long )ldv_4_pm_ops_dev_pm_ops->restore_early != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 775
      ldv_pm_ops_scenario_restore_early_4_7(ldv_4_pm_ops_dev_pm_ops->restore_early,
                                            ldv_4_device_device);
      }
    } else {

    }
  } else {
#line 782
    if ((unsigned long )ldv_4_pm_ops_dev_pm_ops->poweroff_noirq != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 784
      ldv_pm_ops_scenario_poweroff_noirq_4_6(ldv_4_pm_ops_dev_pm_ops->poweroff_noirq,
                                             ldv_4_device_device);
      }
    } else {

    }
#line 789
    if ((unsigned long )ldv_4_pm_ops_dev_pm_ops->restore_noirq != (unsigned long )((int (*)(struct device * ))0)) {
      {
#line 791
      ldv_pm_ops_scenario_restore_noirq_4_5(ldv_4_pm_ops_dev_pm_ops->restore_noirq,
                                            ldv_4_device_device);
      }
    } else {

    }
  }
  {
#line 798
  ldv_pm_ops_scenario_restore_4_4(ldv_4_pm_ops_dev_pm_ops->restore, ldv_4_device_device);
  }
#line 801
  goto ldv_32429;
  switch_default: /* CIL Label */ 
  {
#line 803
  __VERIFIER_assume(0);
  }
  switch_break___0: /* CIL Label */ ;
  }
  ldv_32429: ;
#line 806
  if ((unsigned long )ldv_4_pm_ops_dev_pm_ops->complete != (unsigned long )((void (*)(struct device * ))0)) {
    {
#line 808
    ldv_pm_ops_scenario_complete_4_3(ldv_4_pm_ops_dev_pm_ops->complete, ldv_4_device_device);
    }
  } else {

  }
#line 816
  goto ldv_do_4;
  case_4: /* CIL Label */ ;
#line 825
  return;
  switch_default___0: /* CIL Label */ 
  {
#line 828
  __VERIFIER_assume(0);
  }
  switch_break: /* CIL Label */ ;
  }
#line 831
  return;
}
}
#line 836 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_pm_ops_scenario_complete_4_3(void (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 837
  (*arg0)(arg1);
  }
#line 838
  return;
}
}
#line 841 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_pm_ops_scenario_freeze_4_15(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 842
  pxa2xx_spi_suspend(arg1);
  }
#line 843
  return;
}
}
#line 846 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_pm_ops_scenario_freeze_late_4_14(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 847
  (*arg0)(arg1);
  }
#line 848
  return;
}
}
#line 851 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_pm_ops_scenario_freeze_noirq_4_12(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 852
  (*arg0)(arg1);
  }
#line 853
  return;
}
}
#line 856 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_pm_ops_scenario_poweroff_4_9(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 857
  pxa2xx_spi_suspend(arg1);
  }
#line 858
  return;
}
}
#line 861 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_pm_ops_scenario_poweroff_late_4_8(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 862
  (*arg0)(arg1);
  }
#line 863
  return;
}
}
#line 866 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_pm_ops_scenario_poweroff_noirq_4_6(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 867
  (*arg0)(arg1);
  }
#line 868
  return;
}
}
#line 871 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_pm_ops_scenario_prepare_4_22(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 872
  (*arg0)(arg1);
  }
#line 873
  return;
}
}
#line 876 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_pm_ops_scenario_restore_4_4(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 877
  pxa2xx_spi_resume(arg1);
  }
#line 878
  return;
}
}
#line 881 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_pm_ops_scenario_restore_early_4_7(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 882
  (*arg0)(arg1);
  }
#line 883
  return;
}
}
#line 886 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_pm_ops_scenario_restore_noirq_4_5(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 887
  (*arg0)(arg1);
  }
#line 888
  return;
}
}
#line 891 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_pm_ops_scenario_resume_4_16(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 892
  pxa2xx_spi_resume(arg1);
  }
#line 893
  return;
}
}
#line 896 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_pm_ops_scenario_resume_early_4_17(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 897
  (*arg0)(arg1);
  }
#line 898
  return;
}
}
#line 901 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_pm_ops_scenario_resume_noirq_4_19(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 902
  (*arg0)(arg1);
  }
#line 903
  return;
}
}
#line 906 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_pm_ops_scenario_runtime_idle_4_27(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 907
  (*arg0)(arg1);
  }
#line 908
  return;
}
}
#line 911 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_pm_ops_scenario_runtime_resume_4_24(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 912
  pxa2xx_spi_runtime_resume(arg1);
  }
#line 913
  return;
}
}
#line 916 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_pm_ops_scenario_runtime_suspend_4_25(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 917
  pxa2xx_spi_runtime_suspend(arg1);
  }
#line 918
  return;
}
}
#line 921 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_pm_ops_scenario_suspend_4_21(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 922
  pxa2xx_spi_suspend(arg1);
  }
#line 923
  return;
}
}
#line 926 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_pm_ops_scenario_suspend_late_4_18(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 927
  (*arg0)(arg1);
  }
#line 928
  return;
}
}
#line 931 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_pm_ops_scenario_suspend_noirq_4_20(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 932
  (*arg0)(arg1);
  }
#line 933
  return;
}
}
#line 936 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_pm_ops_scenario_thaw_4_10(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 937
  pxa2xx_spi_resume(arg1);
  }
#line 938
  return;
}
}
#line 941 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_pm_ops_scenario_thaw_early_4_13(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 942
  (*arg0)(arg1);
  }
#line 943
  return;
}
}
#line 946 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
void ldv_pm_ops_scenario_thaw_noirq_4_11(int (*arg0)(struct device * ) , struct device *arg1 ) 
{ 


  {
  {
#line 947
  (*arg0)(arg1);
  }
#line 948
  return;
}
}
#line 951 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
int main(void) 
{ 


  {
  {
#line 954
  ldv_initialize();
#line 957
  ldv_main_10((void *)0);
#line 960
  ldv_check_final_state();
  }
#line 962
  return (0);
}
}
#line 975 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
__inline static long PTR_ERR(void const   *ptr ) 
{ 
  long tmp ;

  {
  {
#line 978
  tmp = ldv_ptr_err(ptr);
  }
#line 978
  return (tmp);
}
}
#line 982 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
__inline static long IS_ERR(void const   *ptr ) 
{ 
  long tmp ;

  {
  {
#line 985
  tmp = ldv_is_err(ptr);
  }
#line 985
  return (tmp);
}
}
#line 996 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
static void *ldv_dev_get_drvdata_5(struct device  const  *dev ) 
{ 
  void *tmp ;

  {
  {
#line 999
  tmp = ldv_dev_get_drvdata(dev);
  }
#line 999
  return (tmp);
}
}
#line 1003 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
static int ldv_dev_set_drvdata_6(struct device *dev , void *data ) 
{ 
  int tmp ;

  {
  {
#line 1006
  tmp = ldv_dev_set_drvdata(dev, data);
  }
#line 1006
  return (tmp);
}
}
#line 1031 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
__inline static void *kzalloc(size_t size , gfp_t flags ) 
{ 
  void *tmp ;

  {
  {
#line 1034
  tmp = ldv_kzalloc(size, flags);
  }
#line 1034
  return (tmp);
}
}
#line 1052 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
static void *ldv_dev_get_drvdata_13(struct device  const  *dev ) 
{ 
  void *tmp ;

  {
  {
#line 1055
  tmp = ldv_dev_get_drvdata(dev);
  }
#line 1055
  return (tmp);
}
}
#line 1080 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
static struct spi_master *ldv_spi_alloc_master_17(struct device *host , unsigned int size ) 
{ 
  struct spi_master *tmp ;

  {
  {
#line 1083
  tmp = ldv_spi_alloc_master(host, size);
  }
#line 1083
  return (tmp);
}
}
#line 1087 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
__inline static int ldv_request_irq_18(unsigned int irq , irqreturn_t (*handler)(int  ,
                                                                                 void * ) ,
                                       unsigned long flags , char const   *name ,
                                       void *dev ) 
{ 
  int tmp ;

  {
  {
#line 1091
  tmp = ldv_emg_request_irq(irq, handler, flags, (char *)name, dev);
  }
#line 1091
  return (tmp);
}
}
#line 1095 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
__inline static int ldv_clk_prepare_enable_19(struct clk *clk ) 
{ 
  int tmp ;

  {
  {
#line 1098
  tmp = ldv_clk_enable_clk_of_ssp_device();
  }
#line 1098
  return (tmp);
}
}
#line 1102 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
__inline static void ldv_clk_disable_unprepare_20(struct clk *clk ) 
{ 


  {
  {
#line 1105
  ldv_clk_disable_clk_of_ssp_device(clk);
  }
#line 1106
  return;
}
}
#line 1109 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
static void ldv_free_irq_21(unsigned int ldv_func_arg1 , void *ldv_func_arg2 ) 
{ 


  {
  {
#line 1113
  ldv_emg_free_irq((int )ldv_func_arg1, ldv_func_arg2);
  }
#line 1114
  return;
}
}
#line 1124 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
static void ldv_free_irq_23(unsigned int ldv_func_arg1 , void *ldv_func_arg2 ) 
{ 


  {
  {
#line 1128
  ldv_emg_free_irq((int )ldv_func_arg1, ldv_func_arg2);
  }
#line 1129
  return;
}
}
#line 1132 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
static void *ldv_dev_get_drvdata_24(struct device  const  *dev ) 
{ 
  void *tmp ;

  {
  {
#line 1135
  tmp = ldv_dev_get_drvdata(dev);
  }
#line 1135
  return (tmp);
}
}
#line 1146 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
static void *ldv_dev_get_drvdata_26(struct device  const  *dev ) 
{ 
  void *tmp ;

  {
  {
#line 1149
  tmp = ldv_dev_get_drvdata(dev);
  }
#line 1149
  return (tmp);
}
}
#line 1160 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
static void *ldv_dev_get_drvdata_28(struct device  const  *dev ) 
{ 
  void *tmp ;

  {
  {
#line 1163
  tmp = ldv_dev_get_drvdata(dev);
  }
#line 1163
  return (tmp);
}
}
#line 1174 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
static void *ldv_dev_get_drvdata_30(struct device  const  *dev ) 
{ 
  void *tmp ;

  {
  {
#line 1177
  tmp = ldv_dev_get_drvdata(dev);
  }
#line 1177
  return (tmp);
}
}
#line 1188 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
static int ldv_platform_driver_register_32(struct platform_driver *ldv_func_arg1 ) 
{ 
  int tmp ;

  {
  {
#line 1192
  tmp = ldv_emg_platform_driver_register(ldv_func_arg1);
  }
#line 1192
  return (tmp);
}
}
#line 1196 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/weaver/.tmp_spi-pxa2xx.c.aux"
static void ldv_platform_driver_unregister_33(struct platform_driver *ldv_func_arg1 ) 
{ 


  {
  {
#line 1200
  ldv_emg_platform_driver_unregister(ldv_func_arg1);
  }
#line 1201
  return;
}
}
#line 62 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/bitops.h"
__inline static void set_bit(unsigned int nr , unsigned long volatile   *addr ) 
{ 


  {
#line 70
  __asm__  volatile   (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; bts %1,%0": "+m" (*((long volatile   *)addr)): "Ir" (nr): "memory");
#line 72
  return;
}
}
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/page_64.h"
extern unsigned long __phys_addr(unsigned long  ) ;
#line 65 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/page.h"
extern bool __virt_addr_valid(unsigned long  ) ;
#line 55 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/string_64.h"
extern void *memset(void * , int  , size_t  ) ;
#line 159 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/bitmap.h"
__inline static void bitmap_zero(unsigned long *dst , int nbits ) 
{ 
  int len ;

  {
  {
#line 164
  len = (int )((unsigned int )(((unsigned long )nbits + 63UL) / 64UL) * 8U);
#line 165
  memset((void *)dst, 0, (size_t )len);
  }
#line 167
  return;
}
}
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/paravirt.h"
extern int ( /* missing proto */  __builtin_unreachable)() ;
#line 35 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/atomic.h"
__inline static void atomic_set(atomic_t *v , int i ) 
{ 


  {
#line 37
  v->counter = i;
#line 38
  return;
}
}
#line 119 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/atomic.h"
__inline static int atomic_dec_and_test(atomic_t *v ) 
{ 
  unsigned char c ;

  {
#line 123
  __asm__  volatile   (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; decl %0; sete %1": "+m" (v->counter),
                       "=qm" (c): : "memory");
#line 126
  return ((unsigned int )c != 0U);
}
}
#line 769 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/mm.h"
__inline static void *lowmem_page_address(struct page  const  *page ) 
{ 


  {
#line 771
  return ((void *)((unsigned long )((unsigned long long )(((long )page + 24189255811072L) / 64L) << 12) + 0xffff880000000000UL));
}
}
#line 57 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/scatterlist.h"
__inline static void sg_assign_page(struct scatterlist *sg , struct page *page ) 
{ 
  unsigned long page_link ;
  long tmp ;
  long tmp___0 ;
  long tmp___1 ;

  {
  {
#line 59
  page_link = sg->page_link & 3UL;
#line 65
  tmp = __builtin_expect(((unsigned long )page & 3UL) != 0UL, 0L);
  }
#line 65
  if (tmp != 0L) {
    {
#line 65
    __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"include/linux/scatterlist.h"),
                         "i" (65), "i" (12UL));
#line 65
    __builtin_unreachable();
    }
  } else {

  }
  {
#line 67
  tmp___0 = __builtin_expect(sg->sg_magic != 2271560481UL, 0L);
  }
#line 67
  if (tmp___0 != 0L) {
    {
#line 67
    __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"include/linux/scatterlist.h"),
                         "i" (67), "i" (12UL));
#line 67
    __builtin_unreachable();
    }
  } else {

  }
  {
#line 68
  tmp___1 = __builtin_expect((long )((int )sg->page_link) & 1L, 0L);
  }
#line 68
  if (tmp___1 != 0L) {
    {
#line 68
    __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"include/linux/scatterlist.h"),
                         "i" (68), "i" (12UL));
#line 68
    __builtin_unreachable();
    }
  } else {

  }
#line 70
  sg->page_link = page_link | (unsigned long )page;
#line 71
  return;
}
}
#line 87 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/scatterlist.h"
__inline static void sg_set_page(struct scatterlist *sg , struct page *page , unsigned int len ,
                                 unsigned int offset ) 
{ 


  {
  {
#line 90
  sg_assign_page(sg, page);
#line 91
  sg->offset = offset;
#line 92
  sg->length = len;
  }
#line 93
  return;
}
}
#line 95 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/scatterlist.h"
__inline static struct page *sg_page(struct scatterlist *sg ) 
{ 
  long tmp ;
  long tmp___0 ;

  {
  {
#line 98
  tmp = __builtin_expect(sg->sg_magic != 2271560481UL, 0L);
  }
#line 98
  if (tmp != 0L) {
    {
#line 98
    __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"include/linux/scatterlist.h"),
                         "i" (98), "i" (12UL));
#line 98
    __builtin_unreachable();
    }
  } else {

  }
  {
#line 99
  tmp___0 = __builtin_expect((long )((int )sg->page_link) & 1L, 0L);
  }
#line 99
  if (tmp___0 != 0L) {
    {
#line 99
    __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"include/linux/scatterlist.h"),
                         "i" (99), "i" (12UL));
#line 99
    __builtin_unreachable();
    }
  } else {

  }
#line 101
  return ((struct page *)(sg->page_link & 0xfffffffffffffffcUL));
}
}
#line 111 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/scatterlist.h"
__inline static void sg_set_buf(struct scatterlist *sg , void const   *buf , unsigned int buflen ) 
{ 
  bool tmp ;
  int tmp___0 ;
  long tmp___1 ;
  unsigned long tmp___2 ;

  {
  {
#line 115
  tmp = __virt_addr_valid((unsigned long )buf);
  }
#line 115
  if (tmp) {
#line 115
    tmp___0 = 0;
  } else {
#line 115
    tmp___0 = 1;
  }
  {
#line 115
  tmp___1 = __builtin_expect((long )tmp___0, 0L);
  }
#line 115
  if (tmp___1 != 0L) {
    {
#line 115
    __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"include/linux/scatterlist.h"),
                         "i" (115), "i" (12UL));
#line 115
    __builtin_unreachable();
    }
  } else {

  }
  {
#line 117
  tmp___2 = __phys_addr((unsigned long )buf);
#line 117
  sg_set_page(sg, (struct page *)-24189255811072L + (tmp___2 >> 12), buflen, (unsigned int )((long )buf) & 4095U);
  }
#line 118
  return;
}
}
#line 218 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/scatterlist.h"
__inline static void *sg_virt(struct scatterlist *sg ) 
{ 
  struct page *tmp ;
  void *tmp___0 ;

  {
  {
#line 220
  tmp = sg_page(sg);
#line 220
  tmp___0 = lowmem_page_address((struct page  const  *)tmp);
  }
#line 220
  return (tmp___0 + (unsigned long )sg->offset);
}
}
#line 224
extern struct scatterlist *sg_next(struct scatterlist * ) ;
#line 233
extern void sg_free_table(struct sg_table * ) ;
#line 236
extern int sg_alloc_table(struct sg_table * , unsigned int  , gfp_t  ) ;
#line 63 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/dma-mapping.h"
__inline static int valid_dma_direction(int dma_direction ) 
{ 


  {
#line 65
  return ((unsigned int )dma_direction <= 2U);
}
}
#line 131 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/kmemcheck.h"
__inline static void kmemcheck_mark_initialized(void *address , unsigned int n ) 
{ 


  {
#line 133
  return;
}
}
#line 47 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/dma-debug.h"
extern void debug_dma_map_sg(struct device * , struct scatterlist * , int  , int  ,
                             int  ) ;
#line 50
extern void debug_dma_unmap_sg(struct device * , struct scatterlist * , int  , int  ) ;
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/dma-mapping.h"
extern struct dma_map_ops *dma_ops ;
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/arch/x86/include/asm/dma-mapping.h"
__inline static struct dma_map_ops *get_dma_ops(struct device *dev ) 
{ 
  long tmp ;

  {
  {
#line 37
  tmp = __builtin_expect((unsigned long )dev == (unsigned long )((struct device *)0),
                         0L);
  }
#line 37
  if (tmp != 0L || (unsigned long )dev->archdata.dma_ops == (unsigned long )((struct dma_map_ops *)0)) {
#line 38
    return (dma_ops);
  } else {
#line 40
    return (dev->archdata.dma_ops);
  }
}
}
#line 42 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/asm-generic/dma-mapping-common.h"
__inline static int dma_map_sg_attrs(struct device *dev , struct scatterlist *sg ,
                                     int nents , enum dma_data_direction dir , struct dma_attrs *attrs ) 
{ 
  struct dma_map_ops *ops ;
  struct dma_map_ops *tmp ;
  int i ;
  int ents ;
  struct scatterlist *s ;
  void *tmp___0 ;
  int tmp___1 ;
  long tmp___2 ;

  {
  {
#line 46
  tmp = get_dma_ops(dev);
#line 46
  ops = tmp;
#line 50
  i = 0;
#line 50
  s = sg;
  }
#line 50
  goto ldv_19318;
  ldv_19317: 
  {
#line 51
  tmp___0 = sg_virt(s);
#line 51
  kmemcheck_mark_initialized(tmp___0, s->length);
#line 50
  i = i + 1;
#line 50
  s = sg_next(s);
  }
  ldv_19318: ;
#line 50
  if (i < nents) {
#line 52
    goto ldv_19317;
  } else {

  }
  {
#line 52
  tmp___1 = valid_dma_direction((int )dir);
#line 52
  tmp___2 = __builtin_expect(tmp___1 == 0, 0L);
  }
#line 52
  if (tmp___2 != 0L) {
    {
#line 52
    __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"include/asm-generic/dma-mapping-common.h"),
                         "i" (52), "i" (12UL));
#line 52
    __builtin_unreachable();
    }
  } else {

  }
  {
#line 53
  ents = (*(ops->map_sg))(dev, sg, nents, dir, attrs);
#line 54
  debug_dma_map_sg(dev, sg, nents, ents, (int )dir);
  }
#line 56
  return (ents);
}
}
#line 59 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/asm-generic/dma-mapping-common.h"
__inline static void dma_unmap_sg_attrs(struct device *dev , struct scatterlist *sg ,
                                        int nents , enum dma_data_direction dir ,
                                        struct dma_attrs *attrs ) 
{ 
  struct dma_map_ops *ops ;
  struct dma_map_ops *tmp ;
  int tmp___0 ;
  long tmp___1 ;

  {
  {
#line 63
  tmp = get_dma_ops(dev);
#line 63
  ops = tmp;
#line 65
  tmp___0 = valid_dma_direction((int )dir);
#line 65
  tmp___1 = __builtin_expect(tmp___0 == 0, 0L);
  }
#line 65
  if (tmp___1 != 0L) {
    {
#line 65
    __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"include/asm-generic/dma-mapping-common.h"),
                         "i" (65), "i" (12UL));
#line 65
    __builtin_unreachable();
    }
  } else {

  }
  {
#line 66
  debug_dma_unmap_sg(dev, sg, nents, (int )dir);
  }
#line 67
  if ((unsigned long )ops->unmap_sg != (unsigned long )((void (*)(struct device * ,
                                                                  struct scatterlist * ,
                                                                  int  , enum dma_data_direction  ,
                                                                  struct dma_attrs * ))0)) {
    {
#line 68
    (*(ops->unmap_sg))(dev, sg, nents, dir, attrs);
    }
  } else {

  }
#line 69
  return;
}
}
#line 607 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/dmaengine.h"
__inline static int dmaengine_device_control(struct dma_chan *chan , enum dma_ctrl_cmd cmd ,
                                             unsigned long arg ) 
{ 
  int tmp ;

  {
#line 611
  if ((unsigned long )(chan->device)->device_control != (unsigned long )((int (*)(struct dma_chan * ,
                                                                                  enum dma_ctrl_cmd  ,
                                                                                  unsigned long  ))0)) {
    {
#line 612
    tmp = (*((chan->device)->device_control))(chan, cmd, arg);
    }
#line 612
    return (tmp);
  } else {

  }
#line 614
  return (-38);
}
}
#line 617 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/dmaengine.h"
__inline static int dmaengine_slave_config(struct dma_chan *chan , struct dma_slave_config *config ) 
{ 
  int tmp ;

  {
  {
#line 620
  tmp = dmaengine_device_control(chan, 3, (unsigned long )config);
  }
#line 620
  return (tmp);
}
}
#line 642 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/dmaengine.h"
__inline static struct dma_async_tx_descriptor *dmaengine_prep_slave_sg(struct dma_chan *chan ,
                                                                        struct scatterlist *sgl ,
                                                                        unsigned int sg_len ,
                                                                        enum dma_transfer_direction dir ,
                                                                        unsigned long flags ) 
{ 
  struct dma_async_tx_descriptor *tmp ;

  {
  {
#line 646
  tmp = (*((chan->device)->device_prep_slave_sg))(chan, sgl, sg_len, dir, flags, (void *)0);
  }
#line 646
  return (tmp);
}
}
#line 678 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/dmaengine.h"
__inline static int dmaengine_terminate_all(struct dma_chan *chan ) 
{ 
  int tmp ;

  {
  {
#line 680
  tmp = dmaengine_device_control(chan, 0, 0UL);
  }
#line 680
  return (tmp);
}
}
#line 699 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/dmaengine.h"
__inline static dma_cookie_t dmaengine_submit(struct dma_async_tx_descriptor *desc ) 
{ 
  dma_cookie_t tmp ;

  {
  {
#line 701
  tmp = (*(desc->tx_submit))(desc);
  }
#line 701
  return (tmp);
}
}
#line 869 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/dmaengine.h"
__inline static void __dma_cap_set(enum dma_transaction_type tx_type , dma_cap_mask_t *dstp ) 
{ 


  {
  {
#line 871
  set_bit((unsigned int )tx_type, (unsigned long volatile   *)(& dstp->bits));
  }
#line 872
  return;
}
}
#line 882 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/dmaengine.h"
__inline static void __dma_cap_zero(dma_cap_mask_t *dstp ) 
{ 


  {
  {
#line 884
  bitmap_zero((unsigned long *)(& dstp->bits), 13);
  }
#line 885
  return;
}
}
#line 904 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/include/linux/dmaengine.h"
__inline static void dma_async_issue_pending(struct dma_chan *chan ) 
{ 


  {
  {
#line 906
  (*((chan->device)->device_issue_pending))(chan);
  }
#line 907
  return;
}
}
#line 970
extern struct dma_chan *__dma_request_channel(dma_cap_mask_t const   * , bool (*)(struct dma_chan * ,
                                                                                  void * ) ,
                                              void * ) ;
#line 973
extern void dma_release_channel(struct dma_chan * ) ;
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx-dma.c"
static int pxa2xx_spi_map_dma_buffer(struct driver_data *drv_data , enum dma_data_direction dir ) 
{ 
  int i ;
  int nents ;
  int len ;
  struct scatterlist *sg ;
  struct device *dmadev ;
  struct sg_table *sgt ;
  void *buf ;
  void *pbuf ;
  int ret ;
  size_t bytes ;
  size_t __min1 ;
  size_t __min2 ;

  {
#line 27
  len = (int )drv_data->len;
#line 43
  len = (int )((unsigned int )drv_data->len + 3U) & -4;
#line 45
  if ((unsigned int )dir == 1U) {
#line 46
    dmadev = ((drv_data->tx_chan)->device)->dev;
#line 47
    sgt = & drv_data->tx_sgt;
#line 48
    buf = drv_data->tx;
#line 49
    drv_data->tx_map_len = (size_t )len;
  } else {
#line 51
    dmadev = ((drv_data->rx_chan)->device)->dev;
#line 52
    sgt = & drv_data->rx_sgt;
#line 53
    buf = drv_data->rx;
#line 54
    drv_data->rx_map_len = (size_t )len;
  }
#line 57
  nents = (len + 2047) / 2048;
#line 58
  if ((unsigned int )nents != sgt->nents) {
    {
#line 61
    sg_free_table(sgt);
#line 62
    ret = sg_alloc_table(sgt, (unsigned int )nents, 32U);
    }
#line 63
    if (ret != 0) {
#line 64
      return (ret);
    } else {

    }
  } else {

  }
#line 67
  pbuf = buf;
#line 68
  i = 0;
#line 68
  sg = sgt->sgl;
#line 68
  goto ldv_24493;
  ldv_24492: 
#line 69
  __min1 = (size_t )len;
#line 69
  __min2 = 2048UL;
#line 69
  bytes = __min1 < __min2 ? __min1 : __min2;
#line 71
  if ((unsigned long )buf != (unsigned long )((void *)0)) {
    {
#line 72
    sg_set_buf(sg, (void const   *)pbuf, (unsigned int )bytes);
    }
  } else {
    {
#line 74
    sg_set_buf(sg, (void const   *)drv_data->dummy, (unsigned int )bytes);
    }
  }
  {
#line 76
  pbuf = pbuf + bytes;
#line 77
  len = (int )((unsigned int )len - (unsigned int )bytes);
#line 68
  i = i + 1;
#line 68
  sg = sg_next(sg);
  }
  ldv_24493: ;
#line 68
  if ((unsigned int )i < sgt->nents) {
#line 70
    goto ldv_24492;
  } else {

  }
  {
#line 80
  nents = dma_map_sg_attrs(dmadev, sgt->sgl, (int )sgt->nents, dir, (struct dma_attrs *)0);
  }
#line 81
  if (nents == 0) {
#line 82
    return (-12);
  } else {

  }
#line 84
  return (nents);
}
}
#line 87 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx-dma.c"
static void pxa2xx_spi_unmap_dma_buffer(struct driver_data *drv_data , enum dma_data_direction dir ) 
{ 
  struct device *dmadev ;
  struct sg_table *sgt ;

  {
#line 93
  if ((unsigned int )dir == 1U) {
#line 94
    dmadev = ((drv_data->tx_chan)->device)->dev;
#line 95
    sgt = & drv_data->tx_sgt;
  } else {
#line 97
    dmadev = ((drv_data->rx_chan)->device)->dev;
#line 98
    sgt = & drv_data->rx_sgt;
  }
  {
#line 101
  dma_unmap_sg_attrs(dmadev, sgt->sgl, (int )sgt->nents, dir, (struct dma_attrs *)0);
  }
#line 102
  return;
}
}
#line 104 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx-dma.c"
static void pxa2xx_spi_unmap_dma_buffers(struct driver_data *drv_data ) 
{ 


  {
#line 106
  if (drv_data->dma_mapped == 0) {
#line 107
    return;
  } else {

  }
  {
#line 109
  pxa2xx_spi_unmap_dma_buffer(drv_data, 2);
#line 110
  pxa2xx_spi_unmap_dma_buffer(drv_data, 1);
#line 112
  drv_data->dma_mapped = 0;
  }
#line 113
  return;
}
}
#line 115 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx-dma.c"
static void pxa2xx_spi_dma_transfer_complete(struct driver_data *drv_data , bool error ) 
{ 
  struct spi_message *msg ;
  void *reg ;
  u32 status ;
  u32 tmp ;
  u32 tmp___0 ;
  int tmp___1 ;
  u32 tmp___2 ;
  int tmp___3 ;

  {
  {
#line 118
  msg = drv_data->cur_msg;
#line 126
  tmp___3 = atomic_dec_and_test(& drv_data->dma_running);
  }
#line 126
  if (tmp___3 != 0) {
#line 127
    reg = drv_data->ioaddr;
#line 134
    if (! error) {
      {
#line 135
      tmp = read_SSSR((void const   *)reg);
#line 135
      status = tmp & drv_data->mask_sr;
#line 136
      error = (status & 128U) != 0U;
      }
    } else {

    }
    {
#line 140
    tmp___0 = read_SSCR1((void const   *)reg);
#line 140
    write_SSCR1(tmp___0 & ~ drv_data->dma_cr1, reg);
#line 141
    write_SSSR_CS(drv_data, drv_data->clear_sr);
#line 142
    tmp___1 = pxa25x_ssp_comp(drv_data);
    }
#line 142
    if (tmp___1 == 0) {
      {
#line 143
      write_SSTO(0U, reg);
      }
    } else {

    }
#line 145
    if (! error) {
      {
#line 146
      pxa2xx_spi_unmap_dma_buffers(drv_data);
#line 149
      drv_data->tx = drv_data->tx + drv_data->tx_map_len;
#line 150
      (*(drv_data->write))(drv_data);
#line 152
      drv_data->rx = drv_data->rx + drv_data->rx_map_len;
#line 153
      (*(drv_data->read))(drv_data);
#line 155
      msg->actual_length = msg->actual_length + (unsigned int )drv_data->len;
#line 156
      msg->state = pxa2xx_spi_next_transfer(drv_data);
      }
    } else {
      {
#line 159
      tmp___2 = read_SSCR0((void const   *)reg);
#line 159
      write_SSCR0(tmp___2 & 4294967167U, reg);
#line 161
      msg->state = (void *)-1;
      }
    }
    {
#line 164
    tasklet_schedule(& drv_data->pump_transfers);
    }
  } else {

  }
#line 166
  return;
}
}
#line 168 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx-dma.c"
static void pxa2xx_spi_dma_callback(void *data ) 
{ 


  {
  {
#line 170
  pxa2xx_spi_dma_transfer_complete((struct driver_data *)data, 0);
  }
#line 171
  return;
}
}
#line 174 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx-dma.c"
static struct dma_async_tx_descriptor *pxa2xx_spi_dma_prepare_one(struct driver_data *drv_data ,
                                                                  enum dma_transfer_direction dir ) 
{ 
  struct pxa2xx_spi_master *pdata ;
  struct chip_data *chip ;
  enum dma_slave_buswidth width ;
  struct dma_slave_config cfg ;
  struct dma_chan *chan ;
  struct sg_table *sgt ;
  int nents ;
  int ret ;
  struct dma_async_tx_descriptor *tmp ;

  {
#line 177
  pdata = drv_data->master_info;
#line 178
  chip = drv_data->cur_chip;
  {
#line 186
  if ((int )drv_data->n_bytes == 1) {
#line 186
    goto case_1;
  } else {

  }
#line 189
  if ((int )drv_data->n_bytes == 2) {
#line 189
    goto case_2;
  } else {

  }
#line 192
  goto switch_default;
  case_1: /* CIL Label */ 
#line 187
  width = 1;
#line 188
  goto ldv_24527;
  case_2: /* CIL Label */ 
#line 190
  width = 2;
#line 191
  goto ldv_24527;
  switch_default: /* CIL Label */ 
#line 193
  width = 4;
#line 194
  goto ldv_24527;
  switch_break: /* CIL Label */ ;
  }
  ldv_24527: 
  {
#line 197
  memset((void *)(& cfg), 0, 48UL);
#line 198
  cfg.direction = dir;
  }
#line 200
  if ((unsigned int )dir == 1U) {
#line 201
    cfg.dst_addr = (dma_addr_t )drv_data->ssdr_physical;
#line 202
    cfg.dst_addr_width = width;
#line 203
    cfg.dst_maxburst = chip->dma_burst_size;
#line 204
    cfg.slave_id = (unsigned int )pdata->tx_slave_id;
#line 206
    sgt = & drv_data->tx_sgt;
#line 207
    nents = drv_data->tx_nents;
#line 208
    chan = drv_data->tx_chan;
  } else {
#line 210
    cfg.src_addr = (dma_addr_t )drv_data->ssdr_physical;
#line 211
    cfg.src_addr_width = width;
#line 212
    cfg.src_maxburst = chip->dma_burst_size;
#line 213
    cfg.slave_id = (unsigned int )pdata->rx_slave_id;
#line 215
    sgt = & drv_data->rx_sgt;
#line 216
    nents = drv_data->rx_nents;
#line 217
    chan = drv_data->rx_chan;
  }
  {
#line 220
  ret = dmaengine_slave_config(chan, & cfg);
  }
#line 221
  if (ret != 0) {
    {
#line 222
    dev_warn((struct device  const  *)(& (drv_data->pdev)->dev), "DMA slave config failed\n");
    }
#line 223
    return ((struct dma_async_tx_descriptor *)0);
  } else {

  }
  {
#line 226
  tmp = dmaengine_prep_slave_sg(chan, sgt->sgl, (unsigned int )nents, dir, 3UL);
  }
#line 226
  return (tmp);
}
}
#line 230 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx-dma.c"
static bool pxa2xx_spi_dma_filter(struct dma_chan *chan , void *param ) 
{ 
  struct pxa2xx_spi_master  const  *pdata ;

  {
#line 232
  pdata = (struct pxa2xx_spi_master  const  *)param;
#line 234
  return ((bool )(chan->chan_id == (int )pdata->tx_chan_id || chan->chan_id == (int )pdata->rx_chan_id));
}
}
#line 238 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx-dma.c"
bool pxa2xx_spi_dma_is_possible(size_t len ) 
{ 


  {
#line 240
  return (len <= 65536UL);
}
}
#line 243 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx-dma.c"
int pxa2xx_spi_map_dma_buffers(struct driver_data *drv_data ) 
{ 
  struct chip_data  const  *chip ;
  int ret ;

  {
#line 245
  chip = (struct chip_data  const  *)drv_data->cur_chip;
#line 248
  if ((unsigned int )((unsigned char )chip->enable_dma) == 0U) {
#line 249
    return (0);
  } else {

  }
#line 252
  if (drv_data->len < (size_t )chip->dma_burst_size) {
#line 253
    return (0);
  } else {

  }
  {
#line 255
  ret = pxa2xx_spi_map_dma_buffer(drv_data, 1);
  }
#line 256
  if (ret <= 0) {
    {
#line 257
    dev_warn((struct device  const  *)(& (drv_data->pdev)->dev), "failed to DMA map TX\n");
    }
#line 258
    return (0);
  } else {

  }
  {
#line 261
  drv_data->tx_nents = ret;
#line 263
  ret = pxa2xx_spi_map_dma_buffer(drv_data, 2);
  }
#line 264
  if (ret <= 0) {
    {
#line 265
    pxa2xx_spi_unmap_dma_buffer(drv_data, 1);
#line 266
    dev_warn((struct device  const  *)(& (drv_data->pdev)->dev), "failed to DMA map RX\n");
    }
#line 267
    return (0);
  } else {

  }
#line 270
  drv_data->rx_nents = ret;
#line 271
  return (1);
}
}
#line 274 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx-dma.c"
irqreturn_t pxa2xx_spi_dma_transfer(struct driver_data *drv_data ) 
{ 
  u32 status ;
  u32 tmp ;

  {
  {
#line 278
  tmp = read_SSSR((void const   *)drv_data->ioaddr);
#line 278
  status = tmp & drv_data->mask_sr;
  }
#line 279
  if ((status & 128U) != 0U) {
    {
#line 280
    dev_err((struct device  const  *)(& (drv_data->pdev)->dev), "FIFO overrun\n");
#line 282
    dmaengine_terminate_all(drv_data->rx_chan);
#line 283
    dmaengine_terminate_all(drv_data->tx_chan);
#line 285
    pxa2xx_spi_dma_transfer_complete(drv_data, 1);
    }
#line 286
    return (1);
  } else {

  }
#line 289
  return (0);
}
}
#line 292 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx-dma.c"
int pxa2xx_spi_dma_prepare(struct driver_data *drv_data , u32 dma_burst ) 
{ 
  struct dma_async_tx_descriptor *tx_desc ;
  struct dma_async_tx_descriptor *rx_desc ;

  {
  {
#line 296
  tx_desc = pxa2xx_spi_dma_prepare_one(drv_data, 1);
  }
#line 297
  if ((unsigned long )tx_desc == (unsigned long )((struct dma_async_tx_descriptor *)0)) {
    {
#line 298
    dev_err((struct device  const  *)(& (drv_data->pdev)->dev), "failed to get DMA TX descriptor\n");
    }
#line 300
    return (-16);
  } else {

  }
  {
#line 303
  rx_desc = pxa2xx_spi_dma_prepare_one(drv_data, 2);
  }
#line 304
  if ((unsigned long )rx_desc == (unsigned long )((struct dma_async_tx_descriptor *)0)) {
    {
#line 305
    dev_err((struct device  const  *)(& (drv_data->pdev)->dev), "failed to get DMA RX descriptor\n");
    }
#line 307
    return (-16);
  } else {

  }
  {
#line 311
  rx_desc->callback = & pxa2xx_spi_dma_callback;
#line 312
  rx_desc->callback_param = (void *)drv_data;
#line 314
  dmaengine_submit(rx_desc);
#line 315
  dmaengine_submit(tx_desc);
  }
#line 316
  return (0);
}
}
#line 319 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx-dma.c"
void pxa2xx_spi_dma_start(struct driver_data *drv_data ) 
{ 


  {
  {
#line 321
  dma_async_issue_pending(drv_data->rx_chan);
#line 322
  dma_async_issue_pending(drv_data->tx_chan);
#line 324
  atomic_set(& drv_data->dma_running, 1);
  }
#line 325
  return;
}
}
#line 327 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx-dma.c"
int pxa2xx_spi_dma_setup(struct driver_data *drv_data ) 
{ 
  struct pxa2xx_spi_master *pdata ;
  dma_cap_mask_t mask ;

  {
  {
#line 329
  pdata = drv_data->master_info;
#line 332
  __dma_cap_zero(& mask);
#line 333
  __dma_cap_set(10, & mask);
#line 335
  drv_data->dummy = devm_kzalloc(& (drv_data->pdev)->dev, 2048UL, 208U);
  }
#line 336
  if ((unsigned long )drv_data->dummy == (unsigned long )((void *)0)) {
#line 337
    return (-12);
  } else {

  }
  {
#line 339
  drv_data->tx_chan = __dma_request_channel((dma_cap_mask_t const   *)(& mask), & pxa2xx_spi_dma_filter,
                                            (void *)pdata);
  }
#line 341
  if ((unsigned long )drv_data->tx_chan == (unsigned long )((struct dma_chan *)0)) {
#line 342
    return (-19);
  } else {

  }
  {
#line 344
  drv_data->rx_chan = __dma_request_channel((dma_cap_mask_t const   *)(& mask), & pxa2xx_spi_dma_filter,
                                            (void *)pdata);
  }
#line 346
  if ((unsigned long )drv_data->rx_chan == (unsigned long )((struct dma_chan *)0)) {
    {
#line 347
    dma_release_channel(drv_data->tx_chan);
#line 348
    drv_data->tx_chan = (struct dma_chan *)0;
    }
#line 349
    return (-19);
  } else {

  }
#line 352
  return (0);
}
}
#line 355 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx-dma.c"
void pxa2xx_spi_dma_release(struct driver_data *drv_data ) 
{ 


  {
#line 357
  if ((unsigned long )drv_data->rx_chan != (unsigned long )((struct dma_chan *)0)) {
    {
#line 358
    dmaengine_terminate_all(drv_data->rx_chan);
#line 359
    dma_release_channel(drv_data->rx_chan);
#line 360
    sg_free_table(& drv_data->rx_sgt);
#line 361
    drv_data->rx_chan = (struct dma_chan *)0;
    }
  } else {

  }
#line 363
  if ((unsigned long )drv_data->tx_chan != (unsigned long )((struct dma_chan *)0)) {
    {
#line 364
    dmaengine_terminate_all(drv_data->tx_chan);
#line 365
    dma_release_channel(drv_data->tx_chan);
#line 366
    sg_free_table(& drv_data->tx_sgt);
#line 367
    drv_data->tx_chan = (struct dma_chan *)0;
    }
  } else {

  }
#line 369
  return;
}
}
#line 371 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx-dma.c"
void pxa2xx_spi_dma_resume(struct driver_data *drv_data ) 
{ 


  {
#line 373
  return;
}
}
#line 375 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/lkbce/drivers/spi/spi-pxa2xx-dma.c"
int pxa2xx_spi_set_dma_burst_and_threshold(struct chip_data *chip , struct spi_device *spi ,
                                           u8 bits_per_word , u32 *burst_code , u32 *threshold ) 
{ 
  struct pxa2xx_spi_chip *chip_info ;

  {
#line 380
  chip_info = (struct pxa2xx_spi_chip *)spi->controller_data;
#line 387
  *burst_code = (unsigned long )chip_info != (unsigned long )((struct pxa2xx_spi_chip *)0) ? (u32 )chip_info->dma_burst_size : 16U;
#line 388
  *threshold = 1088U;
#line 391
  return (0);
}
}
#line 29 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.h"
void *ldv_xzalloc(size_t size ) ;
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/drivers/base/dd.c"
void *ldv_dev_get_drvdata(struct device  const  *dev ) 
{ 


  {
#line 29
  if ((unsigned long )dev != (unsigned long )((struct device  const  *)0) && (unsigned long )dev->p != (unsigned long )((struct device_private */* const  */)0)) {
#line 30
    return ((dev->p)->driver_data);
  } else {

  }
#line 32
  return ((void *)0);
}
}
#line 41 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/drivers/base/dd.c"
int ldv_dev_set_drvdata(struct device *dev , void *data ) 
{ 
  void *tmp ;

  {
  {
#line 43
  tmp = ldv_xzalloc(8UL);
#line 43
  dev->p = (struct device_private *)tmp;
#line 44
  (dev->p)->driver_data = data;
  }
#line 46
  return (0);
}
}
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.h"
void *ldv_zalloc(size_t size ) ;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/drivers/spi.c"
struct spi_master *ldv_spi_alloc_master(struct device *host , unsigned int size ) 
{ 
  struct spi_master *master ;
  void *tmp ;

  {
  {
#line 27
  tmp = ldv_zalloc((unsigned long )size + 1816UL);
#line 27
  master = (struct spi_master *)tmp;
  }
#line 29
  if ((unsigned long )master == (unsigned long )((struct spi_master *)0)) {
#line 30
    return ((struct spi_master *)0);
  } else {

  }
  {
#line 32
  ldv_dev_set_drvdata(& master->dev, (void *)(master + 1UL));
  }
#line 34
  return (master);
}
}
#line 28 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/err.h"
long ldv_is_err_or_null(void const   *ptr ) ;
#line 29
void *ldv_err_ptr(long error ) ;
#line 20 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/err.c"
long ldv_is_err(void const   *ptr ) 
{ 


  {
#line 22
  return ((unsigned long )ptr > 4294967295UL);
}
}
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/err.c"
void *ldv_err_ptr(long error ) 
{ 


  {
#line 27
  return ((void *)(4294967295L - error));
}
}
#line 30 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/err.c"
long ldv_ptr_err(void const   *ptr ) 
{ 


  {
#line 32
  return ((long )(4294967295UL - (unsigned long )ptr));
}
}
#line 35 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/err.c"
long ldv_is_err_or_null(void const   *ptr ) 
{ 
  long tmp ;
  int tmp___0 ;

  {
#line 37
  if ((unsigned long )ptr == (unsigned long )((void const   *)0)) {
#line 37
    tmp___0 = 1;
  } else {
    {
#line 37
    tmp = ldv_is_err(ptr);
    }
#line 37
    if (tmp != 0L) {
#line 37
      tmp___0 = 1;
    } else {
#line 37
      tmp___0 = 0;
    }
  }
#line 37
  return ((long )tmp___0);
}
}
#line 50 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.h"
bool ldv_in_interrupt_context(void) ;
#line 141
int ldv_filter_err_code(int ret_val ) ;
#line 25 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.c"
static bool __ldv_in_interrupt_context  =    0;
#line 28 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.c"
void ldv_switch_to_interrupt_context(void) 
{ 


  {
#line 30
  __ldv_in_interrupt_context = 1;
#line 31
  return;
}
}
#line 34 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.c"
void ldv_switch_to_process_context(void) 
{ 


  {
#line 36
  __ldv_in_interrupt_context = 0;
#line 37
  return;
}
}
#line 39 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.c"
bool ldv_in_interrupt_context(void) 
{ 


  {
#line 41
  return (__ldv_in_interrupt_context);
}
}
#line 44 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.c"
static int ldv_filter_positive_int(int val ) 
{ 


  {
  {
#line 46
  __VERIFIER_assume(val <= 0);
  }
#line 47
  return (val);
}
}
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.c"
int ldv_post_init(int init_ret_val ) 
{ 
  int tmp ;

  {
  {
#line 56
  tmp = ldv_filter_positive_int(init_ret_val);
  }
#line 56
  return (tmp);
}
}
#line 60 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.c"
int ldv_post_probe(int probe_ret_val ) 
{ 
  int tmp ;

  {
  {
#line 62
  tmp = ldv_filter_positive_int(probe_ret_val);
  }
#line 62
  return (tmp);
}
}
#line 66 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/common.c"
int ldv_filter_err_code(int ret_val ) 
{ 
  int tmp ;

  {
  {
#line 68
  tmp = ldv_filter_positive_int(ret_val);
  }
#line 68
  return (tmp);
}
}
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/ldv/slab.h"
void *ldv_kmalloc(size_t size , gfp_t flags ) ;
#line 25
void *ldv_kcalloc(size_t n , size_t size , gfp_t flags ) ;
#line 26
void *ldv_kmalloc_array(size_t n , size_t size , gfp_t flags ) ;
#line 28
extern void ldv_check_alloc_flags(gfp_t  ) ;
#line 29
extern void ldv_after_alloc(void * ) ;
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.h"
void *ldv_malloc(size_t size ) ;
#line 24
void *ldv_calloc(size_t nmemb , size_t size ) ;
#line 21 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/mm/slab.c"
void *ldv_kmalloc(size_t size , gfp_t flags ) 
{ 
  void *res ;

  {
  {
#line 25
  ldv_check_alloc_flags(flags);
#line 26
  res = ldv_malloc(size);
#line 27
  ldv_after_alloc(res);
  }
#line 29
  return (res);
}
}
#line 32 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/mm/slab.c"
void *ldv_kcalloc(size_t n , size_t size , gfp_t flags ) 
{ 
  void *res ;

  {
  {
#line 36
  ldv_check_alloc_flags(flags);
#line 37
  res = ldv_calloc(n, size);
#line 38
  ldv_after_alloc(res);
  }
#line 40
  return (res);
}
}
#line 43 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/mm/slab.c"
void *ldv_kzalloc(size_t size , gfp_t flags ) 
{ 
  void *res ;

  {
  {
#line 47
  ldv_check_alloc_flags(flags);
#line 48
  res = ldv_zalloc(size);
#line 49
  ldv_after_alloc(res);
  }
#line 51
  return (res);
}
}
#line 54 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/linux/mm/slab.c"
void *ldv_kmalloc_array(size_t n , size_t size , gfp_t flags ) 
{ 
  void *res ;

  {
  {
#line 58
  ldv_check_alloc_flags(flags);
#line 59
  res = ldv_malloc(n * size);
#line 60
  ldv_after_alloc(res);
  }
#line 62
  return (res);
}
}
#line 22 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/common.h"
extern void __VERIFIER_error(void) ;
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/gcc.c"
long __builtin_expect(long exp , long c ) 
{ 


  {
#line 26
  return (exp);
}
}
#line 35 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/gcc.c"
void __builtin_trap(void) 
{ 


  {
  {
#line 37
  __VERIFIER_error();
  }
#line 38
  return;
}
}
#line 31 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.h"
extern void *external_allocated_data(void) ;
#line 33
void *ldv_malloc_unknown_size(void) ;
#line 34
void *ldv_calloc_unknown_size(void) ;
#line 35
void *ldv_zalloc_unknown_size(void) ;
#line 41
void *ldv_xmalloc_unknown_size(size_t size ) ;
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
extern void *malloc(size_t  ) ;
#line 25
extern void *calloc(size_t  , size_t  ) ;
#line 26
extern void free(void * ) ;
#line 29 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_malloc(size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;
  int tmp___1 ;

  {
  {
#line 31
  tmp___1 = ldv_undef_int();
  }
#line 31
  if (tmp___1 != 0) {
    {
#line 32
    tmp = malloc(size);
#line 32
    res = tmp;
#line 34
    __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 35
    tmp___0 = ldv_is_err((void const   *)res);
#line 35
    __VERIFIER_assume(tmp___0 == 0L);
    }
#line 37
    return (res);
  } else {
#line 40
    return ((void *)0);
  }
}
}
#line 43 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_calloc(size_t nmemb , size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;
  int tmp___1 ;

  {
  {
#line 45
  tmp___1 = ldv_undef_int();
  }
#line 45
  if (tmp___1 != 0) {
    {
#line 46
    tmp = calloc(nmemb, size);
#line 46
    res = tmp;
#line 48
    __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 49
    tmp___0 = ldv_is_err((void const   *)res);
#line 49
    __VERIFIER_assume(tmp___0 == 0L);
    }
#line 51
    return (res);
  } else {
#line 54
    return ((void *)0);
  }
}
}
#line 57 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_zalloc(size_t size ) 
{ 
  void *tmp ;

  {
  {
#line 59
  tmp = ldv_calloc(1UL, size);
  }
#line 59
  return (tmp);
}
}
#line 62 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void ldv_free(void *s ) 
{ 


  {
  {
#line 64
  free(s);
  }
#line 65
  return;
}
}
#line 67 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_xmalloc(size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;

  {
  {
#line 69
  tmp = malloc(size);
#line 69
  res = tmp;
#line 71
  __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 72
  tmp___0 = ldv_is_err((void const   *)res);
#line 72
  __VERIFIER_assume(tmp___0 == 0L);
  }
#line 74
  return (res);
}
}
#line 77 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_xzalloc(size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;

  {
  {
#line 79
  tmp = calloc(1UL, size);
#line 79
  res = tmp;
#line 81
  __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 82
  tmp___0 = ldv_is_err((void const   *)res);
#line 82
  __VERIFIER_assume(tmp___0 == 0L);
  }
#line 84
  return (res);
}
}
#line 87 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_malloc_unknown_size(void) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;
  int tmp___1 ;

  {
  {
#line 89
  tmp___1 = ldv_undef_int();
  }
#line 89
  if (tmp___1 != 0) {
    {
#line 90
    tmp = external_allocated_data();
#line 90
    res = tmp;
#line 92
    __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 93
    tmp___0 = ldv_is_err((void const   *)res);
#line 93
    __VERIFIER_assume(tmp___0 == 0L);
    }
#line 95
    return (res);
  } else {
#line 98
    return ((void *)0);
  }
}
}
#line 101 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_calloc_unknown_size(void) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;
  int tmp___1 ;

  {
  {
#line 103
  tmp___1 = ldv_undef_int();
  }
#line 103
  if (tmp___1 != 0) {
    {
#line 104
    tmp = external_allocated_data();
#line 104
    res = tmp;
#line 106
    memset(res, 0, 8UL);
#line 107
    __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 108
    tmp___0 = ldv_is_err((void const   *)res);
#line 108
    __VERIFIER_assume(tmp___0 == 0L);
    }
#line 110
    return (res);
  } else {
#line 113
    return ((void *)0);
  }
}
}
#line 116 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_zalloc_unknown_size(void) 
{ 
  void *tmp ;

  {
  {
#line 118
  tmp = ldv_calloc_unknown_size();
  }
#line 118
  return (tmp);
}
}
#line 121 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size ) 
{ 
  void *res ;
  void *tmp ;
  long tmp___0 ;

  {
  {
#line 123
  tmp = external_allocated_data();
#line 123
  res = tmp;
#line 125
  __VERIFIER_assume((unsigned long )res != (unsigned long )((void *)0));
#line 126
  tmp___0 = ldv_is_err((void const   *)res);
#line 126
  __VERIFIER_assume(tmp___0 == 0L);
  }
#line 128
  return (res);
}
}
#line 23 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.h"
int ldv_undef_long(void) ;
#line 24
unsigned int ldv_undef_uint(void) ;
#line 25
unsigned long ldv_undef_ulong(void) ;
#line 26
unsigned long long ldv_undef_ulonglong(void) ;
#line 27
void *ldv_undef_ptr(void) ;
#line 30
int ldv_undef_int_positive(void) ;
#line 36
int ldv_undef_int_nonpositive(void) ;
#line 39
void *ldv_undef_ptr_non_null(void) ;
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
extern int __VERIFIER_nondet_int(void) ;
#line 26
extern long __VERIFIER_nondet_long(void) ;
#line 33
extern unsigned int __VERIFIER_nondet_uint(void) ;
#line 36
extern unsigned long __VERIFIER_nondet_ulong(void) ;
#line 37
extern unsigned long long __VERIFIER_nondet_ulonglong(void) ;
#line 38
extern void *__VERIFIER_nondet_pointer(void) ;
#line 41 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
int ldv_undef_int(void) 
{ 
  int tmp ;

  {
  {
#line 43
  tmp = __VERIFIER_nondet_int();
  }
#line 43
  return (tmp);
}
}
#line 46 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
int ldv_undef_long(void) 
{ 
  long tmp ;

  {
  {
#line 48
  tmp = __VERIFIER_nondet_long();
  }
#line 48
  return ((int )tmp);
}
}
#line 51 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
unsigned int ldv_undef_uint(void) 
{ 
  unsigned int tmp ;

  {
  {
#line 53
  tmp = __VERIFIER_nondet_uint();
  }
#line 53
  return (tmp);
}
}
#line 56 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
void *ldv_undef_ptr(void) 
{ 
  void *tmp ;

  {
  {
#line 58
  tmp = __VERIFIER_nondet_pointer();
  }
#line 58
  return (tmp);
}
}
#line 61 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
unsigned long ldv_undef_ulong(void) 
{ 
  unsigned long tmp ;

  {
  {
#line 63
  tmp = __VERIFIER_nondet_ulong();
  }
#line 63
  return (tmp);
}
}
#line 66 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void) 
{ 
  unsigned long long tmp ;

  {
  {
#line 68
  tmp = __VERIFIER_nondet_ulonglong();
  }
#line 68
  return (tmp);
}
}
#line 71 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
int ldv_undef_int_positive(void) 
{ 
  int ret ;
  int tmp ;

  {
  {
#line 73
  tmp = ldv_undef_int();
#line 73
  ret = tmp;
#line 75
  __VERIFIER_assume(ret > 0);
  }
#line 77
  return (ret);
}
}
#line 80 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
int ldv_undef_int_negative(void) 
{ 
  int ret ;
  int tmp ;

  {
  {
#line 82
  tmp = ldv_undef_int();
#line 82
  ret = tmp;
#line 84
  __VERIFIER_assume(ret < 0);
  }
#line 86
  return (ret);
}
}
#line 89 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
int ldv_undef_int_nonpositive(void) 
{ 
  int ret ;
  int tmp ;

  {
  {
#line 91
  tmp = ldv_undef_int();
#line 91
  ret = tmp;
#line 93
  __VERIFIER_assume(ret <= 0);
  }
#line 95
  return (ret);
}
}
#line 98 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/job/root/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void) 
{ 
  void *ret ;
  int tmp ;

  {
  {
#line 100
  tmp = ldv_undef_int();
#line 100
  ret = (void *)((long )tmp);
#line 102
  __VERIFIER_assume((unsigned long )ret != (unsigned long )((void *)0));
  }
#line 104
  return (ret);
}
}
#line 1 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/rsg/models/clk2.bk.c"
void ldv_assert_linux_drivers_clk2__less_initial_decrement(int expr ) ;
#line 24 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/tr/linux/drivers/clk2.c"
int ldv_counter_clk  =    0;
#line 27 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/tr/linux/drivers/clk2.c"
void ldv_clk_disable_clk(struct clk *clk ) 
{ 


  {
  {
#line 30
  ldv_assert_linux_drivers_clk2__less_initial_decrement(ldv_counter_clk == 1);
#line 32
  ldv_counter_clk = 0;
  }
#line 33
  return;
}
}
#line 36 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/tr/linux/drivers/clk2.c"
int ldv_clk_enable_clk(void) 
{ 
  int retval ;
  int tmp ;

  {
  {
#line 38
  tmp = ldv_undef_int();
#line 38
  retval = tmp;
  }
#line 39
  if (retval == 0) {
#line 41
    ldv_counter_clk = 1;
  } else {

  }
#line 43
  return (retval);
}
}
#line 46 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/tr/linux/drivers/clk2.c"
int ldv_counter_clk_of_ssp_device  =    0;
#line 49 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/tr/linux/drivers/clk2.c"
void ldv_clk_disable_clk_of_ssp_device(struct clk *clk ) 
{ 


  {
  {
#line 52
  ldv_assert_linux_drivers_clk2__less_initial_decrement(ldv_counter_clk_of_ssp_device == 1);
#line 54
  ldv_counter_clk_of_ssp_device = 0;
  }
#line 55
  return;
}
}
#line 58 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/tr/linux/drivers/clk2.c"
int ldv_clk_enable_clk_of_ssp_device(void) 
{ 
  int retval ;
  int tmp ;

  {
  {
#line 60
  tmp = ldv_undef_int();
#line 60
  retval = tmp;
  }
#line 61
  if (retval == 0) {
#line 63
    ldv_counter_clk_of_ssp_device = 1;
  } else {

  }
#line 65
  return (retval);
}
}
#line 3 "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/0e1bde0fd9f35a6cc77d73de70635c06/klever-core-work-dir/8/vtg/drivers/spi/spi-pxa2xx-platform.ko/linux:drivers:clk2/fvtp/bug kind funcs.c"
void ldv_assert_linux_drivers_clk2__less_initial_decrement(int expr ) 
{ 


  {
#line 4
  if (! expr) {
    {
#line 5
    __VERIFIER_error();
    }
  } else {

  }
#line 6
  return;
}
}
